WEBVTT

NOTE duration:"01:27:11.7680000"

NOTE language:en-us

NOTE Confidence: 0.24383838

9f4f4877-2bea-4c31-ae16-7c8217cf8267
00:00:00.150 --> 00:00:00.680
Uh.

NOTE Confidence: 0.86095786

3cee91e3-91ca-49f4-9726-042175866721
00:00:03.310 --> 00:00:05.830
 Hello Ariya. Good morning. 

NOTE Confidence: 0.8511649

3748bc03-c438-4344-8cc6-4c76dbc05859
00:00:08.880 --> 00:00:14.088
So just to remind you again, I
mean if you have any problem or

NOTE Confidence: 0.8511649

24903815-2cde-44ad-b028-6d0398de0375
00:00:14.088 --> 00:00:18.552
 issues you can communicate with Ariya. Ariya is the moderator of our 

NOTE Confidence: 0.8511649

4bea0434-1e1b-46fc-8ae4-fac1b70c4692
00:00:18.552 --> 00:00:23.388
lectures and office hours. So or
if you put a question and I

NOTE Confidence: 0.8511649

bdc26615-dfba-49e3-9e0c-b6e7fe966a2e
00:00:23.388 --> 00:00:27.480
 missed your question, you can simply ask Ariya to remind me 

NOTE Confidence: 0.8511649

b81c2407-e82c-4d78-8173-f71b95fada9f
00:00:27.480 --> 00:00:30.828
about your question. So let me
share my screen.

NOTE Confidence: 0.75124043

42156287-e6d2-4af1-976e-07f198e354e9
00:00:37.430 --> 00:00:39.350
Share my screen.

NOTE Confidence: 0.8559783

ecd16f05-8651-4272-9ba2-fe8571d9dd00
00:00:42.900 --> 00:00:48.240
So if you have any questions
regarding the I mean labs that

NOTE Confidence: 0.8559783

b56dc105-61f0-42cf-91f9-3a3093504788
00:00:48.240 --> 00:00:52.690
were I mean yesterday or any
question about the assignments

NOTE Confidence: 0.8559783

5687f3d0-bc37-4468-9b32-13bf29a7a9ab
00:00:52.690 --> 00:00:57.585
and etc you can, I'm ready to
take your questions. Basically

NOTE Confidence: 0.8559783

dd1834cd-ab4b-4133-9c24-ce94f41dfefc
00:00:57.585 --> 00:01:02.035
the material in the lecture
assignments where most of them

NOTE Confidence: 0.8559783

a3a2697b-54e5-4a59-9f56-c6f7aae823a4
00:01:02.035 --> 00:01:03.815
gonna be covered today.

NOTE Confidence: 0.8869668

cb3ab18b-bfd7-4c60-98aa-aca20ebf9729
00:01:05.230 --> 00:01:09.741
And I tried to cover all the
topics so that you can answer

NOTE Confidence: 0.8869668

473fe01f-ad1e-41bc-8d0c-b9082285a1c3
00:01:09.741 --> 00:01:13.558
them, but again, there are
just only you can have the

NOTE Confidence: 0.8869668

8feaf138-1643-4a2c-9c34-e67bc2cafd3b
00:01:13.558 --> 00:01:17.028
option to select two of the
questions to answer and.

NOTE Confidence: 0.8890859

b26c1fc9-f1c0-41bc-9aa1-f31144ce0ca2
00:01:19.810 --> 00:01:24.408
And regarding the labs, I hope
that you all could successfully

NOTE Confidence: 0.8890859

28a26fa3-00d0-42c8-bb9e-3f062643dddb
00:01:24.408 --> 00:01:28.170
install an environment for
coding and see the environment

NOTE Confidence: 0.8890859

5e6cf781-9359-492f-a7a1-0b6ab78060f2
00:01:28.170 --> 00:01:33.604
doesn't matter for us as long as
we can build and run your

NOTE Confidence: 0.8890859

631af599-e224-408d-ad66-ea3b4fed4f3b
00:01:33.604 --> 00:01:38.202
program. That's good for us, but
in the lab instructions, because

NOTE Confidence: 0.8890859

535e7a86-f79e-4a32-8bae-a281b0deb852
00:01:38.202 --> 00:01:42.800
I just wanted to illustrate and
help provide some sample, I

NOTE Confidence: 0.8890859

2489fcb4-1267-4e4d-a320-2c1afd122c30
00:01:42.800 --> 00:01:46.980
assume that the eclipse here are
default environment, but there's

NOTE Confidence: 0.8890859

b2a5bec3-b2e7-46da-8f6e-729c3678af48
00:01:46.980 --> 00:01:48.234
no, I mean.

NOTE Confidence: 0.8164866

532a9266-cec9-4eed-9191-52c3de3dd4f6
00:01:51.240 --> 00:01:54.848
Mandate about that so you can
use any other, I mean

NOTE Confidence: 0.8164866

53c622f6-3390-4e68-b931-96cecc8ba5ca
00:01:54.848 --> 00:01:58.456
environment for coding on C,
even for instance in Notepad. Or

NOTE Confidence: 0.8164866

4d7e06fe-ea29-4b14-af84-08904cc84180
00:01:58.456 --> 00:02:02.720
adjust the text editor in Linux
so you can use nano to write

NOTE Confidence: 0.8164866

c4817ce3-11d7-49a8-8160-27f91fa2d569
00:02:02.720 --> 00:02:06.000
your program and then compile it
and build your program.

NOTE Confidence: 0.79329515

f83f0211-ac35-4549-ba17-aec0be1d53dc
00:02:07.400 --> 00:02:12.572
So I have a question, is today
is still considered lecture two?

NOTE Confidence: 0.79329515

c9dc937e-2aa6-4039-b67b-57e26906737a
00:02:12.572 --> 00:02:17.313
Yes, actually the number of
lectures and labs all are based

NOTE Confidence: 0.79329515

6a72a13b-99ef-4382-924b-dff1fd3f8ca6
00:02:17.313 --> 00:02:22.916
on the week number. So in the
first week which was last week,

NOTE Confidence: 0.79329515

a20201f9-a400-483d-b06c-132d3397bbd0
00:02:22.916 --> 00:02:28.519
it was lecture 01. So it was
disturbed and this week is our

NOTE Confidence: 0.79329515

c0d023ac-aef0-4780-953a-758c7f7252e1
00:02:28.519 --> 00:02:34.122
second week. So we have lab 02.
We have lecture 02 and yes.

NOTE Confidence: 0.7759892

8ee55572-01d2-4383-901d-3c8dd6752cee
00:02:34.900 --> 00:02:39.410
We still need have to do this
set of things since.

NOTE Confidence: 0.72707003

d367c223-5f7e-4736-ace6-f533e1ea95ab
00:02:40.540 --> 00:02:46.624
See the first, yes, I mean that
that was the error of the

NOTE Confidence: 0.72707003

705a606b-4c3c-4956-8e86-077d0c4e7ac1
00:02:46.624 --> 00:02:48.496
eclipse, so sometimes well.

NOTE Confidence: 0.83307356

4bb70aae-1d67-4272-9ea4-5631efdcdbf3
00:02:50.870 --> 00:02:55.046
If you want to run or debug
program inside the eclipse, it's

NOTE Confidence: 0.83307356

b2ca4119-d3a8-4f8e-b6d4-8cdada1b453b
00:02:55.046 --> 00:02:59.570
better to set buffer off, but
you can remove that code. I mean

NOTE Confidence: 0.83307356

03e401a1-469e-482c-8d8c-5ec142b60eb2
00:02:59.570 --> 00:03:03.398
that command and build your
program and run it from the

NOTE Confidence: 0.83307356

dd8bb3c0-926d-441c-99fb-30b0f7f65c51
00:03:03.398 --> 00:03:07.922
shell, so as long as you are
running from the show that I

NOTE Confidence: 0.83307356

acc6e0a2-dd79-4328-8a47-680306f0d576
00:03:07.922 --> 00:03:11.402
mean everything works fine. So
that's the debugger in the

NOTE Confidence: 0.83307356

bfd568a3-60de-4a72-b429-172ce07355b8
00:03:11.402 --> 00:03:13.142
weakness of the eclipse but.

NOTE Confidence: 0.4989695

607e5db1-8279-4541-be21-f599d5258466
00:03:14.990 --> 00:03:15.350


NOTE Confidence: 0.8213358

401d11e0-4776-40bf-be38-b080f1329775
00:03:16.630 --> 00:03:20.962
I I I suggest you to put
that line because for our

NOTE Confidence: 0.8213358

82ba442f-acb0-4864-b79a-77fc3c260600
00:03:20.962 --> 00:03:23.489
programs it doesn't have any
negative impact.

NOTE Confidence: 0.9301088

446b4efc-38cd-4255-83ec-d3ae153a31ed
00:03:26.650 --> 00:03:27.700
So.

NOTE Confidence: 0.56594247

b5debaa5-9437-4d4c-9375-c3e314881cf7
00:03:30.820 --> 00:03:33.830
Â let let's start so. 

NOTE Confidence: 0.8333115

743b0984-caf3-4e0d-bdf6-273ec86b466f
00:03:34.920 --> 00:03:40.354
Again, good morning everyone so
far. What do we need to hand in

NOTE Confidence: 0.8333115

68306b98-5b3c-4423-bda1-cae1d9fb98d4
00:03:40.354 --> 00:03:46.206
for the lab just to see file in
the lab manual we explained what

NOTE Confidence: 0.8333115

c860c7a1-0eea-421a-829f-988b30994b0b
00:03:46.206 --> 00:03:51.222
are the deliveries? So in the
end of the lab manual explained

NOTE Confidence: 0.8333115

d28cef4a-901b-4956-a48d-f7c65da946b0
00:03:51.222 --> 00:03:57.074
you have to zip all your files
in a single file and then what

NOTE Confidence: 0.8333115

87a680d8-efe5-457a-9b22-d621b853c751
00:03:57.074 --> 00:04:01.672
are the content? For instance
the folder for your project, the

NOTE Confidence: 0.8333115

0d4bdb00-bb1e-4618-8955-4cc538dae348
00:04:01.672 --> 00:04:06.688
image of your run etc. So you
have to look at the.

NOTE Confidence: 0.7985488

95543d97-e054-4403-97df-5cda2d89a595
00:04:06.790 --> 00:04:10.500
At the deliverables
section of the manual.

NOTE Confidence: 0.84206337

e20ffd10-ea97-4806-922e-cda23a38b218
00:04:13.760 --> 00:04:18.212
A four hour course. The default
languages see, but if you could

NOTE Confidence: 0.84206337

b39dd5fb-ca63-4a94-bf51-a397535a28e5
00:04:18.212 --> 00:04:23.035
write in C++, that's fine, but
the default is C, so our mark

NOTE Confidence: 0.84206337

50abe086-cddb-4f39-9acf-add293c8242c
00:04:23.035 --> 00:04:27.858
are gonna build your program by
the C compiler. If you run a

NOTE Confidence: 0.84206337

bc7b1cb6-f344-4f99-8e5e-9eb1b314cf24
00:04:27.858 --> 00:04:33.052
code. If you build a, uh, I
mean, write a code in C++ in

NOTE Confidence: 0.84206337

234c583c-6731-40ab-819f-297e2ad97298
00:04:33.052 --> 00:04:37.504
your report, which is optional.
But because you have to tell the

NOTE Confidence: 0.84206337

f1e72f98-6d4c-4e97-8afb-2c5f29c0fe77
00:04:37.504 --> 00:04:42.327
market that my code is in C++,
you have to remind the market

NOTE Confidence: 0.84206337

41856b80-7d55-42ac-8ce7-6f168e4b1278
00:04:42.327 --> 00:04:44.553
about your compiler. So in the

NOTE Confidence: 0.8863407

b6acc527-5882-48e2-92cc-79c5b87fcf49
00:04:44.553 --> 00:04:49.308
report. Just explain that your
code is in C++ and use the C++

NOTE Confidence: 0.8863407

b6faea94-7722-4ec1-aa11-ac8519792f6f
00:04:49.308 --> 00:04:53.316
compiler to do that. To compile
the code so the report is

NOTE Confidence: 0.8863407

e229667a-6d12-4cb2-8617-afdd67cc81dc
00:04:53.316 --> 00:04:56.656
optional for those that doesn't
need any explanation, but for

NOTE Confidence: 0.8863407

e055de8a-b718-4733-a163-d99ed9df3975
00:04:56.656 --> 00:05:00.330
those that needs explanation you
have to put in your report.

NOTE Confidence: 0.854991

ca2debb4-7ee3-4ab5-9f28-f9864b710324
00:05:01.860 --> 00:05:07.110
Yes, as I said, I mean you are
going to write the C++, but

NOTE Confidence: 0.854991

dfffae97-8f4d-4921-9680-399dcd531a9e
00:05:07.110 --> 00:05:11.985
again you have to explain that
in the report so that the marker

NOTE Confidence: 0.854991

bd3fcab0-bbb7-4a93-ba8f-3f5660535e18
00:05:11.985 --> 00:05:16.485
know that your program is in C++
and use the C++ compiler.

NOTE Confidence: 0.8720693

253aa04c-40d6-48ea-9805-1a85e8e522b3
00:05:20.060 --> 00:05:26.794
Yes, GCC is for the C compiler
and also yes, that's that's the

NOTE Confidence: 0.8720693

20771dd6-3f56-4b14-a809-aca66775022e
00:05:26.794 --> 00:05:30.938
default compiler in Linux
systems or in Mac.

NOTE Confidence: 0.8654512

b5221b45-7f0f-4544-8311-10eaea3d46e0
00:05:33.080 --> 00:05:39.250
Solve. You can put your question
in the chat box and are you

NOTE Confidence: 0.8654512

bfc2b2cc-40ff-4813-a4a9-364acc62f813
00:05:39.250 --> 00:05:43.810
gonna schedule them, but I'm I'm
going to start the new topics

NOTE Confidence: 0.8654512

15653fa3-7201-4bd9-9d27-323238f07a2f
00:05:43.810 --> 00:05:48.370
and will be back with your
question. So so far we explained

NOTE Confidence: 0.8654512

537f556c-339f-4b4b-87b3-12cab9f861e7
00:05:48.370 --> 00:05:52.170
that number systems involved
with the history and the last

NOTE Confidence: 0.8654512

2ce9db2d-7023-4d6c-aacb-3ee46abe2f8a
00:05:52.170 --> 00:05:56.730
number system that was efficient
was the base 4, meaning that we

NOTE Confidence: 0.8654512

108d81be-2edb-403e-9472-5d4c7df91fd3
00:05:56.730 --> 00:05:58.630
have a Four Symbols 0123.

NOTE Confidence: 0.58939135

3e48568c-59ff-44cf-b9cc-84d838ab752b
00:05:59.290 --> 00:06:04.786
And then, oh wait, the
recordings already started

NOTE Confidence: 0.58939135

5573b059-bd64-4d39-9090-0320d68683a0
00:06:04.786 --> 00:06:06.160
some Aria.

NOTE Confidence: 0.8843235

bcc41a4c-f183-4551-b87a-1b94a1f9ebeb
00:06:07.370 --> 00:06:10.258
I was about to forget
about that so.

NOTE Confidence: 0.8713323

e674cba5-e31c-48ca-96dc-c349c85ba847
00:06:13.200 --> 00:06:19.115
The base four. Basically we add
a positions to the left and this

NOTE Confidence: 0.8713323

d0db41b1-f8fc-43bd-a494-e4ba8944da3c
00:06:19.115 --> 00:06:23.210
positions has significant based
on the powers of four.

NOTE Confidence: 0.8387297

968b3be3-3d7f-40a7-a1eb-8d327091be80
00:06:23.760 --> 00:06:27.624
So that was more efficient than
the Hussein system that you add

NOTE Confidence: 0.8387297

0941e1ef-3337-41a5-918b-ef201c41eca4
00:06:27.624 --> 00:06:30.200
positions, but the position
doesn't have any significance.

NOTE Confidence: 0.86007106

28ec421d-bce6-442c-a0e4-6f285f740661
00:06:30.930 --> 00:06:35.634
So you could ask that we could
increase the base number, for

NOTE Confidence: 0.86007106

97fce796-fa75-4f16-8ac0-122e2d96d1d0
00:06:35.634 --> 00:06:40.338
instance more than four or less
than. Or you can decrease the

NOTE Confidence: 0.86007106

42f868a2-9a67-4822-96da-706ac2b2f50e
00:06:40.338 --> 00:06:45.042
base number to less than four,
so that's why we have some

NOTE Confidence: 0.86007106

abd4c6b4-55ad-409e-b5df-3decc65a735a
00:06:45.042 --> 00:06:48.962
common numbering systems, and we
want to just showcase some

NOTE Confidence: 0.86007106

3978335c-e595-4aa6-8b0b-1627244961ab
00:06:48.962 --> 00:06:53.666
samples of them. So, but in
abstract you can choose any base

NOTE Confidence: 0.86007106

b8cea382-5a12-4cf5-bd6b-63f4efae1046
00:06:53.666 --> 00:06:58.762
number from 123 up until any I
mean number. But there are some

NOTE Confidence: 0.86007106

7be8de8c-f258-41f7-a0a5-11ded3c2ba82
00:06:58.762 --> 00:07:01.114
of them that very common in.

NOTE Confidence: 0.70777386

406ed7c1-42ae-4312-a3b9-2432c759315f
00:07:01.240 --> 00:07:02.650
A computer science.

NOTE Confidence: 0.90234727

b1d2e69f-23ac-4301-bc44-12640f23558c
00:07:03.640 --> 00:07:05.608
The most immediate one is that.

NOTE Confidence: 0.86048955

b668d530-41e9-4d16-963a-316efdf8e3df
00:07:06.220 --> 00:07:09.496
After the honor system, you
can have binary system.

NOTE Confidence: 0.86048955

39ef3dcf-e3ae-4aee-bf89-4962be38405c
00:07:09.496 --> 00:07:12.408
Binary system has two
symbols, zero and one.

NOTE Confidence: 0.82964975

f5b74cc5-e913-4a52-bf88-960a85853193
00:07:13.470 --> 00:07:17.980
And if you add positions, they
have significance of powers of

NOTE Confidence: 0.82964975

29e76fe1-83a3-45c6-a089-ef66fdc3b0fb
00:07:17.980 --> 00:07:22.490
two. So base two radix two or
binary systems, the largest

NOTE Confidence: 0.82964975

9b5f467d-88da-44b2-a80f-31e0b34588e5
00:07:22.490 --> 00:07:25.360
digit is 1, the lowest digit is

NOTE Confidence: 0.89030534

11cabd46-fe1c-468f-b4d7-e64dac7739f1
00:07:25.360 --> 00:07:28.540
0. And here is an example.

NOTE Confidence: 0.87840855

9bd7ed18-6abe-4702-b45f-c31f0f7d3329
00:07:29.190 --> 00:07:32.820
If you are given a stream of
binary numbers, binary digits

NOTE Confidence: 0.87840855

a8653725-5ad2-4091-84f4-245853674f2d
00:07:32.820 --> 00:07:37.110
1010, and if you want to know
what is the exact decimal number

NOTE Confidence: 0.87840855

914f6f89-2be7-4ea5-8c51-23eb4eda091b
00:07:37.110 --> 00:07:41.400
or what is the actual value of
this number, you have to simply.

NOTE Confidence: 0.854225

b0f68100-3b59-4d9b-9ca8-c1f7641d1208
00:07:42.420 --> 00:07:45.932
First, figure out the
significant of his position

NOTE Confidence: 0.854225

b57dea67-16ca-4ee3-a4fc-d503d7e73320
00:07:45.932 --> 00:07:49.444
from the lowest. I mean
lowest significant position

NOTE Confidence: 0.854225

05df9011-d01f-4255-b570-95b578fe21d1
00:07:49.444 --> 00:07:51.200
to higher significant
position.

NOTE Confidence: 0.87168634

9b676943-e328-4f03-a79b-88b3150a7af2
00:07:52.400 --> 00:07:56.224
So we have 8 positions, 2 to the
power of 0, two to the power of

NOTE Confidence: 0.87168634

1f6cab0d-a849-47e0-82e4-8a21a886da8b
00:07:56.224 --> 00:07:58.375
1 up until 2 to the power of 7.

NOTE Confidence: 0.8755223

a45e5455-5def-4953-92d7-25acef449b28
00:07:59.210 --> 00:08:03.302
And then you have to multiply
each digit of each position to

NOTE Confidence: 0.8755223

e53e6c6f-7d5e-42af-84a3-b174eb734713
00:08:03.302 --> 00:08:07.394
the significant of that
position as you see here 1 by 2

NOTE Confidence: 0.8755223

a44dba90-8b6d-4a1b-adda-7d459c0ed219
00:08:07.394 --> 00:08:12.850
to the power of 0, zero to the
power of two to power, one 1 *

NOTE Confidence: 0.8755223

33fcd6d9-d419-44aa-9e25-ec4ad29f5a91
00:08:12.850 --> 00:08:17.283
2 to the power of two and etc.
And then some altogether. So

NOTE Confidence: 0.8755223

da184db9-efab-4066-b45b-6d44aa57397d
00:08:17.283 --> 00:08:20.352
multiply each digit to the
significant and then some

NOTE Confidence: 0.8755223

29213f91-5b65-4065-af42-8e482ab37fa5
00:08:20.352 --> 00:08:24.103
together. So this binary number
is equal 273 in decimal system.

NOTE Confidence: 0.82956123

fb4cae71-2e46-4fae-b5f9-5a7ba3bef9f1
00:08:26.350 --> 00:08:32.434
If you are given this number,
one thing we use. I mean, we

NOTE Confidence: 0.82956123

2a77cacd-6e92-4ecc-ab93-78357ab29c4d
00:08:32.434 --> 00:08:36.178
usually forget, but that's an
important step is.

NOTE Confidence: 0.85065687

290b80b9-2594-4221-a265-1438748c5323
00:08:37.600 --> 00:08:40.006
So I got an emergency alert.

NOTE Confidence: 0.78959715

e27481b6-50aa-4284-b834-8647efaf737a
00:08:41.940 --> 00:08:43.128
Sorry about that.

NOTE Confidence: 0.8689744

d172452d-300a-48a9-aea9-cfc42391c570
00:08:44.350 --> 00:08:48.809
So you have to 1st check that
the digits are valid digit in

NOTE Confidence: 0.8689744

e5faf789-257c-4ead-822a-a2febdebcadc
00:08:48.809 --> 00:08:53.268
that system or no. So in binary
system the digits are zero and

NOTE Confidence: 0.8689744

ac038f03-b776-4c6f-b7f5-4b8d7dd06dea
00:08:53.268 --> 00:08:58.413
one. So if you see a digit that
is more than one, it means that

NOTE Confidence: 0.8689744

1896de40-2efb-4950-9c1e-f3ec6a0652dc
00:08:58.413 --> 00:09:02.529
that number is not a valid
number in that system. So here

NOTE Confidence: 0.8689744

bdd0664d-ad17-446b-a033-650b71597578
00:09:02.529 --> 00:09:06.302
we have 3233. These are not
valid digits in binary system,

NOTE Confidence: 0.8689744

b6e44c15-7b3a-4dd9-8c6d-4d3b5be9271b
00:09:06.302 --> 00:09:10.075
so we cannot see what's the
actual value in decimal system.

NOTE Confidence: 0.8689744

8f922b2d-0ac9-43af-8c89-045fcc22acb7
00:09:10.075 --> 00:09:13.162
Simply have to say this number
is not valid.

NOTE Confidence: 0.9050061

25b22095-2448-4aa4-b2d0-c2129e048766
00:09:14.120 --> 00:09:17.960
So again, remember first
check the number is valid or

NOTE Confidence: 0.9050061

940e334d-6dc4-4e5d-851c-d2cbe14e05ad
00:09:17.960 --> 00:09:22.184
not and then try to convert
it to the decimal system.

NOTE Confidence: 0.8120263

c0939aa5-61d8-44fe-a7e6-6c6003e330fe
00:09:24.210 --> 00:09:28.746
So if you want to count in
binary numbers, uh, you are

NOTE Confidence: 0.8120263

969a1bc6-17d4-4ace-ad08-f462ca463405
00:09:28.746 --> 00:09:32.526
assumed that you assume that
there are only four positions.

NOTE Confidence: 0.78566134

a42a21da-22c1-4645-a2b4-28c21624b6ec
00:09:33.190 --> 00:09:37.227
So my question from you is this,
what's the minimum number?

NOTE Confidence: 0.87552977

056456d0-5bc6-412a-9112-ae69f97f430a
00:09:39.710 --> 00:09:42.590
We can put the answer in
the chat box.

NOTE Confidence: 0.83349663

e85e4219-d3a4-4e86-9970-ab572ef257fb
00:09:44.220 --> 00:09:49.392
Based on what we said in the
last lecture, uh, the minimum

NOTE Confidence: 0.83349663

14dad515-0ccc-473b-a76f-63f9b1520f2a
00:09:49.392 --> 00:09:53.702
number is just putting the
lowest digit in all positions.

NOTE Confidence: 0.83349663

3019162c-9c5a-4b75-9955-fef3b9705920
00:09:53.702 --> 00:09:59.305
So yes, basically 0000 just put
all the in the in the whole

NOTE Confidence: 0.92133516

3e9767c4-2aa6-4b20-960b-eba56bb795e6
00:09:59.305 --> 00:10:02.410
position. Stated. What's
the maximum number?

NOTE Confidence: 0.8924839

81e3fda6-3649-4ea9-a31a-490bd3386e0e
00:10:03.650 --> 00:10:07.430
The maximum number is putting
the largest digit in all

NOTE Confidence: 0.8924839

d8826972-7ce9-43fa-86ec-c87bb215ab47
00:10:07.430 --> 00:10:10.454
positions right? Everyone
actually put in the correct

NOTE Confidence: 0.8924839

0a81b03b-eee7-4f42-84c4-0434fa9cb034
00:10:10.454 --> 00:10:14.612
answer, but if you want to
convert the largest number which

NOTE Confidence: 0.8924839

7cb1f335-4ab4-4968-b0e6-fb1644058c13
00:10:14.612 --> 00:10:19.148
is 1111 in decimal system, last
section we come up with a

NOTE Confidence: 0.8924839

8de349ff-6e74-46db-8d48-c45b41557268
00:10:19.148 --> 00:10:23.684
formula. He said that if you are
given an position, the largest

NOTE Confidence: 0.81392425

0c60148c-502a-4276-82f4-59cb5808844b
00:10:23.684 --> 00:10:28.714
digit is. That radix number to
the power of N -- 1 because if

NOTE Confidence: 0.81392425

a9e139b9-82cd-4f13-a343-b30b38b6249b
00:10:28.714 --> 00:10:32.091
you multiply each digit to the
power of the significant and

NOTE Confidence: 0.81392425

a4c0e462-57d8-47fc-8170-5f5740246627
00:10:32.091 --> 00:10:33.933
then sum, it becomes a John

NOTE Confidence: 0.869957

338fd892-ac2f-4224-b16a-6282d2351435
00:10:33.933 --> 00:10:38.246
metric series. So here the
largest digit is equal to what

NOTE Confidence: 0.869957

7ee85aae-0b41-4ab9-89e0-dfdc707c31b5
00:10:38.246 --> 00:10:39.622
value in decimal system?

NOTE Confidence: 0.85685945

4fd51d62-6d2b-4bb6-b360-87b0aff409fe
00:10:41.670 --> 00:10:45.858
So you have to simply want
to multiply by to the power

NOTE Confidence: 0.85685945

1991f430-c0dd-4490-851b-e7bb5652a480
00:10:45.858 --> 00:10:49.697
of 0, one to the power
multiplied by two to the

NOTE Confidence: 0.85685945

8648c6b3-0010-4fdc-94b4-bfc20760c049
00:10:49.697 --> 00:10:54.234
power of 1 and etc. So in
sum it becomes 2 to the

NOTE Confidence: 0.85685945

05038991-346e-431e-91a8-38a3ee4663c2
00:10:54.234 --> 00:10:57.724
power of 4 because we have
four position minus one

NOTE Confidence: 0.85685945

5486f8c8-aa3d-47ef-a488-5f1e0addfcb5
00:10:57.724 --> 00:10:59.120
which is equal to.

NOTE Confidence: 0.8773454

209f379a-bc58-4cf7-b095-12a66958d4f6
00:11:00.530 --> 00:11:05.730
15 so 2 to the power of 4 -- 1
do not forget about that minus.

NOTE Confidence: 0.85630304

dd7f570f-a464-4d89-8e8e-c4ed15a5bb8b
00:11:07.810 --> 00:11:12.199
So basically counting is that
each number plus one. So you

NOTE Confidence: 0.85630304

5da09e57-779e-4535-bfa0-9846ccb78237
00:11:12.199 --> 00:11:17.785
start from 012 an etc. So at
some point if you reach a number

NOTE Confidence: 0.85630304

35c60c6a-5bbb-44bc-848f-c682facf45ef
00:11:17.785 --> 00:11:22.573
this 1011 and if you want to
convert it to decimal system,

NOTE Confidence: 0.85630304

8feb0abc-71dc-4205-9e54-6636e35a35d4
00:11:22.573 --> 00:11:26.962
you just multiply each digit to
the significant of the position.

NOTE Confidence: 0.85630304

3cfc8b1b-c24c-4de4-bd9f-00cdbf86520e
00:11:26.962 --> 00:11:32.947
So this number is equal to. This
is 8 + 3, which becomes 12. This

NOTE Confidence: 0.85630304

a49c5dd2-930b-4ded-b16a-504d2052af1f
00:11:32.947 --> 00:11:39.331
number is 12 + 1. It must be end
up with the 13, but in binary

NOTE Confidence: 0.84594834

cce3ada0-39ea-41ad-b41e-0c98f003b28d
00:11:39.331 --> 00:11:44.288
system. So this sum with one is
exactly the same as the decimal

NOTE Confidence: 0.84594834

9bd23082-90ba-4d79-a888-2446a0a9b8ff
00:11:44.288 --> 00:11:48.565
system you already know in high
school, so each digit 1 + 1

NOTE Confidence: 0.88244605

bb991ff6-2c2d-44f4-98ea-7fefeea1d6f6
00:11:48.565 --> 00:11:53.300
becomes 2. But two is not a
valid number. You have to

NOTE Confidence: 0.88244605

2d607e3d-4872-4d93-810d-967fa823d9bc
00:11:53.300 --> 00:11:58.144
divide 2 by the base number.
So 2 / 2 becomes one and the

NOTE Confidence: 0.88244605

0af3f08d-3500-4e0d-a147-130ef04471cd
00:11:58.144 --> 00:12:01.950
remainder is 0. So you leave
the remainder as the result

NOTE Confidence: 0.88244605

c1b7fb90-52d1-4024-97c4-bb7095be006d
00:12:01.950 --> 00:12:04.026
and then you put the quotient.

NOTE Confidence: 0.7569532

5fb87268-f9bb-470c-848d-01c4b993ad19
00:12:05.250 --> 00:12:11.022
The integer a result of the
division as a carry to the next

NOTE Confidence: 0.85535955

24f575d4-17da-499c-ab93-9a3d1c970eb7
00:12:11.022 --> 00:12:16.466
position. And then you continue
with submission. So 1 + 1 + 0

NOTE Confidence: 0.85535955

c58ba83b-c3d1-4e5c-9088-f5c28b36d23f
00:12:16.466 --> 00:12:20.822
becomes 2SO2 again is not a
valid digit, so you have to

NOTE Confidence: 0.85535955

55e089f7-f6ac-4574-90ea-20e7648e8cbe
00:12:20.822 --> 00:12:25.541
divide by best number one as a
carry on their remainder. As a

NOTE Confidence: 0.85535955

8d0f62d7-62a7-48e1-801e-9f54e658d3bd
00:12:25.541 --> 00:12:29.534
result, this is exactly as we do
in the decimal system.

NOTE Confidence: 0.8998994

26788f43-f4c7-4ff6-ab32-24ce7a5d7d16
00:12:30.320 --> 00:12:35.626
And then the next is 1 + 0
+ 0, becomes one, and then

NOTE Confidence: 0.8998994

8da9b863-8b39-4244-892c-acd77d657766
00:12:35.626 --> 00:12:40.932
1 + 0 becomes one. So this
way we end up with the new

NOTE Confidence: 0.8998994

43d46431-f3ce-4e94-9d93-56494bc306b8
00:12:40.932 --> 00:12:42.448
number 15 after 12.

NOTE Confidence: 0.9245185

4ddbc77a-8433-4f62-a568-528b15123f4b
00:12:44.900 --> 00:12:45.700
So.

NOTE Confidence: 0.8223318

25a7e9c1-25b2-4b11-8925-deb35cbe20f4
00:12:48.590 --> 00:12:52.430
The next common number system,
base two. We already covered

NOTE Confidence: 0.8223318

b906dca4-6de9-4488-a906-72e2589cb8d2
00:12:52.430 --> 00:12:56.270
the base four and so binary
system, Quaternary system and

NOTE Confidence: 0.8223318

52c69580-7cb8-4c76-9aac-003e0db0af20
00:12:56.270 --> 00:13:00.494
the next common number system
is base eight. It doesn't mean

NOTE Confidence: 0.8223318

2034d9cc-f264-4fd6-adfc-2a9c162a20b9
00:13:00.494 --> 00:13:05.102
that we don't have any base
seven or base six or base

NOTE Confidence: 0.8223318

a8283ed5-bc5a-4468-b787-976a989fbb31
00:13:05.102 --> 00:13:08.942
five. We do have those basis,
but these are common.

NOTE Confidence: 0.84781784

fefbfad5-c518-46dd-b276-9c349eb1eaba
00:13:10.160 --> 00:13:15.044
The next space is the best. It
is also called octal number

NOTE Confidence: 0.84781784

e4b71394-a946-4d89-8b12-27d530f0eea9
00:13:15.044 --> 00:13:19.521
system. Basically we have the
digits from zero, one up until

NOTE Confidence: 0.84781784

61bc9341-7629-48c5-9363-c8530d56483c
00:13:19.521 --> 00:13:24.405
seven. You see that the largest
digit is always the radix number

NOTE Confidence: 0.927036

98080f7c-dc9a-486e-a744-2c7ccd9d0ae6
00:13:24.405 --> 00:13:26.980
minus one. So.

NOTE Confidence: 0.8535942

fa6e4bda-8005-457f-8569-ab79be411a81
00:13:28.160 --> 00:13:32.710
If you are given this number in
base age in order to see what's

NOTE Confidence: 0.8535942

c30c590b-bd90-4af7-8e0f-5f5b95acb2c0
00:13:32.710 --> 00:13:36.935
the value you have to 1st with,
see whether this is a valid

NOTE Confidence: 0.8535942

e4fd96c4-f2be-4a14-8f9f-e73ec199a889
00:13:36.935 --> 00:13:40.835
number, so all the digits are
between zero up until seven. So

NOTE Confidence: 0.8535942

dfc66086-6781-4323-95e2-dc5a16870065
00:13:40.835 --> 00:13:45.060
this is a valid number, and then
you have to figure out what's

NOTE Confidence: 0.8535942

14db5bd7-8312-46d1-891d-92045a5ab16b
00:13:45.060 --> 00:13:48.635
the significance of the
positions 8. The power of 01 up

NOTE Confidence: 0.8535942

8ba2cb58-d396-479d-be27-967a69b6885e
00:13:48.635 --> 00:13:51.560
until the last highest
significant position, 8 to the

NOTE Confidence: 0.8535942

db7df3e6-9323-4fca-a8e4-a180a3446f5b
00:13:51.560 --> 00:13:55.460
power of 7, and then multiply
each digit to the significant of

NOTE Confidence: 0.8535942

9732d5b7-4c93-4208-9781-d1587fe3f5ed
00:13:55.460 --> 00:13:57.085
that position and then some.

NOTE Confidence: 0.8369244

29a25b86-007f-4b61-a2da-33124a42a205
00:13:58.490 --> 00:14:04.502
So it's about this number in
this is 30302131 in octal system

NOTE Confidence: 0.8369244

8acdcf40-3b07-4017-861b-b6d41327aaef
00:14:04.502 --> 00:14:09.011
is equal to 6 million. Something
in decimal system.

NOTE Confidence: 0.8506932

23527c5b-d5f9-4106-b6c4-59a94261a6aa
00:14:12.180 --> 00:14:16.800
This is another example, but
again I put this example just to

NOTE Confidence: 0.8506932

c30d6c97-a071-433d-b3e9-6c2e7dc62ef6
00:14:16.800 --> 00:14:21.420
show you another invalid number.
So here if you check the number,

NOTE Confidence: 0.8506932

ae0eb343-7c68-4e2e-9684-7c641a76eee3
00:14:21.420 --> 00:14:25.270
there are two numbers that are
not lazy, typo here.

NOTE Confidence: 0.9284638

d087ac42-ce86-4410-9f14-fe7b9d8ce067
00:14:25.830 --> 00:14:26.510
So.

NOTE Confidence: 0.8282623

b9c2558c-e97f-427f-a2e8-5534c9e4659d
00:14:28.400 --> 00:14:33.314
This was either 9 or 8 is not a
valid digit because for base

NOTE Confidence: 0.8282623

767fefbc-105c-474d-9cfa-cf5ff585c252
00:14:33.314 --> 00:14:37.526
eight the valid digit is between
zero up until seven. So the

NOTE Confidence: 0.8282623

5e6f6b39-22dc-44d5-a2a6-6beba6fcd06c
00:14:37.526 --> 00:14:39.632
radix number itself is not a

NOTE Confidence: 0.8962515

f479a2d2-2c10-4e90-bd71-900604f46221
00:14:39.632 --> 00:14:43.323
valid digit. Also, this one.
This is not a correct symbol

NOTE Confidence: 0.8962515

e305cb9a-1a1d-461c-8cad-908f8c4ca0ae
00:14:43.323 --> 00:14:45.993
in base eight, so this is not
a valid number.

NOTE Confidence: 0.8744246

c8e6c01c-114d-46ee-96f6-9a924fde8c7a
00:14:49.870 --> 00:14:54.658
Another example is this. This is
the same binary number that we

NOTE Confidence: 0.8744246

ac6f297b-c283-441d-adb3-69a9b4aaf27a
00:14:54.658 --> 00:14:59.446
already saw. It's equal to 173
in binary system, but let's see

NOTE Confidence: 0.8744246

866e979d-c0dc-43bc-a6f4-e3eb80d7e0d9
00:14:59.446 --> 00:15:03.037
what's the decimal value for
this in base 8.

NOTE Confidence: 0.8415784

1d190f58-4b03-49d3-82b1-1af180259da8
00:15:03.840 --> 00:15:08.516
So the same number but in base 8
system. So again you have to

NOTE Confidence: 0.8415784

f8b3126c-0500-4a7d-a9c4-f23ece8f77f7
00:15:08.516 --> 00:15:11.856
multiply each digit by the
significant of that position and

NOTE Confidence: 0.9001472

af6556f6-5f58-4aaa-b7fd-9fa722568a8f
00:15:11.856 --> 00:15:17.798
sum. So this number was 173 in
binary system, but it is equal

NOTE Confidence: 0.9001472

ca87fd78-888b-47ea-903f-2f2fa0c97552
00:15:17.798 --> 00:15:20.282
to 2 million something in base

NOTE Confidence: 0.9316824

40ca01d6-4e58-4e60-b665-09f50078ebe7
00:15:20.282 --> 00:15:22.548
8. And this is because.

NOTE Confidence: 0.87847304

58a2383c-d893-4612-be5c-16680c556d44
00:15:23.390 --> 00:15:27.614
The significance of the position
here is based on the powers of

NOTE Confidence: 0.87847304

b3801192-d0a3-456a-8044-4ae3274c77c0
00:15:27.614 --> 00:15:31.838
eight, but in binary system was
based on the powers of two.

NOTE Confidence: 0.86055046

b2e888b8-1bac-4ff6-88de-8f3ca91f5347
00:15:33.130 --> 00:15:37.207
So you see that how
increasing the base number

NOTE Confidence: 0.86055046

5799d050-f895-4786-afa1-ef1bc27e1e4f
00:15:37.207 --> 00:15:41.284
allows us to represent a
wider range of numbers.

NOTE Confidence: 0.9467483

9259f396-31d9-4297-ae85-0c379d846c5a
00:15:43.060 --> 00:15:44.480
So here is the comparison.

NOTE Confidence: 0.86120784

1cf35c08-fabd-4f38-ba62-c0f4bfea0f4e
00:15:45.480 --> 00:15:49.430
The same number, the same
number of positions on the

NOTE Confidence: 0.86120784

7ba87c93-4ef2-4082-b0bc-436d0f6ebe9d
00:15:49.430 --> 00:15:54.170
same digits, but if you change
the base, if you increase the

NOTE Confidence: 0.86120784

e1c1ca3b-6841-4e74-a579-d55bfb924554
00:15:54.170 --> 00:15:57.725
base, you increase the actual
value of that number.

NOTE Confidence: 0.885635

1b031599-7794-4b6c-924f-76434d356fd0
00:16:01.250 --> 00:16:06.136
So if you want to count in base
eight again the minimum value is

NOTE Confidence: 0.885635

f055800a-4c41-4431-925c-24fd6713f1e4
00:16:06.136 --> 00:16:09.975
just putting the lowest digit in
all positions, so the minimum

NOTE Confidence: 0.885635

ca9a7dee-6412-4596-9163-26d10a002122
00:16:09.975 --> 00:16:13.116
value is just 0000, which is
equal to 0.

NOTE Confidence: 0.8683253

2db44fa6-c236-42b1-b844-18ced736eabe
00:16:13.860 --> 00:16:18.887
But what is the largest number
the largest number is just

NOTE Confidence: 0.8683253

2e8494f2-5f52-4708-8986-bfef5e09cff3
00:16:18.887 --> 00:16:23.914
putting the largest digit in all
positions, so the largest digit

NOTE Confidence: 0.8683253

463027dd-f393-492d-b8a2-66eb66ae5570
00:16:23.914 --> 00:16:26.656
in base eight is 7777 correct?

NOTE Confidence: 0.899844

90083f90-bfe2-4bcb-8f1a-311cd0adf971
00:16:26.656 --> 00:16:33.700
And neeraj? But if you want
to see this number 7777 in

NOTE Confidence: 0.899844

4723e39e-4283-430f-b023-c908080ec616
00:16:33.700 --> 00:16:38.524
decimal system, what's the equal
value in decimal system?

NOTE Confidence: 0.79661655

0ed39b5b-62f9-4588-b2f7-38f98661e6a3
00:16:44.320 --> 00:16:49.138
What what was our formula in
last lecture reset? We said

NOTE Confidence: 0.79661655

b887cfd3-5f49-4703-b7d8-a5707d4c6b16
00:16:49.138 --> 00:16:54.394
that if you are given an
position and you are in base

NOTE Confidence: 0.79661655

6c14c4bf-3dae-4c82-af28-70dd189d8a8e
00:16:54.394 --> 00:16:59.650
or it is equal to based the
power of number of position

NOTE Confidence: 0.79661655

f00c6cc1-49be-4499-a7ef-78ce40b7de3b
00:16:59.650 --> 00:17:02.278
minus one, so here it becomes.

NOTE Confidence: 0.7724761

b10ffce8-308a-4861-bc57-f56bd71b4cc6
00:17:03.460 --> 00:17:07.172
Let's come here and
calculate that so it

NOTE Confidence: 0.7724761

c503b223-88a8-4e36-bf69-0836b2d069cf
00:17:07.172 --> 00:17:12.276
becomes 8 to the power of,
uh, how many positions we

NOTE Confidence: 0.7724761

625c1be7-146e-47c2-93a9-13505f5671ba
00:17:12.276 --> 00:17:15.524
have. You have four
position minus one.

NOTE Confidence: 0.9116519

f92b96a8-d5a1-42d2-92b3-cb810548a2df
00:17:17.350 --> 00:17:21.060
So it is equal to 4000 something
in this 8.

NOTE Confidence: 0.875493

96222e42-588e-460f-a810-8238603bc4e0
00:17:21.920 --> 00:17:27.016
The this is the maximum number
given a four position in base 8.

NOTE Confidence: 0.86528784

73596c70-ab6e-49ab-8171-6f23d4119915
00:17:31.420 --> 00:17:37.204
Correct, yes, correct, you join.
So let's continue.

NOTE Confidence: 0.87402487

63b050b5-37f7-4f09-abef-9bd93195c297
00:17:38.390 --> 00:17:44.088
So if you want again if you want
to count in any basis, basically

NOTE Confidence: 0.87402487

3c565566-6cab-4df9-9590-25732e473fd8
00:17:44.088 --> 00:17:49.379
you have to add the number one
the unit 1 in the previous

NOTE Confidence: 0.87402487

51a92762-f7cc-4ace-aeb2-b8c5c1737093
00:17:49.379 --> 00:17:54.263
number. So you start from zero
and then 123 up until for

NOTE Confidence: 0.87402487

446abe26-98b0-4317-9cd9-3c8733368dc0
00:17:54.263 --> 00:17:58.740
instance, if you reach this
number 5277, you have to simply

NOTE Confidence: 0.87402487

04e72e87-f6ac-4c9c-af4a-22db99b6a312
00:17:58.740 --> 00:18:04.438
add by one in order to reach the
next unit. The next number. So

NOTE Confidence: 0.87402487

7c89426d-5ff9-4822-868e-23a9af263789
00:18:04.438 --> 00:18:09.322
the same in the decimal system.
So you have to just simply.

NOTE Confidence: 0.88136196

67965a48-0c15-4b5d-805f-7ddf60b64a10
00:18:09.390 --> 00:18:12.420
At each digit by the 0001.

NOTE Confidence: 0.86438364

d61e7ec7-2b02-45a8-bc14-d73c42f2a3cb
00:18:13.140 --> 00:18:18.152
So 7 + 1 becomes 88 is not the
correct digit valid digit in

NOTE Confidence: 0.86438364

7cf88d8f-ae3f-45ec-94f6-d39bf61eeec8
00:18:18.152 --> 00:18:22.806
base eight, so you have to
divide 8 by the base number. So

NOTE Confidence: 0.86438364

fef069ca-8989-4a1c-b1d9-53feafbaff67
00:18:22.806 --> 00:18:27.460
again you produce a carry to the
next position and then you put

NOTE Confidence: 0.86438364

f293dbc2-70b4-4398-b356-570a9869f619
00:18:27.460 --> 00:18:29.250
the remainder as a result.

NOTE Confidence: 0.8764043

08262dd9-9a3f-472d-a80e-a18942598654
00:18:31.500 --> 00:18:35.517
And then again you continue
1 + 7 + 0 becomes 8, again,

NOTE Confidence: 0.8764043

7c8b39cf-c200-45fb-9d64-1fd6287988d3
00:18:35.517 --> 00:18:39.534
8 / 8 becomes one, and the
remainder is 0. So you put

NOTE Confidence: 0.8764043

8ea54099-cbf4-4d3f-bb3f-9c1ed0f93e4e
00:18:39.534 --> 00:18:43.242
the zero as the result and
then put the quotient as the

NOTE Confidence: 0.8764043

5ecc9e4b-ab35-4036-9109-355043b0b2e6
00:18:43.242 --> 00:18:44.787
carry to the next position.

NOTE Confidence: 0.8633175

3e2318b9-9823-4a85-8599-9be7316727ce
00:18:45.930 --> 00:18:51.502
And then 1 + 2 + 0 becomes
three, 5 + 0 becomes 5.

NOTE Confidence: 0.9125666

d4e0f5f9-65c0-44aa-add2-962bc6104eaa
00:18:52.990 --> 00:18:59.134
And then the next number is 5300
plus one, which becomes 5301.

NOTE Confidence: 0.77714986

10fd84d3-2d3f-4bf8-8386-378c912a6b33
00:19:04.820 --> 00:19:10.617
Oh Part 8 to the power of 4 -- 1
is is the largest digit in base

NOTE Confidence: 0.876656

ea4a7753-0f58-4066-ae3b-414f1c237251
00:19:10.617 --> 00:19:16.110
8. So if you are, you said
that if you are given N

NOTE Confidence: 0.876656

86ce72a9-b39e-4e80-b183-754cdba55f8a
00:19:16.110 --> 00:19:19.530
positions, the largest digit
number is putting the largest

NOTE Confidence: 0.876656

fa9a7bc7-2469-43c0-9432-7128c0dedd1b
00:19:19.530 --> 00:19:24.090
digit in each position, which
is equal to the base number to

NOTE Confidence: 0.876656

3a204500-206e-4979-ba89-10f456928a67
00:19:24.090 --> 00:19:28.270
the power of the number of
position minus one. We covered

NOTE Confidence: 0.876656

cbc22d05-e3f7-4e7f-b0f3-d14ed426705d
00:19:28.270 --> 00:19:29.410
this last lecture.

NOTE Confidence: 0.84830856

9a5d508a-3072-4daf-a3f0-b80559367491
00:19:31.690 --> 00:19:31.980
OK.

NOTE Confidence: 0.87336856

4632ad16-2ec5-448e-b60c-8812846b8195
00:19:33.330 --> 00:19:39.143
So. And then X is the most
common number. System is the

NOTE Confidence: 0.87336856

9d8c106b-6ba6-4911-99c7-c2fa16428288
00:19:39.143 --> 00:19:44.642
decimal system or base 10 in
base 10 you have 10 digits from

NOTE Confidence: 0.87336856

1b3e264b-504e-48cc-aad5-0142a00bf252
00:19:44.642 --> 00:19:49.718
zero up until 9:00. So remember,
the largest digit is the radix

NOTE Confidence: 0.87336856

40215f1f-3cee-451c-9129-505c2d1f2032
00:19:49.718 --> 00:19:54.794
number minus one again. So the
number of digits are 1010 digits

NOTE Confidence: 0.87336856

532ea3b3-c700-4b9a-9be8-ef75e929b738
00:19:54.794 --> 00:19:56.909
from zero up until 9.

NOTE Confidence: 0.91760516

6589190a-5118-4a97-b032-5bb5a113b61d
00:19:57.480 --> 00:19:59.670
And this was the most

NOTE Confidence: 0.8279136

d91a4941-d01f-4dbe-9707-2dca764c8da4
00:19:59.670 --> 00:20:03.948
sophisticated. A numbering
system that human individuals

NOTE Confidence: 0.8279136

1f67b7eb-ec94-43d1-a2c9-d7bc51575f21
00:20:03.948 --> 00:20:09.928
actually could reach within the
history. So for instance, in

NOTE Confidence: 0.8279136

c5c7c8c7-0fa0-4e2a-b242-d87011656002
00:20:09.928 --> 00:20:14.712
Western culture, Eastern
cultures in Roman Empire they

NOTE Confidence: 0.8279136

ed828389-b7b2-405d-8af6-2346545f1cad
00:20:14.712 --> 00:20:21.888
had their own decimal system. I
believe this is let me see.

NOTE Confidence: 0.84369975

a8e7f917-c173-4cca-8c99-8189ac8f740c
00:20:23.350 --> 00:20:24.958
This is a.

NOTE Confidence: 0.46114942

29e1654b-239f-486e-8716-05bea5f04535
00:20:26.240 --> 00:20:27.250
Bangaly

NOTE Confidence: 0.7998615

9d86abac-ff9c-4147-be3e-1436cd9bdc03
00:20:28.560 --> 00:20:35.050
decimal digits. And this
is Malaysia at the language from

NOTE Confidence: 0.7998615

af601031-f990-42e4-9366-f7d1df3fd47b
00:20:35.050 --> 00:20:40.385
Malaysia. This is from Fi, I
mean Thailand and this is

NOTE Confidence: 0.7998615

81d45118-cf04-4077-ab50-99fef3507c90
00:20:40.385 --> 00:20:45.235
Chinese. The decimal digits. An
interesting thing is that all

NOTE Confidence: 0.7998615

250cf507-92e3-4c15-bc63-5fa8b1e7fffd
00:20:45.235 --> 00:20:49.600
these systems except the Roman
decimal systems have 0.

NOTE Confidence: 0.82858133

bb3e71b8-2fbc-40db-b47f-d09fa45cb2e7
00:20:50.170 --> 00:20:56.319
You know, in Western eastern, in
Chinese, in Bengali tie, these

NOTE Confidence: 0.82858133

87d5888b-f2e1-4932-a434-9b7105e5a44a
00:20:56.319 --> 00:21:03.586
are all have a digit 40. Up
until the digit four 910 digits.

NOTE Confidence: 0.9041902

192aaf6e-1df7-4fae-b36f-992354277931
00:21:05.200 --> 00:21:10.444
So I believe that all of you
know how to convert a

NOTE Confidence: 0.9041902

f75ce224-c0b2-4920-adda-c56d704bdaee
00:21:10.444 --> 00:21:13.503
decimal number to the
decimal system, basically.

NOTE Confidence: 0.85459334

4be07250-49ba-40f1-9292-6d838e9bbe59
00:21:15.010 --> 00:21:19.618
Just again, the significance are
based on the powers of 10 and

NOTE Confidence: 0.85459334

291e9a58-3050-485a-ae02-a16b0c5559f2
00:21:19.618 --> 00:21:21.922
then you multiply and then some.

NOTE Confidence: 0.89367956

4e0e3a63-3091-4853-8764-db98c5ceec8b
00:21:22.480 --> 00:21:29.732
And it's not. I mean, that is
strange that you end up with the

NOTE Confidence: 0.89367956

4e5bfbdf-f0c4-4df2-8c69-a67721ea5c29
00:21:29.732 --> 00:21:32.322
same number, so 30302131 becomes

NOTE Confidence: 0.8578633

608b6878-b00d-411f-81d0-1cb75f23ccf4
00:21:32.322 --> 00:21:35.635
30,000,000 something. So
because although our previous

NOTE Confidence: 0.8578633

70e23920-09f5-465c-9569-91ef4b23c50d
00:21:35.635 --> 00:21:38.725
numbering system in order for
us to understand what's the

NOTE Confidence: 0.8578633

ca6aec26-6da2-4b1b-af14-74e7dea4a630
00:21:38.725 --> 00:21:42.124
actual value become really the
decimal system. So when we are

NOTE Confidence: 0.8578633

eda9c4bd-dfec-47ed-be48-44b8c23f6ac4
00:21:42.124 --> 00:21:45.832
in a decimal system, if you
convert it, you end up with

NOTE Confidence: 0.8578633

5fbbd5c2-be53-4fd3-94ae-8363e63d0aca
00:21:45.832 --> 00:21:46.759
the same number.

NOTE Confidence: 0.8676717

92f32bd0-c526-40b2-8a4b-ae88a179d1d7
00:21:49.400 --> 00:21:52.438
So this is the same
binary number.

NOTE Confidence: 0.8809351

68cd6900-89eb-4eca-8550-364e9eac6b2d
00:21:54.160 --> 00:21:58.588
10101101 but this time we are
in the base 10 or decimal

NOTE Confidence: 0.8809351

a829c13a-4f51-4d96-a717-b98c3ac76b86
00:21:58.588 --> 00:22:03.016
system. If you convert it to
the decimal number, you end up

NOTE Confidence: 0.8809351

ba0689de-2b95-4d19-ac01-8e4542b0a15b
00:22:03.016 --> 00:22:06.706
with the same exact number. So
this binary number becomes

NOTE Confidence: 0.8809351

3d9f7e48-0b6a-406d-9cae-3d47aa17c465
00:22:06.706 --> 00:22:07.444
10,000,000 something.

NOTE Confidence: 0.8441839

b2bbb832-2195-47bc-8782-16228e66ab34
00:22:09.880 --> 00:22:14.140
And again, if you compare these
at the same number.

NOTE Confidence: 0.90553576

36a2d8e6-a9ed-4b7d-b713-0d8c23c53fc8
00:22:14.840 --> 00:22:18.530
As you see, the same
representation with a position

NOTE Confidence: 0.90553576

e73dc77f-a0b9-4d3d-9874-4fc07eda8a8d
00:22:18.530 --> 00:22:19.760
the same digits.

NOTE Confidence: 0.8617683

3379658f-89c8-4cbe-aa46-55bc9237eaf6
00:22:20.480 --> 00:22:24.130
Uh, if you increase the
base, you increase the value

NOTE Confidence: 0.8617683

8983e971-dfc4-4b86-8687-de2d412fb98b
00:22:24.130 --> 00:22:27.780
of that number, so from
binary system this number is

NOTE Confidence: 0.8617683

9bba8d4b-e27a-418c-bc12-f4bcbb880650
00:22:27.780 --> 00:22:32.160
equal to 173 in base added
to come 2 million, but in

NOTE Confidence: 0.8617683

f448bc76-7f26-48e3-a6d3-8a4efb270550
00:22:32.160 --> 00:22:34.715
base 10 it becomes
10,000,000 something and

NOTE Confidence: 0.8617683

7a600364-3497-42ae-9fce-65b36423f641
00:22:34.715 --> 00:22:37.635
this is because you are
increasing the significant

NOTE Confidence: 0.8617683

b92895ad-eae3-4920-9712-10498c73ef43
00:22:37.635 --> 00:22:41.650
of the positions from 2:00
to 8:00 and then to 10.

NOTE Confidence: 0.87575537

fc633fd2-6dd9-47ef-91db-cdd8dec90fbb
00:22:44.200 --> 00:22:49.480
Again, if you see a number that
has a digit that is not 01 up

NOTE Confidence: 0.87575537

3a526f3b-89d0-44ca-97c0-8046ef86b2a1
00:22:49.480 --> 00:22:53.704
until nine, it means that that
number is not a valid number.

NOTE Confidence: 0.87575537

b3b2e3fa-a5ca-4e77-8cac-d4cf40b11b7f
00:22:53.704 --> 00:22:58.632
Here, for instance, you see a
digit which is a. A is not a

NOTE Confidence: 0.87575537

64b65186-bc5b-4198-a391-62f1a9b84b22
00:22:58.632 --> 00:23:03.208
valid symbol or digit in base
10. So you simply say that this

NOTE Confidence: 0.87575537

fb9179ff-9259-4f85-837b-2ec9c43db1b0
00:23:03.208 --> 00:23:07.784
is not a valid in base 10.
However, it might be a valid

NOTE Confidence: 0.87575537

027aa672-a15f-4709-9b89-fc48e0b4227b
00:23:07.784 --> 00:23:09.192
number in other numbering

NOTE Confidence: 0.77251446

f8c77c5e-121d-40fd-bd94-e0ca1bccf6df
00:23:09.192 --> 00:23:13.320
system. Such as uh will
introduce that, but.

NOTE Confidence: 0.88332844

809fc857-a8cd-4ea0-a13e-972b65f14297
00:23:15.370 --> 00:23:19.751
If you want to count in decimal,
I believe that you already know

NOTE Confidence: 0.88332844

4adfeee3-2037-4a3f-8534-93fb6a53201c
00:23:19.751 --> 00:23:23.795
how to count in decimal system
from the secondary school. Or I

NOTE Confidence: 0.88332844

f5836154-eea7-4a78-a26b-4f277bb98079
00:23:23.795 --> 00:23:26.828
mean from the high school you
know how to.

NOTE Confidence: 0.82563496

02a48d40-2ddc-44f9-bfcd-f9708b4766e9
00:23:27.430 --> 00:23:31.000
Count again like other base
number, not make system. The

NOTE Confidence: 0.82563496

bed8226e-6181-43ca-926c-6a15d82a4100
00:23:31.000 --> 00:23:34.927
minimum value is just putting
the lowest digit 0000 in all

NOTE Confidence: 0.8894021

190ca172-8d0f-4e91-9e52-aa14726eb4c2
00:23:34.927 --> 00:23:41.098
positions. But the largest is
putting the largest digit so

NOTE Confidence: 0.8894021

74b628d2-77bd-4d63-9726-0d0fb13a102b
00:23:41.098 --> 00:23:43.346
9999 which becomes 9999.

NOTE Confidence: 0.83591694

0399b5e9-2778-4047-ba10-aee63b3eb5f1
00:23:46.190 --> 00:23:51.371
All but I mean after introducing
the I mean the computer

NOTE Confidence: 0.83591694

6c53fdb2-be0e-4d92-bb01-c13b6eb1e91d
00:23:51.371 --> 00:23:54.668
environment, the computing
power, computer machines and

NOTE Confidence: 0.83591694

4297b319-2226-4fe3-a5f2-95f2849c82ea
00:23:54.668 --> 00:24:00.320
etc. So we need to represent
very large numbers even. I mean,

NOTE Confidence: 0.83591694

06f9b3a2-b454-4ea5-9291-b112bb0cb523
00:24:00.320 --> 00:24:05.972
if you want to represent those
large numbers in base 10, it

NOTE Confidence: 0.83591694

091e97b4-186e-4783-917d-d5c439259532
00:24:05.972 --> 00:24:11.624
seems that you need a lot of
position to represent those high

NOTE Confidence: 0.87596804

74c93bb4-aeae-4e03-aff4-b8fdab32e0b7
00:24:11.624 --> 00:24:16.749
numbers. And the same as we did
for from base two to base four

NOTE Confidence: 0.87596804

24d026b2-bd7c-44ab-9dd8-9db7c1bf8f01
00:24:16.749 --> 00:24:21.131
and then to base eight and etc.
We said that if we increase the

NOTE Confidence: 0.87596804

33028a94-d108-4fe5-b2b6-99239b1b15bd
00:24:21.131 --> 00:24:24.887
base number, we can reduce the
number of positions we need to

NOTE Confidence: 0.8473939

77c3e864-1799-40a8-b32c-80f80259d6a6
00:24:24.887 --> 00:24:29.712
represent an number. So that was
the initiative behind building

NOTE Confidence: 0.8473939

1e52e5ba-7e06-43bb-935b-e96773a4c223
00:24:29.712 --> 00:24:33.816
base number based numbering
system that have larger based

NOTE Confidence: 0.8473939

9df997bf-525a-4ce8-b128-26c44262f465
00:24:33.816 --> 00:24:38.376
numbers. For instance, after the
decimal system we could build

NOTE Confidence: 0.8473939

40febde2-913d-4067-aca1-04a517876be3
00:24:38.376 --> 00:24:43.848
base eleven, base 12 an etc. But
one of the most common.

NOTE Confidence: 0.76254225

3f7ffdb9-a492-446d-b9da-6759a5be50ab
00:24:45.390 --> 00:24:49.550
All numbering system that have
more than 10 digits or

NOTE Confidence: 0.76254225

12fde421-a891-4578-8cd6-ef19165ea505
00:24:49.550 --> 00:24:54.126
hexadecimal or I mean in uh in
short heads that system.

NOTE Confidence: 0.86779916

daa8eb8b-d425-4a42-924a-8baaafbd5b9c
00:24:54.710 --> 00:25:01.598
Which has 16 digits. Hexa means
16 in English. So in this

NOTE Confidence: 0.86779916

14dfcd53-59f2-4d8a-bed2-b4f1ae3f4041
00:25:01.598 --> 00:25:07.338
system we have 16 digits 0120.
There's another bug here.

NOTE Confidence: 0.9000241

267bf20a-12b2-4bc2-9249-e33767350dd5
00:25:07.940 --> 00:25:11.188
2345 up until 9.

NOTE Confidence: 0.86418974

9ec435d7-6106-4e4c-b61c-5d2d570a228a
00:25:11.820 --> 00:25:18.050
And then after nine we have a
digit called a with four, 10 B

NOTE Confidence: 0.86418974

99e04baf-fdc1-4193-88fd-82232e9c55c9
00:25:18.050 --> 00:25:23.390
411 up until F 4:15. So the
largest digit in this Heizer

NOTE Confidence: 0.86418974

fef38881-f886-4156-bf9d-16a75e6b5988
00:25:23.390 --> 00:25:28.285
decimal system is F, which has
the equal value as 15.

NOTE Confidence: 0.85069686

537b022e-dfd9-4938-9ce2-a9d07ce1b111
00:25:29.770 --> 00:25:34.962
So 16 -- 1 becomes 15.
We represent 15 as F

NOTE Confidence: 0.85069686

babf1366-5cbf-47e2-beee-89f9f4ef3bee
00:25:34.962 --> 00:25:36.378
in hexadecimal system.

NOTE Confidence: 0.8494168

0d210c36-848c-475e-8a36-65324945217a
00:25:38.120 --> 00:25:42.971
So very similar to the exactly
the same as previous numbering

NOTE Confidence: 0.8494168

95013948-cb9d-4db3-bdad-890054c58cd2
00:25:42.971 --> 00:25:48.263
system. If you are given a
number, first you have to check

NOTE Confidence: 0.8494168

8ff7329e-d2a9-4922-acca-2cc4e27388fd
00:25:48.263 --> 00:25:53.996
the digits are valid in the base
16. All the digits are valid

NOTE Confidence: 0.8494168

cdad60d5-2ee1-46aa-9b22-8fb569a4feb2
00:25:53.996 --> 00:25:58.847
digits and then you have to
simply multiply each digit by

NOTE Confidence: 0.8494168

19c5d4ea-b56f-4bfa-812c-3304490ed61e
00:25:58.847 --> 00:26:02.816
the significant of that position
and then sum together.

NOTE Confidence: 0.8782397

6149e3e7-d470-4b64-ad2e-ba3fcb2b0d7f
00:26:03.680 --> 00:26:08.706
You might ask that how I can
multiply a with 16 to the power

NOTE Confidence: 0.8782397

c836df58-9354-413e-8104-1054cb1cda42
00:26:08.706 --> 00:26:14.091
of five in this position. As I
said, a is one step after 9, so

NOTE Confidence: 0.8782397

0fb0b547-b918-4789-9bc7-112f2b2f736a
00:26:14.091 --> 00:26:18.399
9 + 1 becomes 10. So you are
actually you, although you

NOTE Confidence: 0.8782397

1aac8ba7-da5a-4a5c-91a8-daf99af9fcbb
00:26:18.399 --> 00:26:23.066
represent it as the character a,
but the actual value is 10, so

NOTE Confidence: 0.8782397

9b55ae95-7ca9-426c-841d-def3b6516344
00:26:23.066 --> 00:26:26.297
you have to simply multiply 10
by this number.

NOTE Confidence: 0.9197943

3289299f-4e87-448a-a10d-a454115faddf
00:26:26.870 --> 00:26:32.822
And then the final number is 815
million something. So you see

NOTE Confidence: 0.7596773

d5adb331-8df0-4e36-aa71-a0a81f02367c
00:26:32.822 --> 00:26:37.974
that. If you increase the
base number, you increase

NOTE Confidence: 0.7596773

4992f233-786d-42e2-b765-f38bbe998a3a
00:26:37.974 --> 00:26:41.758
the the range that you
represent the numbers.

NOTE Confidence: 0.91341853

a935c554-3912-44dd-ba8f-41b66ed46e4a
00:26:43.930 --> 00:26:44.800
For other.

NOTE Confidence: 0.81411463

30c0e53f-c7a0-4c70-99bf-edf5a6f0596a
00:26:46.190 --> 00:26:51.379
Uh. Digits in base 16. For
instance, the digit EB is one

NOTE Confidence: 0.81411463

bee91631-471a-4763-8979-095f93a062b9
00:26:51.379 --> 00:26:56.963
step after a, which is 11. C is
one step after B, which is 12 up

NOTE Confidence: 0.81411463

611ef1b1-2664-419b-8d29-713ec58b527b
00:26:56.963 --> 00:27:01.500
until F, which is one step after
E which is equal to 15.

NOTE Confidence: 0.8413411

13b60517-aff5-4bb8-82ef-602f9f4af0cc
00:27:02.060 --> 00:27:06.330
So although you put the digit F,
But when you want to convert it

NOTE Confidence: 0.8413411

a7af34e4-d2a7-418f-bc99-324afb44cd3a
00:27:06.330 --> 00:27:09.380
to decimal system, you assume
that it is representing 15.

NOTE Confidence: 0.8557653

3398fae9-97a3-45c1-8c81-4963df0c4f14
00:27:12.240 --> 00:27:16.465
This is the exact binary number
we saw in the base two base

NOTE Confidence: 0.8557653

70f16bfb-1239-45cf-a0ad-9acd91ca2065
00:27:16.465 --> 00:27:20.690
eight and base 10. Now we want
to see what's the decimal value

NOTE Confidence: 0.8557653

7fc15f88-9d7c-47e5-a496-50a46bb8f740
00:27:20.690 --> 00:27:22.965
when we see this number in base

NOTE Confidence: 0.9188052

ca96613a-353a-4d05-99df-595d67014ce4
00:27:22.965 --> 00:27:27.910
16. So if you do the
calculation, you see that this

NOTE Confidence: 0.9188052

6148afbc-fb89-4c62-89e5-7aac8e3040dc
00:27:27.910 --> 00:27:30.250
number is equal to 269 million

NOTE Confidence: 0.9357041

4a60684c-d0ee-44b7-bda2-c24e2c58b881
00:27:30.250 --> 00:27:32.320
something. So again.

NOTE Confidence: 0.8767076

b10bc8e6-4d98-4b7f-a0e6-e8638f110e22
00:27:32.930 --> 00:27:39.123
In compared with other numbering
system, the same number now can

NOTE Confidence: 0.8767076

a1a00017-d2d8-4cc4-8a14-4b2e061320bb
00:27:39.123 --> 00:27:41.375
represent a larger number.

NOTE Confidence: 0.8827956

44f6d9a8-c09d-4a95-886b-e155f3b02342
00:27:41.970 --> 00:27:45.320
So if you increase the base,
you're increasing the value

NOTE Confidence: 0.8827956

b033f519-d6de-49ed-9d24-ba2ff1c63b5d
00:27:45.320 --> 00:27:46.325
of that number.

NOTE Confidence: 0.8515197

0f21fc77-d59a-4f42-be63-f7e00fd22bea
00:27:47.970 --> 00:27:51.306
From base 273 up until this.

NOTE Confidence: 0.87576413

35832333-b3d0-4878-b69e-9c42dfd47db8
00:27:53.000 --> 00:27:59.124
So. This, this way you see that
how can we come up with an more

NOTE Confidence: 0.87576413

d48db3a5-586d-47b8-a448-02aa26dac7c5
00:27:59.124 --> 00:28:01.476
efficient number system by
increasing the base?

NOTE Confidence: 0.8511922

57a09a08-c562-4f29-9dc5-c9e3b3f59a32
00:28:03.730 --> 00:28:08.761
If you want to represent person
173 in base two, you need eight

NOTE Confidence: 0.8511922

defcf006-5caf-4281-8116-a487cc76c018
00:28:08.761 --> 00:28:13.018
position. But if you want to
represent the same number in

NOTE Confidence: 0.8511922

67b536f2-7be6-4563-80be-0c141a75cfbf
00:28:13.018 --> 00:28:17.662
base 16, you only need probably
just how many positions do you

NOTE Confidence: 0.8511922

df9bb0da-c581-4b6d-a6dd-82369f215283
00:28:17.662 --> 00:28:21.532
need. You can attack with that.
Probably you need only.

NOTE Confidence: 0.83998805

27927ff3-379f-4148-8ee7-f84aea77983b
00:28:23.970 --> 00:28:29.262
173 in base 16 will see how can
we convert back a decimal number

NOTE Confidence: 0.83998805

3cd005d6-8fe2-4bf0-8647-8e4ad17a030e
00:28:29.262 --> 00:28:33.798
to any as base. Any other base
numbers, but you probably need

NOTE Confidence: 0.83998805

7bfea3fa-cb36-4567-bed4-a07ff0407dcd
00:28:33.798 --> 00:28:35.688
only two or three positions.

NOTE Confidence: 0.8817261

094bfaa2-a46b-48cb-af51-e4236ef4674b
00:28:38.470 --> 00:28:43.423
And if you want to count in base
extent very similar, the minimum

NOTE Confidence: 0.8817261

a0162c99-2eba-4ed5-bd94-6968e01259e4
00:28:43.423 --> 00:28:47.614
number is 0000 in all positions.
The maximum number is just

NOTE Confidence: 0.8817261

d3d37aec-473b-4116-b0f0-892b5ce7a2de
00:28:47.614 --> 00:28:51.805
putting the largest digit. The
largest digit in base 16 years.

NOTE Confidence: 0.83952683

1c434072-159b-428c-986d-223a62a00b5f
00:28:53.050 --> 00:28:58.858
What? What is the maximum number
in base 16 given four position?

NOTE Confidence: 0.6572045

4b5a7c89-8591-4515-903b-1e9a4a6223b6
00:29:05.370 --> 00:29:10.698
All silent, yes. Actually you
are given 54 position.

NOTE Confidence: 0.85970277

f78dded5-839e-44da-9c71-e77381a4e367
00:29:11.380 --> 00:29:16.605
The maximum number is just
putting the largest digit in all

NOTE Confidence: 0.85970277

a4c29894-113c-4d43-92dc-1231a7dff7ba
00:29:16.605 --> 00:29:22.305
position. The largest digital 16
base is FFFF, so it becomes 4F.

NOTE Confidence: 0.8377759

a4cabcf5-0819-4155-9e91-2ae3e16b98f5
00:29:22.970 --> 00:29:28.784
And then. What the value of F is
actually 15 but you have to

NOTE Confidence: 0.8377759

2622e5e6-fac3-4290-9388-b5bc8362d24d
00:29:28.784 --> 00:29:32.766
represent it as the valid
digits. The valid digits for the

NOTE Confidence: 0.8377759

a4c05c66-b7cb-48c9-83df-dd11bc483151
00:29:32.766 --> 00:29:37.834
largest digit is F, and then if
you want to convert it to the

NOTE Confidence: 0.8377759

e79dd1e7-0c72-4ff2-af7c-3daeda9a71a6
00:29:37.834 --> 00:29:41.454
decimal system, you have to
simply multiply each digit to

NOTE Confidence: 0.8377759

e9e728a2-834e-4cf3-8b0d-c5d5d10ba938
00:29:41.454 --> 00:29:47.246
the powers of that position. So
F * 10 to 16 to the power of 0.

NOTE Confidence: 0.8377759

949ec5db-8f58-4b73-ae23-48fdf10cc63d
00:29:47.246 --> 00:29:48.694
So let's do that.

NOTE Confidence: 0.84735644

2eeabedd-01f6-48f2-b309-0d225dd9d8aa
00:29:50.270 --> 00:29:57.029
Let's see what's the value
so 16 multiply F.

NOTE Confidence: 0.88910925

9328e936-4ec3-47d9-a9ec-eed968292af6
00:29:58.190 --> 00:30:00.140
Multiply by 16.

NOTE Confidence: 0.85440487

35a8c4ed-d423-41ac-8480-3f20f99861ab
00:30:00.260 --> 00:30:01.500
The power of 0.

NOTE Confidence: 0.7307424

101a3394-016a-488a-8ccd-ef834f3c54bd
00:30:03.750 --> 00:30:04.340
Plus

NOTE Confidence: 0.81121564

0e67955a-c3fc-47b2-9c29-3dd026a13618
00:30:07.300 --> 00:30:13.284
ask 16 to the power of 116 to
the power of 2 and 16 to the

NOTE Confidence: 0.81121564

807741f5-f571-46b6-8d6e-5a8881fba6cc
00:30:13.284 --> 00:30:14.406
power of 3.

NOTE Confidence: 0.88257515

4a4e93f7-cad3-4553-beb8-8090d7876373
00:30:15.020 --> 00:30:19.976
So we said that this number
for the F. We cannot multiply

NOTE Confidence: 0.88257515

6933244b-3b62-4476-80dd-bacf583cd278
00:30:19.976 --> 00:30:24.106
a character with a number, so
F is actually representing

NOTE Confidence: 0.88257515

4856722c-d8b1-4e3f-9baa-9ae29f390daa
00:30:24.106 --> 00:30:28.236
15. So then you have to
replace F with 15.

NOTE Confidence: 0.874868

b5088b85-a34a-4308-b27f-62ea05e727d2
00:30:29.300 --> 00:30:32.670
The only time that you converted
characters with the actual

NOTE Confidence: 0.874868

953444bc-56b6-4531-8756-60fb996eb422
00:30:32.670 --> 00:30:36.377
numbers is when you want to
convert it to the decimal

NOTE Confidence: 0.874868

70090a28-4a42-4352-87d5-aa8a77405831
00:30:36.377 --> 00:30:40.084
system. Otherwise you have to
stick with the valid digits and

NOTE Confidence: 0.874868

527e782e-cefe-4775-b5a3-004128797f09
00:30:40.084 --> 00:30:41.769
let's see what's the value.

NOTE Confidence: 0.8948564

5bff65e1-352d-4034-b960-6efee7186ea4
00:30:42.460 --> 00:30:48.297
The value is 65,000 something
and this is as we said, this is

NOTE Confidence: 0.8948564

ad8c0dac-be7d-4aec-a5d0-b7b29b4c1fdc
00:30:48.297 --> 00:30:54.134
equal to 16 to the power of
number of positions 5 -- 1.

NOTE Confidence: 0.8394124

895b4126-0768-4f16-9bcc-c1b965a56946
00:30:57.610 --> 00:30:59.858
Oh sorry, the number
of positions are four.

NOTE Confidence: 0.9225847

0b782f58-dedd-4e30-8efe-4492364f3186
00:31:02.150 --> 00:31:04.300
So you see, you end up with
the same number.

NOTE Confidence: 0.8890485

f57a98f8-efe0-4558-8176-a795cbb94d17
00:31:05.940 --> 00:31:08.790
This is the formula that
we come up last section.

NOTE Confidence: 0.8752984

1366ec41-5248-4dd7-8c66-5101223b27e4
00:31:13.960 --> 00:31:19.524
OK, and again I mean in
accounting in a base 16 is very

NOTE Confidence: 0.8752984

ee286339-80c6-4268-8f0a-d1b24c508c65
00:31:19.524 --> 00:31:25.088
I mean exactly the same as any
other basis. So if you start

NOTE Confidence: 0.8752984

d367ddf4-03d0-4aab-bff6-71a115079f7a
00:31:25.088 --> 00:31:30.224
from 012 an open till for
instance this number 5C AF you

NOTE Confidence: 0.8752984

4b2928de-eac2-45a4-9222-c0e61b2d1ad2
00:31:30.224 --> 00:31:35.360
have to just simply add by one.
So you see that F.

NOTE Confidence: 0.8677497

d131fd76-d156-471b-b45a-d49596b71be1
00:31:35.960 --> 00:31:41.224
Is equal to 15, so F + 1 is
actually means that 15 + 1 which

NOTE Confidence: 0.8677497

8d2e1e8e-d000-4b0b-935a-270e31a63fe9
00:31:41.224 --> 00:31:46.159
is equal to 1616 is not a valid
digit. There is no digit for 16,

NOTE Confidence: 0.8677497

b77eeb8c-dc63-41d9-8ff4-5764906ca7f3
00:31:46.159 --> 00:31:51.094
so you have to divide it by the
base #16. This is the Carrie and

NOTE Confidence: 0.8677497

9187c2b6-f403-4e84-a870-a18e37aa9aa9
00:31:51.094 --> 00:31:55.042
this is the reminder to you.
Leave the remainder and you put

NOTE Confidence: 0.8677497

375cbe99-abff-4fa6-bad3-48a0ee03816d
00:31:55.042 --> 00:31:56.687
the character the next position.

NOTE Confidence: 0.8700391

d2f318c7-9c81-4871-ba1c-5fdfb81d1b01
00:31:57.740 --> 00:32:03.560
Is Carrie has the value of 16
and then 1 + 8 A is actually

NOTE Confidence: 0.8700391

deac3941-f222-49a2-87b0-d34dcb0b87e6
00:32:03.560 --> 00:32:10.156
equal to 10, so 1 + 10 becomes
11 and 11 in base 16 is equal to

NOTE Confidence: 0.8700391

74cfdeb4-0afb-4deb-b5a8-a90b61715823
00:32:10.156 --> 00:32:14.424
B. So you have to replace it
with the character B.

NOTE Confidence: 0.88788635

c8b90f41-1614-442b-ab1e-3fb27e80d497
00:32:15.400 --> 00:32:22.981
And then C + 0 is equal to C. 5
+ 0 is equal to five, so this is

NOTE Confidence: 0.88788635

b8b51a12-4f55-44f5-ba47-ef5a2854d47a
00:32:22.981 --> 00:32:26.971
the next number after 5C AF you
reach 5C Bo.

NOTE Confidence: 0.87891537

e9524b00-8cac-4fe9-bac3-3259aa6f9697
00:32:27.650 --> 00:32:33.530
And then you add this one you
come up with the next number, so

NOTE Confidence: 0.87891537

e04de272-97ce-4cac-a610-52fedf88fa11
00:32:33.530 --> 00:32:36.050
it comes five CB15CB2 and etc.

NOTE Confidence: 0.902832

8cdc99bc-7aab-438c-833d-e2e17c093390
00:32:39.190 --> 00:32:41.420
So any questions so far?

NOTE Confidence: 0.9054557

79817055-d5d5-4e52-9f53-a0aa7031a642
00:32:49.390 --> 00:32:50.240
No questions.

NOTE Confidence: 0.9075794

bfd5c1e9-5fb8-429a-bf36-06c8f94f089a
00:32:54.260 --> 00:32:57.564
So the next kind of I mean.

NOTE Confidence: 0.8095278

cd6c1087-5929-4111-8883-227eb7f9264a
00:32:59.320 --> 00:33:03.544
Strange base number is you can
increase the base number, for

NOTE Confidence: 0.8095278

1ba52fc3-4f08-4518-99b5-d174ececf267
00:33:03.544 --> 00:33:07.384
instance based 17, base 18
whatever base number you want

NOTE Confidence: 0.8095278

7c7f3cc2-c4d7-41bb-84e6-257a69d6a426
00:33:07.384 --> 00:33:09.688
you can. I mean by this.

NOTE Confidence: 0.88724303

317f0f59-8f22-4ef3-a8f3-5106a8fa800f
00:33:11.150 --> 00:33:15.504
I mean similar way you can come
up with the any type of number

NOTE Confidence: 0.86001897

767f5dbe-feb6-485b-95e6-da252b2c0704
00:33:15.504 --> 00:33:21.790
system. But another amazing base
number is base 64, which is

NOTE Confidence: 0.86001897

9696602f-7df2-41e5-816a-1d71be641ca1
00:33:21.790 --> 00:33:24.868
introduced in 19. Oh, let me.

NOTE Confidence: 0.90204626

b20b901d-b1f1-4f7d-8841-dc298e10da4a
00:33:26.410 --> 00:33:32.350
1992 and the
reason was that they wanted to.

NOTE Confidence: 0.82583594

171705ba-f71b-4a94-a559-17f234aaebd1
00:33:33.810 --> 00:33:38.650
Uh, they need to understand or
to represent or code the

NOTE Confidence: 0.82583594

a5067699-0c39-4fdb-9ba5-f5ab65b9e47d
00:33:38.650 --> 00:33:43.490
communication in web, and so
they produce a disk space number

NOTE Confidence: 0.82583594

8d59cf13-b5f4-4726-af2a-2a295590d00d
00:33:43.490 --> 00:33:48.330
and the base number is 64,
meaning that each position has

NOTE Confidence: 0.82583594

76db0647-6d9d-477a-a9e1-961c34d4935b
00:33:48.330 --> 00:33:53.610
the significant based on the
powers of 64. And you see that

NOTE Confidence: 0.82583594

b1cefdcf-618d-4880-be26-73f60808e206
00:33:53.610 --> 00:33:58.010
how wide the numbers we can
represent in this space.

NOTE Confidence: 0.8156477

4c988490-0d1e-4b58-b039-9fd64ac352ea
00:33:59.630 --> 00:34:05.909
And but the amazing or kind of a
strange thing about this number

NOTE Confidence: 0.8156477

ed205cc8-6328-4c9c-9484-239ef11f9ecf
00:34:05.909 --> 00:34:11.222
is that the digits are. This
space is starting from a.

NOTE Confidence: 0.88746846

f0c6a59b-2976-48d1-8ec2-1849632042d6
00:34:12.090 --> 00:34:14.840
So a represent the zero.

NOTE Confidence: 0.8432238

429723c4-f302-45fb-b91a-cbb3084d33b7
00:34:15.450 --> 00:34:21.365
B represent 1C represent two and
etc up until the capital Z and

NOTE Confidence: 0.8432238

9aae1f52-cfaa-42e7-b91b-e1b4ceac65be
00:34:21.365 --> 00:34:27.735
then after that small a up until
the small Z and then 012 up

NOTE Confidence: 0.8432238

1ecf0b42-afa4-4cc0-a8cf-613db00c8660
00:34:27.735 --> 00:34:33.195
until 9 plus forward slash. So
you see that the largest digit.

NOTE Confidence: 0.84436595

3ac9c65e-e93d-4de4-a196-8111895a0545
00:34:34.180 --> 00:34:37.010
Is the digit forward slash.

NOTE Confidence: 0.9149655

d2616249-a60a-49cd-9a45-58d531158f17
00:34:37.740 --> 00:34:43.018
And this has the value the same
as 64 -- 1 which is 63.

NOTE Confidence: 0.90800685

8b8970a4-3d1b-4b36-bf75-57122e23bf16
00:34:44.360 --> 00:34:48.598
And this is the look up table.
In order to figure out what's

NOTE Confidence: 0.90800685

e1128148-b1ba-4905-9311-c5110c70ab23
00:34:48.598 --> 00:34:50.554
the actual value of each digit.

NOTE Confidence: 0.9084236

6979c992-aa73-485f-9357-da6304335f22
00:34:51.240 --> 00:34:55.855
So again, this system is start
with zero, and if you want to

NOTE Confidence: 0.9084236

3190e487-d41b-462e-a005-d7310864cd4c
00:34:55.855 --> 00:34:59.050
represent zero you have to put
the digit A.

NOTE Confidence: 0.8670715

a35236ca-d4a0-408a-a194-fe30bd915af8
00:35:00.130 --> 00:35:03.835
If you want to show the number
2, you have to put the digits E

NOTE Confidence: 0.88686913

c5a6e266-3fdf-4bfb-914a-2e24515d8aa5
00:35:03.835 --> 00:35:08.570
for instance. And be careful in
this system, if you put the

NOTE Confidence: 0.88686913

ad6b23bb-4d09-47a1-9f88-41dd07800923
00:35:08.570 --> 00:35:12.962
digit zero, it doesn't mean
zero. It means 52. This is kind

NOTE Confidence: 0.88686913

b0812ffd-6534-48b0-ad9d-4ada76d8ab5b
00:35:12.962 --> 00:35:17.720
of a strange binary system, but
I just wanted to show you that.

NOTE Confidence: 0.8841606

1b3c16e7-1081-4217-83c8-f63c2b4c830d
00:35:18.360 --> 00:35:22.374
Whatever symbol you can create
to represent your numbers.

NOTE Confidence: 0.85728174

f015508d-0ebf-4e17-8c07-fefe8e6faeca
00:35:24.730 --> 00:35:27.682
For instance, this is
a number in base 64.

NOTE Confidence: 0.9028987

3b974bdf-f977-4d9f-b041-8d9e592ba073
00:35:28.870 --> 00:35:32.950
Let's see what's this number. In
order to come up with this

NOTE Confidence: 0.9028987

a74fb2b1-b25d-495f-b753-2fb939eed8e3
00:35:32.950 --> 00:35:37.030
number, you have to 1st see that
the each position has the

NOTE Confidence: 0.9028987

d9d629b3-a8b0-4b5a-bae5-343220e90e61
00:35:37.030 --> 00:35:41.110
significance of 64. So this is
the first position 64 to the

NOTE Confidence: 0.9028987

039e4220-f253-4555-b252-792438914dc9
00:35:41.110 --> 00:35:45.870
power of 0 up until the last
position 64 to the power of 7.

NOTE Confidence: 0.86383164

5fd22491-1ac8-4253-afd4-d14277438f01
00:35:46.540 --> 00:35:50.786
And then you have to simply
multiply each digit with the

NOTE Confidence: 0.86383164

0c4ea80e-8771-47d1-9ac9-7b1d8867f5ef
00:35:50.786 --> 00:35:52.330
significance of that position.

NOTE Confidence: 0.88380927

c7d3495d-a8ac-4bd4-9835-76f17e404662
00:35:53.440 --> 00:35:57.794
So how you can multiply plus
with 64 to the power of 0? How

NOTE Confidence: 0.88380927

f874b9cc-96c9-4bc2-a46e-0f5ccaa19b99
00:35:57.794 --> 00:36:02.148
you can multiply edge with 64 to
the power one and etc. So in

NOTE Confidence: 0.88380927

84cc9aa8-5ad3-4675-9c4d-25ce94216316
00:36:02.148 --> 00:36:06.191
order to come up the actual
value of each digit, you have to

NOTE Confidence: 0.88380927

ce57a915-958b-408e-a294-a1188912a34a
00:36:06.191 --> 00:36:08.057
refer to the look up table.

NOTE Confidence: 0.84304917

dd8b6c0e-4bb2-4863-94f4-77647a1a45fc
00:36:08.740 --> 00:36:13.612
So you see that edge has the
value of seven. A has the value

NOTE Confidence: 0.84304917

8270169f-bb44-4dd2-a49c-7b147249aba6
00:36:13.612 --> 00:36:17.440
of zero. Small A has the value
of 26 and etc.

NOTE Confidence: 0.871361

8bea1fba-7ea3-4a69-847a-4950c252a99d
00:36:18.350 --> 00:36:23.930
At forward Slash has the value
of 63 Plus has a value of 62 and

NOTE Confidence: 0.8853132

0172ad76-a2de-40d6-a197-3a53098523d3
00:36:23.930 --> 00:36:28.457
then. Now you can do the
multiplication so plus 62.

NOTE Confidence: 0.8934634

8b1245f8-19f9-473e-8395-c5c2818fe060
00:36:29.040 --> 00:36:36.015
871 is 53, so you see the digit
one, but it has the actual value

NOTE Confidence: 0.8934634

7c01578e-a7ba-4b7c-9558-bfc88cf4d253
00:36:36.015 --> 00:36:38.805
of 50. Three in base 64.

NOTE Confidence: 0.90508

ebe78f0e-b0fc-457a-8fa1-0a907429ecfb
00:36:39.690 --> 00:36:43.002
And then you do the
multiplication and then sum

NOTE Confidence: 0.90508

5ee655df-b1e3-4068-8612-694c9a77ac7e
00:36:43.002 --> 00:36:46.314
together, so this is equal to
this huge number.

NOTE Confidence: 0.78820586

cb13c9c1-4bb1-4b09-8a7f-c39a508bc675
00:36:48.000 --> 00:36:49.686
I cannot even, I mean, uh.

NOTE Confidence: 0.8876057

fa348fb2-79a9-48ac-bd35-4ede5ffcc85b
00:36:51.230 --> 00:36:57.380
Uh. Spell this number in words,
but this is that huge number.

NOTE Confidence: 0.8536798

2b32eff1-cd25-46d0-a7b2-138f3cb0167a
00:36:59.240 --> 00:37:03.762
An if you want to count in base
64 very similar, you start with

NOTE Confidence: 0.8536798

cdf7eebd-b1bc-4915-96ba-34fc6802d92d
00:37:03.762 --> 00:37:07.315
the smallest number. But my
question from you is that what's

NOTE Confidence: 0.8536798

5692a337-f7a0-4870-8e0e-0e7748146ca2
00:37:07.315 --> 00:37:09.253
the smallest number in base 64?

NOTE Confidence: 0.8275466

94ed7157-2b5a-4255-a79b-34b9271e74c1
00:37:14.420 --> 00:37:18.677
Correct, so the lowest the
smallest digit is a, so he

NOTE Confidence: 0.8275466

c904840a-bbdf-48c3-aa38-9fadd3313a4f
00:37:18.677 --> 00:37:22.547
Simply put a in all the
positions so it becomes

NOTE Confidence: 0.8275466

68776d2c-ee08-4544-a6e2-f151cb936ba6
00:37:22.547 --> 00:37:26.804
AAAA, which is equal to 0 in
decimal system. What's the

NOTE Confidence: 0.8275466

933dda98-42f5-4fa4-936a-2c78ba73eef1
00:37:26.804 --> 00:37:27.578
largest number?

NOTE Confidence: 0.83023196

256ad709-29d2-4b25-b919-3a43e54be8ee
00:37:30.030 --> 00:37:34.155
Yes, the largest number is
putting the forward slash in all

NOTE Confidence: 0.83023196

91c61d76-3302-4a3b-81ee-76af9c7fbb7f
00:37:34.155 --> 00:37:36.780
positions. So forward slash
forward slash etc.

NOTE Confidence: 0.87597823

4e4b41ee-0324-45df-aa26-22ec001a5e05
00:37:37.900 --> 00:37:44.046
An if you want to count, you
have to add each number with one

NOTE Confidence: 0.87597823

f3beabc3-0ce6-42de-83d0-eb857ccf193f
00:37:44.046 --> 00:37:50.192
but one in base 64 is equal to a
AAB because it becomes 0001.

NOTE Confidence: 0.8854969

9dfde6ec-4a28-4e80-8358-00bb21805d0a
00:37:51.870 --> 00:37:56.756
So if at some point you reach
this number, you have to add one

NOTE Confidence: 0.8854969

765db16b-2736-4f83-894a-e536695ee0cf
00:37:56.756 --> 00:37:59.897
with that. So let's start
forward slash plus P.

NOTE Confidence: 0.8737665

a1b3d894-1283-4bda-bf32-82b698defb11
00:38:00.590 --> 00:38:05.000
Forward Slash has the value of
60. Three B is equal to 1, it

NOTE Confidence: 0.8785924

397c7dbf-d653-400e-9247-6dd6c4dcc1ce
00:38:05.000 --> 00:38:10.324
becomes 64. 64 is not a valid
digit in base 64. You have to

NOTE Confidence: 0.85448426

e90fc6df-c1e2-4303-9288-7edc2adc4b5a
00:38:10.324 --> 00:38:15.690
divide it. Reminder as a result,
the caution as the charity so

NOTE Confidence: 0.85448426

936bc991-8103-4d84-bb39-c94fd2e124b3
00:38:15.690 --> 00:38:21.136
they carry, which is equal to 1.
It represents, as the B goes to

NOTE Confidence: 0.85448426

304bbf87-c142-46a9-9ba9-d3419ff9e48d
00:38:21.136 --> 00:38:27.360
the next position and now B + Z
+ A which is exactly equal to 1

NOTE Confidence: 0.85448426

78989d8e-f9cf-4ee7-b45a-cd9b5381f501
00:38:27.360 --> 00:38:33.584
+ 25 + 0, which is equal to 26
by 26 is equal too small a.

NOTE Confidence: 0.86405444

086881cb-2fa2-495e-bcc7-00ada0b0909b
00:38:35.580 --> 00:38:39.528
And this is a valid digit
in base 64, and then you

NOTE Confidence: 0.86405444

a410dbbe-8249-4c8d-9922-20541f99cbc9
00:38:39.528 --> 00:38:40.186
continue plus.

NOTE Confidence: 0.8498965

afee07b4-757c-4204-8c03-6b37bb25ae2d
00:38:41.660 --> 00:38:44.828
Added by a becomes 62 + 0 the

NOTE Confidence: 0.8903064

3198eb3a-b804-4be2-b27d-8e87a75f6f97
00:38:44.828 --> 00:38:50.672
same. 26 + 0 The same, so this
is the next number. 8 + A

NOTE Confidence: 0.8121988

6083aeeb-81eb-41f3-b7a8-fdf944b3db1d
00:38:50.672 --> 00:38:55.580
capital A. So you see that
this is a case sensitive based

NOTE Confidence: 0.8121988

719f7ed1-bd1a-44c8-ab48-aab4713a162e
00:38:55.580 --> 00:38:56.675
number numbering system.

NOTE Confidence: 0.8607041

369db64a-489d-475e-a752-e6e36683595f
00:38:58.600 --> 00:39:02.947
So in general, any numbering
system that introduced positions

NOTE Confidence: 0.8607041

51b8daab-0a88-47cf-8a09-6fef1461d441
00:39:02.947 --> 00:39:08.743
that have significant based on
the powers of a number is called

NOTE Confidence: 0.8607041

c0f47c6c-19f7-4e78-8b9a-f5a12f75b632
00:39:08.743 --> 00:39:14.056
radix. Our number system and
remember who sang system is not

NOTE Confidence: 0.8607041

b63535b2-7aa1-47f2-993e-73290bff46e1
00:39:14.056 --> 00:39:18.886
the radix R because the position
doesn't have any significant.

NOTE Confidence: 0.80919087

171afd20-17ab-441f-9aae-19bfca505885
00:39:19.720 --> 00:39:23.900
And here I'm also already store
number system called base our

NOTE Confidence: 0.9153732

ef52222b-16c6-4ec9-a8d0-49d74bf741c5
00:39:23.900 --> 00:39:27.744
number system. And this is the
general formula for that.

NOTE Confidence: 0.89562744

978b64f7-6c50-4140-a03a-ff351abf9f27
00:39:29.260 --> 00:39:30.650
This is the math formula.

NOTE Confidence: 0.9260647

09fd339b-3ec1-4e39-ad25-239c2c58ebc8
00:39:31.280 --> 00:39:32.789
Any number N.

NOTE Confidence: 0.84381986

76cc7c26-cb52-4cee-b1e2-cd1ab258e38b
00:39:33.430 --> 00:39:34.969
In any base.

NOTE Confidence: 0.821743

a17d9da0-0a61-49e2-ba95-3967badb0ea2
00:39:35.550 --> 00:39:38.040
System with the base number R.

NOTE Confidence: 0.8925606

2fed41d3-a07f-4e9f-86a5-8acb00bb6f9a
00:39:39.100 --> 00:39:41.070
Is equal to this number.

NOTE Confidence: 0.84734285

a2fa0bc5-8f07-4e08-afe3-8907801ea251
00:39:42.080 --> 00:39:45.831
In base 10, so that's an
algorithm to convert any number

NOTE Confidence: 0.84734285

6ebdc3c1-aeb5-4b3e-8a61-6a3a0e51ad3a
00:39:45.831 --> 00:39:50.264
in any basis to base 10 decimal
system. And this is the formula

NOTE Confidence: 0.84734285

e212f7e1-ebc5-485a-b9fc-15356b36f3f7
00:39:50.264 --> 00:39:54.356
you have to simply multiply each
digit of each position to the

NOTE Confidence: 0.84734285

74eb9652-7c58-42ae-8821-71bde32e2145
00:39:54.356 --> 00:39:58.107
powers of the significant of
that position, which is based on

NOTE Confidence: 0.84734285

70c4669f-7f93-42c9-a622-3764d350569d
00:39:58.107 --> 00:39:59.471
the powers of R.

NOTE Confidence: 0.8212358

3b5288b5-fad6-4e51-99a0-34bdcb7a8c64
00:40:00.970 --> 00:40:06.079
And R is the radius number, DI
is the digit at each position.

NOTE Confidence: 0.9390111

833480e9-1cee-481a-8666-a889e97b6b62
00:40:06.690 --> 00:40:07.610
And remember.

NOTE Confidence: 0.8216097

5cf6fefa-5d75-4d0b-b455-fdca6e2fb6bc
00:40:08.710 --> 00:40:14.002
Each put each digit must be
between zero up until or minus

NOTE Confidence: 0.83402485

317c85a6-d0e3-486f-80fb-86e6f1ee8703
00:40:14.002 --> 00:40:19.936
one. The only exception here is
the base 64, which is start from

NOTE Confidence: 0.83402485

c202f7d7-041e-4147-8d2a-452e9a36924e
00:40:19.936 --> 00:40:24.980
a up until forward slash. But
again it is just from the value

NOTE Confidence: 0.83402485

30138f43-0b64-432d-924c-8b04c987837f
00:40:24.980 --> 00:40:26.532
actual value of 0.63.

NOTE Confidence: 0.88606113

2ca7183a-63af-49a6-aa80-50fefee965c6
00:40:27.970 --> 00:40:32.854
And remember, we start from the
02 count, so the first position

NOTE Confidence: 0.88606113

d59ceb11-0fad-4c97-835e-f594574dfd8d
00:40:32.854 --> 00:40:34.889
has the significance powers of

NOTE Confidence: 0.8508915

eb8c43a6-8fa9-469e-ba91-efa036ea65d2
00:40:34.889 --> 00:40:39.902
0. And the last position if you
are given N position, the power

NOTE Confidence: 0.8508915

623400ba-cd05-400e-92db-43316b9a283d
00:40:39.902 --> 00:40:44.492
number is N -- 1. So this is I
mean kind of be careful about

NOTE Confidence: 0.8508915

13126ebf-a9b2-4b11-a391-08d2b1de7368
00:40:44.492 --> 00:40:49.388
this or to the power of 0 up
until the last one or two have N

NOTE Confidence: 0.8385934

9ee8c616-7246-4ca6-8a4a-a7357af25ad0
00:40:49.388 --> 00:40:54.945
-- 1. An always the result pace
is based on by this formula.

NOTE Confidence: 0.7741323

8efcd896-662d-42c6-bb3c-1dabfad872a4
00:40:57.530 --> 00:41:00.288
So these are just I mean, uh.

NOTE Confidence: 0.788271

a142101e-5ac4-47b8-9a09-49cad45faca1
00:41:02.410 --> 00:41:05.890
A additional result of that
formula. The minimum number is

NOTE Confidence: 0.788271

2a10c39e-9083-48cc-bdee-a248f43c2725
00:41:05.890 --> 00:41:09.370
just putting the lowest number
lowest digit in all positions.

NOTE Confidence: 0.788271

60881492-cb78-4df5-9773-2dbff8987e69
00:41:09.370 --> 00:41:11.458
So which is equal to 0.

NOTE Confidence: 0.89226097

8cda0be2-7a8e-4b90-97c4-ce3d97844b3b
00:41:12.070 --> 00:41:15.590
The Max is just putting the
largest digit in all positions.

NOTE Confidence: 0.84868157

74f8252b-6f1f-4571-b988-5e7db46178a2
00:41:16.190 --> 00:41:18.854
From the first position up
until the last position,

NOTE Confidence: 0.84868157

ca5cdab6-8c65-4c88-b6ae-03603241d39a
00:41:18.854 --> 00:41:22.406
which is equal to as we said,
it's equal to a geometric

NOTE Confidence: 0.84868157

52e9004b-b137-4176-84eb-9a2192bf1154
00:41:22.406 --> 00:41:26.254
series which is equal to R to
the power of N -- 1.

NOTE Confidence: 0.88313556

e4fc83a1-3a56-4319-916a-d9085866c346
00:41:27.600 --> 00:41:31.344
And the unit of increment is
1. One is that just putting

NOTE Confidence: 0.88313556

0af8b44a-ec63-48a5-b796-985d702a675b
00:41:31.344 --> 00:41:35.088
the one in the lowest position
and then zero with the other

NOTE Confidence: 0.88313556

d0381618-cf4e-44ff-8726-e0a8626a6ced
00:41:35.088 --> 00:41:39.144
position. So we add 1 by 1 to
reach to the next unit.

NOTE Confidence: 0.89054894

9059a98c-33a6-42ad-98ca-8b7833022d65
00:41:42.780 --> 00:41:48.236
So now I'm ready to take your
question, if any so.

NOTE Confidence: 0.8633385

14c6fa82-aca5-48eb-a851-aea13b2e7760
00:41:49.580 --> 00:41:52.028
Are you? Is there any question?

NOTE Confidence: 0.8808763

8a598c66-bbc0-45d6-aa79-d2e5b8fff2e4
00:41:54.140 --> 00:41:59.796
So let me scroll back to the
chat box how to represent an ad.

NOTE Confidence: 0.84245527

9e5c4c93-123f-47a1-a712-0023b1ff9c47
00:42:00.690 --> 00:42:06.384
And divide in base 64 system
that I you do the same very

NOTE Confidence: 0.84245527

a90e5878-d851-4998-93bb-dee5839f3bc8
00:42:06.384 --> 00:42:10.764
similar to the decimal system.
So basically the same algorithm

NOTE Confidence: 0.84245527

09fc5ebd-211c-4917-9bd1-42661e760fe3
00:42:10.764 --> 00:42:15.144
you use for the division or
multiplication in decimal system

NOTE Confidence: 0.84245527

d78cbc11-eb15-4252-a566-ea5b47664026
00:42:15.144 --> 00:42:20.400
or subtraction. You can use it
in any binary system. The same

NOTE Confidence: 0.84245527

f8d1850e-8159-4a3a-9c55-b4c638639530
00:42:20.400 --> 00:42:25.656
will discuss it next week. How
to do arithmetic in basis? Also

NOTE Confidence: 0.84245527

907047bd-0e71-4405-8eed-f08de3761c7e
00:42:25.656 --> 00:42:30.474
how can we have negative
numbers? So far all our numbers

NOTE Confidence: 0.84245527

5f31e215-b5e8-4c0a-9d10-a57ff5a471c4
00:42:30.474 --> 00:42:32.226
are unsigned, there's no.

NOTE Confidence: 0.8751072

250d2c20-8475-48f8-95aa-27ff5d92d50a
00:42:32.610 --> 00:42:35.538
Give numbers also, we didn't
discuss addition, subtraction,

NOTE Confidence: 0.8751072

e5bbb30b-e157-46fb-bac5-f1ab9274a318
00:42:35.538 --> 00:42:39.930
etc, but just to give you a
hint, anything is similar to

NOTE Confidence: 0.8751072

e480c980-f0c3-45d3-ad72-3e82afddc3a0
00:42:39.930 --> 00:42:41.028
the decimal system.

NOTE Confidence: 0.2813167

dddd03a3-710a-4e61-8495-fd05e41d5bf0
00:42:43.350 --> 00:42:44.410
I.

NOTE Confidence: 0.87001383

4c3a55c8-08b5-4cc1-a2b6-fe0a0b85d602
00:42:48.630 --> 00:42:49.720
So.

NOTE Confidence: 0.71451837

1628bf87-240b-4876-a3c2-8cc947611347
00:42:57.430 --> 00:43:00.638
Oh, let me open the there is a

NOTE Confidence: 0.8368273

d1b68d9c-b46f-46aa-9f38-4c3a7feda61f
00:43:00.638 --> 00:43:05.546
A. What files are you
actually prepared for? The

NOTE Confidence: 0.8368273

2bf6ceb4-7a44-4cfa-972c-82320edc0b39
00:43:05.546 --> 00:43:10.266
questions? So let me open
that and see the questions.

NOTE Confidence: 0.91321445

bf15c381-b662-4520-9006-c230594c590f
00:43:12.720 --> 00:43:13.600
Thank you how are ya?

NOTE Confidence: 0.81995726

1fc54309-0533-4722-b9b1-c6902ecef4ee
00:43:21.760 --> 00:43:26.226
Luca asked, is it the number
of stars or electrons are?

NOTE Confidence: 0.81995726

4f3da2b5-d307-47f4-ae91-745dfec2a9e2
00:43:26.226 --> 00:43:30.286
This is one thing actually as
the technology actual progress

NOTE Confidence: 0.81995726

235b85c4-adc3-49a2-ac21-1269ddd2db7e
00:43:30.286 --> 00:43:34.346
we need to represent larger
and larger numbers. That's why

NOTE Confidence: 0.81995726

e5207aed-1e99-4b42-8929-b44985df6d9c
00:43:34.346 --> 00:43:37.594
we need to introduce new
numbering systems more

NOTE Confidence: 0.81995726

618d78f1-4f39-441f-b3a4-f89f4f2a53d7
00:43:37.594 --> 00:43:41.654
efficient in order to pack or
save number of positions.

NOTE Confidence: 0.40979838

4c931529-2d6b-4b96-9049-3c00b3f7d58f
00:43:43.550 --> 00:43:44.440
I.

NOTE Confidence: 0.7994836

70345df7-0b5e-4e56-8a4b-05c1ee6454b4
00:43:46.290 --> 00:43:48.610
So discrete is an integer.

NOTE Confidence: 0.8690018

9e7451ab-9817-4df5-99f5-29ba177fbc30
00:43:55.190 --> 00:43:57.590
Oh oh, let me Scroll down.

NOTE Confidence: 0.7475233

a5d91406-72ee-4485-81b2-73f106bc6140
00:44:01.240 --> 00:44:05.965
I'll let you three. I see now.
Do you still have to do the set

NOTE Confidence: 0.7475233

172274d4-b21a-483f-9ff3-36353a1c5a60
00:44:05.965 --> 00:44:07.855
offer? No OK, I can OK.

NOTE Confidence: 0.8142481

7db0b0e7-f91c-474f-9726-9438309d4289
00:44:09.830 --> 00:44:13.031
Mother solve all the digit in
this position. Are we converting

NOTE Confidence: 0.8142481

79380f2d-27ec-4655-af72-b89bbb036014
00:44:13.031 --> 00:44:14.486
it to the decimal system?

NOTE Confidence: 0.81253046

3f5c63ba-24b3-4ab0-bdbe-c2b11d72f57d
00:44:15.440 --> 00:44:20.550
Oh the Knick, ask that we find
the sum of all the digits in

NOTE Confidence: 0.81253046

7e6b2360-589e-4480-9b25-a354e7141e71
00:44:20.550 --> 00:44:24.565
each position we are converting
to decimal system. No no when

NOTE Confidence: 0.81253046

497b1ae2-d3cf-4ccb-a011-79c769c9b14f
00:44:24.565 --> 00:44:29.310
you want to add you converted to
the decimal system for your ease

NOTE Confidence: 0.81253046

b4ec8ff6-8bbe-40a6-8b84-96fbafe29a79
00:44:29.310 --> 00:44:32.960
of addition so it just
facilitate your algorithm to do

NOTE Confidence: 0.81253046

3bcce989-e7a1-4039-82f2-efa196079df1
00:44:32.960 --> 00:44:37.705
addition. But when you put the
actual digit you have to put a

NOTE Confidence: 0.81253046

bd2984fb-a0c9-4a3b-9a3e-d1e08500da3a
00:44:37.705 --> 00:44:41.355
valid digit as within the base
64 you see here.

NOTE Confidence: 0.83566207

1d4b525b-1ed4-47a4-812b-c8490a194823
00:44:42.950 --> 00:44:45.830
When we want to let me
catch you where we want to

NOTE Confidence: 0.83566207

45366d5d-7479-4fff-ace2-a67ad25b5a09
00:44:45.830 --> 00:44:46.550
do the audition.

NOTE Confidence: 0.8539359

ca3f6bc3-e5e2-4eed-b917-3d7c7e07dcf6
00:44:47.920 --> 00:44:52.660
We are, we add forward slash
plus 1 + B but in order in our

NOTE Confidence: 0.8539359

3edd2ff2-74ba-4e3a-bfcd-590bba365a74
00:44:52.660 --> 00:44:56.452
mind you have to think of
forward slash as the value of

NOTE Confidence: 0.8539359

21e37f2d-9fc1-4e5a-a16e-4225705fef80
00:44:56.452 --> 00:45:01.192
60, three and V as the value of
1 and then we do the addition.

NOTE Confidence: 0.8539359

32444a24-3eff-4c21-a584-9053f31d54ad
00:45:01.192 --> 00:45:05.932
It comes 64 and then we divide
an etc at the end of the day

NOTE Confidence: 0.8539359

1ee6e325-e8fb-4bf0-a23b-b9d0c7a07dd5
00:45:05.932 --> 00:45:10.040
when you put the correct digit
you put it digit. You have to

NOTE Confidence: 0.8539359

26f48c29-e1e4-4178-bbc2-09ae121f09a4
00:45:10.040 --> 00:45:14.464
put the correct one so zero if
you put zero in base 64 to

NOTE Confidence: 0.8539359

ee071d4b-c24c-499b-b750-61a08f170c35
00:45:14.464 --> 00:45:18.256
represent the value of zero.
It's wrong. You have to put the

NOTE Confidence: 0.89748853

18264949-2cf9-4cc7-89e5-687f60779719
00:45:18.256 --> 00:45:21.217
correct digit. So you have to
put A to represent 0.

NOTE Confidence: 0.7167889

1f6e99ad-f23d-4cfa-b951-b4b240b0a0da
00:45:23.300 --> 00:45:24.030
And.

NOTE Confidence: 0.77345115

cbc4b504-cf02-4f53-97ef-1e2956e9281f
00:45:29.830 --> 00:45:33.790
I actually wrote high asset.
Yes, actually I can. We develope

NOTE Confidence: 0.77345115

b2fa0263-2fd2-40d6-8681-f09d15b063e9
00:45:33.790 --> 00:45:37.030
hosting system to have
requirements of the radix or

NOTE Confidence: 0.77345115

2374af9d-0f35-4ebc-8ca6-79aeb26a981d
00:45:37.030 --> 00:45:41.710
that was the that was the idea.
You know we improved the process

NOTE Confidence: 0.77345115

c48c3066-ea8a-41ce-9932-90eeba13c783
00:45:41.710 --> 00:45:45.310
system by adding significant to
the positions. So actually the

NOTE Confidence: 0.77345115

e1bb9ee0-5b65-4eca-9962-d1420a3c1f3a
00:45:45.310 --> 00:45:48.190
numbering system is an
improvement of sense system.

NOTE Confidence: 0.8970069

12fc521b-a73c-442b-ab94-63a26184f3e4
00:45:50.490 --> 00:45:55.096
So let's is there any
other questions?

NOTE Confidence: 0.83594847

dfed02ca-6d65-467a-b917-0344b83e3159
00:46:00.390 --> 00:46:06.069
OK, let's continue. Since
there's no other questions so

NOTE Confidence: 0.83594847

c5340369-6aa3-4a82-9809-632de9e80d0d
00:46:06.069 --> 00:46:13.641
far, all our systems are had
only there were no sign, and

NOTE Confidence: 0.83594847

55bcdd08-b59a-46fa-b476-f0124763007a
00:46:13.641 --> 00:46:16.165
there were no fraction.

NOTE Confidence: 0.8553882

0fedea61-4800-4af9-b408-4296afc4796b
00:46:16.850 --> 00:46:21.134
All were just the increments.
Unit was just one unit, 1 unit

NOTE Confidence: 0.87167746

756a5a4d-5990-4be2-a093-8eeb28dc830c
00:46:21.134 --> 00:46:25.906
and etc. But let's back to our
original problem, which was

NOTE Confidence: 0.87167746

85d5d0dd-7ff8-41a6-b66f-d78c58a9168e
00:46:25.906 --> 00:46:28.818
calculating the distance of moon
to the sun.

NOTE Confidence: 0.7707826

f032175e-ec6d-4c3b-8229-d86a02269620
00:46:30.060 --> 00:46:35.377
We said that we could assume by
some, uh, we can compromise and

NOTE Confidence: 0.7707826

45865ff3-2154-41a1-b3da-8d14c0cb54d1
00:46:35.377 --> 00:46:39.876
we can accept some error in
calculating the distance. And we

NOTE Confidence: 0.8722378

7e1a270c-eea3-4492-a22e-f8c4e5b4460f
00:46:39.876 --> 00:46:44.771
could assume. Assume that the
number of the distance is just

NOTE Confidence: 0.84999424

79bf45c9-5139-4ab5-b10a-26e5fc831d85
00:46:44.771 --> 00:46:49.580
five Earth. But if you want
to be more precise, they must

NOTE Confidence: 0.84999424

f1eb7680-a2e2-43fa-b763-ac6550aec52e
00:46:49.580 --> 00:46:53.588
discuss the sun based on this
picture. This is kind of an

NOTE Confidence: 0.84999424

d8900100-a49e-4750-a461-909beb3de929
00:46:53.588 --> 00:46:54.256
imaginary picture.

NOTE Confidence: 0.89416385

844be490-8c4a-4b6d-b023-0c15846a6b36
00:46:55.810 --> 00:47:01.378
Which is not only true in
reality, but just for the sake

NOTE Confidence: 0.89416385

f6a2be99-16fd-4db1-8c4f-536c93cf6802
00:47:01.378 --> 00:47:04.626
of our example. It is 1234 and.

NOTE Confidence: 0.8677152

586598b7-746f-47bc-aa80-24f0a2e4d9fa
00:47:05.530 --> 00:47:08.070
1/2 not a whole unit.

NOTE Confidence: 0.89110005

e048b7b8-34d9-4857-be40-5dafb9a40058
00:47:08.960 --> 00:47:13.211
So how can we come up with the
numbering system? You see that

NOTE Confidence: 0.89110005

58dc4d33-e852-4ae5-ae53-23b38f301053
00:47:13.211 --> 00:47:16.808
we are improving our numbering
system. How can we improve our

NOTE Confidence: 0.89110005

24d03a22-0ddf-4f4f-a3d1-ea90cfd248d4
00:47:16.808 --> 00:47:20.405
numbering system to represent a
number which is less than one

NOTE Confidence: 0.86836785

75c488c8-68b7-4589-ad88-7aa5004bfd9a
00:47:20.405 --> 00:47:22.640
unit? For instance, here is 1/2

NOTE Confidence: 0.8358635

14b64c19-ecd8-4283-9e5f-d58ba90ec3d9
00:47:22.640 --> 00:47:28.894
of a unit. Is it possible or
not? The idea is that the, uh,

NOTE Confidence: 0.8358635

a820fd95-7029-4c83-b8dc-98977b9cc79c
00:47:28.894 --> 00:47:33.034
the answer is yes. We can
improve on correct numbering

NOTE Confidence: 0.8358635

e7970708-2640-4f79-8ab6-d1989f64d59f
00:47:33.034 --> 00:47:38.002
system to support units less
than one unit. So it's kind of

NOTE Confidence: 0.8358635

f1760924-ad01-4511-8cd6-764e6510d0bd
00:47:38.002 --> 00:47:42.142
subunit or sub sub units. And
the idea is this.

NOTE Confidence: 0.8250513

1ff3072f-e74c-48f6-8270-b02f4fda9e30
00:47:43.570 --> 00:47:46.426
Introducing fraction to
the numbering system.

NOTE Confidence: 0.82260746

79439ab9-2cc7-4e93-bcbe-bb9fa7ef44d7
00:47:47.820 --> 00:47:53.072
So assume that we have one unit
in any binding in any numbering

NOTE Confidence: 0.82260746

85fc1184-d290-4953-b36b-25238862b8c6
00:47:53.072 --> 00:47:57.516
system. For instance, base two
base for base eight and etc.

NOTE Confidence: 0.85771257

7280fab4-3b6b-4fa6-93c4-12a4efd2d633
00:47:58.230 --> 00:48:01.805
Our example is based on the base
four, but you can generalize it

NOTE Confidence: 0.85771257

c0ebf560-a503-42ff-b0b7-04e64c47738a
00:48:01.805 --> 00:48:02.905
to any other basis.

NOTE Confidence: 0.8639273

37ab1fca-a13d-4070-bb85-c596f4a78448
00:48:03.510 --> 00:48:07.710
Assume that we are in base four
and we have one unit of Earth.

NOTE Confidence: 0.8639273

1fe749ba-d730-49a3-9186-7b4f3d954b49
00:48:07.710 --> 00:48:09.210
Now we want to represent.

NOTE Confidence: 0.8007912

a6ffe367-3ef6-47d5-8577-0d8fe04fec3f
00:48:09.780 --> 00:48:15.412
In a unit which is less than one
unit, I mean is sub unit. So the

NOTE Confidence: 0.8007912

2fd27ca7-8ffc-487f-8c3d-c9b0932b9c9b
00:48:15.412 --> 00:48:20.692
idea is that if you are in base
4, you simply divide the unit by

NOTE Confidence: 0.8361891

3885810f-7e86-4f4f-99fa-363fb81c1b16
00:48:20.692 --> 00:48:26.388
4 section. And then one
subsection of this unit gonna be

NOTE Confidence: 0.8361891

3e69f039-3fd3-4890-8fed-ad3b399f4b67
00:48:26.388 --> 00:48:29.040
1 unit out of four units.

NOTE Confidence: 0.84550685

000b95ea-4324-40f1-9252-5eb716cf35cd
00:48:29.760 --> 00:48:34.828
So divide if you are in base 4
already is for you, just simply

NOTE Confidence: 0.84550685

70e21504-c7d4-4457-9d86-b2ad0107e0fc
00:48:34.828 --> 00:48:41.344
divide 1 unit by 4, so 1 / 4 is
4 to the power of minus one. So

NOTE Confidence: 0.84550685

c6a125e6-1653-459d-8383-1869217bfc1a
00:48:41.344 --> 00:48:46.412
you see that now the powers are
not 01 or etc. The powers are

NOTE Confidence: 0.84550685

56487aee-acba-41d8-986f-10347c9e3e61
00:48:46.412 --> 00:48:49.670
negative because it's it's a
Division 1 / 4.

NOTE Confidence: 0.87674916

30958fb3-cec2-4ff9-b58b-24b67fbaeca9
00:48:50.650 --> 00:48:54.320
And then if you want to
represent one subsection, you

NOTE Confidence: 0.87674916

311bd5c9-72cc-4156-a0ec-c71884a37729
00:48:54.320 --> 00:48:57.990
have to add a symbol which is
called fraction point.

NOTE Confidence: 0.8668184

6dc72e04-590b-4952-ac0f-38bc574d3aca
00:48:58.640 --> 00:49:02.804
In decimal system we call this
decimal point, but in base four

NOTE Confidence: 0.8668184

a50e1e3c-dde2-4b28-a7b6-38aa234f6dfb
00:49:02.804 --> 00:49:06.968
we call it a fraction point or
in another. In general base

NOTE Confidence: 0.8324217

137e4780-1888-48e8-92ac-1d2b566a86c9
00:49:06.968 --> 00:49:10.218
numbers. And any
general numbering

NOTE Confidence: 0.8324217

5a06fbbb-1824-4bdb-8077-7234ead5cf1e
00:49:10.218 --> 00:49:14.314
system we call this
fraction point. And we

NOTE Confidence: 0.8324217

e99c8ed7-e0dd-4d11-be65-10caf122d545
00:49:14.314 --> 00:49:15.850
say that one.

NOTE Confidence: 0.7835918

01827168-370d-43e2-9126-61519904ba01
00:49:17.650 --> 00:49:24.680
Subunits of four subunits, so
0.1 means that just one

NOTE Confidence: 0.7835918

7837c696-09b4-450e-b6d2-d7d4b9e2ed82
00:49:24.680 --> 00:49:27.492
unit out of four.

NOTE Confidence: 0.88808167

becdcb91-1abe-4382-90a2-5fe4bbe55a67
00:49:28.280 --> 00:49:31.493
If you want to represent 2
units, two subunits.

NOTE Confidence: 0.8686303

2b172219-20e9-4e30-b6b3-276cb31f2864
00:49:32.120 --> 00:49:38.182
So you have to simply increase
it by 1, so .1 becomes .2 in

NOTE Confidence: 0.8326198

c613a9c5-bbf4-4c94-984e-1221a863adb6
00:49:38.182 --> 00:49:43.826
base 4. But this means that
two subsection out of.

NOTE Confidence: 0.85018134

3fbee1dc-1cc8-4c59-8ba4-8421402f5f97
00:49:44.400 --> 00:49:45.981
Four
subsections, so

NOTE Confidence: 0.85018134

8b47d894-c542-47a6-84ff-476219120c99
00:49:45.981 --> 00:49:48.616
2 * 1 / 4.

NOTE Confidence: 0.76778567

1d4b209d-701a-4e91-a430-95063331624d
00:49:51.260 --> 00:49:52.990
The next subunit gonna be.

NOTE Confidence: 0.8389275

013a09b9-cb11-4e5c-bc09-4dbd0a3472bf
00:49:54.240 --> 00:49:56.510
Adding by one so .3.

NOTE Confidence: 0.8027535

85b772b8-5b1d-4a23-bcfd-a2d3f077bf68
00:49:57.690 --> 00:50:00.300
Three subunits and then find.

NOTE Confidence: 0.84081864

df245bd6-021f-4de5-b213-4f4ea5510b70
00:50:00.390 --> 00:50:07.390
Only four subunit which is equal
to 1 year at which one so .3

NOTE Confidence: 0.84081864

2d15a2ac-2ff5-4daf-a360-53a58a932090
00:50:07.390 --> 00:50:12.890
+ 1 becomes point 4.4 is just
one unit, so one.

NOTE Confidence: 0.8770463

bb1c0fc4-1582-4a4a-84ec-c165181be278
00:50:14.970 --> 00:50:20.186
So as you can see, four divide
multiply by 1 / 4 is equal to 4.

NOTE Confidence: 0.8178993

45b7c0f9-f955-4a24-ad97-67c6363c5af1
00:50:20.760 --> 00:50:23.574
Multiplied by 4 to the power of
minus one, which is equal to 1.

NOTE Confidence: 0.80761766

3d77687a-b7e9-4849-a0ec-604519559e5f
00:50:25.440 --> 00:50:30.796
This is the algorithm that we
can add to the anomic system to

NOTE Confidence: 0.7866757

afac9709-0ef0-4533-b772-e2a611deb62a
00:50:30.796 --> 00:50:34.518
support. Fraction of a unit.

NOTE Confidence: 0.8956026

0dec63ca-b2b2-4923-af9c-976b9e38cbb3
00:50:37.300 --> 00:50:43.468
So now if I want to be
more precise, you can have

NOTE Confidence: 0.8956026

d50a00fe-aa34-4a8b-8ad0-f8addcfdbc13
00:50:43.468 --> 00:50:47.066
01234. This is 4 in base 4.

NOTE Confidence: 0.8620989

a75d5e99-2819-43c1-b66c-d7f1a0f4fa17
00:50:48.800 --> 00:50:50.570
Four and then.

NOTE Confidence: 0.85051477

d471b136-7ed9-4064-baa9-a2d07e9f6685
00:50:51.150 --> 00:50:54.860
Two subsection of a unit in base
form which is.

NOTE Confidence: 0.90545815

1f30dd0b-b565-4e00-b2a1-866eaaa13fbc
00:50:55.830 --> 00:50:59.238
Two so 1 zero point 2.

NOTE Confidence: 0.7718634

d48aa45d-d0b2-4d48-9d6b-a0a45c9e4b42
00:51:01.190 --> 00:51:02.009
In base 4.

NOTE Confidence: 0.8138208

feda7495-7e30-44c2-82a5-badf54edd031
00:51:05.020 --> 00:51:08.180
4 units, +2 sub units.

NOTE Confidence: 0.8327555

02227c45-25b9-4b62-937c-77f1f61d2c29
00:51:12.210 --> 00:51:18.489
If you need more precision, you
have to the same you have to

NOTE Confidence: 0.8327555

b02a5476-fa65-4da3-8d76-e7c8825262a7
00:51:18.489 --> 00:51:22.353
recursively follow the same
algorithm so subunits one

NOTE Confidence: 0.8327555

4848be38-ece2-40e2-87aa-1f5d8c786add
00:51:22.353 --> 00:51:24.285
subunit divided by 4

NOTE Confidence: 0.85636526

a47d1d4e-eb37-41cd-81ca-e081f01fac79
00:51:24.285 --> 00:51:30.117
subsections. So as you see here,
whenever you want to divide a

NOTE Confidence: 0.85636526

44427edd-808c-48d6-aa9e-63abe8e1aee4
00:51:30.117 --> 00:51:35.668
unit or subunit, we followed the
base number. We are in the base

NOTE Confidence: 0.85636526

08b45045-09da-442f-b328-6f79c6a85d08
00:51:35.668 --> 00:51:41.646
four. We divide by 4 subsections
and now one subunit which is 1 /

NOTE Confidence: 0.85636526

e7123e90-ecba-4e1e-9093-0351a93fb16c
00:51:41.646 --> 00:51:45.916
4, another division by 4 which
becomes 1 / 16.

NOTE Confidence: 0.87629116

05ce12ce-b7c6-490d-8dd7-dfe7844d1a03
00:51:47.300 --> 00:51:49.396
Or 4 to the power of minus 2.

NOTE Confidence: 0.841924

3d43b474-0270-47e8-aead-12f66047668c
00:51:50.670 --> 00:51:55.640
So one sub sub unit is equal
to 4 to the power of minus

NOTE Confidence: 0.841924

ef5defdf-9793-4049-92ea-9bed1ac6379c
00:51:55.640 --> 00:51:57.060
two in decimal system.

NOTE Confidence: 0.87572294

32f00416-278e-4f7b-9dc1-cb61af99d582
00:51:58.710 --> 00:52:03.600
Here is this is represented as
.01 in base 4.

NOTE Confidence: 0.81541634

a43f0083-7098-42c5-bb99-d829cf1d7131
00:52:05.570 --> 00:52:07.820
Two music, just two sub

NOTE Confidence: 0.8359106

823349e1-a1b1-4905-b3a7-48f1b135568a
00:52:07.820 --> 00:52:14.330
subunits. So .0 and then from
the subunits 2 sub subunits.

NOTE Confidence: 0.8671758

66c4ed38-e09a-4452-8615-1512b1ad5b30
00:52:15.460 --> 00:52:19.396
Which is equal to 2 * 1 /

NOTE Confidence: 0.8605573

a2e0396d-b943-4abe-83a2-5087fc73c12c
00:52:19.396 --> 00:52:22.369
/ 16. In decimal system.

NOTE Confidence: 0.8983594

f9dd27a6-4028-4f90-bf37-cff38586efd2
00:52:24.140 --> 00:52:25.868
Three and then.

NOTE Confidence: 0.85126466

21b5398e-6da6-4912-9464-4925f121393b
00:52:26.710 --> 00:52:34.060
Four so when you reach when you
add 1 unit to the .03, if you

NOTE Confidence: 0.85126466

51c87801-3054-4fbb-9373-44b3ca3dd818
00:52:34.060 --> 00:52:40.920
add 1 unit 1 sorry one sub sub
unit so becomes .01 it becomes.

NOTE Confidence: 0.70800006

60d58980-9a80-4fd6-b023-9897193c29e1
00:52:41.920 --> 00:52:43.340
One subunit.

NOTE Confidence: 0.79846317

68ff399a-422b-44a7-9e2a-3f991661e794
00:52:47.700 --> 00:52:54.405
So now you can have
more precision, so 012342

NOTE Confidence: 0.79846317

b1fc642c-a44c-4ba8-80f5-7b87d141557b
00:52:54.405 --> 00:52:58.130
subunit and one sub subunit.

NOTE Confidence: 0.9128442

32b47209-8e7b-4c78-92e7-c4ade95cb703
00:52:58.740 --> 00:53:00.900
So 104 units.

NOTE Confidence: 0.82032824

1e6976da-3f25-4e46-8a94-637ec1259a62
00:53:01.530 --> 00:53:05.994
.2 subunit and one
subservient. So this is the

NOTE Confidence: 0.82032824

2bb9ebd3-37c3-49ef-850b-5a10a45d1081
00:53:05.994 --> 00:53:07.978
precision in base 4.

NOTE Confidence: 0.84500176

d93ab659-27ae-4271-ba5e-fea6cf153d3c
00:53:10.570 --> 00:53:15.442
If you see the decimal point
or any real number in decimal

NOTE Confidence: 0.84500176

156264f3-a238-4849-a570-38f882d78091
00:53:15.442 --> 00:53:19.908
system, they follow the exact
system in base 10 you divide

NOTE Confidence: 0.84500176

a26ac0c5-e7a2-4a4e-9702-0b2deb14ff2b
00:53:19.908 --> 00:53:24.374
a unit by 10 subsection and
if you need more precision,

NOTE Confidence: 0.84500176

dc11c903-947c-4d20-af11-48c4a67fe3ff
00:53:24.374 --> 00:53:28.028
you divide each subsection by
10 sub subsections etc.

NOTE Confidence: 0.9306657

b3d205e3-690e-4a16-8f88-cebf5b388c9b
00:53:30.450 --> 00:53:31.130
So.

NOTE Confidence: 0.8730895

193b7ffc-fe4e-47ed-ac36-7955a75c558f
00:53:33.000 --> 00:53:36.810
For the fraction point,
basically if you are given some

NOTE Confidence: 0.8730895

8e4d7b67-1489-4cbf-8370-29ec0f30dd2f
00:53:36.810 --> 00:53:41.001
positions, you assume that some
part is about fraction 4 and

NOTE Confidence: 0.8730895

85857f1a-2cdf-4e80-b2f2-659fa5e3ca41
00:53:41.001 --> 00:53:43.287
some part is about integer part.

NOTE Confidence: 0.84380674

68e1a7e0-756d-449c-b80a-f0cc93b98d89
00:53:44.700 --> 00:53:50.277
Call and we separate these two
positions based on a fraction

NOTE Confidence: 0.8503647

0e055d9c-a27d-4624-b571-fe9ca1a6133a
00:53:50.277 --> 00:53:54.824
point. And remember, we don't
waste this position for the

NOTE Confidence: 0.8503647

7d4179e0-db0b-4f4c-8083-81e8f63e6f8e
00:53:54.824 --> 00:53:59.070
fraction point. We assume that,
for instance, we could say that

NOTE Confidence: 0.8503647

3b3fb401-839a-451e-9678-79ebc1995dd3
00:53:59.070 --> 00:54:03.316
the 1st four position is for
fraction and the other positions

NOTE Confidence: 0.8503647

a104dd92-eb22-459f-9c6d-ce9897ca76a0
00:54:03.316 --> 00:54:07.562
are for integer part, so we
never waste a position for

NOTE Confidence: 0.8503647

399e4409-74a1-438a-a1b9-242eef51652a
00:54:07.562 --> 00:54:11.036
fraction point. This is
determined by question or by

NOTE Confidence: 0.8503647

0346a492-5404-419f-b288-58e5f0c3aa40
00:54:11.036 --> 00:54:12.194
convention or etc.

NOTE Confidence: 0.8609671

9198ddde-60f7-42ef-90e3-69f530f603b6
00:54:13.790 --> 00:54:18.054
And this is a number in base
four. This is the integer part,

NOTE Confidence: 0.8609671

b5d758f3-4a3b-444b-8464-0ae0821fdb8e
00:54:18.054 --> 00:54:20.022
and this is the fraction part.

NOTE Confidence: 0.8616821

a46fd567-1687-4bbe-8fb6-57de38a48070
00:54:20.720 --> 00:54:23.620
The integer part has a
significant base on the powers

NOTE Confidence: 0.8616821

30c8c9d1-58af-41f5-abf4-9fd58fe84693
00:54:23.620 --> 00:54:28.260
of four from 4 to the power of 0
up until 4 to the power of

NOTE Confidence: 0.85043305

d3d7b118-4776-4d4f-94be-63efa8a18522
00:54:28.260 --> 00:54:32.405
positive numbers. The fraction
part has the significant, but

NOTE Confidence: 0.85043305

70ce1e62-f462-4a8c-b0a5-f54593eec90f
00:54:32.405 --> 00:54:37.080
the significance are based on
the powers of four and the

NOTE Confidence: 0.85043305

f5780d6f-80d6-485e-9fe5-65e9ae688384
00:54:37.080 --> 00:54:42.605
powers are negative 4 -- 1 -- 2
up until the minus M.

NOTE Confidence: 0.9138374

d8f555d7-f987-46ca-8ad3-7c4b4a7437d0
00:54:44.920 --> 00:54:47.100
So for instance, this number.

NOTE Confidence: 0.8607189

a15a2ff9-2b49-48be-aa69-e0878a173c46
00:54:47.880 --> 00:54:53.064
In base four, so the integer
part you have to multiply each

NOTE Confidence: 0.8607189

d1a2e93f-b48c-4588-b930-b98f9b80fa3c
00:54:53.064 --> 00:54:59.112
digit by the powers of four from
012 up until 78 positions in the

NOTE Confidence: 0.87705475

b242c755-8f63-44c0-baf4-f422ac2e052c
00:54:59.112 --> 00:55:03.550
integer part. In the fraction
part, you have five position, so

NOTE Confidence: 0.87705475

fd1aaf9f-d04e-4528-bccf-c74422210f0d
00:55:03.550 --> 00:55:07.390
you have to multiply each digit
by the negative powers of four.

NOTE Confidence: 0.860496

63d4fbc8-d017-49e6-b4c6-f1b512ac6b8a
00:55:08.850 --> 00:55:14.492
So if you do that, multiply and
then some. So if you multiply 1

NOTE Confidence: 0.860496

d76875f4-3eea-458b-96d9-94ee82b97a99
00:55:14.492 --> 00:55:20.940
* 4 to 50 becomes one here 3 *
4 to power of two, because in

NOTE Confidence: 0.860496

b1503b02-f69a-4285-b5dd-f60c8a2b1934
00:55:20.940 --> 00:55:26.582
the third position and etc in
the fraction part, so 2 * 4 to

NOTE Confidence: 0.860496

b29e96c8-c686-4667-8dd1-219533b9534a
00:55:26.582 --> 00:55:32.627
the power of minus one 0 * 4 to
power of minus two an, etc.

NOTE Confidence: 0.9230045

20607caa-a88f-42f3-82ee-846acb82bfba
00:55:34.000 --> 00:55:35.030
As you can see here.

NOTE Confidence: 0.82165164

893798b6-d350-4011-a58f-7db216e80a10
00:55:35.640 --> 00:55:39.888
And then you sum the fraction
part you come up with the

NOTE Confidence: 0.82165164

8c8a5349-b29c-46f8-a4cb-fad5fac28b8c
00:55:39.888 --> 00:55:43.782
fraction decimal portion of the
number and then sum the integer

NOTE Confidence: 0.82165164

747b645c-0d5d-4ef0-927f-852414b93283
00:55:43.782 --> 00:55:48.384
part to come up with the integer
decimal number. So this is the

NOTE Confidence: 0.82165164

b5da6650-9928-4402-9411-2e4f5c45bff3
00:55:48.384 --> 00:55:50.508
decimal part and this is the

NOTE Confidence: 0.8850577

76999c14-4244-4aae-9af5-0e741dc37557
00:55:50.508 --> 00:55:54.950
fraction form. So this number in
base four is equal to this

NOTE Confidence: 0.8850577

fe323c7d-c109-44ce-b568-cdd879c6342e
00:55:54.950 --> 00:55:56.198
number in decimal system.

NOTE Confidence: 0.79895097

bd5bbe95-5dd3-4059-8d30-db13d21c5500
00:55:57.370 --> 00:56:00.760
So basically you you do the
calculation for the integer

NOTE Confidence: 0.79895097

080d3fd0-7033-4ae7-8f08-29ebd82d0618
00:56:00.760 --> 00:56:03.472
part separately and do the
calculation for fraction

NOTE Confidence: 0.79895097

f9ef95a4-81a5-40e6-8946-2c77b3596eb2
00:56:03.472 --> 00:56:04.150
part separately.

NOTE Confidence: 0.8864784

6d7ac086-b195-4fdd-b060-eb14248b4f35
00:56:05.320 --> 00:56:08.785
And again, we don't waste any
position for the fraction point.

NOTE Confidence: 0.6250103

c5e2acf2-6127-4fa1-a2e5-20b0c11eba5d
00:56:10.510 --> 00:56:13.438
And this is the general, uh,

NOTE Confidence: 0.890638

5840597b-e8ec-4dec-b7b4-78f7b83987b7
00:56:13.438 --> 00:56:17.206
formulation. So any
number in any base.

NOTE Confidence: 0.80302155

882920ba-f812-43fc-85e7-997e9b747345
00:56:19.080 --> 00:56:23.865
This part is exactly the same as
previous formulation, so integer

NOTE Confidence: 0.80302155

8ce6ac79-75b3-4e36-b734-9a14577bdc67
00:56:23.865 --> 00:56:28.215
part the same each digit to the
powers of R.

NOTE Confidence: 0.8106801

5f285f8b-ad33-4551-ad36-a3084ea095b6
00:56:28.850 --> 00:56:31.216
From zero up until N -- 1.

NOTE Confidence: 0.83891404

ab6cc085-12b2-4778-8650-ecd2d46640d6
00:56:32.060 --> 00:56:35.866
And the numbers after the
fraction that they have to be

NOTE Confidence: 0.83891404

b4497937-9b3d-4a9e-8157-139a3b2b96b7
00:56:35.866 --> 00:56:39.672
multiplied by the powers of R.
But the powers are negative

NOTE Confidence: 0.83891404

2dba5663-dcd1-4bd5-9986-55971a847738
00:56:39.672 --> 00:56:44.170
from minus one up until minus
M. If you are given M position

NOTE Confidence: 0.83891404

67e31688-a688-4180-96fd-f046d743002b
00:56:44.170 --> 00:56:46.938
in the fraction plus in the
fraction part.

NOTE Confidence: 0.8633793

3bc5786c-ecaf-41a4-9179-a72985be06d6
00:56:48.400 --> 00:56:51.953
The same rule actually is
applied, so its digit must be

NOTE Confidence: 0.8633793

bed6d0e9-a0e7-4b83-92bc-b671709196e5
00:56:51.953 --> 00:56:53.568
valid in that space number.

NOTE Confidence: 0.89107966

cd894459-34fb-4130-9642-2c2c880e646a
00:56:54.620 --> 00:57:00.080
And I usually in the questions
or in the systems or in any

NOTE Confidence: 0.89107966

a7c5fe1e-8d84-46c6-9aec-130c8d3e167c
00:57:00.080 --> 00:57:04.700
problems they say that how many
positions are reserved for the

NOTE Confidence: 0.89107966

5e5133f9-33d9-448c-856a-6e47918fb6d5
00:57:04.700 --> 00:57:09.320
fraction part of the number, how
many positions are reserved for

NOTE Confidence: 0.89107966

5c1fe747-ef9e-4e53-9756-ce6f141beccd
00:57:09.320 --> 00:57:11.840
the integer part of the number?

NOTE Confidence: 0.8823216

272d114c-0208-477e-80d5-562dcebc0772
00:57:13.280 --> 00:57:16.008
And this is the math formula
to come to convert that

NOTE Confidence: 0.8823216

cfadf312-a2c5-4740-a533-a62a4b00b5e9
00:57:16.008 --> 00:57:17.248
number to the base 10.

NOTE Confidence: 0.7178875

88138dec-b210-480f-9013-4fe1e647e31b
00:57:20.130 --> 00:57:25.422
Ask any uninteresting question
with this. What's the minimum?

NOTE Confidence: 0.83823496

525d53dd-77e8-4bc2-aa05-bffce64836f8
00:57:26.100 --> 00:57:30.000
Now we have the fraction
parts. The minimum is just

NOTE Confidence: 0.83823496

67b80767-1b97-4ac2-a9c5-5cb9e7673fc5
00:57:30.000 --> 00:57:33.900
putting the zero in all the
integer positions and putting

NOTE Confidence: 0.83823496

d3223d55-414a-40b0-9f9a-e51f5d864119
00:57:33.900 --> 00:57:38.190
the zero in the old fraction
positions so it becomes 0.0

NOTE Confidence: 0.83823496

fce4b191-3d91-4f70-9957-464bbd53e32a
00:57:38.190 --> 00:57:39.360
in decimal system.

NOTE Confidence: 0.86186314

a51bdcb9-4f63-4d70-a48c-7ba32a264218
00:57:40.760 --> 00:57:44.445
The maximum number. The maximum
number for the integer part. The

NOTE Confidence: 0.86186314

8dad409e-d231-48af-be18-c9b6b7d68490
00:57:44.445 --> 00:57:47.460
same R to the power of N -- 1.

NOTE Confidence: 0.8696728

c082f9ba-0f61-43ed-aaef-8c0fb0815d08
00:57:48.560 --> 00:57:52.136
How about the fraction part? The
fraction part is the same. You

NOTE Confidence: 0.8696728

de94e039-595c-4f00-a1b2-00653f06d31b
00:57:52.136 --> 00:57:56.308
put the largest digit in all the
positions. If you are in this or

NOTE Confidence: 0.8696728

d72efa55-f09c-41a9-92bc-04765dfc9e1f
00:57:56.308 --> 00:57:58.990
you put the R -- 1 in all the

NOTE Confidence: 0.8873488

46f897ca-9ed1-4f12-b08b-e1220ba23dcf
00:57:58.990 --> 00:58:03.794
positions. And then if you want
to see what's the largest number

NOTE Confidence: 0.8873488

249828f0-6781-4056-ad5d-0dc9534d42cf
00:58:03.794 --> 00:58:07.922
in the decimal system, you have
to multiply these digits to the

NOTE Confidence: 0.8873488

329b4f52-9de6-4c58-b7e5-3a871bc7eafa
00:58:07.922 --> 00:58:10.674
powers of our, but negative
powers of four.

NOTE Confidence: 0.8270937

07c281d8-22ad-472b-bb96-cc75a3481bbb
00:58:11.890 --> 00:58:16.169
This is a left as Electra
Ciment, so you can think

NOTE Confidence: 0.8270937

dd63fb20-7312-44b1-9812-f951cc7c73c4
00:58:16.169 --> 00:58:18.503
about this. What's the
largest possible?

NOTE Confidence: 0.8342142

00f3eb21-a628-4d2c-bfa1-22d45b341890
00:58:20.520 --> 00:58:23.600
Fraction number given an
positions.

NOTE Confidence: 0.8563539

9a7d9e0b-581b-4680-9634-edf1c13d9968
00:58:25.290 --> 00:58:31.814
And the unit. This is important.
The unit here is not one yet. It

NOTE Confidence: 0.8563539

492cc1e9-c2b0-4cd5-b086-258d834a9cc4
00:58:31.814 --> 00:58:36.940
is a fraction unit. So the
smallest unit is just putting

NOTE Confidence: 0.8563539

1a7f70fc-e18d-45fb-a255-0cc941a65903
00:58:36.940 --> 00:58:42.066
the one in the rightmost
position and putting 0 in all

NOTE Confidence: 0.8812832

934fad28-bb36-42df-ace3-05ac85113300
00:58:42.066 --> 00:58:46.505
other positions. So in the
integer part, everything going

NOTE Confidence: 0.8812832

397c5281-7dfe-4ed0-b0d3-bc6eb2a8bf72
00:58:46.505 --> 00:58:51.755
to be 0 in the fraction part you
start with zero up until the

NOTE Confidence: 0.8812832

0189dbae-aef5-4310-b84a-477aaf51e36b
00:58:51.755 --> 00:58:54.005
last position which has one 1

NOTE Confidence: 0.855838

7d8c51a8-e3da-4436-9fe2-82bdabaa4768
00:58:54.005 --> 00:59:00.406
multiplied by. R to the
power of minus M. This is

NOTE Confidence: 0.855838

737e8247-5f95-44cb-a925-61fed220405a
00:59:00.406 --> 00:59:04.838
the smallest unit that
you increase the number.

NOTE Confidence: 0.93607616

c9295473-fb4a-4ee4-a209-658146a55bd1
00:59:06.620 --> 00:59:08.708
So let's have some example of

NOTE Confidence: 0.827042

e8a0324d-1dcf-4324-9b1c-0d066b53d3c6
00:59:08.708 --> 00:59:13.960
this formula. So imagine we are
in radix two and we have integer

NOTE Confidence: 0.827042

21677c18-dbfd-4f9b-a806-20257558e3a0
00:59:13.960 --> 00:59:15.010
and fraction part.

NOTE Confidence: 0.89573306

d2b570b2-ce2b-4f16-a7af-fbee5165bf6c
00:59:16.770 --> 00:59:19.320
So the integer part has four

NOTE Confidence: 0.8687367

b1c51054-a5f0-4325-acc1-003b09f8b2f2
00:59:19.320 --> 00:59:23.120
positions. And the fraction part
has three positions.

NOTE Confidence: 0.8748622

046b78dd-b153-4feb-bcff-a337c1088af7
00:59:24.620 --> 00:59:28.833
So the minimum number is putting
zero in the integer positions

NOTE Confidence: 0.8748622

e362438b-f98e-40a4-b6a6-8b823e37f228
00:59:28.833 --> 00:59:33.046
and putting zero in the fraction
positions, so it becomes 0.0

NOTE Confidence: 0.8748622

81304531-6423-4f09-854b-2df04034501f
00:59:33.046 --> 00:59:34.195
which is 0.

NOTE Confidence: 0.8381466

c507c32e-32ee-4d6c-b87d-3473dea4348d
00:59:35.500 --> 00:59:40.336
An in the right side you see the
decimal equal value of that

NOTE Confidence: 0.8941425

1e80f84d-788c-495d-b581-29b7d10b2347
00:59:40.336 --> 00:59:45.937
number. The next number is not
just putting one here because we

NOTE Confidence: 0.8941425

cdd54f19-32e2-4cd0-aac0-62f80a29a67c
00:59:45.937 --> 00:59:48.319
have fraction part, so we can.

NOTE Confidence: 0.8663161

86c2c17e-0f51-4891-9cc3-907688b12cbd
00:59:49.860 --> 00:59:51.736
I take I mean the smaller steps.

NOTE Confidence: 0.8573287

f2b2b77a-abb2-4fe8-a6f3-e7749d277bec
00:59:52.400 --> 00:59:57.580
So the next number is just this
unit, so you put zero in all

NOTE Confidence: 0.8573287

ba785e2c-d3e9-4210-bd69-15f831ea390c
00:59:57.580 --> 00:59:58.690
positions upon sale.

NOTE Confidence: 0.861603

ae8af135-57a4-440e-ada6-afee855c6571
00:59:59.530 --> 01:00:03.655
The face. Position in the in the
rightmost position for the

NOTE Confidence: 0.861603

8b1617a5-aac0-4cf7-b2f3-9bffa404cf81
01:00:03.655 --> 01:00:07.915
fraction part, so you put one
here, at cetera, so this number

NOTE Confidence: 0.861603

94f984dd-020d-41e1-b010-24ac7db7c291
01:00:07.915 --> 01:00:13.595
is just equal to 1 * 2 to the
power of minus three, which is 1

NOTE Confidence: 0.861603

ef840ed1-f50e-482c-8615-20c6c8f9beac
01:00:13.595 --> 01:00:16.080
/ 8 which is equal to this.

NOTE Confidence: 0.8689915

2c044cfc-31ec-4778-b2d2-71e9e6497d63
01:00:17.500 --> 01:00:24.221
So you see that in this
system, by giving free fraction

NOTE Confidence: 0.8689915

975a8857-4b2c-4425-a9bd-762d1e2d7a91
01:00:24.221 --> 01:00:30.331
point, the smallest possible
step gonna be .0 point 125.

NOTE Confidence: 0.86997044

d2d5cb3e-380b-4c10-8bdc-d201ac5010fc
01:00:32.300 --> 01:00:36.356
The next step is just adding
this number by one, so if you

NOTE Confidence: 0.86997044

eb2afbf6-3af9-4d5e-8129-911d9e9fc1db
01:00:36.356 --> 01:00:41.036
add this number by one, you add
by, one becomes 1 + 1 two. So

NOTE Confidence: 0.86997044

2ef89b63-8de6-4057-8b72-e7a34b8bcbec
01:00:41.036 --> 01:00:45.404
Carrie goes here 1 + 0 becomes
one, so this is the next number.

NOTE Confidence: 0.8457664

03bbe088-5007-4858-b517-58ed062186bc
01:00:46.400 --> 01:00:50.027
Which is equal to 1 * 2 to the
power of minus 2.

NOTE Confidence: 0.9171922

40d2a1b3-a3d6-465d-8b15-9132ed6e9956
01:00:51.300 --> 01:00:55.364
As you can see here,
which is 0.25.

NOTE Confidence: 0.8239185

cb4cbd3e-fa53-4f5a-a3e4-65ddd6aa0741
01:00:58.560 --> 01:01:03.290
So if you do the same, you mean
increments by points.

NOTE Confidence: 0.8517639

ae59d454-5e6d-48c9-b1f4-c497820c60f4
01:01:03.970 --> 01:01:08.227
125 So these are the next
numbers. For instance, this is

NOTE Confidence: 0.8517639

f9ec40cf-6140-43ab-a307-29ba4b5ee12a
01:01:08.227 --> 01:01:12.871
the next number in base for
base two, and then up until

NOTE Confidence: 0.8517639

c3dfe60b-6ad4-43e5-8e32-00c5e8748e00
01:01:12.871 --> 01:01:17.902
here up until the one unit. So
you you pass these numbers up

NOTE Confidence: 0.8517639

26420f55-0684-4779-90cc-a480b5a7de04
01:01:17.902 --> 01:01:22.546
until they one units. One unit
means that you put zero in

NOTE Confidence: 0.8517639

307a015a-f00a-4fb6-8513-c862865d63fa
01:01:22.546 --> 01:01:26.416
fraction part and you have one
in the integer part.

NOTE Confidence: 0.91025275

0a931a4b-d032-47ea-8196-f0a7fc615135
01:01:29.850 --> 01:01:31.878
My question from you is this.

NOTE Confidence: 0.8482372

c74d22b5-06d9-4731-b730-410fe30b55a2
01:01:35.750 --> 01:01:40.238
What's the Max in this system
given these spaces? I mean,

NOTE Confidence: 0.8482372

0207b931-ef8f-44cf-a36e-b5036e974fe3
01:01:40.238 --> 01:01:43.502
given the fraction positions and
the integer positions.

NOTE Confidence: 0.8625604

49612deb-a1fb-4306-a48f-a0e8cf24f2d3
01:01:48.600 --> 01:01:52.714
Based on the formula, we set
the Max number gonna be

NOTE Confidence: 0.8625604

8cee7c3b-f1b1-40bc-9ed0-d20210c888e9
01:01:52.714 --> 01:01:56.080
putting the largest digit in
all positions, either the

NOTE Confidence: 0.8625604

4d239ee5-42ad-48df-ad5b-ade2f445f958
01:01:56.080 --> 01:01:57.950
fraction or the integer part.

NOTE Confidence: 0.8281124

0e4d05a9-279c-4c39-a6fd-ff35bc4d275a
01:01:59.400 --> 01:02:03.899
Correct, Nick and Tatiana?
Yes, you put one in all the

NOTE Confidence: 0.8281124

6cedf954-4593-46ba-b95a-fac7a2635192
01:02:03.899 --> 01:02:04.308
positions.

NOTE Confidence: 0.85251576

2e2c9c57-d35e-4ce1-8281-f9c5404ed8d4
01:02:05.560 --> 01:02:10.840
So one in all position for
integer and one in all positions

NOTE Confidence: 0.85251576

c0f4317a-a35d-4c3a-b5e6-65775bfd3965
01:02:10.840 --> 01:02:12.160
for fraction point.

NOTE Confidence: 0.88933337

c10a0fcc-b8a3-49b5-9cf4-ae98dc8fb613
01:02:12.810 --> 01:02:17.425
And then if you convert this to
the decimal system, so this is

NOTE Confidence: 0.88933337

1c95279d-45be-4e89-990e-d3bcf707500f
01:02:17.425 --> 01:02:21.685
15, you already saw that, but
the right side you have to

NOTE Confidence: 0.88933337

2f713fb6-cb7e-406e-b86e-0cf750552f7b
01:02:21.685 --> 01:02:25.235
multiply each digit by the
powers of two, but negative

NOTE Confidence: 0.88933337

36ce44db-f379-4b53-9a39-4f9a99540c7c
01:02:25.235 --> 01:02:29.850
powers of two. So here I have
that. So this is the number.

NOTE Confidence: 0.897045

4243d3c6-31b7-407e-bf18-9348e0ccb4fb
01:02:30.980 --> 01:02:37.294
111 in the fraction number,
so this is equal 2.875. So

NOTE Confidence: 0.897045

48ee000b-938a-433e-a94c-e4bec3e2341b
01:02:37.294 --> 01:02:43.608
this is the largest number
which is equal to 15.875 in

NOTE Confidence: 0.897045

f1205a27-dd29-4509-bcc6-a03fbacd29d0
01:02:43.608 --> 01:02:44.756
decimal system.

NOTE Confidence: 0.83898705

f253d167-3bad-4fb4-90f1-3fe61e35cdbe
01:02:48.390 --> 01:02:50.150
My next question is this.

NOTE Confidence: 0.9218843

2cfbbf9f-9136-404a-8523-f4d840e14463
01:02:51.720 --> 01:02:54.480
Is it possible to represent this

NOTE Confidence: 0.8921568

ddfc6d70-c7ec-4e32-9125-0ca37528bfc6
01:02:54.480 --> 01:02:57.620
number? Given this system.

NOTE Confidence: 0.8383419

a2acc982-6086-4c16-a9aa-fc087a8fe088
01:02:59.000 --> 01:03:03.977
I want to store the
information 1.02 in decimal

NOTE Confidence: 0.8383419

78b22168-e3f7-421e-9741-14d09f365402
01:03:03.977 --> 01:03:06.742
system in this binary system.

NOTE Confidence: 0.81530046

4b5ac62c-a86f-498b-8f21-1e16a53102ea
01:03:09.930 --> 01:03:14.502
Are you do says that no, it's
not possible. The answer is

NOTE Confidence: 0.81530046

00f8786f-8361-4f12-9a46-75bf30af76e3
01:03:14.502 --> 01:03:17.931
correct. Why this is not
possible to represent this?

NOTE Confidence: 0.78948367

2255ac01-207a-42d4-8177-33874aeaf0f3
01:03:28.090 --> 01:03:34.150
Yes, actually Karen and you put
the correct answers as I said,

NOTE Confidence: 0.78948367

a89d4c8c-cf45-420a-ab79-11553fb2b851
01:03:34.150 --> 01:03:39.705
because of the three fraction
point we can our smallest step

NOTE Confidence: 0.78948367

c225af9a-f3fe-4fb9-bb01-38a37ae10367
01:03:39.705 --> 01:03:42.735
to increment a number is just

NOTE Confidence: 0.8973164

9ded4ea2-b555-4661-a7d2-a688cb973e97
01:03:42.735 --> 01:03:48.498
.125. So after this we reach the
0.25. So if you want to

NOTE Confidence: 0.8973164

92544f02-754a-41df-a861-59deebc154f1
01:03:48.498 --> 01:03:52.138
represent any number between
these two numbers, it is not

NOTE Confidence: 0.8973164

20d58ac9-ba4e-4955-865b-60934635e0d7
01:03:52.138 --> 01:03:53.594
possible in this system.

NOTE Confidence: 0.92174256

1b498de0-335c-4410-a070-91e2b3cc5180
01:03:55.160 --> 01:03:55.890
So.

NOTE Confidence: 0.8373734

7f43552d-7374-4d1b-bcd1-bbf53d9256d5
01:03:57.730 --> 01:04:02.234
Gas is no because the
smallest number unit

NOTE Confidence: 0.8373734

7fc3cfb6-67f2-4729-90d4-2ca9ca1fdec0
01:04:02.234 --> 01:04:04.486
of increment is this.

NOTE Confidence: 0.870933

34a9de4c-c7e2-4884-84f0-b085f12e0786
01:04:06.390 --> 01:04:11.175
But I have to come up with a
solution for that. How can I? I

NOTE Confidence: 0.870933

1ea43f09-08ff-4478-b1c8-31ef07e523a0
01:04:11.175 --> 01:04:14.365
mean, because I have a for
instance, computer system that

NOTE Confidence: 0.870933

3358c78d-00bc-4c0e-8770-a380e7f186c7
01:04:14.365 --> 01:04:15.960
has only three position for

NOTE Confidence: 0.75020325

936567a6-dd40-4b7b-a237-a77b596b7244
01:04:15.960 --> 01:04:20.114
fraction. At 4% for the integer,
but I want to represent this

NOTE Confidence: 0.75020325

daa3ccd3-dedb-4d28-9359-8309f8384bc5
01:04:20.114 --> 01:04:21.290
number in this system.

NOTE Confidence: 0.8860618

5370ded3-f4d2-4a25-a6c9-d101722806e1
01:04:21.950 --> 01:04:24.380
I cannot do that, but what's
the solution? Possible

NOTE Confidence: 0.8860618

cec3713a-2e40-49e5-bc94-5fa6919513de
01:04:24.380 --> 01:04:25.460
solution I can do?

NOTE Confidence: 0.922444

dc837551-30b8-4e03-9d7f-166ce72e0241
01:04:28.580 --> 01:04:30.080
What are the possible solutions?

NOTE Confidence: 0.9267545

eee350e5-fd39-4ea2-af59-ee4573711cf1
01:04:36.920 --> 01:04:39.270
Can you come up with a
solution to do that?

NOTE Confidence: 0.8088822

2cacaf36-de8c-41da-9c93-bbc9691b29b8
01:04:47.650 --> 01:04:51.236
Rate export will see what, so
once one solution would be

NOTE Confidence: 0.8088822

7531eec0-9477-416f-842e-e165426abd46
01:04:51.236 --> 01:04:55.148
changing the number system, for
instance from base two we go to

NOTE Confidence: 0.8088822

4bbfa679-479c-4da6-908d-dd08400a32b5
01:04:55.148 --> 01:04:59.386
the base Freebase four, etc. Up
until base 10. At least we know

NOTE Confidence: 0.8088822

89ec273e-29b2-4f92-b25b-cac2c26a451d
01:04:59.386 --> 01:05:03.298
that we can represent this by
two fraction point in base 10.

NOTE Confidence: 0.8772552

e6f72346-c0d3-4053-9b2b-0d002bcd8b9c
01:05:04.260 --> 01:05:07.289
But what if we cannot change the
rate? I mean the base number.

NOTE Confidence: 0.87993383

c5b2e63a-5059-4b59-8e62-b54b94675c69
01:05:08.250 --> 01:05:12.100
One possible solution is this
increase this size for the

NOTE Confidence: 0.87489027

d9fff128-2c13-43a4-a08d-20d04551ea43
01:05:12.100 --> 01:05:17.358
fraction part. So we need more
precision because here the

NOTE Confidence: 0.87489027

161f17ae-05e9-4434-b512-775e4fd7e07d
01:05:17.358 --> 01:05:22.484
precisions are between 1:25 or
125. So we need more position.

NOTE Confidence: 0.83993375

d77ee997-e378-4696-8af8-e0839cb58771
01:05:23.090 --> 01:05:26.213
Or more precision so we can
introduce more fraction

NOTE Confidence: 0.83993375

38e251cf-e480-406c-b660-f303fac766a6
01:05:26.213 --> 01:05:26.907
positions here.

NOTE Confidence: 0.8669096

6e9774b8-3a2f-4323-84d5-812e39f62c88
01:05:28.520 --> 01:05:32.156
Which means that more fraction
position or more M.

NOTE Confidence: 0.91267514

f6ad10b1-17fe-486d-bb4a-144a8e24f030
01:05:32.900 --> 01:05:34.088
This is 1 solution.

NOTE Confidence: 0.8855903

fda0648e-f854-46aa-b70e-a24bfb5ee3b4
01:05:34.840 --> 01:05:38.350
So if you increase the app,
you increase the significance

NOTE Confidence: 0.8855903

3d023f12-e9ce-435b-bdce-d19219324743
01:05:38.350 --> 01:05:43.264
by two to the power of minus
four, 2 to the power of minus

NOTE Confidence: 0.8855903

82a0d9c4-755f-44d0-a9f5-78622ef4e34b
01:05:43.264 --> 01:05:47.125
five and etc. So you end up
with smaller, smaller, smaller

NOTE Confidence: 0.8855903

16215d4b-dbea-422d-b3df-6f31e130f143
01:05:47.125 --> 01:05:50.986
units and with those smaller
units it would be possible to

NOTE Confidence: 0.8855903

7035a938-bb48-4b6b-9bf1-637b21d106d8
01:05:50.986 --> 01:05:52.039
represent this number.

NOTE Confidence: 0.8263293

b9ef5541-a92e-4b63-84a7-d46b91b7bdff
01:05:53.800 --> 01:05:57.617
Another solution is that so the
question is how many position

NOTE Confidence: 0.8263293

76212b8e-8c6e-4a68-8beb-b8f388ab1d31
01:05:57.617 --> 01:06:01.781
you need. You have to add the
fraction part to represent this.

NOTE Confidence: 0.8263293

61356cc7-3755-40a7-ae1c-77898a5d8ad4
01:06:01.781 --> 01:06:03.516
This is an interesting question.

NOTE Confidence: 0.82660466

eafede56-6faa-43c6-9a86-9d8ea8a3beae
01:06:05.030 --> 01:06:09.830
But another solution is that as
a Tatiana said, rounding, but we

NOTE Confidence: 0.82660466

72c19a2e-dc3b-44c6-b0ff-160bb13d2c9e
01:06:09.830 --> 01:06:15.030
can accept some error and we
could say that we can find the

NOTE Confidence: 0.82660466

4fb9836f-8692-4fb6-93c0-dae2c8a53363
01:06:15.030 --> 01:06:19.030
closest number to this number
and assume that that closest

NOTE Confidence: 0.82660466

fe74222d-3ab0-4320-95d3-99463f5dffdb
01:06:19.030 --> 01:06:20.630
number is this number.

NOTE Confidence: 0.8692365

d2bba005-f174-49c9-8627-8c3ff5c55ffa
01:06:22.290 --> 01:06:27.040
So what are those closest
number? The closest number is

NOTE Confidence: 0.8692365

1a3e0389-2e86-4e40-8aea-c00dd4908113
01:06:27.040 --> 01:06:29.415
these two numbers either one.

NOTE Confidence: 0.8607698

d6e28795-fa09-4799-b88f-74f6bb339e18
01:06:31.840 --> 01:06:37.216
Or the next number in the
system. The next number in this

NOTE Confidence: 0.8607698

801dfee6-9417-46b4-af36-d1dac40ba177
01:06:37.216 --> 01:06:38.560
system is 1.125.

NOTE Confidence: 0.8569968

5a2a81bc-e2ec-474b-8347-56db9693ba5d
01:06:39.850 --> 01:06:43.702
So this is the binary number
one, and this is the next

NOTE Confidence: 0.8569968

24eb1b22-a405-4f1a-9bb3-58b6aee4a3a0
01:06:43.702 --> 01:06:45.307
pointer number. Give us three

NOTE Confidence: 0.90217257

4642e309-a2b4-409a-950c-41edd91ea9e1
01:06:45.307 --> 01:06:50.088
positions. So given these two
numbers, if you calculate the

NOTE Confidence: 0.8584533

76d49471-68a1-4f72-88e9-e7b6b1d60750
01:06:50.088 --> 01:06:56.573
error. The first number, the
error. This is equal to 1 one

NOTE Confidence: 0.8584533

6b1cbb75-13fa-4e67-9dda-e742611adb21
01:06:56.573 --> 01:07:02.129
and we wanted to represent to
1.02. So the error is .02.

NOTE Confidence: 0.867889

c3aa3bc8-1c21-4a2b-9f50-4860c50e5215
01:07:03.410 --> 01:07:07.706
The second possible number is
this one point 125, but if you

NOTE Confidence: 0.867889

ae8d258d-1c68-4ff8-beed-6fb87e58d2ea
01:07:07.706 --> 01:07:12.002
do calculate the error, the
error is this. We choose the one

NOTE Confidence: 0.867889

f8e42a84-8513-4918-b754-16da4cc94ff2
01:07:12.002 --> 01:07:15.582
that has the smallest error
because the closest number is

NOTE Confidence: 0.87814695

a30dabbf-206b-4e73-aacb-fab2f22a9ef7
01:07:15.582 --> 01:07:21.039
desired. So we choose this. We
accept that there is an error,

NOTE Confidence: 0.87814695

f05674a9-0b3a-44a1-b2a1-d593d2892578
01:07:21.039 --> 01:07:25.538
but we store this information.
So instead of storing 1.0 two

NOTE Confidence: 0.87814695

8573cf35-0d33-44cf-8469-8ecbb5d8864a
01:07:25.538 --> 01:07:30.855
we store 1000 one, .000 which
is actually equal to 1 and we

NOTE Confidence: 0.87814695

f0c9a129-5be3-4f32-a6ff-e0954a55f4fb
01:07:30.855 --> 01:07:33.718
accept that there is an error
here.

NOTE Confidence: 0.8123021

97f5072e-9226-4c05-b113-7621f5a6ebb1
01:07:35.720 --> 01:07:39.344
We can do the same with base
four, so in base 4.

NOTE Confidence: 0.8171763

e62191d7-54b6-40ee-9a9b-b4b804cebe3d
01:07:40.150 --> 01:07:45.850
As as a Kevin said, one possible
solution is that increasing the

NOTE Confidence: 0.8171763

485c24e4-4c1f-40c9-a43c-8d7dbdccde65
01:07:45.850 --> 01:07:52.025
basis. So if you increase the
base, you see that the number at

NOTE Confidence: 0.8171763

b17c86dc-065a-4c8f-8f83-74b1e6252e01
01:07:52.025 --> 01:07:56.300
the smallest increment step
gonna be here 0.01, etc.

NOTE Confidence: 0.832774

b60fd143-1f1a-4730-bda4-d7bf95b2aa92
01:07:57.570 --> 01:08:00.782
And the largest digit is just
the largest number is just

NOTE Confidence: 0.832774

fb2d22cf-b45b-4bd1-af3b-9b45440df78e
01:08:00.782 --> 01:08:04.286
putting the largest digit in all
positions, so would put in base

NOTE Confidence: 0.832774

1999ae5c-80f3-465c-87fd-74445a4a73bb
01:08:04.286 --> 01:08:07.498
for. The largest is free. You
put three in all positions.

NOTE Confidence: 0.8961509

da81c6d7-2ab3-4794-86dc-b0302791f02c
01:08:08.520 --> 01:08:13.876
And this is the largest number.
So from zero and then 0.01 etc.

NOTE Confidence: 0.8961509

5356e10d-3075-4b09-93c5-2509277ddb88
01:08:13.876 --> 01:08:15.524
Up until this number.

NOTE Confidence: 0.9186094

2cc76c15-c04f-49c7-8526-872d06587cb7
01:08:17.430 --> 01:08:22.017
And still in this number in
this space number you are

NOTE Confidence: 0.9186094

856ef8a8-b8f9-40d1-a936-2275449207e1
01:08:22.017 --> 01:08:26.187
not able to represent 1.02.
And the reason is that.

NOTE Confidence: 0.89490867

d79502d0-4b55-40fa-96b3-02a32fe2f057
01:08:29.450 --> 01:08:35.768
You see that the increment from
zero to 0.015 and then the next

NOTE Confidence: 0.89490867

044b7b92-602c-49e9-87ed-31ceb8d3aae5
01:08:35.768 --> 01:08:41.600
step is 0.03, so 0.2 is between
these two numbers, so this

NOTE Confidence: 0.89490867

6d1acb9d-c54b-488f-9aef-4800b6082e9d
01:08:41.600 --> 01:08:47.432
system is not able to represent
this number. But the error is

NOTE Confidence: 0.9073991

68d02be0-9076-4f03-876b-cc2316bbd76b
01:08:47.432 --> 01:08:52.620
much less. So if you find the
closest number, the error here

NOTE Confidence: 0.9073991

bdf0c038-5ba3-4403-a253-30e34e835f2b
01:08:52.620 --> 01:08:53.646
is much less.

NOTE Confidence: 0.8801114

63dcce92-6803-49f2-975a-cd53775ee7a2
01:08:56.690 --> 01:09:03.346
And the number with the lowest
error is the I mean the desired

NOTE Confidence: 0.8801114

b2ed229e-c3d2-400a-922b-9597c5403d6e
01:09:03.346 --> 01:09:05.906
number to represent this number.

NOTE Confidence: 0.88520133

f71d1ca7-5dee-43c4-8c0d-f8af956914e1
01:09:07.790 --> 01:09:09.760
So I just wanted to.

NOTE Confidence: 0.8766523

3a7bbf82-b3ea-434b-9906-19bae87c5ffe
01:09:11.300 --> 01:09:17.270
Say that. Not all numbers can be
represented in any other basis,

NOTE Confidence: 0.8766523

dfdc1304-23ca-43c4-9426-ba5ed452ccdf
01:09:17.270 --> 01:09:21.520
so there sometimes you need to
compromise and introduce some

NOTE Confidence: 0.8766523

e6282e61-6067-48e5-92dd-3e04ce93d3e7
01:09:21.520 --> 01:09:26.620
error when you want to represent
a number in another system into

NOTE Confidence: 0.8766523

d62733f0-33a5-46da-bce6-c7f1edd6563b
01:09:26.620 --> 01:09:30.870
a number in another number
system. So it converting between

NOTE Confidence: 0.8766523

f38707a3-f09e-47cc-8511-116495382c4b
01:09:30.870 --> 01:09:34.695
the numbering system when they
have a fraction part.

NOTE Confidence: 0.7968615

281d3935-1d0f-4f95-b3eb-855e2f57e64d
01:09:35.280 --> 01:09:36.450
Had some errors.

NOTE Confidence: 0.90667653

276b3bf8-aecd-432d-b2e5-9f967702d773
01:09:38.520 --> 01:09:45.288
So I'm going to take your
questions and I'm going to open

NOTE Confidence: 0.90667653

a2c77d5a-0d69-4753-83c0-fa72d8caad1a
01:09:45.288 --> 01:09:46.980
my next slide.

NOTE Confidence: 0.883394

c381c45e-1393-4ca0-9ecc-607e50ec7637
01:09:47.980 --> 01:09:51.533
So if you have any questions,
I'm happy to take your

NOTE Confidence: 0.883394

2ea737c6-66ca-4d53-b28a-a934b37b5b10
01:09:51.533 --> 01:09:54.763
question and then you can
continue with the next topic.

NOTE Confidence: 0.8102436

4f4bc23e-46a5-4ab7-9901-169b4a858d02
01:10:04.420 --> 01:10:10.204
Yes, yes, Tianna asked that we
in what basis we represent the

NOTE Confidence: 0.8102436

faf64bac-cabc-40ee-a880-37cc010becb5
01:10:10.204 --> 01:10:15.988
error itself. Error is a number.
So in what basis we introduce

NOTE Confidence: 0.8102436

1f2f41d5-f01a-4b8b-87cc-1335aebb1b54
01:10:15.988 --> 01:10:21.290
the error we represent there, we
usually represent the error in

NOTE Confidence: 0.8102436

146ffb86-db0b-4832-be78-3f7120f4e9ee
01:10:21.290 --> 01:10:26.592
decimal system. We said that
here is the error in conversion.

NOTE Confidence: 0.8460375

888e96af-7340-4112-8392-a2ae6f68ee17
01:10:27.270 --> 01:10:31.599
I just because we want to have
an understanding of what type of

NOTE Confidence: 0.8460375

8239462a-e185-47c6-a673-8e22064a6566
01:10:31.599 --> 01:10:35.928
error on what's, what's the size
of error, so that's yes. I mean,

NOTE Confidence: 0.8460375

89368e07-af9a-4126-b477-8c6e7522f260
01:10:35.928 --> 01:10:39.258
usually we represent the error
whenever in the question they

NOTE Confidence: 0.8460375

fade5d75-f1ee-4dd1-a8d9-083ec35fadcf
01:10:39.258 --> 01:10:42.921
ask for an error. You represent
the error in base 10.

NOTE Confidence: 0.878374

df369e63-316b-494d-a51c-e9be7b02b902
01:10:43.640 --> 01:10:48.007
Remember, sometimes when you
want to convert a numbers as we

NOTE Confidence: 0.878374

e40ccc1e-892b-4b8b-b685-b32de589fb33
01:10:48.007 --> 01:10:53.168
want to discuss it right now,
you might end up with error in

NOTE Confidence: 0.878374

2d2dde6d-a985-4910-a31b-fca9ba1540f5
01:10:53.168 --> 01:10:54.359
French Space 4.

NOTE Confidence: 0.8701883

2424d8a4-3c39-479c-b61a-6ecbf1e66bda
01:10:54.980 --> 01:10:58.220
So you have to convert the
error from base four to the

NOTE Confidence: 0.8701883

d0337a82-f950-4426-bed4-8960f129a93d
01:10:58.220 --> 01:11:00.920
base 10 and then put the
answer to the question.

NOTE Confidence: 0.86486506

38c3a009-83a8-4e25-8862-40aa4bed1da1
01:11:02.660 --> 01:11:06.345
Yes, yes, all the recordings and
lecture slides gonna be on

NOTE Confidence: 0.86486506

220f9047-e21c-400a-a0f4-ca956cf28f40
01:11:06.345 --> 01:11:08.355
Blackboard by the end of today.

NOTE Confidence: 0.8695615

3f40a083-f6ae-4d0e-bda6-10c5091cf87a
01:11:11.880 --> 01:11:12.969
Any other questions?

NOTE Confidence: 0.9297624

91b7b772-eaf3-4996-b61f-f1fc8c51eeb5
01:11:16.490 --> 01:11:19.080
So the next topic is.

NOTE Confidence: 0.91264975

5e656245-a4bf-4e45-a75b-3a320e01dca0
01:11:21.080 --> 01:11:23.170
Now we know that how.

NOTE Confidence: 0.84832793

dc21c533-3cd0-4883-991d-2233984e55a6
01:11:24.520 --> 01:11:29.160
Any number from base
R can go to base 10.

NOTE Confidence: 0.83115983

92d50886-dbae-41d7-9c5b-257f2982dcc7
01:11:30.790 --> 01:11:35.025
So basically using the those
formula that I explain right now

NOTE Confidence: 0.83115983

504a457f-5784-45d3-9a09-443643cf68ec
01:11:35.025 --> 01:11:39.260
any integer part than any
fraction pile can be easily from

NOTE Confidence: 0.83115983

9e34972d-aa37-4802-a68e-f70ff7787e94
01:11:39.260 --> 01:11:44.650
any base number. Or can it can
be easily go to the base 10.

NOTE Confidence: 0.9151261

d951c7c0-e742-4056-b582-f78055f888ca
01:11:45.560 --> 01:11:48.336
But the question
is that how can I?

NOTE Confidence: 0.82799554

617b707e-a047-427f-88b2-115a13c1f50c
01:11:49.850 --> 01:11:55.214
Generalize that idea to change
to convert from any basis to any

NOTE Confidence: 0.82799554

f6233a25-5011-4d1c-89ed-985f9e2e0289
01:11:55.214 --> 01:11:57.896
other basis other than base 10.

NOTE Confidence: 0.81165177

db17dfc5-5e1b-4841-818a-118659445745
01:11:58.640 --> 01:12:02.534
From base R to base our prime.
This is called conversion.

NOTE Confidence: 0.8283259

aa0c1553-73f2-4e68-9941-60808758a4f8
01:12:03.570 --> 01:12:08.124
We already know how to
convert to base 10, but now

NOTE Confidence: 0.8283259

2a3a020d-cf05-481c-81c8-14af34ed3d86
01:12:08.124 --> 01:12:10.194
wanna explain more
conversion algorithms.

NOTE Confidence: 0.85725325

b083dfb5-5030-414a-9614-d3a4141390bd
01:12:12.360 --> 01:12:15.990
So this is the formula that
we convert any number from

NOTE Confidence: 0.85725325

1a2616e1-f9ff-44e0-a2d2-565194cbe515
01:12:15.990 --> 01:12:17.640
base R to base 10.

NOTE Confidence: 0.87255466

fd05a536-d550-4bb0-b867-204646b880cd
01:12:20.310 --> 01:12:23.770
So we'll start with the most
simplest algorithm to convert

NOTE Confidence: 0.87255466

8cbc5fe7-750d-4f11-8bd7-43325c6e0cf8
01:12:23.770 --> 01:12:28.960
from base 10 to base on. We know
how to convert from base R to

NOTE Confidence: 0.87255466

edf89d9b-cd14-4236-b82b-7aba59f990fe
01:12:28.960 --> 01:12:33.458
base 10. Now you want to see
from a decimal system we can

NOTE Confidence: 0.87255466

fd02d6fc-2f33-4232-b94f-332e51458891
01:12:33.458 --> 01:12:36.918
represent two base R. For
instance, we know that the

NOTE Confidence: 0.87255466

7b2b5ca2-0f4d-436a-8130-365909ff2300
01:12:36.918 --> 01:12:40.724
distance of moon to the sun is
12,000 in decimal system.

NOTE Confidence: 0.8585599

375017c6-440e-460a-a3aa-62621543d2a7
01:12:41.430 --> 01:12:43.170
12,000 units of Earth.

NOTE Confidence: 0.8737547

eeaf0024-d1f5-4845-9ed6-ef54e6bb4fc9
01:12:43.740 --> 01:12:48.516
What are we need? For instance,
seven position for the base four

NOTE Confidence: 0.8737547

bf63d560-fb7c-47c6-8853-a0fd1b65eadd
01:12:48.516 --> 01:12:53.292
to represent the number, but we
didn't know how to represent the

NOTE Confidence: 0.8690413

ce97191f-2392-4726-9258-f7085073bd3e
01:12:53.292 --> 01:12:58.210
actual number. Or for
instance, I said that the

NOTE Confidence: 0.8690413

e84315f5-91c8-4c45-be79-6d035d844d4a
01:12:58.210 --> 01:13:02.620
number 173 in binary system.
What's the number in?

NOTE Confidence: 0.6481131

7c334015-d9f3-4d57-ae31-c390dbce4e28
01:13:04.160 --> 01:13:06.040
Base 16 or base 64.

NOTE Confidence: 0.8125496

70f2e6ba-c716-4474-aaf8-4aca6f928ac8
01:13:07.000 --> 01:13:11.788
So we start with a given decimal
number and convert it to the any

NOTE Confidence: 0.8125496

e00878a8-0776-4a89-8702-e12c16681193
01:13:11.788 --> 01:13:15.208
base number from space. Two
binary system base eight octal

NOTE Confidence: 0.8125496

adc1673a-d18c-4329-8006-e2bca2a9a239
01:13:15.208 --> 01:13:16.234
system and attach.

NOTE Confidence: 0.9244295

8901f982-fd76-44ed-af43-73e313d69149
01:13:18.010 --> 01:13:19.210
The idea is that.

NOTE Confidence: 0.8815745

4e134353-f1e2-4e4f-9ef2-b78fdbcd0d53
01:13:19.860 --> 01:13:25.032
We can assume that they are the
target. Binary system is still

NOTE Confidence: 0.8815745

067b6234-b2c4-49f0-85c8-edb510817d0d
01:13:25.032 --> 01:13:29.773
10, so we want to convert from
decimal system to itself.

NOTE Confidence: 0.89466894

f425fd16-f2a6-4d74-a8b0-4d4c6273c184
01:13:30.850 --> 01:13:35.205
I want to explain this because
it gives an insight to us to

NOTE Confidence: 0.89466894

1919581b-8ced-4fd0-9a29-0888f1637913
01:13:35.205 --> 01:13:38.220
generalize that algorithm to
convert to any other basis.

NOTE Confidence: 0.86437654

71a59d1d-93be-48ff-b85d-52046d1783c0
01:13:39.280 --> 01:13:43.661
So a number in decimal system
goes to the to itself this way.

NOTE Confidence: 0.89500713

98f4a707-25fe-40ba-be4f-c23aeae503bb
01:13:44.290 --> 01:13:46.898
So assume that we are
given this number.

NOTE Confidence: 0.7386

5c4386f0-44ea-4d88-b8ad-3605e06c0f80
01:13:48.730 --> 01:13:51.130
In a decimal system.

NOTE Confidence: 0.8725002

7231e7b9-df1f-49b3-bf71-4678a6da7b87
01:13:51.830 --> 01:13:58.463
So 30302131 and assume that
there is no fraction point here.

NOTE Confidence: 0.84959537

1938b7e9-9bd6-4fc0-b5cd-d50115960c4b
01:13:59.400 --> 01:14:05.185
So if you want to convert it to
the decimal itself, it means

NOTE Confidence: 0.84959537

46323170-04b4-4d0a-93ea-f95d8640ae92
01:14:05.185 --> 01:14:06.965
that extracting each digit.

NOTE Confidence: 0.92878157

cc9ba91a-124a-4e12-b002-e7512a388b8d
01:14:07.860 --> 01:14:08.530
So.

NOTE Confidence: 0.86208117

449f6ded-dae8-4759-8a20-be87d114a918
01:14:11.230 --> 01:14:14.890
The first one is has the
significant 10 to the power of

NOTE Confidence: 0.8747459

8fdfd792-8160-4729-8d56-ce932290b956
01:14:14.890 --> 01:14:18.670
0. The second one has a 10 to
the power of 1, etc.

NOTE Confidence: 0.86622274

cf314ad2-7e4b-4c4f-af2e-c21c6dc6773b
01:14:19.310 --> 01:14:24.578
So I could say that this
number if I want to extract

NOTE Confidence: 0.86622274

e14c3804-52f3-4af4-aeba-901d74e880a1
01:14:24.578 --> 01:14:29.407
it digits in decimal system,
I have to simply extract the

NOTE Confidence: 0.86622274

93d601fe-5faf-4fb3-a64d-8128c0760e9c
01:14:29.407 --> 01:14:31.163
digit in each position.

NOTE Confidence: 0.87767714

0f4baabe-8bd0-45de-936d-e9a51d7a92ed
01:14:32.940 --> 01:14:35.766
So basically the conversion
means that producing the digits

NOTE Confidence: 0.87767714

37479604-48b0-4868-be2a-322d02366432
01:14:35.766 --> 01:14:39.848
in the target system. So here I
want to convert this number in

NOTE Confidence: 0.87767714

73698bd8-1851-4222-bee0-7c9a9fdae41e
01:14:39.848 --> 01:14:43.302
decimal to the decimal. So I
have to extract the digits.

NOTE Confidence: 0.8708328

cb97049e-b2f2-4bf3-bed5-d492b2a57733
01:14:44.900 --> 01:14:50.997
So this means that each time I
divide the given number by 10.

NOTE Confidence: 0.8708328

aa0e0f02-469c-4609-9222-de3bcbeb9c58
01:14:50.997 --> 01:14:57.563
So if you divide this number by
10 it in it, extract one and

NOTE Confidence: 0.8708328

0d7e537f-a6cb-4a09-8d90-21c1852c17d0
01:14:57.563 --> 01:15:03.191
then the result. If you divide
the result by 10 it extracted

NOTE Confidence: 0.8550185

a2842448-416d-4e8b-adbc-06c002da3153
01:15:03.191 --> 01:15:06.880
digits. So each division
by 10 reduced the powers

NOTE Confidence: 0.8550185

45fb939c-5aea-493e-836b-ac590b54896a
01:15:06.880 --> 01:15:09.480
of 10 and extracted
digit of that position.

NOTE Confidence: 0.8183836

c30a596e-98d0-48f4-9ec6-63fe7f08ec32
01:15:10.530 --> 01:15:11.838
Up until the last.

NOTE Confidence: 0.9180423

d9ff3681-2e33-4194-a86c-842b07629452
01:15:12.810 --> 01:15:17.106
So basically, if you are given
this number for the 1st digit,

NOTE Confidence: 0.9180423

88f5158d-5ab6-4f5e-bda3-137f25a1e377
01:15:17.106 --> 01:15:19.254
you have to divide by 10.

NOTE Confidence: 0.83782756

7b8f79f7-bed6-44f0-a7ef-fa9702422c87
01:15:20.730 --> 01:15:24.804
And the quotient
is the number of.

NOTE Confidence: 0.85623413

69ffa28a-a803-4e8b-a5ca-6ba8e4db3125
01:15:25.990 --> 01:15:29.546
So if you divide
this number, the.

NOTE Confidence: 0.85480124

5a3b916b-2658-48e3-a189-db3075c9959d
01:15:32.180 --> 01:15:35.348
The remainder, sorry. The
remainder is the digits.

NOTE Confidence: 0.82393694

388035e5-dc1f-4168-8756-dfd401d3035a
01:15:36.730 --> 01:15:42.274
As you can see here, and the
quotient is the remainder digits

NOTE Confidence: 0.82393694

2a4dcec5-b8dd-4b69-b442-a7dce6459246
01:15:42.274 --> 01:15:43.660
of the number.

NOTE Confidence: 0.8758321

04fffebf-2e7f-4a29-be85-989f9e35b344
01:15:46.590 --> 01:15:50.516
So for the 1st digit you divide
by 10 and you keep the

NOTE Confidence: 0.8758321

74b54100-c508-45bb-8f00-39a8050af4c1
01:15:50.516 --> 01:15:53.838
remainder, so the remainder of
the division is the 1st digit.

NOTE Confidence: 0.81955063

7986ca40-6abb-4045-ab96-3c7b4bd63a22
01:15:54.650 --> 01:15:57.944
And then the next digit
gonna be the quotient

NOTE Confidence: 0.81955063

abed4262-55fa-417e-a89f-3e353d86779d
01:15:57.944 --> 01:15:59.042
of previous division.

NOTE Confidence: 0.82684976

36668ada-276c-40de-b646-71437ad0df8a
01:16:01.140 --> 01:16:03.588
Divided by 10 and the remainder.

NOTE Confidence: 0.8601013

b99af0c4-0aaf-4981-badd-b49b6f431716
01:16:05.710 --> 01:16:07.528
And then the quotient of
previous.

NOTE Confidence: 0.89175624

9b1f03c1-682b-44d6-8b79-510385a3a3b0
01:16:08.950 --> 01:16:09.580
Division.

NOTE Confidence: 0.8565064

1d5ce6f0-6639-47c9-bd43-961fa3acbd13
01:16:10.740 --> 01:16:16.691
Divided by 10, you keep the
remainder as the next digit.

NOTE Confidence: 0.9083433

6ea4e132-e936-4fe7-8e7d-477d8e42138b
01:16:17.790 --> 01:16:21.475
And then you continue. So
here I can show you that

NOTE Confidence: 0.9083433

e847c63d-dbda-442f-99e0-731609292849
01:16:21.475 --> 01:16:24.155
this is the actual number
the First Division.

NOTE Confidence: 0.93062353

39a0e066-adc0-4b2e-9b09-ab4dccd2e907
01:16:25.420 --> 01:16:26.848
The First Division.

NOTE Confidence: 0.8949895

33fe21c2-0527-484d-8e87-4335b7f43e4f
01:16:27.900 --> 01:16:32.268
Gives the digits in the position
that has the significance of 10

NOTE Confidence: 0.8949895

6297017d-ff19-4252-96cd-348ecd14442b
01:16:32.268 --> 01:16:34.088
to the power of 0.

NOTE Confidence: 0.9217446

7b01dee5-2890-44f2-b7e7-2df87beb7dad
01:16:35.590 --> 01:16:37.705
So I put it here just to come up

NOTE Confidence: 0.8719094

552693c9-16e1-41d7-9f6a-b90881733b26
01:16:37.705 --> 01:16:42.035
with an algorithm so. 0 + 1
means that one division, so one

NOTE Confidence: 0.8719094

3935faeb-07df-4e4f-b7a8-72e02537344b
01:16:42.035 --> 01:16:46.130
division gives the digit in the
position 10 to the power of 0.

NOTE Confidence: 0.86409944

ffee2319-fa28-4d0d-bbdc-92d9d43e5519
01:16:48.490 --> 01:16:49.620
Two division

NOTE Confidence: 0.8726503

811702e1-b61f-4f38-ac27-4a4d563f73e4
01:16:50.740 --> 01:16:54.614
the remainder gives the digit in
the position 10 to the power of

NOTE Confidence: 0.85047764

f50cdd74-964b-4a1c-b11a-f86710c41723
01:16:54.614 --> 01:16:57.000
1. Free division.

NOTE Confidence: 0.8231956

40abfdc0-c9dc-451f-93e8-0a221a9bd6e1
01:16:57.600 --> 01:17:01.857
Give the digits. The remainder
gives the digit for the position

NOTE Confidence: 0.8231956

47531ba5-dd64-43d2-bccf-40dc766cbc99
01:17:01.857 --> 01:17:04.179
10 to the power of 2.

NOTE Confidence: 0.8320768

5be93150-1d9b-45a0-ac41-201e14070b21
01:17:05.850 --> 01:17:10.777
An ETC so four division 4 --
1 three so it gives the

NOTE Confidence: 0.8320768

d4743a00-c848-4ce6-883e-bcdf677f52c5
01:17:10.777 --> 01:17:14.567
digit for the position 10 to
the power of 3.

NOTE Confidence: 0.85449815

99d52f78-c081-4ae6-8211-82f12a437319
01:17:15.620 --> 01:17:20.585
An, etc. So as you can see
here, if you want it Bridget

NOTE Confidence: 0.85449815

169a2413-6533-4248-a71c-e16f37baea7b
01:17:20.585 --> 01:17:22.160
in the position that has.

NOTE Confidence: 0.83461833

5a3abe67-0075-4aa5-ac35-cffa5bbf8070
01:17:23.300 --> 01:17:28.676
Significance of 10 to the power
of N you have to divide. We have

NOTE Confidence: 0.83461833

c1064a0a-a116-47bc-a671-32e02cb51b12
01:17:28.676 --> 01:17:30.980
to divide N + 1 times.

NOTE Confidence: 0.9260533

6103b0e9-a3f4-4251-aad9-569b97f8c0be
01:17:33.530 --> 01:17:34.510
As you can see here.

NOTE Confidence: 0.89178026

fac1692d-9c9e-448d-9cc7-b659c1b986ba
01:17:36.820 --> 01:17:42.308
So up until the last digit. So
for the digital 10 to the power

NOTE Confidence: 0.89178026

a3bf3924-9580-4cca-8c92-e8f588c54291
01:17:42.308 --> 01:17:45.052
of 7, the position in at 8.

NOTE Confidence: 0.7806023

b93bcbe5-acf9-4696-8bb1-267bd4ae834a
01:17:45.850 --> 01:17:49.777
At the eighth position, you have
to do division eight times.

NOTE Confidence: 0.8971355

da681d72-b67a-4453-bdb0-eeabb5fe4c36
01:17:51.720 --> 01:17:55.656
And then these are the digits
that you produce. You have to

NOTE Confidence: 0.8971355

ce959937-634b-4391-9f40-6add65e3bd85
01:17:55.656 --> 01:17:57.296
just put the remainder back.

NOTE Confidence: 0.8702732

546c4a44-8be2-470b-89e8-094f3a91ddb1
01:17:58.560 --> 01:17:59.720
In the reverse order.

NOTE Confidence: 0.8880929

bd034a76-1f1c-48df-b120-e6eae40516ce
01:18:01.000 --> 01:18:06.376
So a number in decimal system
can you can extract digits in

NOTE Confidence: 0.8880929

f5a6400e-6915-4637-be6e-1fa551397135
01:18:06.376 --> 01:18:09.512
each position by multiple
division by 10.

NOTE Confidence: 0.8562944

dc0d858d-ee22-4afc-b429-69ca72020097
01:18:10.390 --> 01:18:13.513
And then put the remainder in
the reverse order.

NOTE Confidence: 0.93075204

0ac5209e-3d6e-49c4-aa63-bc4e955bb415
01:18:15.940 --> 01:18:19.451
So. We want to see how it is

NOTE Confidence: 0.8817591

59634168-b3a9-4b96-bff3-c4b559c3a4cf
01:18:19.451 --> 01:18:25.000
possible in 16. So you have to
simply do the division this time

NOTE Confidence: 0.8817591

bea37895-401b-4913-9fbc-9cac4843c3bf
01:18:25.000 --> 01:18:29.268
by 16 because you want to
extract digits in base 16.

NOTE Confidence: 0.9282209

d5de3aee-185b-49db-89ce-7c29742bd226
01:18:29.900 --> 01:18:30.530
So.

NOTE Confidence: 0.86700857

4787cddc-b714-41e5-843d-fc0709e4b8e8
01:18:31.570 --> 01:18:35.959
The given number by 16. The
remainder is the 1st digit.

NOTE Confidence: 0.89825535

fce74c4d-3084-44d8-bb3a-cb0a5d2929c9
01:18:38.360 --> 01:18:40.754
The second division
is the 2nd digit.

NOTE Confidence: 0.7803586

feee4cca-2bb2-40f9-8066-7b178e40fc8a
01:18:42.100 --> 01:18:46.987
The third division is this 3rd
digit an, etc.

NOTE Confidence: 0.9369096

51d4035e-8b76-496b-837d-e0dff5625193
01:18:47.610 --> 01:18:48.618
So you see that.

NOTE Confidence: 0.87394834

a906dd7e-a5b3-4cba-bbb3-8eb9a29f52f4
01:18:49.460 --> 01:18:51.926
You just the reminders are the

NOTE Confidence: 0.8423816

fd3a5041-9125-4823-b8ec-67d155b853ca
01:18:51.926 --> 01:18:57.320
digits. And then when you reach
the quotient, 0 means that

NOTE Confidence: 0.8423816

a770430f-4fed-4672-9582-b3ad978b6fee
01:18:57.320 --> 01:19:00.295
further division just produce
zero you stop.

NOTE Confidence: 0.8318488

2140dce4-2d66-4073-868f-4e1ddef4205f
01:19:00.920 --> 01:19:06.198
And then you put the digits in
the reverse order, so one is

NOTE Confidence: 0.8318488

8294ef9d-1e27-4bc5-8d7d-8e38216309ec
01:19:06.198 --> 01:19:11.070
the basic history is the 1st
digit, 11 is the 2nd digit.

NOTE Confidence: 0.8318488

58dfec59-0f38-4776-a567-72ea10d5087a
01:19:11.070 --> 01:19:14.724
Annetta. Or you put the
remainder in the reverse

NOTE Confidence: 0.8318488

df9d13f8-99db-4e64-8034-337248221883
01:19:14.724 --> 01:19:15.130
order.

NOTE Confidence: 0.8761651

2a9f1dff-3fb1-4ac7-8e39-6640ff3d7350
01:19:16.600 --> 01:19:21.976
However, in base 1612, fourteen,
15, and 11 or not a valid

NOTE Confidence: 0.8761651

aa4ba609-78c4-48d5-9d41-28b10773c9c1
01:19:21.976 --> 01:19:26.904
digits, you have to represent
them with the valid digit in

NOTE Confidence: 0.8761651

fc3e85cf-47d7-4c3f-a5e4-bf01fcf0155d
01:19:26.904 --> 01:19:28.248
base 16, so.

NOTE Confidence: 0.86031175

0335203a-c8ee-4c47-9374-36744686edca
01:19:29.020 --> 01:19:32.930
Based on the valid digits
for these values, you have

NOTE Confidence: 0.86031175

0cc3cee9-5b36-437b-9a5d-81a42c9f40a5
01:19:32.930 --> 01:19:36.058
to substitute the, I mean
the correct alphabet.

NOTE Confidence: 0.8079942

027375b4-48b8-4bac-ac72-3b1093a5cd91
01:19:37.270 --> 01:19:44.292
So. 12 is equal to equal
to 11 F is equal to 15

NOTE Confidence: 0.8079942

cd86c699-79fd-4d20-9ca7-b27045134d4b
01:19:44.292 --> 01:19:49.528
an etc based on the base
16 system and this is

NOTE Confidence: 0.8079942

cf71caeb-e37e-4771-b5a8-dfb29e444125
01:19:49.528 --> 01:19:51.908
the number in base 16.

NOTE Confidence: 0.863142

2d4c9d0e-b1cf-4b7a-98ee-8e12f9be0469
01:19:55.320 --> 01:19:58.968
In any basis, basically you have
to just simply divide by that

NOTE Confidence: 0.863142

fdc9b6dc-8ca8-412f-8658-15e95d7b6186
01:19:58.968 --> 01:20:00.488
base number and put there.

NOTE Confidence: 0.8402392

62af599c-2654-402d-8355-946043c3c16a
01:20:00.600 --> 01:20:02.672
Changes in the reverse
order. That's the

NOTE Confidence: 0.8402392

99acbb90-21fa-4793-9d03-e7505ef0cdd4
01:20:02.672 --> 01:20:03.560
algorithm very simple.

NOTE Confidence: 0.85762805

22b7cd3c-dd99-41e1-8caf-1f11b8de38e4
01:20:04.670 --> 01:20:08.990
Question is this number in base
8 multiple division by 8 and

NOTE Confidence: 0.85762805

5782d3ae-dc29-4fba-8c22-e694d6db0601
01:20:08.990 --> 01:20:11.150
then put the remainder in the

NOTE Confidence: 0.8709683

118a5e9d-c22b-403e-b2df-2556a98f28d0
01:20:11.150 --> 01:20:15.973
reverse order? So this was the
number in base 10 and then we

NOTE Confidence: 0.8709683

ea3ec5bf-7507-4fcb-ad72-2cf1f0536227
01:20:15.973 --> 01:20:20.355
come up with this time in base
16 and this is the number in

NOTE Confidence: 0.8709683

b295c2a5-f3e3-4a40-a4b4-77f9ac8558a8
01:20:20.355 --> 01:20:24.424
base eight as you see here. When
we reduce the base number, there

NOTE Confidence: 0.8709683

4fac6e6b-f44b-4ac9-bc2b-d82401870f2e
01:20:24.424 --> 01:20:26.302
is a need for more permission.

NOTE Confidence: 0.86656743

8db772bd-f013-4e40-9a90-a0bcd2b76e4f
01:20:28.270 --> 01:20:32.842
In base 4, multiple division by
4:00 and then put the remainder

NOTE Confidence: 0.86656743

7a3e1673-bb90-4aff-9b80-6fca37f88a5c
01:20:32.842 --> 01:20:37.795
in the reverse order. So you see
this number is equal to this

NOTE Confidence: 0.86656743

5b1b540a-22aa-4cc5-a4ba-1d52da2ff8ee
01:20:37.795 --> 01:20:39.319
number in base 4.

NOTE Confidence: 0.8287746

6e392af1-3724-429b-af0d-2316a5c116a7
01:20:40.420 --> 01:20:44.554
Base 2 multiple division by
two and then put the

NOTE Confidence: 0.8287746

009633d1-d0cb-4711-bbe9-857d2f35025b
01:20:44.554 --> 01:20:46.219
remainder in the reverse
order.

NOTE Confidence: 0.83031553

bfdc4286-b2cc-417b-8e51-68c525302ec5
01:20:47.800 --> 01:20:51.580
You see that this number
reduced the base number.

NOTE Confidence: 0.83031553

18f8a98f-c1d6-4088-8cc1-13b0a05d4fbb
01:20:51.580 --> 01:20:54.940
More spaces increase the
base number less space.

NOTE Confidence: 0.85412145

b4dfd8c2-2180-4198-84ff-db01c3d367b2
01:20:58.250 --> 01:21:03.019
So. In any basis, you have
to simply just divide by R

NOTE Confidence: 0.85412145

2ffd013f-8b5c-422e-a676-a29a51d5a29d
01:21:03.019 --> 01:21:05.571
and put the remainder in the
reverse order.

NOTE Confidence: 0.8755598

3a4c5118-e58c-4b1c-b2be-bcc775854351
01:21:07.680 --> 01:21:12.542
So I'm done with the topic today
so we can continue. We are

NOTE Confidence: 0.8755598

07f682d9-2e1e-4248-bd39-e1fb3b50b33c
01:21:12.542 --> 01:21:16.656
running out of time. You can
continue the conversion in the

NOTE Confidence: 0.8755598

8fb18bf3-ecc4-4209-a554-f735ecc2a879
01:21:16.656 --> 01:21:21.144
next lecture, which gonna be
next week and I'm happy to take

NOTE Confidence: 0.8755598

116d7d8c-34ff-4957-99b2-d80a51c77584
01:21:21.144 --> 01:21:22.266
your question now.

NOTE Confidence: 0.8734404

56f63c62-9582-479a-8b75-e3e554ab9592
01:21:27.190 --> 01:21:30.430
No, never actually 1 interesting
question is this.

NOTE Confidence: 0.09854281

db4afcb0-c9da-4329-89b3-3374d33a4a8d
01:21:33.790 --> 01:21:34.460
Uh.

NOTE Confidence: 0.86817867

aeafa930-730d-4d44-a2c2-1321952a68c0
01:21:36.240 --> 01:21:40.236
Nick asked that will then the
remainder ever be out of the

NOTE Confidence: 0.17186561

56194344-58b8-4795-b772-176b3fa74245
01:21:40.236 --> 01:21:42.270
target system? Uh.

NOTE Confidence: 0.8694724

be6e1587-385d-4629-a538-376ecc559d69
01:21:43.510 --> 01:21:49.420
Even in the best 16 that we come
up with, all the remains. If you

NOTE Confidence: 0.8694724

b681f8e5-35cb-4718-ad31-422deb40318c
01:21:49.420 --> 01:21:53.754
divide any number by, for
instance, any number M by any

NOTE Confidence: 0.8694724

083c0ce9-c579-4283-9216-2802babae0e4
01:21:53.754 --> 01:21:57.300
number N always, the remainder
is less than N.

NOTE Confidence: 0.8325243

e5c5993a-6243-4bd1-a5fb-94523f1ace6a
01:21:58.640 --> 01:22:03.944
This is the math. I mean a
fact that if you divide any

NOTE Confidence: 0.8325243

5258a3f2-b5c1-4fc8-b41c-8e24daad0e24
01:22:03.944 --> 01:22:08.024
number by a number M always
the remainder is between

NOTE Confidence: 0.8325243

8946c631-f29c-45c9-8497-e96ea603fad7
01:22:08.024 --> 01:22:10.064
the zero up until that.

NOTE Confidence: 0.8557803

a43cf680-dd67-4487-adc4-24efcd40dcf9
01:22:12.230 --> 01:22:17.365
That number that you divide by.
So if you divide any number by

NOTE Confidence: 0.8557803

2bcf8678-aa8a-403a-a26f-7057de4f3077
01:22:17.365 --> 01:22:21.315
16 always the remainder is
between zero up until 15.

NOTE Confidence: 0.8557803

99530913-b156-489f-9009-679ee2cebaa9
01:22:21.315 --> 01:22:26.450
However, in base 16 the digits
for the 10 up until 15 or

NOTE Confidence: 0.8557803

10fc8c61-a2b3-4f26-9763-b408fd8b7c3f
01:22:26.450 --> 01:22:30.005
alphabet. So you have to just
simply replace that.

NOTE Confidence: 0.7585171

6c417e33-5607-4534-993e-817e585eaf39
01:22:30.740 --> 01:22:34.424
So that's a math fact that,
uh, if you divide any number,

NOTE Confidence: 0.7585171

22b7c2af-e75a-42ee-a769-5e4eae113dd6
01:22:34.424 --> 01:22:37.187
for instance by 20, always
the remainder gonna be

NOTE Confidence: 0.7585171

626f63c7-b8e1-4611-a5bf-9f71eb3482f0
01:22:37.187 --> 01:22:38.722
between zero up until 19.

NOTE Confidence: 0.58965874

05367021-299d-4387-a0d0-2784c5c9eaa5
01:22:41.730 --> 01:22:43.940
Since you can set a.

NOTE Confidence: 0.8586003

ce63d165-96ed-4304-914f-d145cdb203ef
01:22:46.490 --> 01:22:52.104
If we want to go from, let's
say, base free to base 20, that

NOTE Confidence: 0.8586003

f760d2a3-3930-4065-98d1-c4e007e49a71
01:22:52.104 --> 01:22:56.114
will discuss that. So 11
immediate solution is this. If

NOTE Confidence: 0.8586003

a7e0cfac-6293-4e4f-9309-426116034ba0
01:22:56.114 --> 01:23:00.525
you want to go from two base two
to base 16.

NOTE Confidence: 0.8675469

1205a1c4-4d47-4e50-b716-abc78291c6db
01:23:01.380 --> 01:23:07.044
So you know how to go from base
two to 10 an now you know that

NOTE Confidence: 0.8675469

a2ed81b7-46eb-4caf-b8c1-0d1fb3af6fc4
01:23:07.044 --> 01:23:11.292
house. We go from 10 to, for
instance 16. So basically you

NOTE Confidence: 0.8675469

892d4869-8e77-4ab1-b262-81b535bac38e
01:23:11.292 --> 01:23:15.894
have to do this. So this is the
topic of next lecture so.

NOTE Confidence: 0.84582734

2f2eea13-03da-44b4-8195-1ff8e1f64284
01:23:16.680 --> 01:23:22.485
Here if you go from a base R to
base our prime, you have to

NOTE Confidence: 0.84582734

96575bf2-0aa2-45c2-bf39-e9733f2e5950
01:23:22.485 --> 01:23:26.355
mediate that conversion through
the decimal system. So you have

NOTE Confidence: 0.84582734

604e7391-4590-4d21-ba6f-ffa336feedb1
01:23:26.355 --> 01:23:31.773
to convert or to the 10 and then
convert base 10 number to the

NOTE Confidence: 0.84582734

4c3eed34-0f2d-46d8-a552-9e9c39ae9486
01:23:31.773 --> 01:23:36.417
base. Our prime you know this by
the algorithm that we explained.

NOTE Confidence: 0.84582734

09e3d8f9-22b8-404c-84f7-966134a790fa
01:23:36.417 --> 01:23:41.061
I mean by just multiplying each
digit to the significant of that

NOTE Confidence: 0.84582734

1c6ffa31-fd29-4f98-897d-177ea20c720d
01:23:41.061 --> 01:23:44.544
position and some together, and
now you know this.

NOTE Confidence: 0.8558113

43ed20dd-32c3-46d9-9eca-8c4c19de2f57
01:23:45.410 --> 01:23:49.034
You have to multiply. You have
to divide the number, but I

NOTE Confidence: 0.8558113

613af65b-b7c2-4854-b966-bfbe268918d9
01:23:49.034 --> 01:23:52.356
prime multiple times and put the
remainder in the reverse order.

NOTE Confidence: 0.77296734

9b1144ba-287f-4515-9dcb-498409d8ac76
01:23:53.150 --> 01:23:57.182
So for any base R2 anyways, our
prime you have to mediated

NOTE Confidence: 0.77296734

0a4ebe88-76f0-42f4-9d77-abaf30521bf2
01:23:57.182 --> 01:23:58.526
through the decimal system.

NOTE Confidence: 0.8351783

87771095-df33-4022-9964-38ee82a13805
01:24:07.250 --> 01:24:11.884
Oh, you just put the when you do
the division as you see here

NOTE Confidence: 0.8351783

1fd9a1ec-2b52-4445-a286-0ee76fbe7a1b
01:24:11.884 --> 01:24:15.856
when you, for instance, here,
you divide by two, you divide by

NOTE Confidence: 0.8351783

5dd2fcc7-7fa1-4a0f-88d7-d3bab822109b
01:24:15.856 --> 01:24:19.828
two. You keep the quotient for
the next division and you put

NOTE Confidence: 0.8351783

c2454bb6-ee56-4f8b-be40-3cf3461ca71d
01:24:19.828 --> 01:24:21.483
the remainder as the digit.

NOTE Confidence: 0.8908909

3cfe15f3-c58e-4d0b-8899-f57177d2030a
01:24:22.060 --> 01:24:25.635
So the remainder is always the
digit of the target system.

NOTE Confidence: 0.8242552

3b2fe182-5f57-4cb7-ac57-d3d271bff8c0
01:24:27.390 --> 01:24:32.135
So you don't have to only the in
base, for instance those bases

NOTE Confidence: 0.8242552

42ed6691-bde3-43ab-94f7-0c581f2893c8
01:24:32.135 --> 01:24:36.150
that have more than 10 digits
they represent by alphabet. You

NOTE Confidence: 0.8242552

1f4c972b-6b2a-4684-af34-ce3190635ef2
01:24:36.150 --> 01:24:39.435
just have to simply replace the
alphabet with the.

NOTE Confidence: 0.5692842

3e8a25e3-a68e-41b5-9b74-e867de63ffd7
01:24:41.000 --> 01:24:42.140
A reminder.

NOTE Confidence: 0.7779499

9f322058-919d-4230-83e0-1219f0a99453
01:24:43.270 --> 01:24:47.950
So let me back to functions here
by divided by 4. Always

NOTE Confidence: 0.7779499

7256f91b-d601-4afd-8725-ff5c9e865001
01:24:47.950 --> 01:24:52.240
recommended is between zero and
three, so all the reminders are

NOTE Confidence: 0.7779499

6194f037-4a44-4ecf-8349-d290e0ca9dae
01:24:52.240 --> 01:24:56.920
valid digits, so you just Simply
put the actual remainder as the

NOTE Confidence: 0.7779499

ada9ad6a-63ed-4aef-a7ce-8882c7efbc4c
01:24:56.920 --> 01:24:58.870
digit in the reverse order.

NOTE Confidence: 0.8253316

33835d6c-fd91-4f53-b383-adcc4d9c3566
01:24:59.570 --> 01:25:04.536
But in the base, all bases that
are more than 10 because they

NOTE Confidence: 0.8253316

b334a1e2-5bdc-4d49-91e2-3e611550fa24
01:25:04.536 --> 01:25:09.884
have digits, which our alphabet
font size 10 is a 11 is B and

NOTE Confidence: 0.8253316

de0ffcae-1ccb-4030-90ef-ce5d6f364156
01:25:09.884 --> 01:25:13.704
etc. Although the remainder
might become 1011 etc. At the

NOTE Confidence: 0.8253316

42d9353a-4078-4d58-baf5-1116518f0c3d
01:25:13.704 --> 01:25:17.524
last step you have to replace it
by the alphabet.

NOTE Confidence: 0.7848682

dd7c4911-4fa9-4933-b7ca-23e779cd32a5
01:25:18.370 --> 01:25:19.370
Process here.

NOTE Confidence: 0.8445202

a6113a17-117e-422d-8992-dd5379fffac9
01:25:20.770 --> 01:25:25.720
This division, sorry this
division by 16, has a remainder

NOTE Confidence: 0.8685108

4e8faa34-d510-4c5c-b56c-fd9ea6542a46
01:25:25.720 --> 01:25:31.010
11. So you put 11 as the for now
as the digit, but.

NOTE Confidence: 0.87677485

a895e196-616d-4ecb-89f4-cfcb89b3962f
01:25:31.710 --> 01:25:35.174
Finally, you have
to replace it by P.

NOTE Confidence: 0.87560594

dc8d0f9c-5549-437e-b245-5889608e6c87
01:25:37.400 --> 01:25:42.916
So you do the division first and
then you put the digits in the

NOTE Confidence: 0.87560594

dcb0467e-40fd-4850-9c71-2fd53d7eec8c
01:25:42.916 --> 01:25:47.250
reverse order and then finally
check that the digits are the

NOTE Confidence: 0.87560594

307015f1-e22c-4fb5-a67c-d19be0c77281
01:25:47.250 --> 01:25:51.978
valid digit in the base number
or not. This happens only for

NOTE Confidence: 0.87560594

78e1c9ce-ecbd-4656-9919-0d07e0b32cb6
01:25:51.978 --> 01:25:56.706
bases that are more than 10
because for the 1011 etc they

NOTE Confidence: 0.87560594

14814055-cab9-426a-850d-fca84083b2a8
01:25:56.706 --> 01:25:58.676
have ABC as the digit.

NOTE Confidence: 0.87244534

4824d320-0eca-4959-a787-09c45538d9c9
01:26:00.640 --> 01:26:04.060
Yes, yes all this stuff gonna be
posted on Blackboard.

NOTE Confidence: 0.8789541

a2f39859-3504-4867-84ae-0a090af69f5a
01:26:05.090 --> 01:26:08.412
Also, I'm going to be on the
office hour after this

NOTE Confidence: 0.8789541

d79ada22-84cd-4e63-9fa7-a280477c2c08
01:26:08.412 --> 01:26:11.734
lecture, so if you have any
other questions I'm happy to

NOTE Confidence: 0.8789541

e5e17abc-5721-43fe-87f9-62e622c55455
01:26:11.734 --> 01:26:12.942
take your question there.

NOTE Confidence: 0.8442266

28bd5dc5-9a38-4818-b898-d1cc3051ac82
01:26:14.910 --> 01:26:19.420
And yeah, also, I put the
whole lecture slides so you

NOTE Confidence: 0.8442266

d7df22a3-55b1-4cba-8fc7-f3de91848531
01:26:19.420 --> 01:26:23.930
can cover other type of I
mean conversion to be ready

NOTE Confidence: 0.8442266

f318acb7-3e53-44df-9c57-10181f9b7c61
01:26:23.930 --> 01:26:25.570
for the next lecture.

NOTE Confidence: 0.8952448

dcf181d3-a0c3-41b2-93e2-d67d1e2d2c5f
01:26:27.330 --> 01:26:30.844
So thank you so much, all of you
and have a great day guys.

NOTE Confidence: 0.8603223

d7cd5ffe-42e5-497e-a412-23778b645121
01:26:37.450 --> 01:26:39.298
It's gonna be our next topic.

NOTE Confidence: 0.82059026

bc64d7f8-5c95-4e87-bf5a-da94878f5df1
01:26:48.370 --> 01:26:50.100
Thank you though. Thank you

NOTE Confidence: 0.90964186

7e57aae6-bcd9-4c5f-b780-b860ab083543
01:26:50.100 --> 01:26:52.470
 Jaxon. And have a great day. 

