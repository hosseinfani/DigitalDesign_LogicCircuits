WEBVTT

NOTE duration:"01:24:02.8610000"

NOTE language:en-us

NOTE Confidence: 0.87359619140625

a8a65115-4dee-4bee-8ad0-8192bcdae694
00:00:00.030 --> 00:00:06.443
So what we said last week
and there were some material

NOTE Confidence: 0.87359619140625

6af77bd1-ba48-4547-94d8-9d5e35ffb08c
00:00:06.443 --> 00:00:11.690
actually remained from the
conversion. So I start a

NOTE Confidence: 0.87359619140625

3f2694ed-7819-47b1-9004-16d786bf96b2
00:00:11.690 --> 00:00:18.103
 conversion topic and to just have a review and then we 

NOTE Confidence: 0.80971896648407

256703a9-45c4-4b42-91e1-c7bec260137f
00:00:18.103 --> 00:00:24.440
continue with. Arithmetic and
negative numbers so.

NOTE Confidence: 0.884197056293488

18dfe109-a8df-42cc-a35f-33fb5359bf3e
00:00:26.020 --> 00:00:27.480
Let me.

NOTE Confidence: 0.646699130535126

fa316284-3e4b-4bd9-8b94-bf46c98214ab
00:00:30.820 --> 00:00:35.940
Yeah, conversion.
And this one now.

NOTE Confidence: 0.89734411239624

9dd766b1-4890-41c0-bd51-1d86fa153a61
00:00:37.060 --> 00:00:39.370
Have to share my screen.

NOTE Confidence: 0.89251971244812

a32b5c54-c0b9-4652-857a-8cd8a491df7b
00:00:40.760 --> 00:00:48.296
So again,
because I

NOTE Confidence: 0.89251971244812

5f6ec19c-051c-49cc-905f-255214f0d327
00:00:48.296 --> 00:00:55.832
only have
one monitor,

NOTE Confidence: 0.765954077243805

8269b3ce-10f6-4e86-a0de-c82adf263666
00:00:55.832 --> 00:01:03.026
so. Please, I
mean, I mean communicate

NOTE Confidence: 0.765954077243805

beef0669-8fa7-4f76-b780-7149a29e2f9a
00:01:03.026 --> 00:01:07.832
with audio regarding your
questions and.

NOTE Confidence: 0.931784808635712

910d3cd5-6f81-4af4-83cf-eb078768e630
00:01:08.860 --> 00:01:13.585
OK, are you able to
see my screen now?

NOTE Confidence: 0.82008558511734

2782fd8f-d114-436d-a9ff-f4fb8a35b67c
00:01:16.360 --> 00:01:20.010
Oh cool.

NOTE Confidence: 0.832984030246735

2c405c81-ca4e-4aa8-be64-844ae8aa68e3
00:01:21.170 --> 00:01:26.282
So let's start with. I mean
before I start, let let take

NOTE Confidence: 0.832984030246735

e4b6e270-d5e4-4061-b9d6-0f844c9fcf7a
00:01:26.282 --> 00:01:30.542
your questions are. Is there any
question regarding the lab

NOTE Confidence: 0.832984030246735

e0bb1929-6272-4a3a-b34f-459d68880e33
00:01:30.542 --> 00:01:31.820
assignment lecture assignment?

NOTE Confidence: 0.814222455024719

d46403e7-5aec-477c-b1b4-ebd514493702
00:01:32.340 --> 00:01:36.982
And, uh, whatever I mean issue
regarding related to the course.

NOTE Confidence: 0.688271224498749

9f5c863a-04cd-444d-82f9-34432d42847c
00:01:38.020 --> 00:01:40.988
Uh, I'm ready to take
your questions.

NOTE Confidence: 0.778850376605988

c1f69df6-4af3-4e55-a7c7-cd8d27ff0e95
00:01:43.210 --> 00:01:50.203
For the last week's assignment
submission, they're gonna do.

NOTE Confidence: 0.623067617416382

e74f6e55-e470-46a9-9827-06e2d002f650
00:01:50.760 --> 00:01:54.168
Uh, I actually.

NOTE Confidence: 0.825321614742279

285c9259-dce5-4926-b0ac-50206599d3bf
00:01:54.930 --> 00:02:00.340
Thursday at two no no
Tuesday midnight, which is I

NOTE Confidence: 0.825321614742279

39eb3f77-aead-4366-ae5f-455dc85e446f
00:02:00.340 --> 00:02:05.209
mean tomorrow midnight which
is Wednesday morning 7:00 AM

NOTE Confidence: 0.825321614742279

97db7161-2380-4438-ba0f-f68ff4152965
00:02:05.209 --> 00:02:06.291
Eastern Time.

NOTE Confidence: 0.798402428627014

07ad6f72-2c72-4611-a502-3d7f17f70797
00:02:07.630 --> 00:02:12.910
So you have, uh, so tomorrow,
midnight, or I mean the day

NOTE Confidence: 0.798402428627014

c81a7a2e-4c5e-44b2-953f-58f0314505e8
00:02:12.910 --> 00:02:14.670
after tomorrow 7:00 AM.

NOTE Confidence: 0.760053038597107

ab80cd18-b36a-48ff-8580-808bdf9064e5
00:02:15.360 --> 00:02:19.353
Uh, regarding I mean for this
submission for this week, the

NOTE Confidence: 0.760053038597107

24773507-aadd-4bc6-bdff-2bf034d18d31
00:02:19.353 --> 00:02:23.346
labs and all the lecture
assignment for this week is also

NOTE Confidence: 0.760053038597107

afd58216-92cb-44d2-9f48-2b78b019ccb3
00:02:23.346 --> 00:02:27.702
already in Black Blackboard, so
you can have a look at the.

NOTE Confidence: 0.75761091709137

4383ec49-30f0-4a5b-a119-87cc3ced5ec4
00:02:28.570 --> 00:02:34.426
Does it need to be able to
handle integers? Are all not

NOTE Confidence: 0.75761091709137

2d2eaaca-7c6c-4ec0-a394-591d1086831d
00:02:34.426 --> 00:02:36.866
really because The thing is?

NOTE Confidence: 0.842282176017761

7cd5a092-406a-4819-b23b-c303c41eef55
00:02:37.000 --> 00:02:43.540
We are coding in C and in see we
don't have any Boolean value, so

NOTE Confidence: 0.842282176017761

77780f23-faf8-41cb-9e1d-7d1af3267d13
00:02:43.540 --> 00:02:49.208
that's why we have to create an
integer value to store the zero

NOTE Confidence: 0.842282176017761

deb7dd1f-3874-4edf-a98b-dcf4fa6acf43
00:02:49.208 --> 00:02:54.876
and ones and. But when when the
user inputs the numbers you have

NOTE Confidence: 0.842282176017761

dc08386a-7e51-45e1-ab65-b42d5c528268
00:02:54.876 --> 00:03:00.544
to check that the numbers is
just between 01. If a user put

NOTE Confidence: 0.842282176017761

95091672-d301-486a-8c92-2fde6a6ddc8a
00:03:00.544 --> 00:03:03.160
for instance two or three, you

NOTE Confidence: 0.823277413845062

6230d9ca-2664-4bc5-8687-868e3ffc2810
00:03:03.160 --> 00:03:08.186
have to. I mean, I mean, just
show an error message to the

NOTE Confidence: 0.823277413845062

3868682b-78dd-46eb-b87b-6be69d5ffb5f
00:03:08.186 --> 00:03:12.322
user, an, uh, basically, say
that please put zero and one

NOTE Confidence: 0.823277413845062

2d111841-d2ba-4e8f-87d8-1a3f0efe9695
00:03:12.322 --> 00:03:16.458
only so you have to check the
entrance for the numbers.

NOTE Confidence: 0.788316667079926

1e3ed81f-12e5-4409-8cf1-e9679a110188
00:03:18.440 --> 00:03:24.160
And still number. I thought they
were the same thing. Uh Oh no,

NOTE Confidence: 0.788316667079926

64c3cc17-c6c4-4336-9f77-2ac7c7c1ce3a
00:03:24.160 --> 00:03:29.000
the the these submissions only
ask for your you win ID.

NOTE Confidence: 0.788242340087891

7783d9ab-1a79-4dd2-b90f-72cda2cc9c31
00:03:29.650 --> 00:03:34.688
Another student number you uwin id. So the first part of

NOTE Confidence: 0.788242340087891

2ebe29d9-1b4f-4a7d-9f8f-ed408c4112be
00:03:34.688 --> 00:03:39.268
your uwindsor email gonna be in
your file names, yeah?

NOTE Confidence: 0.788639605045319

15b180f2-6819-453a-9a3e-ee806d379e91
00:03:40.850 --> 00:03:45.390
Sorry, I meant. Are you
supposed to be able to

NOTE Confidence: 0.788639605045319

fcaf04a7-cb0b-4ca6-975e-ca108dd64972
00:03:45.390 --> 00:03:47.660
handle this alone is like.

NOTE Confidence: 0.693293631076813

8b14b9cc-8dc2-44c8-b7d7-a20a3d5cbc21
00:03:49.150 --> 00:03:55.598
Uh no, no, no. For now I mean
just an integer numbers. Just

NOTE Confidence: 0.693293631076813

c4e71842-8f66-4eab-ad36-0452bc5bd487
00:03:55.598 --> 00:04:00.558
I'm basically just from the
integer numbers, only one at

NOTE Confidence: 0.693293631076813

b419a853-a755-4d31-a167-54abf3c45b58
00:04:00.558 --> 00:04:06.510
zero and one. Yeah in CI I could
say that I mean.

NOTE Confidence: 0.823883652687073

812517c0-f61e-4d89-b21f-37d6a0812233
00:04:06.520 --> 00:04:11.239
Not really, there is no Boolean
value in C language. Boolean

NOTE Confidence: 0.823883652687073

15b2fef6-1c8b-4470-9510-b31dcea0ec5d
00:04:11.239 --> 00:04:15.958
data type and they think that
you mentioned here at the

NOTE Confidence: 0.823883652687073

16e28dc6-edc7-46e0-aa36-21e6f0ed28fc
00:04:15.958 --> 00:04:20.248
underlying bool type. This is an
additional library to the

NOTE Confidence: 0.823883652687073

69c95aed-334e-4093-8adc-dc0cda60add5
00:04:20.248 --> 00:04:25.825
comment to the C compiler as you
know, see extended each year. So

NOTE Confidence: 0.823883652687073

e868752d-9d06-485b-bf7e-21fc451ef48f
00:04:25.825 --> 00:04:30.973
for instance we have different
version of the C compiler for C

NOTE Confidence: 0.823883652687073

daf2d702-cb70-4ac8-b615-ae49bdaa19d2
00:04:30.973 --> 00:04:37.408
and the last version is the C++
and ETC so, but the even in the

NOTE Confidence: 0.814297556877136

2bbfe885-6c05-4b86-ba10-dcee6df1623d
00:04:37.408 --> 00:04:41.965
C++. Although you have a Boolean
data type but in behind the

NOTE Confidence: 0.814297556877136

222f3e63-0042-45a4-9255-c6f5c703fa41
00:04:41.965 --> 00:04:47.590
scene it is just one character,
so it has 8 bits or one byte. So

NOTE Confidence: 0.814297556877136

15270304-78f4-4241-85ad-61f1265be0c3
00:04:47.590 --> 00:04:51.340
basically uh, see doesn't have.
I mean originally doesn't have

NOTE Confidence: 0.814297556877136

68498972-5e3a-43dd-9274-e04568c859d4
00:04:51.340 --> 00:04:55.840
any Boolean data type, it's kind
of a simulation of the Boolean

NOTE Confidence: 0.814297556877136

493dee12-6e5b-49d3-9e9b-b858153cca57
00:04:55.840 --> 00:05:01.090
to as we did, for instance, just
one car represent if it is all

NOTE Confidence: 0.814297556877136

ad3019c5-defa-460b-a0c5-b2bf0354c3b0
00:05:01.090 --> 00:05:06.340
zero, it means that it is zero.
If it is non 0 E it.

NOTE Confidence: 0.749527156352997

0c7da30f-e744-4526-9c8b-5d8ac1ac5664
00:05:06.910 --> 00:05:10.690
The meaning that it
is a binary digit 1.

NOTE Confidence: 0.914905309677124

0ac917b3-6d7c-4269-9c40-ab0d448d379f
00:05:12.400 --> 00:05:14.330
Yeah.

NOTE Confidence: 0.850109875202179

f2e3def8-5724-4658-b37e-01b0d2f67464
00:05:16.290 --> 00:05:21.789
Yeah correct. I mean insomnia. I
mean 99 years in the year that

NOTE Confidence: 0.850109875202179

a0d2ec4d-cc92-4c32-beb7-074b6b2e8975
00:05:21.789 --> 00:05:27.288
the standard the C compiler. So
1999 the standard. I mean the C

NOTE Confidence: 0.850109875202179

8e02f44b-c992-416d-8db0-264492de0f17
00:05:27.288 --> 00:05:32.787
compiler, so it becomes C9 nine.
Yes, I mean there is a course

NOTE Confidence: 0.850109875202179

7a336466-ee63-4af5-9c10-9bdbd6ea5945
00:05:32.787 --> 00:05:37.017
called programming languages. In
that course you study hard to

NOTE Confidence: 0.850109875202179

a13dc59c-68a0-43aa-9501-c2543dab938e
00:05:37.017 --> 00:05:40.401
implement data types in the
programming language. For

NOTE Confidence: 0.850109875202179

1863e7e9-2148-4a1e-aa5f-eed6d07a7c88
00:05:40.401 --> 00:05:44.208
instance, imagine you want to
write your own programming

NOTE Confidence: 0.850109875202179

a1f406de-be95-4808-9708-0b597bcb9fc1
00:05:44.208 --> 00:05:48.861
language. So how to design in
new programming language and how

NOTE Confidence: 0.850109875202179

bcd9f2e4-b654-42cf-9982-5060540be43e
00:05:48.861 --> 00:05:50.130
you provide data.

NOTE Confidence: 0.847020745277405

e0084f1c-b892-4bee-945a-5a61089d342d
00:05:50.150 --> 00:05:51.838
Touch your programming language.

NOTE Confidence: 0.793510019779205

cd87ecec-0932-4246-a3f4-d4b8cfcd1a5a
00:05:52.360 --> 00:05:57.989
So you can discuss this more
there, but as far as we concern,

NOTE Confidence: 0.793510019779205

0ebe66b2-379a-49c2-ac80-bb6155a696a2
00:05:57.989 --> 00:06:03.618
uh, we the binary digits zero
and one you can store the binary

NOTE Confidence: 0.793510019779205

3b509a82-f344-4a21-a410-b4cd94b47901
00:06:03.618 --> 00:06:07.515
digit by string. Just one
character, 01 character one.

NOTE Confidence: 0.923466682434082

9eb52a7b-44bb-448e-b026-b38425d558c3
00:06:07.620 --> 00:06:08.230
Yeah.

NOTE Confidence: 0.934902191162109

b6db4c66-d876-4a2f-bb05-355bfcf0aa38
00:06:10.180 --> 00:06:11.260
So.

NOTE Confidence: 0.767241537570953

6684984a-7740-4221-a906-783b7222b231
00:06:12.630 --> 00:06:16.869
More details about the
programming stuff, uh, you can.

NOTE Confidence: 0.767241537570953

2a7f7612-2366-4140-b53d-bc85e831f98b
00:06:16.869 --> 00:06:21.579
I refer you to that course, so
any other questions?

NOTE Confidence: 0.701325476169586

9ebc4d16-9b56-409f-8161-f59573bb979b
00:06:24.810 --> 00:06:29.325
So since there is
no question, uh?

NOTE Confidence: 0.725357472896576

d3204be9-2e06-44ff-bb3a-a7f4c6ac465e
00:06:30.540 --> 00:06:33.318
So let's start with the uh.

NOTE Confidence: 0.733186542987823

ce55f1d6-77a3-4127-adb0-7766e684974b
00:06:33.850 --> 00:06:39.370
Conversion, so we sat at a
conversion means that, uh?

NOTE Confidence: 0.819952964782715

16307b95-a2c8-4d60-96e1-bae9bb2c82ab
00:06:40.230 --> 00:06:45.342
Converting a number in a base,
for instance R or let me.

NOTE Confidence: 0.719437122344971

84947692-6b8a-4d6f-b951-35a4dc1b1820
00:06:46.810 --> 00:06:49.168
My laser point.

NOTE Confidence: 0.906800627708435

5ed949f0-9797-4d98-8a2b-39f9d7aa4385
00:06:50.090 --> 00:06:54.038
And then we want to see what's
the representation of the same

NOTE Confidence: 0.906800627708435

4cc55b6d-ab17-4ca8-a862-e610f8d37b12
00:06:54.038 --> 00:06:56.012
number but in another place are

NOTE Confidence: 0.868949055671692

b74ce7ef-e1d4-4964-a6b3-c90a2a069f55
00:06:56.012 --> 00:07:00.221
prime. So basically, given a
number in this or you want to

NOTE Confidence: 0.868949055671692

db35eb3e-6572-47f0-8dae-f04460c44b65
00:07:00.221 --> 00:07:01.967
convert it to base our prime.

NOTE Confidence: 0.851030111312866

542e9120-ade5-42a3-ac4a-d0a005e391d4
00:07:02.850 --> 00:07:07.902
We already saw that how we can
represent any number in any

NOTE Confidence: 0.851030111312866

b98b61e7-0b6c-4fe8-b3c7-6de103cc905c
00:07:07.902 --> 00:07:12.112
basis in any radix numbering
system to 10. Basically, the

NOTE Confidence: 0.851030111312866

51c34244-7f95-442d-a4a6-9259852bac15
00:07:12.112 --> 00:07:16.743
idea was that this is the mass
formulation, so each digit

NOTE Confidence: 0.851030111312866

f81f7b03-08f2-4bd1-a029-65854bd2272a
00:07:16.743 --> 00:07:20.953
multiply by the significant of
that position and then some

NOTE Confidence: 0.851030111312866

e9d81228-31cc-44ec-9a62-c4c1d5f2ae76
00:07:20.953 --> 00:07:25.163
altogether. So any number in
any base are gonna be

NOTE Confidence: 0.851030111312866

f64168d7-327c-44db-a40a-771754a8171b
00:07:25.163 --> 00:07:28.952
represented in base 10 or
decimal system by this

NOTE Confidence: 0.851030111312866

41fd6ee4-48f0-4163-9dca-9d1d5d4f723e
00:07:28.952 --> 00:07:29.373
formulation.

NOTE Confidence: 0.910387337207794

0939d221-c149-425e-8ed0-229ca5fe1b26
00:07:30.850 --> 00:07:32.968
So any question.

NOTE Confidence: 0.754570722579956

b9a03a8b-5063-4292-a5f8-a8ce5a7b1d5d
00:07:35.860 --> 00:07:42.581
Another variable yes. Yeah yeah.
I mean the the the basis.

NOTE Confidence: 0.754570722579956

34bf97b4-0487-49e1-9725-260d212f1c04
00:07:42.581 --> 00:07:48.691
So from any Besarta base 10
this is a formulation.

NOTE Confidence: 0.855417490005493

ec6fd9d6-1ec5-4907-abce-ca0b5fb1b65d
00:07:49.470 --> 00:07:54.098
We already saw some example of
it, but The thing is, if you

NOTE Confidence: 0.855417490005493

4ade1201-76f2-4da1-99b6-66ce9a201097
00:07:54.098 --> 00:07:58.726
reach the I mean if you see a
number in decimal system, how

NOTE Confidence: 0.855417490005493

8d04d6b2-0cb5-4b88-b24a-7f6e97fdbd8c
00:07:58.726 --> 00:08:01.930
you represent it in another
numbering system based R?

NOTE Confidence: 0.865671932697296

8d188e6a-7296-4c63-a017-a484d73296a3
00:08:03.030 --> 00:08:09.414
We said that we can imitate or
we can have an idea about the

NOTE Confidence: 0.865671932697296

cb2f0779-2c2f-4a71-b8b7-724050422e57
00:08:09.414 --> 00:08:12.606
conversion algorithm by
converting a decimal number

NOTE Confidence: 0.865671932697296

a8a22e4e-4658-484f-ad1e-bb2c93792f23
00:08:12.606 --> 00:08:15.798
itself. Basically, the
conversion means that creating

NOTE Confidence: 0.865671932697296

8f504e39-a38e-4e63-b88c-caacba7966e1
00:08:15.798 --> 00:08:20.814
the digits in the numbering
system, so if they could created

NOTE Confidence: 0.865671932697296

380e0f5b-637d-423a-8031-966b55fdd1e0
00:08:20.814 --> 00:08:25.830
digits of the decimal number, we
can follow the same algorithm

NOTE Confidence: 0.865671932697296

6570b114-0e9c-4f72-9f4b-5f341abce1e5
00:08:25.830 --> 00:08:29.478
for creating the digits in
another numbering system.

NOTE Confidence: 0.788997650146484

3ab175cb-5909-427c-a507-a6b5fff102c6
00:08:30.120 --> 00:08:35.814
So in a decimal system, if you
want to extract it digits, these

NOTE Confidence: 0.788997650146484

baced74d-ca27-4d30-99e3-6490c16ee17d
00:08:35.814 --> 00:08:41.070
are the digits. So for instance
131 and etc. These are the

NOTE Confidence: 0.788997650146484

b52add8b-29ab-40fb-b055-2a68093460c1
00:08:41.070 --> 00:08:46.326
digits of each position. In
order to do that, you have to

NOTE Confidence: 0.788997650146484

921b22c4-ce6d-44b3-89eb-3b84c856af3e
00:08:46.326 --> 00:08:48.078
simply multiply by 10.

NOTE Confidence: 0.824341118335724

1c6454ef-7081-4f3d-9e7c-34e32c1cfe4e
00:08:48.920 --> 00:08:54.289
I'm sorry, divide by 10. So you
divide by 10. Remainder is the

NOTE Confidence: 0.824341118335724

1124e65d-ca7d-4c76-8f4a-56f06b65de00
00:08:54.289 --> 00:08:59.245
digit. So for instance here in
this example or we show that

NOTE Confidence: 0.824341118335724

f051f429-6b5e-4036-9c72-a950108fb214
00:08:59.245 --> 00:09:01.310
this number divided by 10.

NOTE Confidence: 0.875156819820404

3a3cd5eb-31d8-46a4-a059-0406e5e6378b
00:09:01.940 --> 00:09:05.450
The module operator, which means
that the remainder operator

NOTE Confidence: 0.875156819820404

a66126e8-5a51-4691-ac85-ce855ea0501b
00:09:05.450 --> 00:09:09.350
gives the remainder, so the
remainder of the First Division

NOTE Confidence: 0.875156819820404

36cdc8ec-5061-4915-aa97-f5a8587cef49
00:09:09.350 --> 00:09:10.910
is the 1st digit.

NOTE Confidence: 0.846161901950836

91b95504-0375-440a-89cc-319c8b63d62e
00:09:11.840 --> 00:09:16.845
And then the remainder of the
next division by any quotient,

NOTE Confidence: 0.846161901950836

247be30f-46e9-47ac-85f4-0d391075f175
00:09:16.845 --> 00:09:20.940
the quotient of previous
division, divided again by 10.

NOTE Confidence: 0.846161901950836

13aa26af-1b3b-4c96-a7f9-624bc3a27685
00:09:20.940 --> 00:09:23.670
The remainder is the 2nd digit.

NOTE Confidence: 0.803860545158386

eca93b60-dc78-484d-aef6-8dcc92329fa4
00:09:24.390 --> 00:09:29.046
And then we show that. I mean
you if you continue the

NOTE Confidence: 0.803860545158386

131e5c95-f26c-4a9d-ac3b-aa1a245ef786
00:09:29.046 --> 00:09:32.926
division, the division of
Quotient by 10 U, the remainder

NOTE Confidence: 0.803860545158386

347fb998-66ba-45af-8c1c-13122e1e5cb9
00:09:32.926 --> 00:09:34.090
of the digits.

NOTE Confidence: 0.866566002368927

5a6c6749-6738-4df8-bcb6-b0d81034d839
00:09:35.430 --> 00:09:39.870
So basically this is the way we
generate with digits in decimal

NOTE Confidence: 0.866566002368927

270859f6-f141-4b16-b06c-6122345f1cc4
00:09:39.870 --> 00:09:43.570
system. But The thing is because
the First Division, the

NOTE Confidence: 0.866566002368927

4bd74a5f-60ad-4d15-aaa6-81c78031b319
00:09:43.570 --> 00:09:48.010
remainder of the First Division
is the 1st digit up until the

NOTE Confidence: 0.866566002368927

6bf1bd2f-d221-4c8e-bc8e-5e43967a21f1
00:09:48.010 --> 00:09:51.710
time that you reached the
quotient zero, you put the

NOTE Confidence: 0.866566002368927

7552ba84-86ac-4aad-b5bd-62906561dec1
00:09:51.710 --> 00:09:53.560
digits in the reverse order.

NOTE Confidence: 0.844403147697449

63187cf8-59f0-48fb-802f-83536717d406
00:09:54.690 --> 00:09:59.475
Because the other member of the
last division is the highest

NOTE Confidence: 0.844403147697449

32823c55-ae5a-48ab-a955-13e0ab66c520
00:09:59.475 --> 00:10:03.390
significant digit and the
remainder of the First Division

NOTE Confidence: 0.844403147697449

31ac2ce9-e9b0-424d-8ecd-ce226a2d8c67
00:10:03.390 --> 00:10:05.130
is the 1st digit.

NOTE Confidence: 0.850832402706146

ab939963-6bef-4252-8a82-143e01b00b25
00:10:06.210 --> 00:10:12.900
So we said that we can do the
same in order to bring a number

NOTE Confidence: 0.850832402706146

a8850c71-6d28-4fa4-a220-2286d8c8911f
00:10:12.900 --> 00:10:17.806
in decimal system to other
bases, for instance based 16. So

NOTE Confidence: 0.850832402706146

756d3c5e-28aa-4a35-9775-2efed77bcd7b
00:10:17.806 --> 00:10:19.590
multiple division by 16.

NOTE Confidence: 0.843622326850891

122049e7-615c-4b92-b85f-2deae1164aa1
00:10:20.100 --> 00:10:24.808
And then putting the remainders
in the reverse order. But we

NOTE Confidence: 0.843622326850891

046d7d28-5784-48f1-b168-1fde71bae39e
00:10:24.808 --> 00:10:29.944
have to care. Be careful about
the base numbers that the bases

NOTE Confidence: 0.843622326850891

d929b426-5771-4c17-815e-a4fd0f2ed754
00:10:29.944 --> 00:10:33.796
are greater than 10 because of
for these bases.

NOTE Confidence: 0.813409626483917

58242b27-8814-4503-812c-2b84824124b6
00:10:34.480 --> 00:10:40.290
The digits after 10 are
alphabets. So for instance here

NOTE Confidence: 0.813409626483917

f8e3d4b9-eba6-45fd-b393-8173f0d20511
00:10:40.290 --> 00:10:43.776
11 is, B-15 is FN etc

NOTE Confidence: 0.811900556087494

99a2fae8-d817-4aef-875f-075ec68370c2
00:10:43.776 --> 00:10:49.149
so. We have to simply. I mean
put the correct alphabet for

NOTE Confidence: 0.811900556087494

7cf949e0-4ab5-409f-87aa-fac32ecc443d
00:10:49.149 --> 00:10:53.817
that remainder. This is only for
those bases that are more than

NOTE Confidence: 0.811900556087494

7e3dc586-47ca-408f-bf4c-790831f1880f
00:10:53.817 --> 00:10:59.263
base 10. For instance, PS Eleven
Base 12 is 16 or base 64. We

NOTE Confidence: 0.811900556087494

a5fb0e7a-299c-4850-adc6-3b35ea7eab22
00:10:59.263 --> 00:11:00.430
already saw that.

NOTE Confidence: 0.85226970911026

d6dbfa29-6506-42f3-9aec-0205f77cff61
00:11:02.140 --> 00:11:06.612
So again, another example would
be this. I mean from base 10 to

NOTE Confidence: 0.85226970911026

ef65c7f0-40f9-428a-bd6b-c689337345f2
00:11:06.612 --> 00:11:10.740
base eight. So you have to
create the digits of phase eight

NOTE Confidence: 0.85226970911026

e4aff71b-4542-489e-87a1-694cec656dc0
00:11:10.740 --> 00:11:15.212
so you have to simply divide the
number by 8. The first remainder

NOTE Confidence: 0.85226970911026

48511c1a-42b3-46ec-8d34-053eff2d7102
00:11:15.212 --> 00:11:16.588
is the 1st digit.

NOTE Confidence: 0.79442423582077

f3df0198-c9ae-4eb1-9b97-2d81978017b4
00:11:17.540 --> 00:11:22.220
And the quotient divided by 8
the 2nd reminder, the 2nd digit.

NOTE Confidence: 0.81249475479126

6dc25f68-c94b-440e-b5b3-7965d7703778
00:11:23.040 --> 00:11:28.710
So. Multiple division by 8 and
then put the reminders in the

NOTE Confidence: 0.81249475479126

33fb3b03-03c4-4f5d-9c3f-1c4ce59e2505
00:11:28.710 --> 00:11:33.150
reverse order so the same number
in decimal system cannot be this

NOTE Confidence: 0.81249475479126

840c25e4-0c35-4eb7-b76d-af63c22e3301
00:11:33.150 --> 00:11:34.630
number in this 8.

NOTE Confidence: 0.841580390930176

821ddf32-65af-4cf4-b89a-67bddf7e913a
00:11:37.110 --> 00:11:43.350
Space 4 the same. So the same
algorithm, the number divided by

NOTE Confidence: 0.841580390930176

96539575-8ad3-4a13-b39a-e88f4ec45363
00:11:43.350 --> 00:11:48.550
4. The first amended the First
Division, the 1st Digit.

NOTE Confidence: 0.790520250797272

b5aefb5b-6c0d-4ff1-9efc-171812764f18
00:11:49.290 --> 00:11:53.184
And the quotient of the First
Division divided by 4 because

NOTE Confidence: 0.790520250797272

226a254c-7cf9-44b2-b1fd-a8e4bc8d63fc
00:11:53.184 --> 00:11:57.432
the 2nd digit, the remainder to
come the 2nd digit an itself.

NOTE Confidence: 0.875924110412598

b8040502-5883-4f19-be9e-14a92117e861
00:11:58.440 --> 00:12:00.624
So this is the number in base 4.

NOTE Confidence: 0.856807827949524

00bcd498-b01f-429b-a262-9e1b8a269bb7
00:12:01.840 --> 00:12:06.637
Base two the same as you see if
you lower the base number

NOTE Confidence: 0.856807827949524

0c462b77-2a0a-4f2e-8d86-065db826fdbd
00:12:06.637 --> 00:12:09.958
because you are lowering the
significance of his position,

NOTE Confidence: 0.856807827949524

dc2708f0-bb06-4e9e-800e-f428481703d9
00:12:09.958 --> 00:12:13.279
you need more position to
represent the same number.

NOTE Confidence: 0.838060736656189

ae5f82de-25bf-4b1e-930b-6a7fb9002e4a
00:12:14.550 --> 00:12:18.906
However, questions if you
increase the base number, for

NOTE Confidence: 0.838060736656189

08f13b08-fa04-4a30-91c1-e8ed562738ee
00:12:18.906 --> 00:12:24.714
instance to be a 16, you need a
less number position too.

NOTE Confidence: 0.774168968200684

33c846f2-fd9b-4ad6-8f82-69da9dc9524f
00:12:24.730 --> 00:12:27.952
Represent the same decimal
number you already saw that,

NOTE Confidence: 0.774168968200684

dc536362-3acb-49df-b7d0-37ccb5f05e15
00:12:27.952 --> 00:12:31.532
uh, because there isn't, is
that the signal. If you

NOTE Confidence: 0.774168968200684

ccb154a5-1d8e-4334-a190-50f59406c89d
00:12:31.532 --> 00:12:34.396
increase the significant you
increase, they want to

NOTE Confidence: 0.774168968200684

f74177aa-fa4e-4db8-aa0c-76ba40424833
00:12:34.396 --> 00:12:36.186
represent wider range of
numbers.

NOTE Confidence: 0.814460575580597

b498e7e4-9c80-4dc1-8b2a-09aa19d1aa8a
00:12:38.020 --> 00:12:44.070
So here's the basic algorithm,
so any decimal number to any

NOTE Confidence: 0.814460575580597

b70792d5-3461-472c-9580-b736e8b28305
00:12:44.070 --> 00:12:51.220
other drinks over or would be
more than 10 or less than 10.

NOTE Confidence: 0.814460575580597

0a6b89bb-8a68-4bec-892e-7a596ac3a8d8
00:12:51.220 --> 00:12:54.520
Just divide the number by over.

NOTE Confidence: 0.799917340278625

cad0b33d-c841-4df9-8306-f111afa5f971
00:12:55.450 --> 00:13:01.300
The cautions the first number is
the First Division is it has the

NOTE Confidence: 0.799917340278625

ae24a558-c6c6-4831-8707-14f6ab85b583
00:13:01.300 --> 00:13:05.350
number itself, but the other
divisions, the quotient of

NOTE Confidence: 0.799917340278625

538f5b68-fbc7-4dbc-ad57-3e1b86cf3459
00:13:05.350 --> 00:13:09.850
previous division divided by R
Keep the remainder as the

NOTE Confidence: 0.831151187419891

60cfcc15-93cd-4e46-82ed-b5922459b130
00:13:09.850 --> 00:13:14.193
digits. And then put the
remainder in the reverse order

NOTE Confidence: 0.831151187419891

7e2f1a57-0de2-47cb-98b9-e7b27594bf61
00:13:14.193 --> 00:13:18.964
and you have to be careful about
those bases. More than 10. You

NOTE Confidence: 0.831151187419891

b0fe3ae2-4e45-4653-9234-26be54d262ac
00:13:18.964 --> 00:13:22.634
have to substitute the remainder
with the correct alphabet for

NOTE Confidence: 0.831151187419891

e3b260b9-08b0-4796-b18b-af276b39b658
00:13:22.634 --> 00:13:25.937
the correct region. For
instance, if they remain there

NOTE Confidence: 0.831151187419891

ba86ea62-2d26-4e3b-a73c-89245ebd3ca0
00:13:25.937 --> 00:13:31.809
is 15, you have to replace it by
app and we said that this is a

NOTE Confidence: 0.831151187419891

4714cdd5-312a-4289-ad35-dbbd60134ca5
00:13:31.809 --> 00:13:36.213
mass formulation that any number
a / B. The remainder is always

NOTE Confidence: 0.831151187419891

5bb2004c-f0e8-42cf-9775-61bf80d44fb2
00:13:36.213 --> 00:13:37.314
less than be.

NOTE Confidence: 0.84099680185318

492f58d2-65f0-4577-b9e5-130d39383b5e
00:13:37.890 --> 00:13:42.670
So their remainders of these
divisions are always less than

NOTE Confidence: 0.857933223247528

b8b7b1fc-9125-4e33-b766-719d4cbd8b20
00:13:42.670 --> 00:13:47.932
R. You never see it a reminder
that which is our or greater

NOTE Confidence: 0.820283174514771

d8125b8d-1f77-4217-a13b-2c1a7174a6ce
00:13:47.932 --> 00:13:51.770
than. So that's why at the
end of the day, the

NOTE Confidence: 0.820283174514771

c7106eb1-2c67-4222-8dc3-489316ecdf54
00:13:51.770 --> 00:13:54.461
remainders are all valid
digits. The only thing is

NOTE Confidence: 0.820283174514771

d81a087b-2dd2-463e-ba08-76a2877252ce
00:13:54.461 --> 00:13:57.750
that for the base greater
than 10, you have to replace

NOTE Confidence: 0.820283174514771

81537d98-1063-4c65-8cbe-cd2a7008ff53
00:13:57.750 --> 00:13:58.946
it with the alphabet.

NOTE Confidence: 0.868080139160156

926183ce-ea1e-446e-8276-8d7cede52df2
00:14:00.190 --> 00:14:05.390
So you would ask that is it
possible to convert any base or

NOTE Confidence: 0.868080139160156

8abab3b3-b3f7-4b06-aff5-a327a18a9ddf
00:14:05.390 --> 00:14:10.590
to any other bases are prime and
the answer is correct. It is

NOTE Confidence: 0.868080139160156

90d95712-f8c7-4f9a-aeff-b065b863bce2
00:14:10.590 --> 00:14:15.790
possible and you have to mediate
that full base 10. So you have

NOTE Confidence: 0.868080139160156

3640f1ad-680e-4a3b-97ef-f26a5f9694ec
00:14:15.790 --> 00:14:20.990
to convert any number in base R,
bring it to decimal system and

NOTE Confidence: 0.868080139160156

75eb0ff8-4af1-446b-bde6-da657946d4b0
00:14:20.990 --> 00:14:25.790
found the decimal system you
bring it to the base or prime.

NOTE Confidence: 0.859839081764221

04a87a6d-120e-4fa2-a3a9-8ccec1671228
00:14:26.490 --> 00:14:30.550
So the first part of the
algorithm already know that

NOTE Confidence: 0.859839081764221

cb677f81-8e43-47b1-9996-b2ea98604254
00:14:30.550 --> 00:14:35.016
using that math formulation and
the second part is just dividing

NOTE Confidence: 0.859839081764221

e9ac6398-9918-40f1-a97d-09887f4bd7d8
00:14:35.016 --> 00:14:36.234
by our crime.

NOTE Confidence: 0.776196360588074

3beb91a9-8813-46eb-9897-1c3b23ddaed1
00:14:37.190 --> 00:14:40.350
And then putting the
remainder in the reverse

NOTE Confidence: 0.776196360588074

ab04ebc9-d6ac-490f-bcc0-f22651e8c874
00:14:40.350 --> 00:14:44.695
order. So any besarta Benny
base our prime should be done

NOTE Confidence: 0.776196360588074

b899ddca-8832-4fb0-9502-69dac4f3664b
00:14:44.695 --> 00:14:46.275
through the decimal system.

NOTE Confidence: 0.834472298622131

0e958af0-4146-4ca8-baab-e81bc3dbbf24
00:14:48.500 --> 00:14:53.022
For instance, if this is the
number in base 16 Ann, I want to

NOTE Confidence: 0.834472298622131

5c3e0b28-e4c0-4dbc-9da6-ef66e4e6ca4c
00:14:53.022 --> 00:14:57.867
bring it to base 8. First of
all, I have to bring it to base

NOTE Confidence: 0.834472298622131

df4f4d6a-6824-4c0a-a5d2-98f074c1a84a
00:14:57.867 --> 00:14:59.482
10. So by math formulation.

NOTE Confidence: 0.82390820980072

b2a9e02b-54ff-45a9-9732-917173bc03db
00:15:00.170 --> 00:15:04.517
Each digit multiply by the
significant of that position.

NOTE Confidence: 0.818045496940613

8744a31c-e2e3-4a34-b121-e05e32c6e47e
00:15:05.270 --> 00:15:06.830
And then sum them together.

NOTE Confidence: 0.862520456314087

b65b84b6-2971-4335-bb30-8b142a408197
00:15:08.390 --> 00:15:11.882
And then this is the decimal
number. I have to bring this

NOTE Confidence: 0.862520456314087

2fe5805b-281d-455e-9cc0-b8230d34a424
00:15:11.882 --> 00:15:15.083
decimal number to base ten
base eight. So you have to

NOTE Confidence: 0.862520456314087

da236725-e158-404e-b2d1-fa11178adf5a
00:15:15.083 --> 00:15:18.284
divide by 8 and then put there
remained in the reversal.

NOTE Confidence: 0.923759520053864

84271f56-1715-4f74-8362-c714ecfa54d5
00:15:19.340 --> 00:15:20.700
And here is the result.

NOTE Confidence: 0.859733879566193

46bc8cd5-a02f-4b46-af86-b706a3d3841c
00:15:22.860 --> 00:15:30.492
So far we did converting only
the integer part of the numbers

NOTE Confidence: 0.859733879566193

1cfcbd6f-c51e-4a8a-b116-0d68ef698643
00:15:30.492 --> 00:15:36.216
of. However, if the number has
some fraction numbers.

NOTE Confidence: 0.878751456737518

11c9aec4-02b9-4612-b5ce-59f19b7b7513
00:15:37.180 --> 00:15:42.809
So the way we did for come up
with an algorithm for conversion

NOTE Confidence: 0.878751456737518

cfb1a2e8-5c55-4e71-8f3d-302e06cf2fbb
00:15:42.809 --> 00:15:48.005
was just to imitate or to see
what's the algorithm. When we

NOTE Confidence: 0.878751456737518

52e26596-c62c-4217-bae7-e52d8bea7928
00:15:48.005 --> 00:15:52.768
convert a decimal number to
itself just to see how we

NOTE Confidence: 0.878751456737518

41ce3e8d-0f58-4a3a-a1ec-bda16a6449af
00:15:52.768 --> 00:15:58.830
extract it digit. The same is
here if you want to see how I

NOTE Confidence: 0.878751456737518

7814deee-3ca2-4484-be1a-117a4a805226
00:15:58.830 --> 00:16:00.995
can convert a number with

NOTE Confidence: 0.77362471818924

7a8d1a7d-98cd-4497-bb3d-e05605b8e7b9
00:16:00.995 --> 00:16:06.363
fraction part. Uh, I assume
that I want to convert a

NOTE Confidence: 0.77362471818924

cc095e20-16fa-4238-9a8d-cba965e4dcba
00:16:06.363 --> 00:16:10.206
number in decimal system with
fraction for two itself.

NOTE Confidence: 0.815627872943878

05c002e9-c44c-4bd8-b29a-6abb65083386
00:16:12.780 --> 00:16:18.540
It is trivial, but it shows us
what is the algorithm. So

NOTE Confidence: 0.815627872943878

ffbf38bd-4a89-4d8a-b367-b0563801fbdc
00:16:18.540 --> 00:16:23.340
imagine we have this a fraction
number in decimal system.

NOTE Confidence: 0.862993836402893

cb3d9bf5-c63a-448b-a7ae-ffadfe91165d
00:16:24.340 --> 00:16:29.110
If I want to generate the
digits for instance 26501,

NOTE Confidence: 0.862993836402893

b23a8645-9989-42d2-a156-ba0dcd4a0541
00:16:29.110 --> 00:16:35.311
what they do is that simply if
you multiply this digit by 10,

NOTE Confidence: 0.862993836402893

3fede95e-9865-46f3-bf9d-7d09873d1d6e
00:16:35.311 --> 00:16:41.035
you extract the 1st digit at
the position of attempt to the

NOTE Confidence: 0.862993836402893

9b8d5c76-5ed8-4169-9ce2-dfdbaf001dff
00:16:41.035 --> 00:16:42.943
power of minus one.

NOTE Confidence: 0.921723306179047

0c0ea08f-2917-4caf-bf1d-90e27ac3c594
00:16:43.960 --> 00:16:47.590
If you multiply by 10 to the
power of 2.

NOTE Confidence: 0.849842548370361

a8950d1f-6b5d-41b8-82a9-7f342e737de8
00:16:48.190 --> 00:16:50.498
You extracted digit 46.

NOTE Confidence: 0.816753089427948

aa1f8d48-0910-485c-8b8f-9b252a16a780
00:16:51.570 --> 00:16:56.730
Because 10 to the power point is
2 * 10 to the power of two

NOTE Confidence: 0.80961138010025

3557cab0-c5b9-4927-81d7-00a9d3f1b36d
00:16:56.730 --> 00:16:59.605
exacted this. So in another

NOTE Confidence: 0.876200258731842

5285812d-f56f-4445-b1a3-51aa35206703
00:16:59.605 --> 00:17:04.738
word. Each time you multiply by
10, you shift the number to the

NOTE Confidence: 0.818954885005951

6c4321e4-c6de-4294-9951-87df89561adc
00:17:04.738 --> 00:17:10.500
right. The first multiplication
by 10 the 1st Digit II.

NOTE Confidence: 0.818954885005951

26bd96fc-2cab-43fc-82f7-7940523559cd
00:17:10.500 --> 00:17:14.420
Multiplication about 10 the 2nd
digit and etc.

NOTE Confidence: 0.858491957187653

4b6109fa-387e-43cb-90f3-5b46ae4ad966
00:17:15.270 --> 00:17:20.840
So you see that if you multiply
the fraction part.

NOTE Confidence: 0.76076340675354

23b9dc02-2f79-48c4-abc3-e543c741b9bd
00:17:21.510 --> 00:17:24.570
Why two sorry by 10.

NOTE Confidence: 0.908231437206268

7a28cbda-696c-4d50-a4f2-ad2b661b1f5b
00:17:25.340 --> 00:17:27.140
So this number by 10.

NOTE Confidence: 0.729774177074432

2dee27f3-173e-4e70-95ea-6839fa51bfe5
00:17:27.670 --> 00:17:33.071
The integer part of the result
gonna be the first digits.

NOTE Confidence: 0.930607259273529

68d0460f-842b-4195-a7e9-baf04a601377
00:17:34.280 --> 00:17:36.090
And then if you continue.

NOTE Confidence: 0.899860799312592

8ff2e720-1fd9-48d1-94b4-0391edab5dc1
00:17:36.750 --> 00:17:40.560
So you just bring the remainder
of the fraction part.

NOTE Confidence: 0.824871063232422

0bb1062d-f749-442e-adc6-ff5e6fd60dcc
00:17:41.400 --> 00:17:46.483
And then multiply by another 10.
So the six gonna be the integer

NOTE Confidence: 0.824871063232422

7b2c3bf1-4eae-48a2-8e44-fb2c1f1fbda6
00:17:46.483 --> 00:17:48.047
part of the result.

NOTE Confidence: 0.929778456687927

7e804968-752a-4155-9872-d7ca573b0e6f
00:17:48.770 --> 00:17:50.540
And you continue this way.

NOTE Confidence: 0.915485501289368

88b230ae-f7e8-4867-b260-ff2935b5b719
00:17:51.040 --> 00:17:54.076
So the number multiplied by 10.

NOTE Confidence: 0.86903589963913

78e9347d-b9ff-48e1-b907-a9064040e7f0
00:17:54.700 --> 00:17:57.580
The integer part of the result
is the 1st digit.

NOTE Confidence: 0.854488551616669

a0e6eb20-18c9-40a1-9776-48620fc0e006
00:17:58.290 --> 00:18:00.946
You continue with the
remainder fraction for it.

NOTE Confidence: 0.864634990692139

d7575b6c-1c9b-4b75-9d3f-2adb052b8368
00:18:02.270 --> 00:18:09.147
By 10 so the next 6 and
then the remainder is 501. So

NOTE Confidence: 0.864634990692139

981cd789-7eab-4540-83c9-25b3f1e20837
00:18:09.147 --> 00:18:14.966
you multiply 501 with ten 5
gonna be the next agent.

NOTE Confidence: 0.883687078952789

3bc52339-c200-4a9e-99d7-e74f131d32dd
00:18:15.850 --> 00:18:20.902
Up until the last that you
received the zero, so you put

NOTE Confidence: 0.883687078952789

4f0d7f39-591c-4759-9064-2ed461e0553d
00:18:20.902 --> 00:18:23.428
these digit in the right order.

NOTE Confidence: 0.866891503334045

5e478785-f4f3-4573-ba96-a04706563841
00:18:23.980 --> 00:18:27.330
So you see, the difference
between the conversion of the

NOTE Confidence: 0.866891503334045

3df61754-6307-4c79-a5af-d2879ea24660
00:18:27.330 --> 00:18:31.015
integer part and the fraction
part in the integer part. You'd

NOTE Confidence: 0.866891503334045

c4eb334c-cee2-4249-9173-3b3e96091767
00:18:31.015 --> 00:18:35.035
move divide by 10 and then put
the remainder in the reverse

NOTE Confidence: 0.866891503334045

dc0d5ad5-390c-4b9e-9afc-919e4aa7893e
00:18:35.035 --> 00:18:38.720
order in the fraction conversion
in order to create the digits,

NOTE Confidence: 0.866891503334045

ed6c7312-4715-421c-98b7-ffe9f48543be
00:18:38.720 --> 00:18:42.740
you multiply by 10 and then put
it in the right order.

NOTE Confidence: 0.875239133834839

51b88ec7-314f-4c6d-be78-d889076cacc8
00:18:44.440 --> 00:18:50.061
So. The same algorithm is for
converting any fraction number

NOTE Confidence: 0.875239133834839

652d092e-f10d-4522-8ca2-152fef7ccced
00:18:50.061 --> 00:18:53.922
in decimal system to any
fraction number. In other

NOTE Confidence: 0.875239133834839

be3b2173-d952-4186-a0b3-4ae39284d4df
00:18:53.922 --> 00:18:59.070
systems information space 16. So
let's have a look at an example.

NOTE Confidence: 0.857832491397858

bf29749d-1f77-4c22-8564-aa89b3beb0ed
00:18:59.780 --> 00:19:05.264
So here's an example. So this is
the number in base 10.

NOTE Confidence: 0.869379341602325

6ebf9e01-dd46-4c4a-a463-c3a259c89d2e
00:19:06.570 --> 00:19:12.268
So here I just wanted to create
the digits not in base 10, but

NOTE Confidence: 0.869379341602325

7d33fe63-ea46-447e-b712-f39984c97abe
00:19:12.268 --> 00:19:16.745
in base 16. So I have to
multiply these number this

NOTE Confidence: 0.869379341602325

dd31bd6e-2a9f-419b-9dc3-016034c20956
00:19:16.745 --> 00:19:21.222
number to this 16. So this
number multiplied by 16 the

NOTE Confidence: 0.869379341602325

511c372e-7b7f-43f3-b939-7254d63ebaba
00:19:21.222 --> 00:19:24.885
integer part of the result is
the 1st digit.

NOTE Confidence: 0.87262099981308

61b568a4-c42b-49ef-8ab4-c96eaba652a8
00:19:26.640 --> 00:19:30.424
And the remainder fraction part
of the results.

NOTE Confidence: 0.841494739055634

a0db4595-8721-469f-b0ad-df3bb5c05c1d
00:19:31.260 --> 00:19:37.376
Multiply by 16 the integer part
gonna be the next digit.

NOTE Confidence: 0.903202950954437

343cdce9-29af-4c1e-89f6-52a9305539ea
00:19:38.910 --> 00:19:43.156
And then the remainder fraction
part of the result multiplied by

NOTE Confidence: 0.736395299434662

63ba50f0-cab8-40d9-9c2d-30e438a1086a
00:19:43.156 --> 00:19:49.057
16. 13 Is the next
digit 13 in base 16 is

NOTE Confidence: 0.736395299434662

2b0cb280-a0ae-4c04-be20-2fbe3d930d98
00:19:49.057 --> 00:19:50.146
equal to alphabetti?

NOTE Confidence: 0.86581826210022

e7363290-9a87-4623-b2c2-68e14ba7aee7
00:19:51.800 --> 00:19:54.929
And then the remainder
fraction form multiply

NOTE Confidence: 0.86581826210022

9a179921-16e6-42de-b422-ec4204457330
00:19:54.929 --> 00:19:57.164
by 16 the next digit.

NOTE Confidence: 0.852246880531311

a5b488c7-afa8-4f44-af04-76ec2b13bbf0
00:19:58.680 --> 00:20:05.596
So you see that the algorithm is
this. Multiply the number by the

NOTE Confidence: 0.850802421569824

5836b2f2-259b-47ef-a7ae-4a3878804637
00:20:05.596 --> 00:20:10.966
base. Keep the integer part of
the result as the digit and then

NOTE Confidence: 0.850802421569824

ee611e60-20bf-4a6d-bb8a-95a0235fd6b7
00:20:10.966 --> 00:20:14.098
continue with the remainder
fraction part of the result.

NOTE Confidence: 0.904809474945068

6318b7b7-de78-4cbb-84a7-4aee93cc82a7
00:20:15.490 --> 00:20:18.276
I put the digits in the right

NOTE Confidence: 0.905160784721375

2204c3a3-578e-454d-9b61-9938a7ab69bb
00:20:18.276 --> 00:20:24.730
order.
So.

NOTE Confidence: 0.879128336906433

2dd5c08e-a88b-42cd-875e-4de266358568
00:20:26.120 --> 00:20:30.069
For instance, from 7:50, the
same 10 to 4% and 1:50

NOTE Confidence: 0.879128336906433

31fd259c-83ad-4789-9105-71b05aca5696
00:20:30.069 --> 00:20:33.659
December. So you have to
simply multiply by two here.

NOTE Confidence: 0.879128336906433

ca9631a5-34fd-43df-92e1-a02e9b8210b7
00:20:33.659 --> 00:20:39.044
Here we have to multiply by 4
or by 8, so you could do this

NOTE Confidence: 0.879128336906433

c86b4bb3-9c0d-4b0c-9983-c7af1efa8388
00:20:39.044 --> 00:20:42.993
just by simply using an Excel
sheet instead of just using

NOTE Confidence: 0.879128336906433

254f4d3f-3da6-41b5-8f5e-962481555e15
00:20:42.993 --> 00:20:47.301
Calculator and then write in
a paper. So let me show you

NOTE Confidence: 0.879128336906433

ebaad5b4-fd45-4515-a594-87099a07f229
00:20:47.301 --> 00:20:51.609
an Excel sheet how we can
create an Excel sheet to do

NOTE Confidence: 0.879128336906433

4852d420-cce3-43e1-b9de-163b23128578
00:20:51.609 --> 00:20:52.686
that for us.

NOTE Confidence: 0.778340876102448

bcbee02d-2650-46a6-81ad-df94e979a978
00:20:53.790 --> 00:20:57.230
So let's open Excel.

NOTE Confidence: 0.722863137722015

04e112b0-ed77-4d64-a096-c272f1f0aa8d
00:21:12.000 --> 00:21:17.460
Oh, I already created this Excel
sheet and I will put it in the

NOTE Confidence: 0.890207231044769

87b5fb7d-e106-4aa6-8462-b75e56dad7f9
00:21:17.460 --> 00:21:23.154
blackboard. But just to show you
how to use a Excel to do that.

NOTE Confidence: 0.74551922082901

83eb8382-0a78-464e-bd5d-42ca0cc5ef59
00:21:25.390 --> 00:21:31.928
So if you are given an as your
number and you wanna uh, convert

NOTE Confidence: 0.74551922082901

7deed0c3-b1a8-454c-8b63-b86034eb5e63
00:21:31.928 --> 00:21:33.796
it to base R.

NOTE Confidence: 0.822747111320496

62677e9e-7eb9-4b66-a74f-b8f157470754
00:21:35.320 --> 00:21:41.510
Uh. Imagine we just wanted
to do the integer part,

NOTE Confidence: 0.822747111320496

6cafe81d-0582-4f14-8e6b-357283ef0ab2
00:21:41.510 --> 00:21:46.350
converting the integer part an
imagine N is in the decimal

NOTE Confidence: 0.77754807472229

8f9258a5-558d-4203-8824-32b5eab5c8b8
00:21:46.350 --> 00:21:53.332
system. So an if N is
for instance 435 and we want to

NOTE Confidence: 0.77754807472229

5d6fcf88-f6f5-434d-a876-93294ef659ef
00:21:53.332 --> 00:21:57.260
bring it to base 174 or base 3.

NOTE Confidence: 0.883842945098877

21484a97-95f9-401e-8753-384ce6e16025
00:21:57.940 --> 00:22:03.205
So basically what we have to do
is that this has only the

NOTE Confidence: 0.883842945098877

cfbfa80b-0083-4b37-8ab1-f8649fbf7492
00:22:03.205 --> 00:22:06.040
integer part, so we have to do

NOTE Confidence: 0.643314242362976

852c9872-f362-4158-93b9-01bd8bbcb0bc
00:22:06.040 --> 00:22:12.869
division. So the division
in the Excel the

NOTE Confidence: 0.643314242362976

534bd340-e653-4afe-9c1e-190de46f3c22
00:22:12.869 --> 00:22:16.137
function called Quotient Sorry

NOTE Confidence: 0.889825940132141

160cfef7-d4b1-487c-a509-28daa9a51764
00:22:16.137 --> 00:22:20.689
mode. Told me that the
remainder, the remainder

NOTE Confidence: 0.889825940132141

ca4a8c48-80c8-48ad-90f8-6d411a51ea04
00:22:20.689 --> 00:22:22.000
of this number.

NOTE Confidence: 0.893580377101898

f99d2eab-586b-4820-94f0-1cefae320e04
00:22:23.220 --> 00:22:25.179
By this number.

NOTE Confidence: 0.857453227043152

7ccd0dba-0657-4e21-ba4b-80f43b0a2036
00:22:25.950 --> 00:22:30.188
So this is the reminder and you
have what is the caution you

NOTE Confidence: 0.857453227043152

31864048-e67e-44cc-acaa-29bfb926ee8a
00:22:30.188 --> 00:22:33.448
have to continue the division
with the quotient. So here.

NOTE Confidence: 0.65007871389389

2e2919b7-bca9-413f-a914-e0aad21451bf
00:22:34.320 --> 00:22:39.820
Uh, in the Excel there is a
function call options here.

NOTE Confidence: 0.771807253360748

e1d0846b-faf4-45d9-9ef2-4020b2375961
00:22:41.330 --> 00:22:44.837
The quotient of this
number, oh sorry.

NOTE Confidence: 0.111705005168915

5538d49f-0b97-4dba-b12e-61b338d45781
00:22:48.330 --> 00:22:52.360
Potions?

NOTE Confidence: 0.835491716861725

a0da5b04-c213-4fe6-b3ba-38490f0f2a2b
00:22:54.430 --> 00:22:57.112
The quotient of this number and

NOTE Confidence: 0.819914400577545

bab0b0ce-0d26-461e-b1a3-e4cabc839e0e
00:22:57.112 --> 00:23:02.817
this number. Who is the coach?
And so you have to continue with

NOTE Confidence: 0.819914400577545

24f6acf4-1ab3-4f36-ac63-e0cc023f59ee
00:23:02.817 --> 00:23:05.593
the division of the question
with the tree.

NOTE Confidence: 0.880584836006165

ef180154-3036-4bbb-aaeb-f8b9346848e3
00:23:06.130 --> 00:23:08.290
So I'll just repeat this, we

NOTE Confidence: 0.840855002403259

b50adff3-8ada-41f7-b72e-d8de48c63c22
00:23:08.290 --> 00:23:13.833
here. And then the
remainder of the divisions,

NOTE Confidence: 0.840855002403259

3a25ed38-e54a-4535-a638-dc59d0f4b8ce
00:23:13.833 --> 00:23:16.229
and then the cautions.

NOTE Confidence: 0.830404996871948

b32da42a-4411-44bf-81ac-239697ae7c5d
00:23:17.640 --> 00:23:22.242
So you see that, uh, if you
convert 435 in decimal system to

NOTE Confidence: 0.830404996871948

4d1a3999-19f2-436b-9275-a68b0e5a0f6d
00:23:22.242 --> 00:23:26.844
pay 3, these are the digits. So
these are the remainders. So you

NOTE Confidence: 0.830404996871948

942efa1c-dd6e-4920-a443-dde097b8123a
00:23:26.844 --> 00:23:31.092
have to put the remainder in the
reverse order so the reverse

NOTE Confidence: 0.830404996871948

1ea4ce21-6d78-4efe-8288-5c3d7008b4b3
00:23:31.092 --> 00:23:32.862
folder gonna be one too.

NOTE Confidence: 0.851998031139374

c802a8fa-3c3b-4107-a74d-54c9c208dd6f
00:23:33.550 --> 00:23:40.453
1010 so this is the
number in base free.

NOTE Confidence: 0.838467299938202

da84dd92-bd87-4525-a44f-a89361a834ec
00:23:41.530 --> 00:23:47.151
So 435 because 121010 in Base
Street. But this was just

NOTE Confidence: 0.838467299938202

01a4a2fb-1346-45bd-82da-8690ae7e421f
00:23:47.151 --> 00:23:51.750
conversion to integer part. How
about the fraction form?

NOTE Confidence: 0.841864883899689

876606e6-3e5a-4f6c-ba7f-891e0cdf9bb4
00:23:52.300 --> 00:23:58.000
So if you have a fraction
number, for instance M and you

NOTE Confidence: 0.841864883899689

e16ee2c6-4762-46ad-84b0-e2f4c7d6374c
00:23:58.000 --> 00:24:03.225
wanna bring it the same for
instance another base or imagine

NOTE Confidence: 0.841864883899689

1ab0d652-8351-4623-ad68-0de2ace6ce3b
00:24:03.225 --> 00:24:08.450
you have a disk fraction number,
for instance 300, three, 68.

NOTE Confidence: 0.81264740228653

f05031a0-db7b-45c2-b92d-73921a3c4c69
00:24:09.010 --> 00:24:13.753
Are you wanna bring
it to the base free?

NOTE Confidence: 0.875218152999878

4a0f0792-38a6-4b4e-92ea-2f24fcb7a54c
00:24:14.870 --> 00:24:19.996
So basically you have to
multiply by three so this one

NOTE Confidence: 0.875218152999878

f873405f-d578-42af-85bb-c021eaaa9c01
00:24:19.996 --> 00:24:26.054
multiplied by base number. This
is the one and then you have to

NOTE Confidence: 0.875218152999878

62d950b8-212e-49ed-abad-7afda8766a90
00:24:26.054 --> 00:24:27.918
keep the integer part.

NOTE Confidence: 0.839215219020844

99408caa-8005-474b-969c-1974aecb2caf
00:24:28.900 --> 00:24:34.060
How can you keep the integer
part you have to simply just.

NOTE Confidence: 0.928209066390991

7d69a804-a9df-4fe9-a54a-81a49c1c9d6b
00:24:34.890 --> 00:24:36.170
This number.

NOTE Confidence: 0.83667403459549

79cbab4a-7d8c-4dd4-a03b-bf76e3dc090b
00:24:37.500 --> 00:24:41.712
Oh, this is it is either you
can. I mean you can.

NOTE Confidence: 0.827545881271362

3035fe8c-2859-41b1-af7a-23acf1aa0f8a
00:24:42.220 --> 00:24:49.409
Extract you can do the floor or
just exactly integer part of the

NOTE Confidence: 0.827545881271362

329b0b93-128d-40c1-9d5a-866888521e62
00:24:49.409 --> 00:24:54.386
number. So in the Excel basic
function called floor.

NOTE Confidence: 0.842193305492401

113c1ac6-9608-4516-b582-a99745f109c0
00:24:55.870 --> 00:24:57.958
Floor of this number.

NOTE Confidence: 0.837884485721588

5764ceb0-3eb1-4772-a311-626f63e4ec26
00:24:59.040 --> 00:25:01.770
Is the integer part of the

NOTE Confidence: 0.876621723175049

60b15c2a-c70f-4e24-8483-87d2f3d15abf
00:25:01.770 --> 00:25:07.800
result? But how about you have
to continue with the remainder

NOTE Confidence: 0.876621723175049

c3a0bd93-8e18-4af6-8777-e65bb7fec868
00:25:07.800 --> 00:25:12.750
integer part. So basically you
have to extract the fraction

NOTE Confidence: 0.876621723175049

21916e8f-8811-455c-8d8f-5d738b98ca38
00:25:12.750 --> 00:25:15.720
part of this so this one.

NOTE Confidence: 0.807139754295349

ee7a7b37-3702-4ec2-a1f5-444e5728e358
00:25:15.740 --> 00:25:22.388
So this one minus this one. The
integer part minus the actual

NOTE Confidence: 0.807139754295349

6a9b4eea-0c5b-401c-aaca-1e335c17d129
00:25:22.388 --> 00:25:28.482
result gonna be the result of
the remainder integer part. But

NOTE Confidence: 0.807139754295349

6a97c9c2-a586-4444-91a4-9cbd0d843b3f
00:25:28.482 --> 00:25:31.252
this thing is because, uh.

NOTE Confidence: 0.931202113628387

bf01c343-58bd-4253-807c-cf125e5f36a8
00:25:32.550 --> 00:25:33.640
We have to do this.

NOTE Confidence: 0.789744436740875

6f3bb07b-6e91-420d-994c-5841ca893f5d
00:25:34.500 --> 00:25:38.668
Very very slowly. So basically
this one minus.

NOTE Confidence: 0.785897016525269

00039bfb-0302-4793-b6c1-7901fac98667
00:25:39.320 --> 00:25:44.240
Integer for gonna be the
remainder fraction part and then

NOTE Confidence: 0.785897016525269

86e471d2-6e93-4a99-bcdb-47cc325a7452
00:25:44.240 --> 00:25:46.208
you have to continue.

NOTE Confidence: 0.691715002059937

fe01a0f5-01ae-40f5-9fd0-30b92f8eae22
00:25:47.340 --> 00:25:51.380
Uh, did he give
multiplications?

NOTE Confidence: 0.86609423160553

0a521980-b3b0-41dc-915a-065f6503856b
00:25:54.110 --> 00:25:59.210
So you see that I mean this
number multiplied by three. The

NOTE Confidence: 0.86609423160553

9e7529a5-821d-4b00-94e1-e4adf212b7a6
00:25:59.210 --> 00:26:04.310
integer part of the result one,
and then the remainder, and then

NOTE Confidence: 0.86609423160553

fe581947-2c64-4a31-b99b-ed563d06ac09
00:26:04.310 --> 00:26:08.560
the remainder multiplied by
three. The integer part of this

NOTE Confidence: 0.86609423160553

64474d65-2e3f-43b1-8132-538f51b5107b
00:26:08.560 --> 00:26:13.660
number is 0, the remainder is
this, and then you continue the

NOTE Confidence: 0.86609423160553

179cd593-d964-4e94-8584-815a07a0c77d
00:26:13.660 --> 00:26:14.935
remainder fraction form.

NOTE Confidence: 0.84110015630722

5924a80b-63c5-4043-8bed-61d67ef401c2
00:26:15.470 --> 00:26:20.882
You can share with the remainder
fraction part by the, multiplied

NOTE Confidence: 0.84110015630722

d8a3bc2e-5c37-4d8b-9396-08c1c7c4a8b5
00:26:20.882 --> 00:26:26.786
by three. The integer part of
the result is zero and the

NOTE Confidence: 0.84110015630722

d5051ea2-75c8-4cd7-89e8-edadad6443a5
00:26:26.786 --> 00:26:31.706
remaining fraction for you
continue an again and then put

NOTE Confidence: 0.84110015630722

15557d03-aa28-4f36-bb7f-1ce4b905181a
00:26:31.706 --> 00:26:37.610
the digits in the right order,
so the digit gonna be 1002210211

NOTE Confidence: 0.93141096830368

e5f1144a-de04-4e02-a2d6-261836c84fe4
00:26:37.610 --> 00:26:40.498
and etc. So you have to

NOTE Confidence: 0.896621823310852

dc3917ba-4615-4565-b00f-21b0a0cfcedc
00:26:40.498 --> 00:26:45.412
continue. Sometimes you reach
the number 0. It means that

NOTE Confidence: 0.896621823310852

bf2f2a66-5e1b-43f5-972c-7f7bf7c6eb61
00:26:45.412 --> 00:26:49.692
there is no further modification
needed. Sometimes there is no

NOTE Confidence: 0.896621823310852

6747bb8f-6161-4551-bb5f-65b03052d083
00:26:49.692 --> 00:26:52.688
end to that, so I can continue

NOTE Confidence: 0.878673136234283

3b11396e-c5e3-4767-a49f-00eef858bf35
00:26:52.688 --> 00:26:55.690
this for. More numbers.

NOTE Confidence: 0.904058218002319

4967ab6e-70d0-4280-a6ee-145507513eb2
00:27:07.520 --> 00:27:09.860
I did something wrong.

NOTE Confidence: 0.218204393982887

b2101028-26ae-4692-9130-e8202174f5e0
00:27:12.260 --> 00:27:14.890
Uh, sorry.

NOTE Confidence: 0.86490923166275

8ab8f6ee-6336-4acd-be5f-09804f6ab921
00:27:16.160 --> 00:27:18.680
This one I have to.

NOTE Confidence: 0.804647266864777

62e5280f-242c-4f0e-bdf9-063e83558314
00:27:20.020 --> 00:27:23.292
Do this and no

NOTE Confidence: 0.746752202510834

df7e4f09-c112-465f-a368-a83480cc6416
00:27:23.292 --> 00:27:28.560
and then. I have
to get this.

NOTE Confidence: 0.880841970443726

6b2dbd25-252a-46f5-9432-3f2f645940ad
00:27:30.960 --> 00:27:32.528
Am I doing right?

NOTE Confidence: 0.0656821429729462

3b13efe5-8bb1-4f77-ab07-cdb619ab78c0
00:27:33.640 --> 00:27:34.760
Uh.

NOTE Confidence: 0.910829305648804

0ed3caa7-98cd-471a-83f7-b95d839cf41c
00:27:37.950 --> 00:27:39.798
This number here.

NOTE Confidence: 0.914303064346313

77a641e8-63fa-4f3d-a5f4-bb0135404b7b
00:27:41.530 --> 00:27:42.540
This is.

NOTE Confidence: 0.899257123470306

b71f8a3a-61ae-4071-be10-3c441b1f451a
00:27:45.580 --> 00:27:48.919
Oh, there's a there's a
problem here.

NOTE Confidence: 0.927709221839905

71b14508-c409-4d17-8cf6-a45e1e75e03d
00:27:50.320 --> 00:27:52.736
Oh, I have to do this as well.

NOTE Confidence: 0.873125553131104

190669a6-7f60-4d73-a404-8acf1062163a
00:27:55.730 --> 00:28:00.902
Yes, that's now I think that's
correct, yeah, so you see that

NOTE Confidence: 0.873125553131104

cf9d9c54-aba8-4c70-9cad-543ea33c851e
00:28:00.902 --> 00:28:06.936
there is no end to that. So here
is the I mean, the first

NOTE Confidence: 0.873125553131104

f95be270-7b0d-41a2-abf9-9c9654e54fe2
00:28:06.936 --> 00:28:11.677
question of the last week's
assignment was that if I give

NOTE Confidence: 0.873125553131104

f9fcdb69-900b-4888-8dc6-17cee124d241
00:28:11.677 --> 00:28:15.556
only four position, I could
represent this conversion just

NOTE Confidence: 0.873125553131104

c9566e46-7226-457a-b33a-4e1b0ac1e929
00:28:15.556 --> 00:28:21.159
by 1002. If I have more position
in the fraction part, I can

NOTE Confidence: 0.873125553131104

a5191833-b40b-450a-9632-9b1bc0103287
00:28:21.159 --> 00:28:24.607
represent it with the priests
more precise number.

NOTE Confidence: 0.851484060287476

2db4ec60-3f60-44db-816f-95b22320d571
00:28:25.570 --> 00:28:31.410
So as you can see, it never
ends. So if I need I mean an end

NOTE Confidence: 0.851484060287476

b57bf64a-375e-416e-bbb5-3d7d945a4509
00:28:31.410 --> 00:28:35.060
position in the fraction for two
exactly represent this decimal

NOTE Confidence: 0.851484060287476

7176f2f5-ebab-413a-b89b-90977d4fca6c
00:28:35.060 --> 00:28:36.885
fraction number in Bay 3.

NOTE Confidence: 0.857845306396484

52cc222b-5539-4ac1-b5ba-de5a5df51eb0
00:28:37.730 --> 00:28:42.546
So that's the error comes, so I
have to either. I mean keep this

NOTE Confidence: 0.857845306396484

325c9a22-dfac-44fe-9f26-3bf78724fcc7
00:28:42.546 --> 00:28:44.610
four and then the remainder is

NOTE Confidence: 0.87604957818985

cc2942ed-ab2b-4407-b4fd-e5a7f04fe989
00:28:44.610 --> 00:28:49.283
the error. Or I if I have more
position, I have less error.

NOTE Confidence: 0.882095277309418

fef14b11-0115-4bc6-960f-8740be52684a
00:28:50.130 --> 00:28:53.454
So this is the way that you can
wear the fraction part.

NOTE Confidence: 0.890364050865173

88c74822-8620-471d-99a8-bd883afaee5f
00:28:54.010 --> 00:29:02.002
So you would ask that how
can I convert this number 435

NOTE Confidence: 0.889293372631073

8aa0afaf-a512-413f-a27c-fcbc6f6bad0d
00:29:02.002 --> 00:29:08.937
point? 368
So basically what I did is this.

NOTE Confidence: 0.889293372631073

81375b03-1918-45af-ac9f-9beefec7805f
00:29:08.937 --> 00:29:13.047
You convert the integer part
with the division algorithm and

NOTE Confidence: 0.889293372631073

81198763-a3b2-446f-97f2-690bd30436cf
00:29:13.047 --> 00:29:16.335
you convert the fraction form
with multiplication algorithm

NOTE Confidence: 0.889293372631073

9c6d54ba-baea-4ffc-848c-b4c4d536b088
00:29:16.335 --> 00:29:20.034
and then you attach them
together. So this number

NOTE Confidence: 0.854316711425781

abd2e736-f576-453c-ac93-43cb8dbc6617
00:29:20.034 --> 00:29:26.544
becomes. Uh, this fraction
part is this, so it

NOTE Confidence: 0.854316711425781

97fa61b9-75cd-4ae5-8e2d-5f6701bee215
00:29:26.544 --> 00:29:28.623
becomes 121010 dot.

NOTE Confidence: 0.847801744937897

71b9ddf3-ec0d-4ba3-84d7-7b58e5086a19
00:29:29.860 --> 00:29:37.810
Be a fraction
in version 100221021

NOTE Confidence: 0.847801744937897

f5d08fe9-6d0f-4a8f-9c71-ea77b02b28ab
00:29:37.810 --> 00:29:39.135
etc.

NOTE Confidence: 0.851267457008362

1b0da9b0-af94-4fe8-be80-b2b36107d661
00:29:40.330 --> 00:29:44.917
So here is the conversion. Full
conversion of the decimal number

NOTE Confidence: 0.851267457008362

6b5b3083-e128-47ca-9b2c-a10cc0c70fb6
00:29:44.917 --> 00:29:46.168
into another base.

NOTE Confidence: 0.835152804851532

cde397b8-16e7-4c02-9fc2-5c931cc08753
00:29:47.130 --> 00:29:51.018
So let's back to the slot.

NOTE Confidence: 0.851029276847839

f940db72-e385-4a87-ab87-fc88710769dd
00:29:51.610 --> 00:29:56.355
So again, as I showed, if you
have a number that has integer

NOTE Confidence: 0.851029276847839

2dea014a-8e5a-46f6-b084-ba356554142e
00:29:56.355 --> 00:29:58.545
part and fraction part in base

NOTE Confidence: 0.816712260246277

12dbfa4e-f573-4a81-a19a-4389a0ae4a88
00:29:58.545 --> 00:30:04.420
R. You want to bring it to the
base or prime. First you bring

NOTE Confidence: 0.816712260246277

0f4d47c3-d4ec-4717-9207-a1bdcd871ba4
00:30:04.420 --> 00:30:08.490
it to the base 10. The integer
part math formulation, the

NOTE Confidence: 0.816712260246277

0c95b9cc-7ac0-4753-9489-77d558b7d0c7
00:30:08.490 --> 00:30:12.190
fraction part math formulation.
We already said in the last

NOTE Confidence: 0.816712260246277

7bf94fdd-9873-4ecc-b1d8-623a2acecab5
00:30:12.190 --> 00:30:16.630
lectures and then when you end
up with the decimal system, you

NOTE Confidence: 0.816712260246277

2f7dfdec-95fb-4a25-ac53-bd6c83eda529
00:30:16.630 --> 00:30:20.330
convert the integer part and
then you convert the fraction

NOTE Confidence: 0.816712260246277

3f729a53-88e3-4a0a-9eab-2c83de937626
00:30:20.330 --> 00:30:21.440
part in dependently.

NOTE Confidence: 0.785694539546967

36c4c8a7-70df-4574-bfb2-eaaeb0da62aa
00:30:21.470 --> 00:30:27.590
Is 8 to base two from base four
to base two. There's a fast way

NOTE Confidence: 0.785694539546967

bfdd3fc7-a323-492d-afd8-2cb185b638a5
00:30:27.590 --> 00:30:31.670
that in the lecture assignment
you already saw this algorithm.

NOTE Confidence: 0.86628270149231

d849eb40-5886-4964-954b-9966225497d9
00:30:32.650 --> 00:30:36.958
One thing is that we can check
your result online. There are

NOTE Confidence: 0.86628270149231

6e889a4e-21cf-40f5-bc66-d123db5f84f7
00:30:36.958 --> 00:30:41.984
some online website that they do
that for you, so this is one of

NOTE Confidence: 0.86628270149231

a403b9e0-58bd-428c-9b56-1f26696ca4d6
00:30:41.984 --> 00:30:46.651
the most. I mean I like this
website because it gives you the

NOTE Confidence: 0.86628270149231

e33fa809-aade-4d15-9e8d-f85636e2c0cd
00:30:46.651 --> 00:30:50.241
error too. So planet calc let me
open this website.

NOTE Confidence: 0.411200106143951

245f5f73-53e0-45ba-b92a-5ec2e4c7a7e0
00:30:51.870 --> 00:30:53.490
Find out, uh.

NOTE Confidence: 0.932126343250275

bac182a5-9d5b-4ae3-9bc2-26dd3bbe0f4d
00:30:54.570 --> 00:30:58.390
Yeah this one. So this website.

NOTE Confidence: 0.753513395786285

fb611d04-770d-49e0-b53d-9b508766e486
00:30:59.250 --> 00:31:04.758
What state is kind of use
that it's over?

NOTE Confidence: 0.78698194026947

fec85905-28f1-4d48-a09b-9ab9f29769af
00:31:05.620 --> 00:31:12.950
So. In this website
you keep you give your SU-16, at

NOTE Confidence: 0.78698194026947

94813654-0338-4290-b04c-f43d150838bf
00:31:12.950 --> 00:31:20.152
cetera. There's a faster way to
do this, and that in the lecture

NOTE Confidence: 0.78698194026947

de75cdf0-d817-420a-b64d-36d2a49ff854
00:31:20.152 --> 00:31:22.922
summer you already saw that.

NOTE Confidence: 0.79333907365799

64467c6f-ebc1-4515-9993-8ba08aab3918
00:31:23.810 --> 00:31:29.608
And also the reverse. So fan
base eight to base two from base

NOTE Confidence: 0.79333907365799

8a83cf37-dda4-466d-bf9e-6fbe52ab8073
00:31:29.608 --> 00:31:34.960
four. Today's two is a fast way
that in the lecture assignment

NOTE Confidence: 0.79333907365799

d9a2cb43-a032-4c13-ab46-e47c59044087
00:31:34.960 --> 00:31:37.190
you already saw this algorithm.

NOTE Confidence: 0.873940408229828

aec5f6d8-5f06-4522-a2f1-1ddea3350a2b
00:31:38.290 --> 00:31:42.574
One thing is that we can check
your result online. There are

NOTE Confidence: 0.873940408229828

46e5e8d5-eb70-4f7f-ac8e-b23b10f3132b
00:31:42.574 --> 00:31:47.572
some online website that they do
that for you, so this is one of

NOTE Confidence: 0.873940408229828

657d6b3d-a1d9-43cf-980b-aba06c506caa
00:31:47.572 --> 00:31:52.213
the most. I mean I like this
website because it gives you the

NOTE Confidence: 0.873940408229828

d73c5439-f64c-4552-bfc3-4117bd369e60
00:31:52.213 --> 00:31:55.783
error too. So planet count let
me open this website.

NOTE Confidence: 0.292969346046448

dd5d2339-c98e-4eed-b727-e35798a2a4b5
00:31:57.410 --> 00:31:59.030
Span at uh.

NOTE Confidence: 0.930733442306519

aa02aec6-dc5b-4bea-b836-a1e46e73f5d8
00:32:00.110 --> 00:32:03.929
Yeah this one. So this website.

NOTE Confidence: 0.754279494285584

6a4f5153-0a82-4b33-8a70-d991203e157b
00:32:04.780 --> 00:32:10.297
What state is kind of use
that it's over?

NOTE Confidence: 0.807835280895233

e2052a08-25c3-4a1e-823e-6cb09c11f616
00:32:11.140 --> 00:32:17.625
So. Cortana in this website you
keep you give your source number

NOTE Confidence: 0.807835280895233

fc71b990-a1d4-43f1-bb85-44d16ab85b93
00:32:17.625 --> 00:32:23.150
and you in determine the base
and you want to convert it to

NOTE Confidence: 0.807835280895233

74c4d093-e932-49d7-85b2-e0637ee09c30
00:32:23.150 --> 00:32:24.425
another base number.

NOTE Confidence: 0.829887747764587

880a9baa-1f36-463d-a4f5-7ed0e6bdc72d
00:32:25.180 --> 00:32:28.870
Behind the website there is
design the algorithm that we

NOTE Confidence: 0.829887747764587

db9a818a-cecb-4a44-a16e-7843ea4dd505
00:32:28.870 --> 00:32:33.298
discussed, so this is a website
that you can check your result.

NOTE Confidence: 0.829887747764587

0568a364-017a-4adf-ad69-a5ffdbb418c8
00:32:33.298 --> 00:32:37.357
For instance if I want to
convert, let's check our number

NOTE Confidence: 0.829887747764587

a1bb63d3-5a26-4320-92f4-7065a55bcc27
00:32:37.357 --> 00:32:42.154
in the Excel sheet that we do or
let's see whether we did

NOTE Confidence: 0.829887747764587

91c51da6-ae21-4c97-9e62-00403073bf10
00:32:42.154 --> 00:32:43.630
correctly for this number.

NOTE Confidence: 0.811957597732544

59e2a5e9-0369-41b6-b096-9dffb9d8c6d3
00:32:44.610 --> 00:32:47.400
In this town we bring you
to base 3.

NOTE Confidence: 0.889883160591125

73901561-af53-41c0-9a12-e946014b4f30
00:32:49.170 --> 00:32:55.686
So the result is 121010 in the
integer part 121010. So the

NOTE Confidence: 0.889883160591125

b4a33547-a283-4b84-9cbc-ff08b0b31947
00:32:55.686 --> 00:32:57.858
integer part is correct.

NOTE Confidence: 0.823763966560364

44a75a9d-ff71-4efe-9e80-087291caf56c
00:32:58.380 --> 00:33:05.428
The fraction 410022102 so
let's see come here.

NOTE Confidence: 0.854844748973846

a7b27140-04a0-4e99-8fc6-50b0e550edd7
00:33:05.950 --> 00:33:10.565
10022 OK, so the fraction part
is also true, so you see that

NOTE Confidence: 0.854844748973846

2e3a4ec1-bc58-4ccb-99c8-e3707f232621
00:33:10.565 --> 00:33:15.890
here is. It says that if I just
keep this a map of position for

NOTE Confidence: 0.854844748973846

cf2b207c-3469-4c3c-a528-fbe78531ca76
00:33:15.890 --> 00:33:18.020
the fraction part, here is the

NOTE Confidence: 0.879260122776031

efb08711-85ef-48a5-9db9-8ca630529ae8
00:33:18.020 --> 00:33:20.530
error. In decimal system.

NOTE Confidence: 0.914742112159729

57c4631a-e9f0-42de-b02a-7394df5d6ede
00:33:22.760 --> 00:33:25.320
OK, so.

NOTE Confidence: 0.714506268501282

28f7b248-1001-459a-a1d4-dd7f0c83d553
00:33:27.500 --> 00:33:31.860
The next topic is about the
arithmetic that I'll shortly

NOTE Confidence: 0.714506268501282

750e6f61-1f48-40f5-a0e9-43fac9d0aa22
00:33:31.860 --> 00:33:36.220
start. But before that, let's
see the question or not.

NOTE Confidence: 0.854644358158112

7c8ddf2a-795e-4926-a60a-743433a9b498
00:33:38.550 --> 00:33:42.138
So let's scroll up and see.

NOTE Confidence: 0.734549939632416

e0b5203f-7226-4969-a9a3-20bc259568cc
00:33:44.980 --> 00:33:48.025
Our prime means that
another system, for

NOTE Confidence: 0.734549939632416

6233948f-1827-419e-83ac-c8b1dbfcaae6
00:33:48.025 --> 00:33:51.505
instance besarta, are prime
or prime is another

NOTE Confidence: 0.734549939632416

b9b2282c-e83b-48d5-b7c8-f6c869ca3b09
00:33:51.505 --> 00:33:54.115
numbering system. For
instance. Oh, actually,

NOTE Confidence: 0.734549939632416

59df1022-3069-4e92-8e8d-7d3fe97ee299
00:33:54.115 --> 00:33:55.855
Nick already answered that.

NOTE Confidence: 0.78191465139389

e1409ef5-3ce0-48ff-8de5-f7a9f3e24c29
00:33:56.939 --> 00:34:02.428
So you have to extend cable. OK,
we did correct that.

NOTE Confidence: 0.890511631965637

5d86da5a-137d-48d2-a59e-68dccf8baa35
00:34:03.309 --> 00:34:10.118
I haven't checked this website,
but the website I usually uses

NOTE Confidence: 0.860829293727875

64e81953-8334-489e-ae8d-a94947e649f7
00:34:10.118 --> 00:34:14.956
this. So whenever I want to
check my result, I use this

NOTE Confidence: 0.860829293727875

b941cca6-c99a-400c-b734-964826a629cd
00:34:14.956 --> 00:34:18.553
website. So one thing one
amazing thing here is this. You

NOTE Confidence: 0.860829293727875

099ecd4b-b58a-4b0f-8f1f-294cead62b79
00:34:18.553 --> 00:34:22.477
can hear you said that I mean
you with eight fraction points.

NOTE Confidence: 0.825828373432159

1da2f68f-25b3-449b-9002-f76b4e906e22
00:34:23.459 --> 00:34:28.789
Here is the error, so you can
increase the Franklin says if I

NOTE Confidence: 0.825828373432159

ce73ca6b-81cd-49a5-b805-32416b5ae42f
00:34:28.789 --> 00:34:30.429
have 20 fraction point.

NOTE Confidence: 0.912779033184052

ef76ffed-a527-4a7a-934a-83a857fc8c9c
00:34:31.549 --> 00:34:33.719
You see, the error is much less

NOTE Confidence: 0.832801818847656

4d3c5d75-de59-4250-a51a-67aab361a67b
00:34:33.719 --> 00:34:37.137
if I have. Only two
fraction form.

NOTE Confidence: 0.844728171825409

3e94a576-aa6f-4799-8fdf-2c236bebe4cd
00:34:39.679 --> 00:34:44.899
So here there is much more
higher. So The thing is that

NOTE Confidence: 0.844728171825409

c22d24e3-09fb-453f-9b01-6250c28ad52e
00:34:44.899 --> 00:34:49.684
this website gives you a. I mean
adjust the fraction positions

NOTE Confidence: 0.844728171825409

39e1168c-d667-4f3b-9924-12a961724ee9
00:34:49.684 --> 00:34:50.989
for your conversion.

NOTE Confidence: 0.788118302822113

9cd62b69-01ac-412b-bb7d-7267bbb5a519
00:34:51.759 --> 00:34:57.121
And also I mean if I want to do
some base can I do?

NOTE Confidence: 0.830671668052673

97aa19f6-d75e-43b3-8971-82e9341dda79
00:34:57.629 --> 00:35:02.699
This fan base two to base three
given this number.

NOTE Confidence: 0.894274413585663

2a7258c6-9621-468e-8ab0-4a9e02718282
00:35:06.029 --> 00:35:08.185
You cannot do that.
What's the reason?

NOTE Confidence: 0.896840989589691

06996803-c26c-4203-901a-8f9f23bab8c0
00:35:14.189 --> 00:35:15.259
Anybody?

NOTE Confidence: 0.859447598457336

e4b1a7e6-4fb6-49a7-b7d5-bbd7cf1262ae
00:35:19.169 --> 00:35:26.477
Correct, yes, the
reason is that.

NOTE Confidence: 0.789934754371643

932a420b-ad0e-47df-983f-3a6ea0bc47b7
00:35:26.479 --> 00:35:33.497
Of this number has digits 8,
meaning that the least possible

NOTE Confidence: 0.789934754371643

a3322593-5ee1-4d73-a6f9-a3e4a24104f0
00:35:33.497 --> 00:35:36.687
base number would be 9.

NOTE Confidence: 0.789526402950287

521b85cc-3557-47c5-bdb1-4f72f2356978
00:35:37.999 --> 00:35:42.039
Even you cannot convert this
eight because the 8th admitted

NOTE Confidence: 0.789526402950287

d98960a5-1042-40b3-94cd-bf1986ad974a
00:35:42.039 --> 00:35:46.483
it is not a bad, but you can
start with 9.

NOTE Confidence: 0.843679666519165

4dc869df-f2d8-4fbe-904c-13ce7b83e9fe
00:35:47.260 --> 00:35:51.184
And you see, if you assume
that this number is based 9

NOTE Confidence: 0.843679666519165

f82388dc-71a2-4790-84c8-07110a5d2d1c
00:35:51.184 --> 00:35:54.127
conversion today, three is
this, and this is a

NOTE Confidence: 0.843679666519165

e22c0dd9-5806-4623-83ba-552aec4cd3fa
00:35:54.127 --> 00:35:57.397
complicated. I mean nothing
because you have to bring this

NOTE Confidence: 0.843679666519165

c437af84-76ff-4a02-b29c-84b4adae67de
00:35:57.397 --> 00:36:01.975
to base 10 first and then so
you have to do this. You have

NOTE Confidence: 0.843679666519165

fa562744-27dc-4b70-980c-3e68a375482d
00:36:01.975 --> 00:36:04.264
to bring it to base 10 first.

NOTE Confidence: 0.890118956565857

fb56bc4f-7fdc-4f59-bf76-47b64f9fb22d
00:36:05.750 --> 00:36:11.392
This is the best hand and then
you have to put this here.

NOTE Confidence: 0.681352078914642

f7cdc716-03d4-4652-a194-276a15d153cc
00:36:12.340 --> 00:36:15.019
From base 10.

NOTE Confidence: 0.603766202926636

4c7452e9-7420-40bd-b03f-e75e9170b54d
00:36:15.540 --> 00:36:16.970
Break free.

NOTE Confidence: 0.922841906547546

dce33622-a88c-4e9c-90d3-2a9583fce8ec
00:36:18.640 --> 00:36:20.230
And here is the result.

NOTE Confidence: 0.871038258075714

84dd7767-466a-40e9-bf70-c075a04ce530
00:36:20.900 --> 00:36:25.136
But at this at this website,
does that in I mean immediately

NOTE Confidence: 0.871038258075714

890ed4d2-3844-4155-8b35-935b78545274
00:36:25.136 --> 00:36:29.725
for you? So if you put your
number and you put the source

NOTE Confidence: 0.871038258075714

1648b1f9-6e2c-40ac-8471-999b0407d63c
00:36:29.725 --> 00:36:33.608
for instance 9 and then the
target it does, I mean

NOTE Confidence: 0.871038258075714

4d80ea52-ee50-45e6-b4e3-254aea0eb6c4
00:36:33.608 --> 00:36:34.667
immediately for you.

NOTE Confidence: 0.849133491516113

87186ea7-3e3e-4ced-8260-1886be8a85cf
00:36:36.640 --> 00:36:41.540
OK, so.
Any other questions?

NOTE Confidence: 0.895370543003082

cf8d2380-51cf-4350-9e6b-5317a3770c3a
00:36:42.560 --> 00:36:49.580
So if there's no question
I can continue with the

NOTE Confidence: 0.895370543003082

58f15b45-5ee8-4580-99b2-bc527bb2c8c5
00:36:49.580 --> 00:36:55.196
next round of slides, which
is about arithmetic.

NOTE Confidence: 0.713697850704193

75ed0728-3907-4ae0-b662-d20783b91e6b
00:37:01.770 --> 00:37:03.549
So let me.

NOTE Confidence: 0.86661171913147

c4d5c906-fab5-428b-8dde-89c67b33df8d
00:37:04.310 --> 00:37:07.390
I put this Excel sheet in
the blackboard so you can

NOTE Confidence: 0.86661171913147

1f13ee8e-1b4f-42df-be2f-4b87538a6b01
00:37:07.390 --> 00:37:08.790
have a reference for that.

NOTE Confidence: 0.698793232440948

2ce69f47-49eb-4fe0-b32e-1096fd214065
00:37:11.820 --> 00:37:14.130
Next is.

NOTE Confidence: 0.180856466293335

77b419e9-328a-4de8-9294-a05876eb369b
00:37:20.130 --> 00:37:22.010
Slides.

NOTE Confidence: 0.478688418865204

2a1c09f5-9611-4517-b843-87145296b96b
00:37:24.430 --> 00:37:25.540
One pieces.

NOTE Confidence: 0.926985144615173

2807f78b-1b09-43a6-bd29-ea21a67d3ebb
00:37:26.920 --> 00:37:31.440
So.

NOTE Confidence: 0.863645017147064

c6a612da-49ba-4fb2-8f23-838cff1eaef7
00:37:32.750 --> 00:37:36.880
Now that we are able to
represent numbers are either

NOTE Confidence: 0.863645017147064

3dae4a0f-887f-45f2-abeb-26e67184f38f
00:37:36.880 --> 00:37:41.010
integer part with integer part
an fraction part. The next

NOTE Confidence: 0.863645017147064

f11cc642-d3cb-4ef9-a6b0-c87a40166a9d
00:37:41.010 --> 00:37:45.966
question is that how can we do
some operation on these numbers?

NOTE Confidence: 0.874899208545685

c6f46523-780d-411d-b884-4a8858b422ac
00:37:46.750 --> 00:37:51.550
The whole set of operation on a
number is called algebra. Little

NOTE Confidence: 0.874899208545685

dfc69b9a-ffa7-4d30-9b31-0b7ec0013b12
00:37:51.550 --> 00:37:56.350
will discuss what is, I mean the
the true definition of algebra.

NOTE Confidence: 0.874899208545685

185cc46d-03c8-4653-97ba-d3ba35c549f4
00:37:56.350 --> 00:38:00.350
But simply we could say that
doing arithmetic on numbers.

NOTE Confidence: 0.842962682247162

d88657c9-4a92-4318-b233-8f948964f485
00:38:01.220 --> 00:38:05.924
The most immediate arithmetic we
all know is the addition of two

NOTE Confidence: 0.842962682247162

4b82e7cc-e42f-4dff-91f8-b0be3a231ea5
00:38:05.924 --> 00:38:09.844
numbers. For instance, a
distance from here to one place

NOTE Confidence: 0.842962682247162

d0368f5a-0a97-45cf-8ecb-690d7fbfefef
00:38:09.844 --> 00:38:15.332
A and then from A to see the
whole distance gonna be the sum

NOTE Confidence: 0.842962682247162

b8455c13-417e-4e72-9e02-5506b977f8de
00:38:15.332 --> 00:38:19.644
of these two distances. So we
need addition of two numbers.

NOTE Confidence: 0.87317556142807

f627cefb-f219-42c1-b536-c216857b26a4
00:38:20.590 --> 00:38:24.880
The addition is very similar to
decimal system. You already know

NOTE Confidence: 0.87317556142807

ed3749e0-a0af-46a8-87d1-73e1dee601db
00:38:24.880 --> 00:38:29.950
how to do to add 2 numbers from.
I mean secondary school or

NOTE Confidence: 0.859262883663177

dfed4fa4-ce06-4bb2-a699-ef7122a44755
00:38:29.950 --> 00:38:35.485
primary school. So what we want
to see. What's up with the other

NOTE Confidence: 0.859262883663177

edb642e1-9940-4e54-819c-7ca7ca668026
00:38:35.485 --> 00:38:40.490
basis? If we are in base two
base four or for instance here

NOTE Confidence: 0.859262883663177

21de4e3e-85f4-4359-8b01-e9f06d3aa711
00:38:40.490 --> 00:38:44.725
based 16 just by a quick
example, you know the idea.

NOTE Confidence: 0.859262883663177

eac0537e-2567-4aa7-9c3c-516d93b2b44c
00:38:44.725 --> 00:38:45.880
Basically the 1st.

NOTE Confidence: 0.890172839164734

a6cd658b-ee64-42f8-8e28-f61248076245
00:38:46.790 --> 00:38:51.254
Thing we have to do is making
the two numbers equal size.

NOTE Confidence: 0.86032235622406

2b8f1475-7ebf-4014-9e3e-ae0bf202667d
00:38:51.900 --> 00:38:58.740
In order to do that, we can add
zeros to the left side of any

NOTE Confidence: 0.86032235622406

95697468-cd6e-45b1-9e41-b1d0f2504aa0
00:38:58.740 --> 00:39:03.756
number, because 0 multiplied by
any significant becomes 0, so it

NOTE Confidence: 0.86032235622406

20eda822-b0ae-45af-b62d-aab52b5e7575
00:39:03.756 --> 00:39:05.580
doesn't have any impact.

NOTE Confidence: 0.865212142467499

6e2a89de-310c-48a5-b153-48b4d5686c44
00:39:06.710 --> 00:39:11.638
You cannot add this to 0 here,
because if you do hear you shift

NOTE Confidence: 0.865212142467499

74bef4ea-59f4-498b-ac83-086d6a56b78f
00:39:11.638 --> 00:39:15.862
all the numbers to the left and
you increase the significant of

NOTE Confidence: 0.865212142467499

cb4334d9-f837-4c65-89b0-0edad1f9051b
00:39:15.862 --> 00:39:20.086
the digits, this is not
possible. So you have to add the

NOTE Confidence: 0.865212142467499

61615e50-05b9-40bb-8b25-40d50345c565
00:39:20.086 --> 00:39:24.310
zero from the leftmost position
up until to the I mean the

NOTE Confidence: 0.865212142467499

019c8b0a-cde8-4c12-9e06-4719a69532e3
00:39:24.310 --> 00:39:26.774
other. I mean to the left side.

NOTE Confidence: 0.882664799690247

80f3fdfa-b989-4019-919f-0a42ff8f7481
00:39:27.620 --> 00:39:31.325
In the fraction part you can
do the same, but this time in

NOTE Confidence: 0.882664799690247

c3a96e92-5f72-41a0-96b0-d9214852cece
00:39:31.325 --> 00:39:35.030
the right side of the number.
If you add zeros to the right

NOTE Confidence: 0.882664799690247

42313812-e88b-49fe-b065-c4232ff8d8a8
00:39:35.030 --> 00:39:37.880
side of the number, there is
no impact or effect.

NOTE Confidence: 0.833558917045593

a7b6c277-08d6-415c-85e5-8c4a0391ceaf
00:39:39.210 --> 00:39:43.662
Again, for the fraction part,
you cannot add zero in the left

NOTE Confidence: 0.833558917045593

228942ce-d9d8-4b27-b35f-c1a76a5063ac
00:39:43.662 --> 00:39:48.114
part of the fraction because it
shifts the number to the right

NOTE Confidence: 0.833558917045593

3d76f564-d02e-4683-b7a4-cd66621cdbf6
00:39:48.114 --> 00:39:49.969
and decrease the significant of

NOTE Confidence: 0.868067026138306

3eb6e1b0-fd5b-4249-8da8-d86557b6c27f
00:39:49.969 --> 00:39:55.860
the digits. So after this is
called padding in the in. In

NOTE Confidence: 0.868067026138306

38dc84d3-4279-4d14-94ca-dbc022082b69
00:39:55.860 --> 00:39:59.631
this week's assignment, I
explained this padding in the

NOTE Confidence: 0.868067026138306

12d0bc58-c7c6-49d7-8dd1-d25036329c29
00:39:59.631 --> 00:40:00.888
lecture assignment more.

NOTE Confidence: 0.838526368141174

c85989b1-0f3c-4d09-8cf0-9f104a71db09
00:40:01.830 --> 00:40:07.498
So when you make the two numbers
equal equal size by padding, you

NOTE Confidence: 0.838526368141174

1bb4ab36-a00c-4da5-a386-174234ec6961
00:40:07.498 --> 00:40:08.806
start at this.

NOTE Confidence: 0.858534634113312

73625e0e-5c18-4c8f-bf58-95d8968afc57
00:40:09.500 --> 00:40:15.298
So each digit added by each
other. So 4 + 0 becomes 4.

NOTE Confidence: 0.868419528007507

6f8936a4-b93b-4aad-a3f5-7a2d61ea6a73
00:40:16.170 --> 00:40:22.515
5 + B B in decimal in base 16
is equal to 11 in decimal

NOTE Confidence: 0.869692027568817

a40c6afb-7433-4344-9750-7dbc0ab8e4bb
00:40:22.515 --> 00:40:30.470
system. So you do 5 + 11
to come 16, but 16 is not a

NOTE Confidence: 0.869692027568817

8006ff78-eb84-4ec6-bf82-e86a92c3f617
00:40:30.470 --> 00:40:37.470
valid number in base 16. You
have 2 / 16 by this division you

NOTE Confidence: 0.869692027568817

a6ccab2b-27d3-469d-bc48-ea3fd3dc5430
00:40:37.470 --> 00:40:42.470
extract the significance of 16
by the amount of 16.

NOTE Confidence: 0.872025966644287

22fae37d-418f-442c-85c8-df2689bea719
00:40:43.080 --> 00:40:47.352
So the question becomes one and
you put you leave the remainder

NOTE Confidence: 0.872025966644287

1866dbf8-4798-46b4-8cea-56a32c86237f
00:40:47.352 --> 00:40:51.268
here and we bring a carry to the
higher significant position.

NOTE Confidence: 0.805598080158234

07a34e90-6c38-421c-9545-ce9bf157af82
00:40:53.080 --> 00:40:57.340
So the result becomes zero and
plus a carry. And then you

NOTE Confidence: 0.805598080158234

d2a75b0f-72dc-4600-94e0-211ac8ae3222
00:40:57.340 --> 00:40:58.405
continue addition one.

NOTE Confidence: 0.832831621170044

5a5960b2-7a0b-4bfa-ace3-eeafc7070a52
00:40:59.180 --> 00:41:04.952
Carrie from previous edition
plus EE is equal to 14 + 2

NOTE Confidence: 0.832831621170044

f501c823-37c7-43c9-bdc3-d84491bea388
00:41:04.952 --> 00:41:11.205
becomes 17, so 17 is larger than
the largest digit in the base

NOTE Confidence: 0.832831621170044

34ebf330-271e-457f-b008-e2973fdb0fcc
00:41:11.205 --> 00:41:15.053
16. So you have to divide by 16.

NOTE Confidence: 0.759310126304626

5b884129-76e8-4bcc-9a57-372b31d80da7
00:41:15.560 --> 00:41:18.644
A Carrie Ann put. Leave the

NOTE Confidence: 0.824743449687958

ed95f126-30ee-4c4f-9030-03573d194da7
00:41:18.644 --> 00:41:24.522
remainder. So as a result, the
remainder gonna be here and the

NOTE Confidence: 0.824743449687958

e58c4974-b45f-46da-983d-2462ecee7b78
00:41:24.522 --> 00:41:28.058
Carrie goes to the higher,
higher significant position.

NOTE Confidence: 0.819166958332062

928e3a27-440c-429d-aef6-2821091a8fda
00:41:28.640 --> 00:41:33.678
Uh, one thing? Remember we
already said that we never waste

NOTE Confidence: 0.819166958332062

1da7966e-b73b-4f89-993b-b511ef262929
00:41:33.678 --> 00:41:38.258
or Astaire position for the
decimal point or fraction point.

NOTE Confidence: 0.819166958332062

8466e53e-b1e0-4bb1-ad50-7ed96865fc8f
00:41:38.258 --> 00:41:43.754
This is just for the sake of
illustration, so there is no

NOTE Confidence: 0.819166958332062

01b108f6-43f3-4909-910c-2ae9bc58ac81
00:41:43.754 --> 00:41:46.044
space left for the fraction

NOTE Confidence: 0.838912606239319

e2eac887-b79a-4647-9eca-41e6a1cdab70
00:41:46.044 --> 00:41:53.510
point. So 1 + 8 + F
A is equal to 10 F is equal to

NOTE Confidence: 0.838912606239319

7d72b4e9-d113-456c-a4fe-e84e896ec4b2
00:41:53.510 --> 00:41:59.446
15, so in total it becomes 26
and then 26 / 16. The remainder

NOTE Confidence: 0.838912606239319

e786f838-8164-4c82-a1f8-340d7481271c
00:41:59.446 --> 00:42:04.958
is 10 or side. They remain, the
quotient is 1, the remainder is

NOTE Confidence: 0.838912606239319

f202b8b0-0d73-4f05-ad0d-3e112c7a69fe
00:42:04.958 --> 00:42:10.894
10. So you leave the remainder
and we carry as one to the high

NOTE Confidence: 0.838912606239319

0df9beba-c669-44c9-bb2a-9a3b63ce0333
00:42:10.894 --> 00:42:13.862
signal position. But 10 is not a

NOTE Confidence: 0.880055069923401

42a63386-2a44-4780-820b-b1e65c7b157b
00:42:13.862 --> 00:42:16.670
valid digit. You replace it with

NOTE Confidence: 0.807343304157257

4062f255-87d2-43c3-8f5d-c929e6cd8376
00:42:16.670 --> 00:42:23.061
the correct alphabet. And you
can change it. So 1 + 2

NOTE Confidence: 0.807343304157257

86615557-cf15-4435-9eda-53889e5ef0e1
00:42:23.061 --> 00:42:30.187
+ 11 becomes 14. You put the
correct alphabet E and then 0 +

NOTE Confidence: 0.807343304157257

d031e45e-03f9-48a9-ba6c-48a4636713b9
00:42:30.187 --> 00:42:35.277
4 four. So the result is this
four EA .104.

NOTE Confidence: 0.890297412872314

13ffee74-78ef-4869-99ca-9d36bd7e6791
00:42:35.990 --> 00:42:39.708
Very similar to the decimal
system. You can do the addition

NOTE Confidence: 0.890297412872314

4bab5349-61c3-4e3d-90e1-fd1d5ae69ee8
00:42:39.708 --> 00:42:41.398
in other system very similar.

NOTE Confidence: 0.86064875125885

a1752820-a489-4664-aace-fd0064b07b94
00:42:42.090 --> 00:42:45.930
The idea is that just if the
number, the result of the

NOTE Confidence: 0.86064875125885

3b0382af-238e-4d2d-bd30-ab313c5b4379
00:42:45.930 --> 00:42:49.130
addition is greater than the
largest digit, you have to

NOTE Confidence: 0.86064875125885

7e2e437d-891f-4b2f-bb91-a00f10167f85
00:42:49.130 --> 00:42:52.650
divide by the base number and
created Carrie Ann. Leave the

NOTE Confidence: 0.86064875125885

eddd35b0-8a02-4edc-b142-219a7a45b96e
00:42:52.650 --> 00:42:52.970
remainder.

NOTE Confidence: 0.725928246974945

f067cf6a-d9bf-4c81-b074-b35ada435daf
00:42:55.660 --> 00:42:59.428
Multiplication is, uh, I

NOTE Confidence: 0.867571175098419

ff577a39-c6f4-4961-88c0-025ce39c6791
00:42:59.428 --> 00:43:03.961
just. Some addition plus some
additional. I mean shifting etc,

NOTE Confidence: 0.867571175098419

050e2fcb-0a2c-4247-af73-d74bf174d508
00:43:03.961 --> 00:43:09.148
so this end if you go and see
how the multiplication is done

NOTE Confidence: 0.867571175098419

3211b3f0-15ba-4beb-96fe-ebc3b5eab94f
00:43:09.148 --> 00:43:14.734
in decimal system you can extend
it to any other basis as we did

NOTE Confidence: 0.867571175098419

1643ff05-a70c-4370-a271-2f22c2d0c21b
00:43:14.734 --> 00:43:19.522
for the addition, so I leave it
as an exercise for you.

NOTE Confidence: 0.858851611614227

5e47682c-9286-4888-b77d-2bbbe5e2ae80
00:43:21.060 --> 00:43:24.596
Subtraction, subtraction is
important, that's why I just

NOTE Confidence: 0.858851611614227

5c729a72-fcb8-46c5-af46-465821e16d30
00:43:24.596 --> 00:43:30.342
want to give you an example in
decimal system 1st and then see

NOTE Confidence: 0.858851611614227

b062ff32-5d9e-4c5f-af37-725614405405
00:43:30.342 --> 00:43:32.994
what's going on with the other

NOTE Confidence: 0.89490407705307

2481dc80-5fd7-4ac8-ac3d-db1b608bed3d
00:43:32.994 --> 00:43:38.198
basis. Imagine you want to
subtract 2 decimal numbers. We

NOTE Confidence: 0.89490407705307

806a6019-99a7-46db-b2c8-0365715a0abf
00:43:38.198 --> 00:43:41.222
already know how to do this in

NOTE Confidence: 0.851372420787811

c66cb92c-393b-4c0b-865a-c82986e42b4f
00:43:41.222 --> 00:43:47.090
primary school. But usually when
we do the subtraction, we see we

NOTE Confidence: 0.851372420787811

7bb7757b-48d5-43fb-ba35-c6879669a139
00:43:47.090 --> 00:43:52.310
compare the numbers and we put
the larger number first and then

NOTE Confidence: 0.851372420787811

ef796899-247c-4dc1-881a-e05ce70575c1
00:43:52.310 --> 00:43:54.050
a smaller number second.

NOTE Confidence: 0.861374139785767

a5ba854d-b402-4cdf-993d-5d78982569ab
00:43:54.750 --> 00:43:58.292
But this is not necessary. You
can subtract any 2 numbers

NOTE Confidence: 0.861374139785767

f91a088b-64cd-48cc-9765-73f2195a275a
00:43:58.292 --> 00:44:01.834
regardless of the compiler. I
mean whether they are I mean

NOTE Confidence: 0.861374139785767

c01c4a5e-e483-465f-a0b2-49cfe3f0ae06
00:44:01.834 --> 00:44:05.376
larger than each other. Or I
mean without any comparison. You

NOTE Confidence: 0.861374139785767

67bc052e-fac7-4374-aadd-e4d9a4f1f267
00:44:05.376 --> 00:44:06.664
can do this subtraction.

NOTE Confidence: 0.905987203121185

69a924df-3cbd-4271-812d-91960eb4e7df
00:44:07.560 --> 00:44:11.486
So here is an example that the
first number is less than the

NOTE Confidence: 0.905987203121185

ad5e6554-f9be-42b9-af36-33e30eb05cde
00:44:11.486 --> 00:44:12.996
second number, and let's see

NOTE Confidence: 0.89094215631485

694e40cc-01f9-43d3-9ebb-da9b668739c1
00:44:12.996 --> 00:44:17.953
what's the result. If the first
number is larger than the second

NOTE Confidence: 0.89094215631485

dd093b16-157c-46b3-8b6b-943f48b49a16
00:44:17.953 --> 00:44:22.357
number, you already know how to
do that, but here is an

NOTE Confidence: 0.89094215631485

b161c9f2-4dc1-477b-86e4-01ef7a152596
00:44:22.357 --> 00:44:26.027
exception that the first number
is smaller than the second

NOTE Confidence: 0.852585017681122

c82fb6e7-87c2-4b8b-9305-24f240a91597
00:44:26.027 --> 00:44:32.060
number. So the first is just
making the same size, so by

NOTE Confidence: 0.852585017681122

5131c2d1-5459-4857-b53a-544c3c19fc70
00:44:32.060 --> 00:44:34.640
padding the integer part and the

NOTE Confidence: 0.882393777370453

7bd281ae-23fc-4364-af19-43053ebb91bc
00:44:34.640 --> 00:44:37.366
fraction part. And then it

NOTE Confidence: 0.884574115276337

8aa1867d-3b7d-491f-be21-666871c4cf57
00:44:37.366 --> 00:44:40.590
starts subtraction. So 4 -- 0

NOTE Confidence: 0.822209298610687

6c23eedd-fc6f-41e0-a5a5-167b382cd5f9
00:44:40.590 --> 00:44:47.259
becomes 4. 5 -- 6 It
is not possible to do that. So

NOTE Confidence: 0.822209298610687

0b159207-65df-47df-9973-6f1f2bb31524
00:44:47.259 --> 00:44:52.836
the idea we know that the idea
borrowing so we borrow from the

NOTE Confidence: 0.822209298610687

6211b25f-bc63-4c99-a167-123f347073e7
00:44:52.836 --> 00:44:57.126
higher significant position one
unit when one unit from the

NOTE Confidence: 0.822209298610687

5a1749b2-62dc-4a9e-9f5f-029a543c7ee4
00:44:57.126 --> 00:45:00.558
higher significant position
comes to the lowest significant

NOTE Confidence: 0.822209298610687

69c735c3-add4-44f4-a66c-1e260f691559
00:45:00.558 --> 00:45:06.564
position it brings to the amount
of the bill. So if you borrow 1

NOTE Confidence: 0.822209298610687

b34f2c21-6f5f-47fc-ac2e-2e958f37a4c7
00:45:06.564 --> 00:45:09.996
unit from the higher significant
position it brings.

NOTE Confidence: 0.844718992710114

e74e9057-8146-4aa4-81d3-c4e7ee2845d8
00:45:10.670 --> 00:45:13.118
Plus 10 if you are in base 10.

NOTE Confidence: 0.87540465593338

8ee74fbf-6043-4bb8-ad32-58d3c0948240
00:45:14.290 --> 00:45:16.850
Now we can. We are able to do

NOTE Confidence: 0.84356015920639

8fdf85ce-7121-4ae7-80a4-435207b772d6
00:45:16.850 --> 00:45:22.790
the subtraction so. 10 + 5
becomes 15 and now we can

NOTE Confidence: 0.84356015920639

168c2742-66ae-466a-9f98-b727270edd5f
00:45:22.790 --> 00:45:24.230
subtract 6 planet.

NOTE Confidence: 0.8064284324646

74aa61c1-90e6-46ef-8a0c-22c99ae6f7b7
00:45:24.740 --> 00:45:26.018
This becomes not.

NOTE Confidence: 0.881818234920502

4856e00f-6c73-4a8c-b30b-19547b536365
00:45:27.720 --> 00:45:33.453
The next is, so we already had
one. We borrowed one unit, so

NOTE Confidence: 0.881818234920502

13922828-6fea-4f59-bc11-7282adbe1429
00:45:33.453 --> 00:45:38.304
becomes 1 -- 1 becomes zero, 0
-- 0 becomes 0.

NOTE Confidence: 0.857510805130005

3115c4c3-0288-491f-b72d-579483875937
00:45:40.330 --> 00:45:45.725
And then we continue for the
integer Part 1 -- 2 is not

NOTE Confidence: 0.857510805130005

6758025f-9e5a-4e85-a974-b6782101ef46
00:45:45.725 --> 00:45:50.290
possible, so we borrow when we
borrow from the higher position

NOTE Confidence: 0.857510805130005

88b00cdf-79af-43e2-823a-f59cc634c66f
00:45:50.290 --> 00:45:55.685
it brings to the amount of the
base number. Base 10 with brings

NOTE Confidence: 0.848746359348297

90bedd3d-8a21-49b6-817a-8db176f4c0b0
00:45:55.685 --> 00:46:00.593
10 units. 10 + 1 becomes 11 --
2 becomes 9.

NOTE Confidence: 0.874811589717865

f6dc91f5-adf5-4f0b-8759-d864d87e6ed7
00:46:02.470 --> 00:46:07.366
Here you already had two. You
borrowed one unit, so it becomes

NOTE Confidence: 0.874811589717865

6159e79d-3415-4bd9-8673-2578c87de9ae
00:46:07.366 --> 00:46:13.486
2 -- 1, one 1 -- 3. It's not
possible, so you have to borrow.

NOTE Confidence: 0.843841314315796

2842a528-55c2-4c19-85a3-f0675aec22ee
00:46:14.410 --> 00:46:17.476
Now it is possible so plus 10.

NOTE Confidence: 0.80516105890274

174a890f-99cd-45b8-9131-d05d22d793cb
00:46:18.370 --> 00:46:25.210
A 10 + 2 -- 1 becomes
1111 -- 3 becomes 8.

NOTE Confidence: 0.922373712062836

0d38819d-b943-49fb-9bdf-d82eec225e6a
00:46:26.200 --> 00:46:28.300
And the next number is this.

NOTE Confidence: 0.829279661178589

9a213298-65d2-4ed9-93b9-e8473f1ab396
00:46:28.830 --> 00:46:34.420
The next digit minus one, so you
had zero, you borrowed one unit

NOTE Confidence: 0.829279661178589

54b76bc7-46ab-4318-a95f-7ad2c5b804dc
00:46:34.420 --> 00:46:39.150
from zero. So as soon as
possible, so it becomes minus

NOTE Confidence: 0.829279661178589

211c26a2-c200-4ef6-b5c1-e411cd3aecc6
00:46:39.150 --> 00:46:44.740
one, and now you have to
subtract minus 1, four, 4 -- 1.

NOTE Confidence: 0.829279661178589

683f78c1-fef2-43d6-889c-7555024b3634
00:46:44.740 --> 00:46:47.320
This is not possible, so you

NOTE Confidence: 0.894887864589691

91f70b29-c42a-4488-b1e4-bb63430d5a36
00:46:47.320 --> 00:46:52.466
borrow. This is important. You
borrow from where you assume

NOTE Confidence: 0.894887864589691

22688978-9d9e-40f2-a75d-70a9c685898c
00:46:52.466 --> 00:46:57.434
that there is a larger number
that you could borrow from that.

NOTE Confidence: 0.86430698633194

80e077ae-6178-4d2b-9e96-8438222eac7f
00:46:57.970 --> 00:47:02.335
So you borrowed from that number
so plus 10.

NOTE Confidence: 0.847493350505829

0afabf93-c7db-404f-9d0b-8a9896a9b854
00:47:02.920 --> 00:47:10.135
Plus 10 -- 1 + 10 + 10
+ 0 becomes 10 -- 1 becomes

NOTE Confidence: 0.847493350505829

69d12cd5-af44-4d0e-855f-5242a306a869
00:47:10.135 --> 00:47:13.021
nine, 9 -- 4 becomes 5.

NOTE Confidence: 0.930476665496826

faffa10b-8ae4-4f8e-9f78-50bc3b90fea0
00:47:14.100 --> 00:47:14.940
So.

NOTE Confidence: 0.850811719894409

2c3e2411-8532-4716-9d31-b87598f9cc9c
00:47:16.480 --> 00:47:22.350
This last photo happened because
the first number was smaller,

NOTE Confidence: 0.850811719894409

c1ad8ca4-0e03-4b3d-8bed-a8296c668da7
00:47:22.350 --> 00:47:24.111
the second number.

NOTE Confidence: 0.862667322158813

179ccd13-a9e6-4a81-981a-caa6b6330fb2
00:47:25.720 --> 00:47:30.320
So whenever you have, you are
subtracting the smaller number

NOTE Confidence: 0.862667322158813

b77d6f8f-ad32-40fc-9dfe-73bb815d5a85
00:47:30.320 --> 00:47:34.920
from a larger number, always
there is the last bar.

NOTE Confidence: 0.900774359703064

6bf92dcc-5ab8-4db6-b55e-648182c516eb
00:47:35.750 --> 00:47:39.580
And the result is not the
correct result, because this

NOTE Confidence: 0.900774359703064

80584810-27ed-46bb-8d0c-6d36d5703de7
00:47:39.580 --> 00:47:43.027
result doesn't subtract from
that larger number that we

NOTE Confidence: 0.900774359703064

63429829-f619-4bd1-8ccc-a497e0da9f90
00:47:43.027 --> 00:47:47.623
assume there is a larger number
that we could borrow from that.

NOTE Confidence: 0.83418220281601

e26b31ec-ec6a-4607-a481-cd7b72816fba
00:47:48.180 --> 00:47:52.808
The only thing right now we
can see is that there is a

NOTE Confidence: 0.83418220281601

89d20cb0-f63c-4b37-af0f-094ec8a01d1b
00:47:52.808 --> 00:47:56.724
last follow an we could buy
this last fall. We could

NOTE Confidence: 0.83418220281601

d37b796a-4a97-491b-a2de-eee300e5cd49
00:47:56.724 --> 00:48:00.284
say that the first number
was smaller than the 2nd.

NOTE Confidence: 0.936687052249908

39386bc0-a84e-4d65-a68c-5bcc650959fe
00:48:01.370 --> 00:48:03.030
So what's the correct result?

NOTE Confidence: 0.882652759552002

92daf91a-a7a7-4b43-a034-cde768bd3144
00:48:04.810 --> 00:48:08.458
So the last bottle means that
the first number is smaller, so

NOTE Confidence: 0.882652759552002

900aa4c4-9023-46a0-bf03-1e71e2d20864
00:48:08.458 --> 00:48:10.282
the result going to be negative.

NOTE Confidence: 0.912091612815857

686ec6e5-8c8e-4435-bca4-5a739cec1889
00:48:10.960 --> 00:48:14.150
We know we don't know how to
represent negative numbers for

NOTE Confidence: 0.912091612815857

4812991b-9008-4051-8640-df8ab9c6dd93
00:48:14.150 --> 00:48:17.340
now, but we know that this
result is not the correct

NOTE Confidence: 0.917903363704681

6ed705a5-24c1-49de-a5bf-614a3a9e5590
00:48:17.340 --> 00:48:21.716
result. So in order to come up
with the correct result, we have

NOTE Confidence: 0.917903363704681

43716c94-c9d2-4530-a242-1615247848f5
00:48:21.716 --> 00:48:22.808
to do another subtraction.

NOTE Confidence: 0.888451516628265

31f670bf-2436-4528-b2d4-50c1854ae03d
00:48:23.620 --> 00:48:27.090
So this is the incorrect result
of the previous subtraction.

NOTE Confidence: 0.865843057632446

2c6e6351-e762-4fe7-bce2-61da5c641dbc
00:48:27.780 --> 00:48:32.059
But that imaginary larger number
was this that we could borrow

NOTE Confidence: 0.865843057632446

d3283880-c71f-4359-bbc0-258a5651acaa
00:48:32.059 --> 00:48:36.727
from that. So you remember you
wanted one unit we bought from

NOTE Confidence: 0.865843057632446

e7c35d67-d5aa-40d3-a7d6-65da401b2a7f
00:48:36.727 --> 00:48:41.784
this number that one unit. So we
have to apply this number as

NOTE Confidence: 0.865843057632446

5749fa33-5656-4fb8-837c-b5fb6b249ebc
00:48:41.784 --> 00:48:46.452
well. So we have to do another
subtraction. Also, this is base

NOTE Confidence: 0.772523105144501

dde5fe12-f649-4b00-8762-24eb8362d077
00:48:46.452 --> 00:48:51.894
10. So if you do another
subtraction, the result of

NOTE Confidence: 0.772523105144501

442aaf3a-007f-4159-9d39-643ce160650d
00:48:51.894 --> 00:48:56.910
previous subtraction from this
larger number, so 0 from 4 is

NOTE Confidence: 0.772523105144501

7d198f4c-cfc2-4f3c-a976-a2e15f8bec3f
00:48:56.910 --> 00:49:02.838
not possible, we borrow, so
becomes plus 10 now plus 10 + 0

NOTE Confidence: 0.772523105144501

a3e82df7-825f-4e62-bbbb-d35f9b06af0c
00:49:02.838 --> 00:49:05.574
+ 10 -- 4 becomes 6.

NOTE Confidence: 0.757528185844421

dadbe5b2-bf09-4e9c-8d5b-f44c994cb942
00:49:07.010 --> 00:49:12.202
This the next subtraction is
this zero. We borrowed one unit

NOTE Confidence: 0.757528185844421

c8c36156-c2d6-4a4b-9612-094429d4809d
00:49:12.202 --> 00:49:17.866
minus one is not possible to
subtract from not site to minus

NOTE Confidence: 0.757528185844421

96e3b270-7966-4fe4-8205-b6f777b210b8
00:49:17.866 --> 00:49:20.698
nine is not possible we borrow.

NOTE Confidence: 0.878138363361359

392d4e27-3a57-45e0-9a6e-d7f30d567a55
00:49:21.310 --> 00:49:26.302
And then turn plus 0 -- 1, nine
9 -- 9 becomes 0.

NOTE Confidence: 0.883688747882843

49463b37-9700-44ea-a847-b8ef0ee164b7
00:49:27.140 --> 00:49:31.885
And you continue up until the
last one. This was the unit that

NOTE Confidence: 0.883688747882843

662c9313-f6c8-4f43-ab57-2c861feeda5a
00:49:31.885 --> 00:49:34.075
you borrowed, so it becomes 0

NOTE Confidence: 0.883673548698425

46b821b8-9225-4bda-85af-5a2fe26fee46
00:49:34.075 --> 00:49:39.700
here. So let's do a recap. So we
wanted to subtract this number

NOTE Confidence: 0.883673548698425

10689b64-57db-456a-96f3-1302a0b21ef2
00:49:39.700 --> 00:49:42.985
from this number. Sorry this
number from this number.

NOTE Confidence: 0.799219310283661

ea827b6e-b1b4-4261-abe6-c85c9d81d2f2
00:49:45.470 --> 00:49:49.614
This is the result, but we had a
last follow by Nas for we

NOTE Confidence: 0.799219310283661

d40d7937-d1a2-4114-8ba4-ce13261a9425
00:49:49.614 --> 00:49:52.870
figured out that the first
number one is smaller than the

NOTE Confidence: 0.817823052406311

ac719afe-f7d5-45dc-928c-e722b1f44229
00:49:52.870 --> 00:49:58.340
2nd. This last photo was
borrowed from this number, so we

NOTE Confidence: 0.817823052406311

4ce9aea9-5987-41d9-a9f6-ad6856c5d35d
00:49:58.340 --> 00:50:03.158
have to do another subtraction,
so this is the result of

NOTE Confidence: 0.817823052406311

dc1a647e-2f59-47b6-95c7-5c2e6068daf5
00:50:03.158 --> 00:50:06.662
previous subfraction subtracted
from that larger number. This

NOTE Confidence: 0.817823052406311

5d13a2dc-a5d6-4c24-92f8-a79a90ab7c1d
00:50:06.662 --> 00:50:08.414
becomes the true result.

NOTE Confidence: 0.896513819694519

56bdf477-083a-4c33-9439-40f577f0c394
00:50:09.740 --> 00:50:10.990
As you can see here.

NOTE Confidence: 0.921780407428741

020ddc2f-a3e6-4b39-bd7f-2e8e10704a3a
00:50:11.550 --> 00:50:14.480
But this number was negative.

NOTE Confidence: 0.875628054141998

7c2489e5-b046-4db6-bc27-dada9409c076
00:50:15.080 --> 00:50:18.860
Because the last photo showed
that the first number was

NOTE Confidence: 0.875628054141998

b9038a63-ffcf-4512-bad3-f1bc111dd9b2
00:50:18.860 --> 00:50:23.396
smaller, so that's why we know
that the result is negative. So

NOTE Confidence: 0.875628054141998

472fe92c-a739-4654-86a2-8d023bb914da
00:50:23.396 --> 00:50:27.932
we put this correct result and
we put this signature here to

NOTE Confidence: 0.875628054141998

2eaa5278-52c3-44bf-b488-54daadd32daa
00:50:27.932 --> 00:50:29.822
show that the result is

NOTE Confidence: 0.903313457965851

597807ce-15b3-4d38-a82c-e15b4db4a289
00:50:29.822 --> 00:50:33.872
negative. Although we don't know
how to represent negative

NOTE Confidence: 0.903313457965851

b200c303-6771-4b7f-90bf-c90979f419eb
00:50:33.872 --> 00:50:38.000
numbers yet, but this is just a
symbol to show that the

NOTE Confidence: 0.903313457965851

9ea0d4d6-61c9-43fa-a94a-c30d134ef2a5
00:50:38.000 --> 00:50:41.440
subtraction was not right. You
have to another subtraction, and

NOTE Confidence: 0.903313457965851

8b6c28d1-9b4e-4332-8ba6-9307f40a40f5
00:50:41.440 --> 00:50:44.192
this is the correct answer,
which is negative.

NOTE Confidence: 0.885932564735413

c5120cb3-655b-48f3-8ae9-2df82b481cb2
00:50:45.210 --> 00:50:49.818
So now I want to show you an
example in other bases.

NOTE Confidence: 0.810638666152954

f8b6d818-86f2-4e84-9299-adff37201cf5
00:50:51.600 --> 00:50:54.126
So the other base function space

NOTE Confidence: 0.913893222808838

912c90fa-8661-43ef-aacf-03f9c01f4bcd
00:50:54.126 --> 00:50:59.312
16. Now I want to subtract this
number from this number and I

NOTE Confidence: 0.913893222808838

ca436998-7112-4c8d-a127-ea28111c85d2
00:50:59.312 --> 00:51:02.822
don't know this number is
smaller than the second number

NOTE Confidence: 0.890319228172302

32c295b5-c652-4b28-96ac-3a754043b6ce
00:51:02.822 --> 00:51:07.074
or larger. So the first thing
you have to do is just padding.

NOTE Confidence: 0.775500595569611

8189db59-619c-44e6-9d24-70ce8b9c5e8a
00:51:07.690 --> 00:51:09.169
Anna start subtracting.

NOTE Confidence: 0.919176340103149

1da70373-6c78-49ca-8bc6-9ee832c9adc4
00:51:09.680 --> 00:51:12.030
So 4 -- 0 four.

NOTE Confidence: 0.891822755336761

7aa646ab-3f48-464c-942e-7ae93ed6df0e
00:51:12.780 --> 00:51:19.820
5 -- B he is eleven. 5 -- 11
is not possible so we have to

NOTE Confidence: 0.861968338489532

a0d3444f-0d1a-4fc5-aae0-679782060402
00:51:19.820 --> 00:51:24.970
borrow. He bought 1 unit
because we are in base 16.

NOTE Confidence: 0.861968338489532

06db39dc-0d79-4a15-86b7-84b992bfaa3a
00:51:24.970 --> 00:51:29.180
When we borrow from the
higher position it gives us

NOTE Confidence: 0.861968338489532

514082a0-aeb8-4227-b4e3-45556cac1d5c
00:51:29.180 --> 00:51:35.916
the the amount of 16. So 16
+ 5. It is 21 -- 11. It is

NOTE Confidence: 0.861968338489532

c2aea0df-dc32-48cf-b246-62dc5d45f79e
00:51:35.916 --> 00:51:40.547
possible so it becomes a
1010 is equal to alphabet A

NOTE Confidence: 0.861968338489532

51a2bb31-8425-4018-a61e-b259327cdbe4
00:51:40.547 --> 00:51:41.810
in base 16.

NOTE Confidence: 0.799350559711456

3b48feae-fe35-4924-a986-3a47b66b800a
00:51:43.520 --> 00:51:45.168
We already had E.

NOTE Confidence: 0.851597011089325

7474555d-26c2-4b42-afa9-1541362ec3f0
00:51:46.310 --> 00:51:49.502
Be forward one unit, so E -- 1

NOTE Confidence: 0.907075107097626

f298890b-cb57-4335-8129-c4b99ab96901
00:51:49.502 --> 00:51:56.842
-- 2. He is 1414
-- 113 -- 211. Eleven is

NOTE Confidence: 0.907075107097626

826394dd-b106-411c-922e-17b2ef5a8a12
00:51:56.842 --> 00:51:58.696
equal to B.

NOTE Confidence: 0.878048539161682

35b63c46-629a-4105-9fc7-f8a33c8cf712
00:52:01.650 --> 00:52:07.554
So then here a -- F A is 10,
F is 15 is not possible. We

NOTE Confidence: 0.878048539161682

11332a02-ea9a-4519-b43e-3ad0a60c341f
00:52:07.554 --> 00:52:08.661
have to borrow.

NOTE Confidence: 0.883183479309082

8a0e14a7-3b92-42ea-b406-ab19b99f9101
00:52:09.730 --> 00:52:16.209
Now 16 + 1026 -- 1511
eleven is equal to P.

NOTE Confidence: 0.893170654773712

6f6f8ed9-fd81-4ff8-8992-0eb4c44f103e
00:52:18.220 --> 00:52:24.620
We had two. We borrowed one unit
so it becomes 2 -- 1 one 1 --

NOTE Confidence: 0.893170654773712

e460fc31-57ce-4d14-8d17-53b85a63104f
00:52:24.620 --> 00:52:27.020
11. It's not possible. We have

NOTE Confidence: 0.841691255569458

204436cb-b101-4733-96fa-09218497a209
00:52:27.020 --> 00:52:34.573
to borrow. 16 + 2
-- 1 becomes a 18 minus

NOTE Confidence: 0.841691255569458

cb30fe47-b91e-43ab-a4da-ef2c7c8b8925
00:52:34.573 --> 00:52:37.858
one 1717 -- 11 six.

NOTE Confidence: 0.822244107723236

596099d0-6aca-4757-a40c-3006823dea68
00:52:38.670 --> 00:52:43.935
And then the next digit we had
zero. We borrowed one unit and

NOTE Confidence: 0.822244107723236

62a5dc6d-34e7-4087-b7c6-9d28c9028f26
00:52:43.935 --> 00:52:49.200
then becomes minus 1 -- 4. It's
not possible, so we have to

NOTE Confidence: 0.822244107723236

ee1022cc-ca81-4abf-9a6e-e19a3fc6c657
00:52:49.200 --> 00:52:54.465
assume there is a higher number
that we could buy a borrow from

NOTE Confidence: 0.900556564331055

e814d668-43e5-41a8-abc3-dd9e8a62c977
00:52:54.465 --> 00:53:00.980
that. So we bought up on that
unit 16 and now it's possible 16

NOTE Confidence: 0.900556564331055

fe59fe84-1786-4457-8c84-eac755456ac7
00:53:00.980 --> 00:53:04.180
+ 0 minus one 1515 -- 4 becomes

NOTE Confidence: 0.901112079620361

f77beaeb-feba-4490-9260-b27be8e51236
00:53:04.180 --> 00:53:07.086
11. And 11 is equal to be.

NOTE Confidence: 0.931570947170258

147bc2fd-e497-4ed3-a09a-cb9c6e440583
00:53:07.810 --> 00:53:09.790
And as you can see here.

NOTE Confidence: 0.847370505332947

b6d66f1c-7106-42ef-a882-35f0734f959e
00:53:10.430 --> 00:53:14.390
We didn't compare the numbers,
but we see there is a last

NOTE Confidence: 0.847370505332947

060d036e-07ca-4c91-a194-1fc44fa21eb4
00:53:14.390 --> 00:53:18.020
borrow because of this last
photo, we can say that the

NOTE Confidence: 0.847370505332947

bdc981a4-cce8-4a6d-aa66-fe6108f002bb
00:53:18.020 --> 00:53:21.320
first number was smaller than
the second number, so we

NOTE Confidence: 0.847370505332947

59dea3f7-da6a-4ac6-a20d-f6ff810c2c76
00:53:21.320 --> 00:53:24.620
shouldn't look at the result.
We have to do another

NOTE Confidence: 0.847370505332947

d3c40037-318e-43ac-b398-fd4226e7f85c
00:53:24.620 --> 00:53:27.590
subtraction from that, not
higher number that we borrowed

NOTE Confidence: 0.847370505332947

0169cb02-9a44-418a-9e9f-48b6e6cd9af8
00:53:27.590 --> 00:53:27.920
from.

NOTE Confidence: 0.839480757713318

31277628-820c-44f3-b3e4-373d75703f55
00:53:29.510 --> 00:53:33.878
So the last photo shows there's
a negative result an the first

NOTE Confidence: 0.839480757713318

f1a7a727-1c76-4099-9e81-b7502474d690
00:53:33.878 --> 00:53:36.062
number is lower than the 2nd.

NOTE Confidence: 0.864823639392853

2660b80b-063c-4bcf-b661-4533b64b57e1
00:53:37.280 --> 00:53:42.166
So to fix the result. So we did
this subtraction 1st and we end

NOTE Confidence: 0.864823639392853

e9049823-fb48-4812-af02-2f1065761f93
00:53:42.166 --> 00:53:43.911
up with this incorrect result.

NOTE Confidence: 0.869601786136627

f330e036-a2c6-4a19-8b67-dbad6a3eef34
00:53:44.440 --> 00:53:48.184
And the last for the last four
showed that we have to do

NOTE Confidence: 0.869104564189911

2be38514-4b17-4b75-8165-53e8ef4fca4d
00:53:48.184 --> 00:53:52.431
another subtraction. This was
the largest largest number that

NOTE Confidence: 0.869104564189911

d9eb566b-b7b2-4bc2-84bd-295227ae314c
00:53:52.431 --> 00:53:57.747
we bought it from at the last
point, so we subtract the

NOTE Confidence: 0.869104564189911

10ffdad3-93fb-499b-9212-d7e5d8f9460c
00:53:57.747 --> 00:54:01.291
result. The incorrect result
from that higher number.

NOTE Confidence: 0.871608853340149

3ea96736-dbad-4813-9473-363e124a006e
00:54:02.800 --> 00:54:06.656
So this is another
subtraction based 16, so

NOTE Confidence: 0.871608853340149

f3f37f17-9e34-494e-aec4-e71e578a202e
00:54:06.656 --> 00:54:11.958
100 zero .000 minus this
number. So 0 -- 4 not

NOTE Confidence: 0.871608853340149

d3e3bc88-7e9a-4386-8aec-f4bb35645260
00:54:11.958 --> 00:54:16.778
possible. We borrow money,
borrow we add 16 unit 16

NOTE Confidence: 0.871608853340149

052287cf-640b-492a-81c9-779aadbcaafa
00:54:16.778 --> 00:54:22.080
-- 4 is 1212 is equal to C
in base 16.

NOTE Confidence: 0.873628199100494

dd5dc154-6ae2-438a-ac69-72dad9b4f479
00:54:23.530 --> 00:54:30.266
We had zero. We bought 1 unit
becomes minus 1 -- 1 -- 8 or 10

NOTE Confidence: 0.873628199100494

17de0f6e-b7bc-46ef-8a19-4d3984f2b08e
00:54:30.266 --> 00:54:32.792
is not possible. You have to

NOTE Confidence: 0.843838095664978

4f66652d-50b2-4e28-a39a-f3c0484bb397
00:54:32.792 --> 00:54:40.254
borrow. We are in base 16.
It adds 16 units, so 16 + 0

NOTE Confidence: 0.843838095664978

4b96a7c0-121b-4db3-9523-d4386ea0a030
00:54:40.254 --> 00:54:44.158
-- 1 * 1515 -- 10 becomes 5,

NOTE Confidence: 0.930016458034515

d379dafd-9af9-45ac-9656-20588cd8fd12
00:54:44.158 --> 00:54:47.870
Ann etc. And this is the correct

NOTE Confidence: 0.922325432300568

d304449e-cbec-4dcb-b415-31f59573c684
00:54:47.870 --> 00:54:52.338
result. But this correct result
is a negative result.

NOTE Confidence: 0.897293746471405

83bc616b-3689-482b-ae08-bd910eed9d93
00:54:54.110 --> 00:54:58.922
So this is the final number,
although we don't know how to

NOTE Confidence: 0.897293746471405

235f6f06-14fd-44b7-94aa-7e26069d0c2a
00:54:58.922 --> 00:55:02.531
represent a negative number,
this is an additional symbol,

NOTE Confidence: 0.897293746471405

623bf2a4-beff-471b-a61c-64a95ef5f592
00:55:02.531 --> 00:55:07.343
but at least we know that this
is the correct magnitude of

NOTE Confidence: 0.897293746471405

a4de74d3-96d7-4ec7-8f17-e1fd11619746
00:55:07.343 --> 00:55:08.546
the correct size.

NOTE Confidence: 0.876935601234436

5aa692f7-d535-4325-9a3e-c2d22193eb9a
00:55:09.590 --> 00:55:13.616
But we know that this is a
negative result, so this

NOTE Confidence: 0.876935601234436

1b547c35-6e21-463f-ae72-3001896001f4
00:55:13.616 --> 00:55:16.544
number minus this number
becomes negative number and

NOTE Confidence: 0.876935601234436

0b4f93ec-941f-4fd8-aebf-40c7e9282887
00:55:16.544 --> 00:55:18.008
this is the not.

NOTE Confidence: 0.858281314373016

db78139f-725b-4e28-9932-33e35ae2ab15
00:55:19.880 --> 00:55:24.130
Division is you can see what's
the division algorithm, decimal

NOTE Confidence: 0.858281314373016

5bc06f72-3af8-4395-973b-0585c7aa3f6d
00:55:24.130 --> 00:55:29.230
system as and as you can see
division is kind of iterative

NOTE Confidence: 0.858281314373016

891581ff-44e9-4e64-b9d3-981704568ff1
00:55:29.230 --> 00:55:33.905
subtraction, so you know how to
do subtraction in any basis

NOTE Confidence: 0.858281314373016

3c884eee-40f0-4836-81b9-3261a585f97c
00:55:33.905 --> 00:55:39.855
now. So you can do any division
in any basis by knowing how to

NOTE Confidence: 0.858281314373016

b8303baa-7816-4a7e-937e-006a193bc6c4
00:55:39.855 --> 00:55:45.380
do subtraction. So I leave it
as an exercise for you. And now

NOTE Confidence: 0.858281314373016

0c9fa21d-4551-44d6-b75f-61d071f2d9bf
00:55:45.380 --> 00:55:49.205
we want to see how we represent
negative numbers.

NOTE Confidence: 0.893404185771942

5fbaf65f-7593-4994-8c25-871f3eea78b3
00:55:50.290 --> 00:55:54.932
So before I start this, I'm
happy to take your questions,

NOTE Confidence: 0.722679197788239

64cccf40-65ea-4bfd-bab2-1603000fc6ea
00:55:54.932 --> 00:56:02.610
OK? Let's move on here
digitally. OK, so we have one

NOTE Confidence: 0.722679197788239

6a10b555-e12c-4599-bdc7-33f3b16a767c
00:56:02.610 --> 00:56:06.576
question. Can we just had a

NOTE Confidence: 0.839577317237854

fcad57b3-2061-473d-8e8c-d412b61b3d68
00:56:06.576 --> 00:56:12.070
negative symbol? If there was a
lost phone, stop doing all that.

NOTE Confidence: 0.852630972862244

7e7d156c-aef3-487c-a9f3-6ed027c7bd3f
00:56:12.860 --> 00:56:19.828
Yes you can. You
can do this second

NOTE Confidence: 0.844385266304016

4f889433-7135-4588-ac8b-26cf52efa4f6
00:56:19.828 --> 00:56:25.660
subtraction just. But in one
phase, so you could say that the

NOTE Confidence: 0.844385266304016

fd2871a3-fc7f-46fc-959d-d0dbe71c65fe
00:56:25.660 --> 00:56:30.159
first number minus the second
number, and you put the that

NOTE Confidence: 0.844385266304016

f755b44b-4241-4fc4-9ce3-800b1f241af3
00:56:30.159 --> 00:56:35.067
larger number before the 1st
number. So let me back to this

NOTE Confidence: 0.871498882770538

c5334352-8465-4ffd-9d99-0fabc2bfe70d
00:56:35.067 --> 00:56:40.140
slide. You can do that, but I
just wanted to show you how

NOTE Confidence: 0.871498882770538

75567963-4b86-416a-8569-b40d96a9fcf2
00:56:40.140 --> 00:56:43.550
each step is going on. For
instance, let's back to the

NOTE Confidence: 0.871498882770538

81cbb973-3fd6-4b44-bda0-c078c17e4fa7
00:56:43.550 --> 00:56:44.170
decimal system.

NOTE Confidence: 0.937915563583374

e1055689-0aa7-4cff-aca9-1d6190cb218f
00:56:47.880 --> 00:56:49.330
So.

NOTE Confidence: 0.88979709148407

2ea09cc5-9137-4cd6-a73f-01da40a95a6d
00:56:50.540 --> 00:56:52.106
Yeah, we wanted to do this.

NOTE Confidence: 0.863757848739624

ccc2c311-ca5c-4c5e-a0f6-445fed4f3031
00:56:52.810 --> 00:56:57.874
So you could, I mean, because
you know that the first number

NOTE Confidence: 0.863757848739624

ba5d4e54-4aac-4ef3-b779-f80f1714a1ee
00:56:57.874 --> 00:57:02.938
is a smaller than the second
number, so you know that there

NOTE Confidence: 0.863757848739624

efa38959-7eb8-4a03-a327-3d71cb75c695
00:57:02.938 --> 00:57:08.002
would be a last follow. So you
could add that larger number.

NOTE Confidence: 0.863757848739624

67942412-406c-4a9d-8e3f-690e605ac96b
00:57:08.002 --> 00:57:12.644
Here, for instance, you put
10001 etc and then you just

NOTE Confidence: 0.863757848739624

01446b4d-7bb6-4f2d-8d4d-6651ce205f73
00:57:12.644 --> 00:57:16.864
subtract the this number from
that number and then subtract

NOTE Confidence: 0.863757848739624

49f1d775-5d32-405e-9781-8586b517cc66
00:57:16.864 --> 00:57:22.350
from this number in one phase.
But The thing is in usually in

NOTE Confidence: 0.897442758083344

d879672f-e334-4374-aa29-70ff780c2291
00:57:22.350 --> 00:57:25.788
others. Sometimes you get me
back to the.

NOTE Confidence: 0.886067450046539

b2b3250d-bc0f-44cb-acb5-313013b3a534
00:57:26.720 --> 00:57:31.344
Second example, sometimes you
cannot determine the first

NOTE Confidence: 0.886067450046539

9c0ef162-9ea7-463c-845b-a60d105f6cb0
00:57:31.344 --> 00:57:36.546
number is smaller than the
second number or not.

NOTE Confidence: 0.870139896869659

d0e0de1f-67f6-46c0-99c1-585485fae08a
00:57:37.270 --> 00:57:40.630
So this is evident here in this
example, but sometimes you don't

NOTE Confidence: 0.870139896869659

caf11cb4-ab62-4d6c-aca1-a574f70e2078
00:57:40.630 --> 00:57:44.270
know, so you have to 1st do the
subtraction and you check the

NOTE Confidence: 0.870139896869659

b6171b8d-d9e9-4991-9ec6-997405b9d638
00:57:44.270 --> 00:57:47.630
last bottle. If there is the
last photo, you now know that

NOTE Confidence: 0.870139896869659

fe834fb9-3bef-4bc6-a186-4df2a69e8e3e
00:57:47.630 --> 00:57:50.990
the first number is smaller than
the second number and then do

NOTE Confidence: 0.942044258117676

ce78d2c8-e683-404a-85a3-afacdb0e0be6
00:57:50.990 --> 00:57:55.249
the another subtraction. So
that's why we did it separately.

NOTE Confidence: 0.905486404895782

c0d200cb-2fc7-4abb-8f05-338f5cfaf899
00:57:57.310 --> 00:57:59.718
So any other questions?

NOTE Confidence: 0.892215430736542

f5bc2bd9-e836-47cd-bf54-6d9c19f75738
00:58:07.350 --> 00:58:12.020
So the next topic is very
important, so so another

NOTE Confidence: 0.892215430736542

47e7c5dc-71f3-4a52-ae47-52e9d9ba1715
00:58:12.020 --> 00:58:16.223
question, could you give some
example where we cannot

NOTE Confidence: 0.211658790707588

2624ea71-fc16-4702-8e1e-605fb619311c
00:58:16.223 --> 00:58:19.325
recognize? Uh

NOTE Confidence: 0.772502660751343

60661f0a-cca3-45a3-be9a-4b37d44ebcf9
00:58:19.325 --> 00:58:25.620
oh. Actually I don't have
my blackboard here, so I would

NOTE Confidence: 0.772502660751343

06fb4bc3-290b-4568-81d3-c53996fc7a35
00:58:25.620 --> 00:58:29.391
put the plan example here for
you, but imagine.

NOTE Confidence: 0.772426307201386

940b07a9-3f25-4876-a2bc-231f82e9fc0b
00:58:29.400 --> 00:58:35.412
Uh, imagine for the first number
for the first number we would

NOTE Confidence: 0.835084438323975

b605cf71-4a2f-4086-8408-cb0a93a96041
00:58:35.412 --> 00:58:42.986
have this. 4 Here, so let
me just make it a pan. If

NOTE Confidence: 0.835084438323975

3762f141-bde5-4b1c-91d9-f6b1326693b0
00:58:42.986 --> 00:58:45.170
you have 4 here.

NOTE Confidence: 0.819030404090881

613fa540-b658-42f3-a43c-10f8b7253703
00:58:46.310 --> 00:58:51.665
And here if you had, for
instance, of a.

NOTE Confidence: 0.935162425041199

6220d35e-ea69-4fa9-ac53-de591fe91ab5
00:58:54.040 --> 00:58:54.730
OK.

NOTE Confidence: 0.872988522052765

8e53c2de-cec1-4f1a-bcc5-c7e3e7fae058
00:58:55.820 --> 00:59:00.580
So at first you see that these
are the same size and etc. So

NOTE Confidence: 0.872988522052765

b6b7968f-2ca8-440e-bedd-c9d01d5d0b74
00:59:00.580 --> 00:59:04.660
the only thing that you can
figure out the first number is

NOTE Confidence: 0.872988522052765

43818abb-7f3d-490c-82c1-03f07feb3b76
00:59:04.660 --> 00:59:08.400
smaller than the second number
is that you start from this

NOTE Confidence: 0.872988522052765

86e3a77d-b1c2-4f69-a1ac-009528816d18
00:59:08.400 --> 00:59:12.820
position. These are the same
digit and hear a is lower than B

NOTE Confidence: 0.872988522052765

32ac27b6-3754-441e-866c-06f3a204dedf
00:59:12.820 --> 00:59:16.900
an. Now you know that the first
number is smaller than the

NOTE Confidence: 0.872988522052765

6d25b7ba-863a-4fd0-990a-eb12d6561ff8
00:59:16.900 --> 00:59:19.960
second one. However, if this
number becomes larger, for

NOTE Confidence: 0.872988522052765

ca68cd89-f3d1-4c10-aaa0-42267c3fb064
00:59:19.960 --> 00:59:23.360
instance, you have for instance
10 integer numbers and assume

NOTE Confidence: 0.872988522052765

5cd358b7-b33f-49da-a3da-a539392f9a6c
00:59:23.360 --> 00:59:27.440
that you are not a human being
to do this abstraction, assume

NOTE Confidence: 0.872988522052765

e849e774-e8ad-4d92-81b6-a7a25a77b7af
00:59:27.440 --> 00:59:29.820
that there is a machine to do

NOTE Confidence: 0.80157858133316

2c824267-e072-4c77-90dd-816a80036241
00:59:29.820 --> 00:59:34.009
the subtraction. The machine
knows the first number is

NOTE Confidence: 0.80157858133316

d5ec1144-d9c6-45e8-bc22-b229e96ed3d9
00:59:34.009 --> 00:59:39.366
smaller than the second number.
If there's a last follow after

NOTE Confidence: 0.80157858133316

d2cc20b0-8802-4ce4-b7e8-da1316cdd175
00:59:39.366 --> 00:59:41.314
the the last subtraction.

NOTE Confidence: 0.854349493980408

b7fb4257-16ec-4116-a39d-ff70a179fd12
00:59:42.030 --> 00:59:47.708
We because we we can see that OK
I a is less than B here. So the

NOTE Confidence: 0.854349493980408

ee88d26f-19a9-4181-9d5b-1ec3e567ce82
00:59:47.708 --> 00:59:51.716
first number is smaller. But
first of all, if you assume that

NOTE Confidence: 0.854349493980408

3a1f5a09-17e8-4055-86da-9f598e93cf4a
00:59:51.716 --> 00:59:56.058
there is a huge number of digits
here and second of all assume

NOTE Confidence: 0.854349493980408

ba6ee898-39da-4966-be41-2c60a7342336
00:59:56.058 --> 01:00:00.400
that there is a machine to do
that for you. The machine is

NOTE Confidence: 0.854349493980408

698227bb-c3f5-4552-af95-714c850eeeb4
01:00:00.400 --> 01:00:04.074
thought an algorithm itself is
the 1st digit, next digit and

NOTE Confidence: 0.854349493980408

b0671529-c9df-4cfd-a6a4-db6ac5f544c2
01:00:04.074 --> 01:00:06.412
etc and up until the last digit.

NOTE Confidence: 0.881802201271057

9ce63961-378e-41b8-b120-05e5856f49e0
01:00:07.100 --> 01:00:10.592
The machine, if there's the
last bottle now, it

NOTE Confidence: 0.881802201271057

6abc7be1-7fd7-494f-ae95-9be3e7650af8
01:00:10.592 --> 01:00:14.472
understands that the first
number is smaller, so you have

NOTE Confidence: 0.881802201271057

6a660bc0-5914-4b21-abd8-aba58f3dbd12
01:00:14.472 --> 01:00:17.188
to think of it as an
algorithm.

NOTE Confidence: 0.811313688755035

fe02af07-ef96-47ae-beba-c28692d4c773
01:00:21.400 --> 01:00:27.224
Uh. Yes, search and as I said,
I mean, uh, because, uh, the

NOTE Confidence: 0.811313688755035

4b35bb8b-71a6-4306-a959-1155cb3ce9a9
01:00:27.224 --> 01:00:30.594
digits are just three digits.
But imagine we have, for

NOTE Confidence: 0.811313688755035

449b11d8-1be7-47cd-9612-b5b9a65b9434
01:00:30.594 --> 01:00:34.975
instance, 10 digits, so you have
to check each digit 1st to see

NOTE Confidence: 0.811313688755035

b7cc56b1-bd7a-4be9-b7e8-cd42cd8f303c
01:00:34.975 --> 01:00:35.986
that. Yes, yeah.

NOTE Confidence: 0.862908601760864

d74b6ec9-6adb-4eb7-aba9-8cc8e48fc8fc
01:00:37.210 --> 01:00:40.240
Any other questions?

NOTE Confidence: 0.886827230453491

7b47cfaa-4c1a-4716-b7e0-aebf041337a1
01:00:44.590 --> 01:00:49.735
So let's move on to the next
topic and I what I want from you

NOTE Confidence: 0.886827230453491

c97ec7d4-3384-4e16-a7dd-5c56a562ffd7
01:00:49.735 --> 01:00:53.851
is that just send me some
feedback that I know you have

NOTE Confidence: 0.886827230453491

0d02499f-fe18-4543-9263-4c1ffc9dfb4f
01:00:53.851 --> 01:00:57.624
full attention to the class
because the next topic is kind

NOTE Confidence: 0.921082615852356

fa1f2ed0-e441-42cd-8dda-6dd8a7924fa8
01:00:57.624 --> 01:01:01.800
of important. So I'm waiting for
your feedback so you can simply

NOTE Confidence: 0.921082615852356

5788de48-af07-489f-b2aa-3788ebf6e3ca
01:01:01.800 --> 01:01:02.960
just click on your.

NOTE Confidence: 0.81208872795105

398bc18f-bc30-468b-a43d-9a61b6e427e1
01:01:03.540 --> 01:01:09.397
Uh. I mean I can't
and then send the some

NOTE Confidence: 0.81208872795105

ca02c8e3-dcfe-4eab-a306-a4e6a4f25ac9
01:01:09.397 --> 01:01:09.840
feedbacks.

NOTE Confidence: 0.632750928401947

f2e213b7-94b4-4180-a1d3-a009cf7d3bce
01:01:11.120 --> 01:01:17.366
 Thank you, Michael. Thank you Allyssa

NOTE Confidence: 0.750151455402374

1f792c0f-edcf-4b95-9495-35a48464834f
01:01:17.370 --> 01:01:19.290
 Thank you Phillip. 

NOTE Confidence: 0.667479515075684

0f114683-edfa-4efb-a3ed-f201f081e342
01:01:20.510 --> 01:01:24.350
Nathan Zach Afsao raaj

NOTE Confidence: 0.780870079994202

13c109dd-1f59-4f35-b99c-101ad4af0c7b
01:01:24.350 --> 01:01:31.414
we have. 62 students, so
I need 62 Ahmad emoji

NOTE Confidence: 0.780870079994202

8437e09e-5a4f-4598-b9c1-f1b980cff2d3
01:01:31.414 --> 01:01:34.186
 i can't repeat that

NOTE Confidence: 0.92645651102066

1a2a80f1-bd6f-41e3-86f6-276daf798838
01:01:34.910 --> 01:01:41.850
Awesome.
OK, so.

NOTE Confidence: 0.858122050762177

e8cf43fa-65ba-48a8-a5a7-bb9b76457f10
01:01:43.210 --> 01:01:49.555
raaj Matthew. So in this case you see that I mean each of 

NOTE Confidence: 0.858122050762177

8f4b1c0f-d6a2-481d-9cf7-b99fad005f65
01:01:49.555 --> 01:01:51.505
you has what type of feeling?

NOTE Confidence: 0.548222661018372

818cf2aa-f9d2-46b3-b0c5-a46ff6567bf1
01:01:52.390 --> 01:01:56.510
 Thank you Philip Ethan

NOTE Confidence: 0.8912073969841

83863653-9937-4b3d-9eda-bca247fc1835
01:01:57.520 --> 01:01:59.788
So how about others?

NOTE Confidence: 0.848852336406708

28afb12c-cb32-4083-8a86-10a7f75c856d
01:02:00.500 --> 01:02:01.868
I'll see if you.

NOTE Confidence: 0.734722971916199

ece36db3-d156-4328-8410-4fc5105cdfb6
01:02:06.000 --> 01:02:10.664
Oh hi, why you? I
mean unhappy says.

NOTE Confidence: 0.389379501342773

cc0f3973-c073-4118-ba6a-57c46d67facd
01:02:12.330 --> 01:02:13.190
Feeling.

NOTE Confidence: 0.838414669036865

7dd3f946-555b-4b36-af8a-6d1b9a39a0a6
01:02:14.280 --> 01:02:21.551
Gary and OK, so seems everybody
has the attention. So let's

NOTE Confidence: 0.0646612644195557

a6640047-6ae8-495e-86d9-24019edfe89a
01:02:21.551 --> 01:02:22.212
continue.

NOTE Confidence: 0.801306366920471

6cc2634a-70a0-4ac3-95b5-43a14dc3d781
01:02:22.930 --> 01:02:29.298
Uh.
The negative numbers.

NOTE Confidence: 0.870322585105896

ba6242d2-0537-4b02-a85d-04a06b3e846a
01:02:29.980 --> 01:02:34.050
So in the subtraction, we saw
that the store sometimes that

NOTE Confidence: 0.870322585105896

d8edb1a3-1644-4565-abc7-8323a1a7fe9e
01:02:34.050 --> 01:02:37.010
the result should be
interpreted as a negative

NOTE Confidence: 0.870322585105896

62ca6d38-eee7-4c3e-8bc3-0b9f0a8c3e70
01:02:37.010 --> 01:02:40.710
numbers, but we don't know how
to represent negative numbers.

NOTE Confidence: 0.877464115619659

af923f85-2bdc-4a6a-8f0a-b139f4b20158
01:02:41.860 --> 01:02:47.034
So now we want to. So you first
start with how to represent

NOTE Confidence: 0.877464115619659

839020da-4605-4f68-be00-3a432e59303f
01:02:47.034 --> 01:02:51.412
integer for numbers, and then we
continue with how to represent

NOTE Confidence: 0.877464115619659

a43b9c81-f131-4213-a6f2-1ecace519178
01:02:51.412 --> 01:02:55.790
fraction part in order to give
more precise numbers. Now we

NOTE Confidence: 0.877464115619659

b75d6924-ee55-46ee-9b8a-e0ebb29906ac
01:02:55.790 --> 01:03:00.168
want to represent the negative
numbers. You see how we extended

NOTE Confidence: 0.877464115619659

714b84e7-04dc-4671-ab7d-e7472173a39f
01:03:00.168 --> 01:03:01.362
the numbering system.

NOTE Confidence: 0.844486057758331

ec25ad74-952e-4436-b761-3c3495b53eb2
01:03:03.090 --> 01:03:08.888
So, assuming we are in change my
pen, assuming we are in the

NOTE Confidence: 0.844486057758331

fdea8fbc-a9a8-46d6-b4ff-1e183106f366
01:03:08.888 --> 01:03:11.564
decimal system and we only have

NOTE Confidence: 0.897227585315704

67d34229-92ff-4398-8155-9111863d4f73
01:03:11.564 --> 01:03:15.970
one position. With one
position we are able to

NOTE Confidence: 0.897227585315704

208e34cb-404b-4e64-87b6-fd194a2c9cdf
01:03:15.970 --> 01:03:18.070
represent zero up until 9.

NOTE Confidence: 0.859622240066528

ffa86598-11a6-4bba-b2fb-ebdcf1f2dd87
01:03:19.190 --> 01:03:21.676
So the significant of the
position or 10 to the power

NOTE Confidence: 0.859622240066528

91543f3c-23aa-403d-9613-5cbbdb186099
01:03:21.676 --> 01:03:22.806
of 0, which is 1.

NOTE Confidence: 0.884149253368378

0dff43e9-d7ef-43d7-82db-a84112aa3ed0
01:03:24.180 --> 01:03:28.124
So the right side of the X axis.

NOTE Confidence: 0.901098906993866

6aa62bc7-ade2-49b6-aff5-ab7f5ec27e25
01:03:28.700 --> 01:03:33.122
We assume that these are the
normal numbers or compared to

NOTE Confidence: 0.901098906993866

a01cce61-8c16-45c1-b794-e8e473aa49bd
01:03:33.122 --> 01:03:37.142
the negative numbers. We could
say that these are positive

NOTE Confidence: 0.878241181373596

9db9e98a-62c3-4933-98e5-dcf2c604ea79
01:03:37.142 --> 01:03:42.690
numbers. But how about negative
numbers? Basically, the negative

NOTE Confidence: 0.878241181373596

2a1c794f-1f8c-45af-93c6-d5763c2174ec
01:03:42.690 --> 01:03:47.940
numbers are the positive numbers
and a simple additional symbol.

NOTE Confidence: 0.878241181373596

8dd54070-f8c8-4c86-8e45-9dd90ab1a94a
01:03:47.940 --> 01:03:50.565
This additional symbol is called

NOTE Confidence: 0.906806945800781

7222c196-8e87-4d15-95b6-5f1b7a8e852f
01:03:50.565 --> 01:03:56.220
minus. So you could say that I
can add a new position.

NOTE Confidence: 0.860802590847015

17e0aad4-cd16-4084-99cc-f7637651d0d9
01:03:57.190 --> 01:04:01.918
And this store this symbol to
show the sign of the number.

NOTE Confidence: 0.839720726013184

90223941-a99f-4923-8ecc-7513ce8630e8
01:04:02.680 --> 01:04:07.876
So these are negative numbers. I
stored this symbol in the this

NOTE Confidence: 0.839720726013184

bb6a1cea-ff2c-42e1-8b1b-a386c59c9a36
01:04:07.876 --> 01:04:12.639
new position which has the
significant of 10 to the power

NOTE Confidence: 0.839720726013184

68c758af-cfbd-460d-bfc8-76a691fc32ee
01:04:12.639 --> 01:04:15.237
of 1 as the negative sign.

NOTE Confidence: 0.850907921791077

593ec35a-9820-4467-aa11-760c2e20419b
01:04:15.910 --> 01:04:19.980
For the positive sign, I could
put the air sign positive.

NOTE Confidence: 0.930449187755585

a5af6317-c4e6-4b03-81a2-6504687d4d76
01:04:20.500 --> 01:04:24.350
OK. But there's a problem with

NOTE Confidence: 0.832129299640656

39acbc08-c23a-4e1d-a097-e16f2274281e
01:04:24.350 --> 01:04:30.270
this system. Oh, in this in
decimal system we only have the

NOTE Confidence: 0.832129299640656

be8895f5-0ab6-4e33-8735-f3bedf227b81
01:04:30.270 --> 01:04:36.162
0123 up until nine. These are
the valid digits. There it would

NOTE Confidence: 0.832129299640656

76eb0ff5-f92a-4b7b-b835-9cb3e9ca4737
01:04:36.162 --> 01:04:41.563
be valid symbols. There is no
symbol for negative or positive.

NOTE Confidence: 0.791893661022186

914432a0-b88e-4e16-af1b-8a2d8e24ea6b
01:04:42.680 --> 01:04:49.220
You can introduce 2 new symbols,
or you could reuse this. The

NOTE Confidence: 0.791893661022186

a4f5a1a1-4cdb-4633-99c0-5f0e18baef7f
01:04:49.220 --> 01:04:53.035
digits as a hint for the sign.

NOTE Confidence: 0.906873464584351

f9de2a41-df3f-4fd6-9135-0b49cc0733e9
01:04:53.930 --> 01:04:56.410
How this is possible? We
could say that.

NOTE Confidence: 0.867324233055115

027bad25-752f-48db-9620-fec895d70e4a
01:04:57.660 --> 01:05:03.336
For the in positive numbers, I
assume that I put 0.

NOTE Confidence: 0.911857128143311

2afd9003-be98-483d-a61c-2f548de5d3a4
01:05:03.890 --> 01:05:06.585
So as long as I see zero.

NOTE Confidence: 0.83455103635788

22d27f6a-6308-4bc8-9285-5023a90a0f95
01:05:07.270 --> 01:05:10.771
In the higher significant
position, given your phone with

NOTE Confidence: 0.83455103635788

5ea08e98-45ab-438d-879a-9c4afe185d0a
01:05:10.771 --> 01:05:11.938
have two positions.

NOTE Confidence: 0.914929807186127

b1c70c22-c0cd-4aaf-9bd0-313faa5c71ba
01:05:12.510 --> 01:05:15.687
I assume that this number is
a positive number.

NOTE Confidence: 0.873360931873322

61e5a69d-3e45-4a26-9b92-202daa04cdc3
01:05:16.750 --> 01:05:22.198
However, if I want to represent
a negative number, I could put

NOTE Confidence: 0.873360931873322

78e27a82-1627-4f69-a09b-bd268f74b79f
01:05:22.198 --> 01:05:29.008
one so you re using the same
digit to show the sign if it is

NOTE Confidence: 0.873360931873322

dd0a6c02-6d64-420b-93cb-2a32a6d6db72
01:05:29.008 --> 01:05:34.002
one, it means that this number
is negative, so we didn't

NOTE Confidence: 0.873360931873322

b068ee3b-9838-4bfb-916b-1b1cd2571f00
01:05:34.002 --> 01:05:38.088
introduce any new symbols. We'll
reuse the existing symbols.

NOTE Confidence: 0.879554867744446

eaaaf382-0b4d-45d2-8b3f-0ce8a732bd4b
01:05:39.320 --> 01:05:44.221
In the extreme case, we could
say that if we put zero, it's

NOTE Confidence: 0.879554867744446

da8f3379-7668-4af6-b700-94621f572561
01:05:44.221 --> 01:05:48.368
a positive number. If we put
any number, any digit which

NOTE Confidence: 0.879554867744446

e4bcf419-5bd1-4019-9950-0be67e6de7ba
01:05:48.368 --> 01:05:52.138
is not zero, for instance
123, whatever number which is

NOTE Confidence: 0.879554867744446

196753dc-9fae-4463-a603-164cab2d1a20
01:05:52.138 --> 01:05:56.285
not zero, we assume that this
number is a negative number.

NOTE Confidence: 0.915850639343262

7f31f11b-2f69-4958-a6c7-e07150b7e7b6
01:05:58.670 --> 01:06:04.150
So basically for positive
numbers we put 0.

NOTE Confidence: 0.844000816345215

72acf643-b4dd-48ef-a9fc-7419b67fc8b6
01:06:05.420 --> 01:06:10.172
For the negative numbers or we
could use any digits which is

NOTE Confidence: 0.844000816345215

4263315e-b09b-42f7-a02d-b83e4130fb68
01:06:10.172 --> 01:06:15.320
not zero functions. We could put
one. We could put two. We could

NOTE Confidence: 0.844000816345215

0e39cadf-c777-4a7d-b9b6-b96a14fee5b2
01:06:15.320 --> 01:06:17.696
put 9 whatever digit which is

NOTE Confidence: 0.867271840572357

f7e3f4dd-49c9-4a04-98f3-75b1c507c596
01:06:17.696 --> 01:06:22.486
not zero. Because we have
only one position, we have to

NOTE Confidence: 0.867271840572357

4844fa04-269f-4828-a2b8-2568fcc8fd3d
01:06:22.486 --> 01:06:27.370
put 1 digit only, but that
number digit would be 2,

NOTE Confidence: 0.867271840572357

c519938a-c883-48d6-bca3-e5cdcca97f6e
01:06:27.370 --> 01:06:32.254
three whatever non zero in
order to show that the number

NOTE Confidence: 0.867271840572357

d0f6aacb-7cb4-42a1-843f-dca8b6a0cfa3
01:06:32.254 --> 01:06:36.250
is negative. For instance
negative two becomes 1 two

NOTE Confidence: 0.867271840572357

13b920cc-8b09-4e85-8009-1dc7f6006925
01:06:36.250 --> 01:06:42.022
which is equal to put 2, two
or 9 two. So all these

NOTE Confidence: 0.867271840572357

ea7cac52-6743-4897-b8db-48782102f027
01:06:42.022 --> 01:06:45.574
numbers are equal to negative
two this number.

NOTE Confidence: 0.902124106884003

3bae8a5c-8ed1-4434-b0de-1db13a7a0c0f
01:06:47.460 --> 01:06:52.990
For negative 5 in this system,
you could say that I put five in

NOTE Confidence: 0.902124106884003

de6b4b23-2f35-4cab-bad8-6cef9e5beb05
01:06:52.990 --> 01:06:56.545
the in this position in the
lowest significant position.

NOTE Confidence: 0.779765188694

4b43ae8b-c678-4dda-b841-ec7eb3d37262
01:06:57.150 --> 01:07:01.737
For the high significant
position I put any non 0 digit

NOTE Confidence: 0.779765188694

8837e50b-8eb8-45e9-85c6-b934801fca00
01:07:01.737 --> 01:07:04.239
Princess 9 so 95 becomes might

NOTE Confidence: 0.873974323272705

8fd7ced2-8218-4a67-b648-5cb59ef3c7f3
01:07:04.239 --> 01:07:09.844
negative 5. Somebody else would
say that I I want to put one, so

NOTE Confidence: 0.873974323272705

9a541b35-8ae9-4210-b72b-f27f8da76a43
01:07:09.844 --> 01:07:11.252
15 becomes negative 5.

NOTE Confidence: 0.817230999469757

769d1486-43ca-45cb-a9cc-22bffbb9877a
01:07:12.070 --> 01:07:15.050
However, positive fight is 05.

NOTE Confidence: 0.903518438339233

63958d48-e09a-4826-beab-08c4a619331f
01:07:16.660 --> 01:07:22.252
So there are two problems with
this system. This system is able

NOTE Confidence: 0.903518438339233

b164f786-587b-4296-8782-8a4bb8ba84f4
01:07:22.252 --> 01:07:25.980
to represent negative numbers
without introducing 2 new

NOTE Confidence: 0.915503203868866

153c1aad-525f-4cc5-bc6f-d96fb7e348f0
01:07:25.980 --> 01:07:29.762
symbols. But there are two main
problem with this system.

NOTE Confidence: 0.917614817619324

92a45cc4-fb30-4992-a4e2-c721c877fba7
01:07:30.420 --> 01:07:32.250
The first problem is that.

NOTE Confidence: 0.737858414649963

c2f6d311-4463-4faf-883e-c5712b1307db
01:07:33.820 --> 01:07:40.612
You A waste one position
just to show this sign.

NOTE Confidence: 0.906425893306732

b73ea58f-f98f-4475-a1a6-c610f6529dbc
01:07:41.660 --> 01:07:46.082
So this position, as you can see
here, doesn't have any

NOTE Confidence: 0.906425893306732

2c458b50-6cb3-41e8-a82e-82663c92ea1b
01:07:46.082 --> 01:07:50.504
significance. It just shows the
sign. So you should assume that

NOTE Confidence: 0.906425893306732

4c3163a4-dde4-42f7-bc46-d9dfd6bc57e6
01:07:50.504 --> 01:07:54.524
there is no significant in this
position first of all.

NOTE Confidence: 0.92388379573822

8a63068d-94b8-4449-940c-d6bc46d56515
01:07:56.030 --> 01:07:58.868
So the second thing is that.

NOTE Confidence: 0.886672079563141

740b9af5-7934-4dc8-ae2f-630b22f61521
01:07:59.800 --> 01:08:02.236
As you can see here we have

NOTE Confidence: 0.911015927791595

0210ce59-577b-4894-8804-f3871b2c1090
01:08:02.236 --> 01:08:05.342
positive zeros. And also we have

NOTE Confidence: 0.909498751163483

a46ea63f-c198-4f67-b333-1b368c093f7a
01:08:05.342 --> 01:08:10.620
negative zeros. In math, we know
that there is only 1 zero.

NOTE Confidence: 0.889148354530334

bd310f6e-28e9-4bd8-99dd-e3b8b93f1563
01:08:12.270 --> 01:08:17.254
Positive, zero and negative is 0
or all the same, so we have only

NOTE Confidence: 0.889148354530334

b7deb20f-643f-4338-ae84-ca44e235f5c0
01:08:17.254 --> 01:08:20.458
1 zero and actually 0 doesn't
have any sign.

NOTE Confidence: 0.88647198677063

2f86fc68-a2f0-4c67-9740-98e872cd7755
01:08:21.230 --> 01:08:24.398
But in this system we have
positive zero. We have negative

NOTE Confidence: 0.684859991073608

c6a36aec-a3d3-4257-8ec0-54707d260653
01:08:24.398 --> 01:08:29.563
0. But the important thing, uh,
this shows is this.

NOTE Confidence: 0.881032049655914

bae28c4d-b025-438c-b89e-71e360b7caf8
01:08:30.550 --> 01:08:36.170
There are different combination
of digits that the reduced one

NOTE Confidence: 0.914531588554382

e32e9385-a7db-4959-800b-6725bf1cd54e
01:08:36.170 --> 01:08:42.532
single number. For instance,
here, 10 is negative, 020 is

NOTE Confidence: 0.914531588554382

8a7aaae8-6ba5-46fb-875a-0a700bed9255
01:08:42.532 --> 01:08:49.180
negative, 090 is negative zero,
or three zero is negative 0. So

NOTE Confidence: 0.914531588554382

0cc17cfc-3106-46c1-a860-8588765ce224
01:08:49.180 --> 01:08:53.612
you see that all these
combinations are representing

NOTE Confidence: 0.821878433227539

d793eaa9-49fc-412b-a0e4-a49b8856e790
01:08:53.612 --> 01:08:59.250
one. Number. All of which is
negative 0, which is equal to

NOTE Confidence: 0.862432301044464

46ceeaef-69f1-4ca8-bc9c-de956f183ce9
01:08:59.250 --> 01:09:03.224
positive 0. Also for 4 --

NOTE Confidence: 0.880544424057007

d4883cfe-5484-4072-8096-42d7875a87c0
01:09:03.224 --> 01:09:09.540
3. 4 plus free. We have this but
but 4 -- 3 we had different

NOTE Confidence: 0.880544424057007

d3cbe9ef-98bc-4471-b0f0-af58e16496fa
01:09:09.540 --> 01:09:11.730
combination of all are the same

NOTE Confidence: 0.822288513183594

cf752b01-fcab-4a95-838f-3cb1fcfb7fdc
01:09:11.730 --> 01:09:16.782
number. Although we put
different digits, so we are kind

NOTE Confidence: 0.822288513183594

d67e26d8-416c-4cf6-99c7-681da806901a
01:09:16.782 --> 01:09:21.062
of wasting space. The first
waste is wasting one position

NOTE Confidence: 0.822288513183594

8cc53289-0394-4311-8a4f-2008f260ab34
01:09:21.062 --> 01:09:23.202
for just showing the sign.

NOTE Confidence: 0.850468933582306

40e29300-6785-42e6-a69f-297d5955e4a7
01:09:23.820 --> 01:09:27.573
Although this position has
the significance of 10, but

NOTE Confidence: 0.850468933582306

a9e8a9e9-6628-4c55-9be5-2a216c828e99
01:09:27.573 --> 01:09:31.743
we use it just to show two
different things, either

NOTE Confidence: 0.850468933582306

0219e7ce-87bd-4274-9201-1cfeaaf3ef4d
01:09:31.743 --> 01:09:35.496
positive or negative. Also,
for the negative numbers, we

NOTE Confidence: 0.850468933582306

4e9f0c87-b982-4b07-a7d8-454327087822
01:09:35.496 --> 01:09:40.083
could put any non 0 value to
show one single negative

NOTE Confidence: 0.850468933582306

9bebbb00-1c57-434b-8a7e-2b861bc8daf4
01:09:40.083 --> 01:09:44.253
numbers which is a waste of
a combination of numbers.

NOTE Confidence: 0.927336573600769

1dc843f8-5ef3-4397-b634-a3d85d60c398
01:09:45.780 --> 01:09:48.940
So these are the problem
with this system.

NOTE Confidence: 0.809678137302399

933ab1ef-7d79-49ab-a1cf-14d98c0aec1c
01:09:49.990 --> 01:09:52.765
This system is called signed

NOTE Confidence: 0.908293724060059

f8d47e2e-ce6b-4397-95a3-231f63447219
01:09:52.765 --> 01:09:57.590
magnitude. Although it has some
problems, but it still it is

NOTE Confidence: 0.908293724060059

6ed0d0c6-04d0-46ca-92d5-b46e996aa064
01:09:57.590 --> 01:09:59.786
possible it is able to represent

NOTE Confidence: 0.882474303245544

a6ab6da4-c407-4905-88a1-7d0432452a7a
01:09:59.786 --> 01:10:04.623
negative numbers. This system in
general, if you are given an

NOTE Confidence: 0.882474303245544

63540372-d661-409f-bf20-1d30926a09e2
01:10:04.623 --> 01:10:08.770
position from position zero up
until the position N -- 1.

NOTE Confidence: 0.869378626346588

618330c6-6de0-4ad5-a86f-d2e5f1bf53c7
01:10:09.460 --> 01:10:13.519
You just extract the last
position in the highly

NOTE Confidence: 0.899077653884888

77c593fd-59e8-47ef-9299-151064d77bc3
01:10:13.519 --> 01:10:17.848
significant position. And as a
result, it loses the

NOTE Confidence: 0.899077653884888

60ce9d11-5347-4a46-9bc9-44f892c5aba4
01:10:17.848 --> 01:10:20.920
significance and you only
consider the remaining position

NOTE Confidence: 0.899077653884888

d4fdbfc7-25dc-4ff9-a686-7c1d76c9661b
01:10:20.920 --> 01:10:25.144
at the number. So this is called
magnitude and the higher

NOTE Confidence: 0.899077653884888

4e05d8be-9abb-4407-9b48-826b51967d66
01:10:25.144 --> 01:10:27.832
significant position which
doesn't have any significance

NOTE Confidence: 0.899077653884888

4cd40caa-f6a3-4c63-9aaa-91643fe67ab7
01:10:27.832 --> 01:10:29.368
anymore is a sign.

NOTE Confidence: 0.876941680908203

69d8a4df-3b32-4fbf-9c3f-854530ea1630
01:10:30.070 --> 01:10:33.942
If you see 0 means that the
remaining number, the positive

NOTE Confidence: 0.876941680908203

370d2429-110f-4a59-8222-c3640e8d0249
01:10:33.942 --> 01:10:38.518
number, if there is a non 0
number here, it means that the

NOTE Confidence: 0.876941680908203

ab70c4d9-3e46-49c9-b26f-ad6ea2c96049
01:10:38.518 --> 01:10:42.742
remainder numbers is a negative
number, so that's why we call it

NOTE Confidence: 0.86037677526474

b0607d75-e6be-4629-a859-29b86f2709e9
01:10:42.742 --> 01:10:47.586
sign magnitude. So for the
negative numbers, the negative

NOTE Confidence: 0.86037677526474

f0449ace-3817-4993-9fbb-5e43f1fcbc66
01:10:47.586 --> 01:10:52.954
the number is positive in the
remainder positions, but we just

NOTE Confidence: 0.86037677526474

69a0318d-8eee-44bb-be46-7a88a926b492
01:10:52.954 --> 01:10:57.346
change this position to have a
non 0 value.

NOTE Confidence: 0.928107738494873

89fd14bb-24d2-4bd1-9f12-772ec90a6627
01:10:59.410 --> 01:11:01.530
So.

NOTE Confidence: 0.822991132736206

38161a1a-933b-4aaf-a3be-fed1f993a85e
01:11:02.740 --> 01:11:06.568
In when we don't have any.

NOTE Confidence: 0.819345772266388

3a14adf4-2a65-490c-a407-da7141b4756d
01:11:06.570 --> 01:11:10.194
When we go on the spare, any
position for the signature or

NOTE Confidence: 0.857844829559326

70475341-654f-4c36-8ef5-779425414e0b
01:11:10.194 --> 01:11:15.165
for the sign. The range of
numbers would be from zero up

NOTE Confidence: 0.857844829559326

13b3f5ec-f383-42d1-b8c5-13e9201e8e70
01:11:15.165 --> 01:11:19.905
until the last number R to the
power of N -- 1.

NOTE Confidence: 0.85600221157074

fc64a240-a9de-4c99-a504-8305733b3aaa
01:11:20.670 --> 01:11:26.951
However, now that we just
extract one position as a sign.

NOTE Confidence: 0.868993103504181

b829f0a4-c0e1-47f9-b987-f2cb1662f904
01:11:27.470 --> 01:11:32.078
Did maximum positive number is 0
an putting the largest digit in

NOTE Confidence: 0.868993103504181

dbd22175-644f-426f-bd9f-c07936b912bf
01:11:32.078 --> 01:11:37.454
all the other positions which
becomes R to the power of N -- 1

NOTE Confidence: 0.868993103504181

73a47b16-6cd2-4dab-872a-30fbf521f553
01:11:37.454 --> 01:11:42.062
-- 1. So you see the power
actually reduced by 1 unit.

NOTE Confidence: 0.898201942443848

5429e3f8-4e27-4881-b0ef-309e3ec5b0a1
01:11:43.850 --> 01:11:48.415
And the smallest number, the
minimum number now is not zero

NOTE Confidence: 0.908981323242188

bb4a3c13-f0d2-41ed-874e-74440d4505df
01:11:48.415 --> 01:11:52.759
anymore. Because we have
negative numbers, so the

NOTE Confidence: 0.908981323242188

6546dcca-9fcf-4ca7-bc54-09c60ae2427f
01:11:52.759 --> 01:11:58.570
negative numbers are the number
that has a non 0 value here and

NOTE Confidence: 0.908981323242188

aaa4b1a1-d285-4fee-9f22-dcafe2368056
01:11:58.570 --> 01:12:00.358
the largest number here.

NOTE Confidence: 0.826844096183777

651c9bab-f5a5-42dc-8c03-8ee41635ffcf
01:12:00.920 --> 01:12:06.419
Which becomes art above N -- 1
-- 1. This is the largest

NOTE Confidence: 0.826844096183777

3575de5d-6ab2-4ff1-8755-4e04a84b8306
01:12:06.419 --> 01:12:11.072
positive number, but if you
change the sign it becomes the

NOTE Confidence: 0.826844096183777

be15d113-35b1-4017-92f0-ff169e6fff91
01:12:11.072 --> 01:12:12.341
smallest negative number.

NOTE Confidence: 0.855201780796051

ea679857-bbef-4921-94c6-1828d7bc42cc
01:12:15.350 --> 01:12:19.958
So as an example, an exercise in
the lecture assignment for this

NOTE Confidence: 0.855201780796051

b6acc418-844a-4fc5-9844-85d380d60249
01:12:19.958 --> 01:12:22.646
week, I ask you what is the

NOTE Confidence: 0.825913190841675

69200baf-a0dc-4417-b8d6-1df12b0f1736
01:12:22.646 --> 01:12:27.958
waste here? What numbers were
wasting by this system?

NOTE Confidence: 0.866786360740662

7322c65a-b223-4481-a7d8-bc27c3d06316
01:12:28.800 --> 01:12:32.844
And is it possible to improve
this system to represent, uh, I

NOTE Confidence: 0.866786360740662

76f472cb-519b-437f-ade6-c628c98acf18
01:12:32.844 --> 01:12:35.877
mean to reuse those ways and
numbers or not?

NOTE Confidence: 0.927944004535675

5fb8e415-b842-4caa-8df7-47b0a7b8259c
01:12:38.030 --> 01:12:39.640
So.

NOTE Confidence: 0.88922643661499

aafd581c-566d-4db4-b705-cbd4703e2d49
01:12:40.950 --> 01:12:45.130
Now we want to see that now
we can represent negative

NOTE Confidence: 0.88922643661499

340e088a-54e9-4e25-bfcb-f3184ba169be
01:12:45.130 --> 01:12:48.930
numbers by sign magnitude
system. Is it possible to do

NOTE Confidence: 0.88922643661499

6d8caafa-eeb0-4803-87ef-6a37bd1fa882
01:12:48.930 --> 01:12:50.450
arithmetic in this system?

NOTE Confidence: 0.762636363506317

09ad6588-ee26-4c73-a814-7d7aabf89471
01:12:51.940 --> 01:12:55.666
So the arithmetic insists in
this system is this.

NOTE Confidence: 0.790886282920837

082ae1fa-8828-4508-826b-3597e8a75e9f
01:12:56.440 --> 01:13:01.057
Basically, uh, you extract one
position as the sign.

NOTE Confidence: 0.842987239360809

488e2dee-358d-4822-bc03-4ea68b5764fc
01:13:01.760 --> 01:13:04.920
And the remainder positions are
the magnitude of the number.

NOTE Confidence: 0.864236176013947

9a0df508-73de-457e-ac4a-7a05a05f7424
01:13:05.900 --> 01:13:09.162
So either you do an addition or

NOTE Confidence: 0.873241722583771

5fd120f9-a16e-4cb8-a403-fe82b92a81e8
01:13:09.162 --> 01:13:13.522
subtraction. For the addition,
these are the possibilities.

NOTE Confidence: 0.873241722583771

27ef7343-8baf-4710-9fa3-d2293c905d30
01:13:13.522 --> 01:13:15.802
Either you add 2 positive

NOTE Confidence: 0.875724375247955

6134c25a-d712-4c38-88a3-493b4a9ffcd3
01:13:15.802 --> 01:13:20.160
numbers. When you add 2 positive
numbers, the result is always

NOTE Confidence: 0.875724375247955

0f50ad84-4c16-4cce-a9c8-3637f271fcf8
01:13:20.160 --> 01:13:21.520
positive, so this sign.

NOTE Confidence: 0.878662347793579

d136d956-a7aa-4ea2-a7fc-a00b5aa90e5c
01:13:22.340 --> 01:13:26.570
Position going to have zero
and you simply add 2

NOTE Confidence: 0.878662347793579

d7a03d5a-5fa3-49be-b12b-6700f94b5788
01:13:26.570 --> 01:13:30.800
numbers, so we already knew
how to add 2 numbers.

NOTE Confidence: 0.847372591495514

3c0b6ae1-ae62-4236-851f-bf06782650b1
01:13:32.830 --> 01:13:37.813
When you do, adding a positive
number and a negative number.

NOTE Confidence: 0.866354405879974

e26b3a8a-0f3c-4f2e-80b6-1c7a0d103e83
01:13:39.050 --> 01:13:43.055
It is actually doing in
subtraction because positive X

NOTE Confidence: 0.866354405879974

c3ea3dbf-23ee-4935-962a-1cf50085bb1e
01:13:43.055 --> 01:13:49.730
plus negative Y is equal to X --
1. You know how to do this.

NOTE Confidence: 0.828425526618958

f2a10f85-b68d-4b46-96df-4827a7d3f86c
01:13:50.240 --> 01:13:55.089
So you do this subtraction and
if there is a last borrow, it

NOTE Confidence: 0.828425526618958

4159bdd3-d44d-42f2-9adc-4ff6c9d70c76
01:13:55.089 --> 01:14:00.311
means that X was smaller than Y.
So it means that the result is

NOTE Confidence: 0.828425526618958

d1ccc3be-f3f5-45a6-9f08-a5b998701c38
01:14:00.311 --> 01:14:02.549
negative. You could want non 0

NOTE Confidence: 0.827473998069763

4b1664a9-6823-4b89-bb17-2e1069fac1bd
01:14:02.549 --> 01:14:08.020
value here. However, if there is
no borrow means that X was

NOTE Confidence: 0.827473998069763

8e71ee57-6e56-41d0-81e1-c46ec83be7c7
01:14:08.020 --> 01:14:13.220
larger than one, so you put zero
here. So this time depends on

NOTE Confidence: 0.827473998069763

971fc489-2e3e-4162-b7ef-11eb0af1f91f
01:14:13.220 --> 01:14:17.620
the result. So you have to do
first the subtraction and

NOTE Confidence: 0.827473998069763

dd9177d5-376d-4f46-b158-4785f24eb178
01:14:17.620 --> 01:14:20.020
distant subtraction. You
determine the sign.

NOTE Confidence: 0.914761185646057

1f41f26d-0159-47a0-9264-2dfda99221bd
01:14:20.930 --> 01:14:23.120
When you are adding two negative

NOTE Confidence: 0.893148481845856

9929f8a2-e86d-437a-85c0-5d0426b08a89
01:14:23.120 --> 01:14:28.242
numbers. The result is always
negative because we are adding

NOTE Confidence: 0.893148481845856

ef1d0e4a-d60b-43e8-91e3-874af500dab9
01:14:28.242 --> 01:14:34.514
two negative numbers, so minus X
+ -- y is equal to minus X

NOTE Confidence: 0.893148481845856

ebe943e1-76e6-419c-ac03-86ec9510a48c
01:14:34.514 --> 01:14:36.754
+ y, which is negative.

NOTE Confidence: 0.883107304573059

3c4189d1-23dc-47b6-80b7-e20fff71a7da
01:14:37.450 --> 01:14:41.032
You put one here and do the
normal addition.

NOTE Confidence: 0.857004046440125

82a374d6-a65d-4737-8321-94b90a6325e3
01:14:43.390 --> 01:14:47.037
Put the subtraction, subtracting
2 positive numbers.

NOTE Confidence: 0.875974714756012

6248e673-8d0e-455f-b618-05454373984e
01:14:48.010 --> 01:14:53.106
So positive X minus positive
Y is equal to X -- Y, so you

NOTE Confidence: 0.875974714756012

85a4dc52-32fc-4493-ba43-2162bf31144c
01:14:53.106 --> 01:14:57.110
know how to do this. And
again, depending on the last

NOTE Confidence: 0.875974714756012

8f0e7654-8fff-4fa0-8873-bdbf932fc2b5
01:14:57.110 --> 01:15:00.022
photo, you determine these
sign off the result.

NOTE Confidence: 0.854822218418121

77f6f75e-dd11-4e6e-99fb-d7137a922c94
01:15:01.950 --> 01:15:04.590
Subtracting a positive number.

NOTE Confidence: 0.888017475605011

9b359833-8b62-4592-928f-0839a3a89256
01:15:05.270 --> 01:15:10.740
And a negative number so
positive X minus negative Y.

NOTE Confidence: 0.888017475605011

e70b6593-5253-498f-b24d-fdedd0e8edc9
01:15:10.740 --> 01:15:16.757
This is equal to minus negative,
so it becomes positive so.

NOTE Confidence: 0.812432408332825

361ade25-9d2d-49fd-bb61-b19b4d42a9f6
01:15:17.560 --> 01:15:24.712
Minus X sorry positive plus X
-- -- Y becomes plus X

NOTE Confidence: 0.852379143238068

0837f9f0-ac47-4e56-935c-523214e85266
01:15:24.712 --> 01:15:29.356
+ y. So it is the normal
addition an always the

NOTE Confidence: 0.852379143238068

454141f5-536d-48b4-be8b-f71a7c03e1fd
01:15:29.356 --> 01:15:30.652
sun gonna be positive.

NOTE Confidence: 0.849727392196655

b159eba1-5cdd-40a1-b5e0-74b050e4dcdf
01:15:32.880 --> 01:15:38.061
Subtracting two negative
numbers, so minus X -- -- X so

NOTE Confidence: 0.849727392196655

fb7916e1-4f7e-4c86-9525-69f51ef88274
01:15:38.061 --> 01:15:40.887
it becomes minus X + y.

NOTE Confidence: 0.838797450065613

0a81ce71-e9a6-42a1-85a4-fd23d1eebd39
01:15:42.760 --> 01:15:48.850
Which is equal to y -- X. So you
just switched the numbers you do

NOTE Confidence: 0.838797450065613

ad11c7c1-e550-4aff-acf9-7a67db1c2aca
01:15:48.850 --> 01:15:52.910
the subtraction and based on
this subtraction, if there's a

NOTE Confidence: 0.838797450065613

5d8ff067-1f61-4ae3-a258-af79545fdae4
01:15:52.910 --> 01:15:58.188
last borrow, you put a negative
sign here, which is a non 0

NOTE Confidence: 0.838797450065613

885d06f4-7a9f-4680-a54a-a8957491bff0
01:15:58.188 --> 01:16:03.872
digit if it is no there is no
follow. It means that you put

NOTE Confidence: 0.864449679851532

60d679aa-8ba4-42c5-98ab-c6913fa272f6
01:16:03.872 --> 01:16:05.818
the positive. We put zero here.

NOTE Confidence: 0.895494043827057

c60de453-1701-416e-9eb7-a11ac0f5c157
01:16:07.820 --> 01:16:12.880
So this is a whole different
possibilities. Happens in the

NOTE Confidence: 0.895494043827057

f527cea6-dbf1-4987-ac0c-79f2503d5c86
01:16:12.880 --> 01:16:16.928
addition or subtraction of two
sign magnitude numbers.

NOTE Confidence: 0.886788308620453

b01f8e6a-c555-47a6-bcae-ef470a7e0681
01:16:18.010 --> 01:16:22.910
So I think you don't have much
time, so I put these slides up

NOTE Confidence: 0.886788308620453

d652314a-045b-46af-ae3f-5dbecda4c4dc
01:16:22.910 --> 01:16:27.810
until the end in the blackboard
so we can have a look at that

NOTE Confidence: 0.886788308620453

e53814d9-bdaf-4ded-b561-5da26092de7f
01:16:27.810 --> 01:16:29.910
and next lecture. We're going to

NOTE Confidence: 0.928231656551361

32724949-3191-44f8-bc8d-81ab45a058ab
01:16:29.910 --> 01:16:32.180
review that. So.

NOTE Confidence: 0.931996524333954

ac89d395-c7fa-4bf8-996c-87bb8006e42d
01:16:34.190 --> 01:16:36.160
I'm ready for your questions.

NOTE Confidence: 0.598460495471954

5a6ef0cf-e8bf-42e7-9873-ea38b0a2897c
01:16:42.160 --> 01:16:45.880
So Nick asks that that, uh.

NOTE Confidence: 0.833383440971375

587b2ee0-a933-4d5e-9d1b-d68cc771b039
01:16:46.420 --> 01:16:52.228
So negative numbers can have any
number within that space in

NOTE Confidence: 0.833383440971375

4e8077cd-e102-4b95-99c8-6010671d614d
01:16:52.228 --> 01:16:59.092
front of it. Yes, yes. So for
instance, in base 16 the sign

NOTE Confidence: 0.833383440971375

40653794-ac21-44e2-979a-ebbe5d421fe2
01:16:59.092 --> 01:17:04.900
number design number in the
last, the last position would be

NOTE Confidence: 0.833383440971375

97352ed4-1285-4728-a76b-387795a91fbd
01:17:04.900 --> 01:17:09.652
15 Fe, whatever non 0 value
represented negative number.

NOTE Confidence: 0.891863703727722

5be01d39-b914-44cb-b946-a20c0a9f7f90
01:17:10.190 --> 01:17:15.290
It's not just only 121238
etc, but if it is zero, it

NOTE Confidence: 0.891863703727722

9b44e514-ce71-4fa2-b2ae-dd728d36796b
01:17:15.290 --> 01:17:16.990
means that that's positive.

NOTE Confidence: 0.790127277374268

59b47c5d-1b36-4f73-9478-9d5e14520e30
01:17:18.260 --> 01:17:22.292
So 30 Anna asked at
X negative four Y.

NOTE Confidence: 0.879190742969513

4bdfc400-380e-4ec8-a826-2d3cd4fc8d83
01:17:25.930 --> 01:17:28.840
If X + y is 0.

NOTE Confidence: 0.0432066917419434

9f1a2b65-8742-4abd-9ae7-0cb99bbddafd
01:17:31.560 --> 01:17:32.910
Wow.

NOTE Confidence: 0.770670652389526

62d7b463-64b9-4569-8225-a70eeab61325
01:17:34.110 --> 01:17:37.890
So that's, uh, China, can you
ask your question? I'm not sure

NOTE Confidence: 0.770670652389526

30e9061a-eed8-40a0-85f3-fd8c11201e81
01:17:37.890 --> 01:17:39.150
I understand your question.

NOTE Confidence: 0.741017580032349

77218c4e-9287-474c-8da8-3090f83aa9ae
01:17:39.800 --> 01:17:46.521
Thank you all. Have a great day
everybody. So I just let's see

NOTE Confidence: 0.796997666358948

cad4ac52-883f-40df-8ad1-68cfe1a27feb
01:17:46.521 --> 01:17:50.959
Tatiana. I'm not sure I
understand your question,

NOTE Confidence: 0.796997666358948

bec577fa-6892-4f2c-b67b-086b9a3a1641
01:17:50.959 --> 01:17:54.158
Tatiana, you. Can you
explain it more?

NOTE Confidence: 0.841879665851593

0b893233-428c-4b86-bd3e-9815a655e553
01:17:55.310 --> 01:18:01.182
Also, you
can turn

NOTE Confidence: 0.841879665851593

f34580bc-343b-4864-a70b-6ac74a70ccc2
01:18:01.182 --> 01:18:04.118
on your

NOTE Confidence: 0.822763741016388

249676ec-371d-4ed6-a358-1606c1a26493
01:18:04.118 --> 01:18:10.518
mic and.
Explain your question verbally.

NOTE Confidence: 0.142860561609268

c1afad9d-ebaa-49a5-b4ba-4e34141a30d9
01:18:11.120 --> 01:18:11.980
Oh

NOTE Confidence: 0.917816519737244

4ec0aaf4-67f3-4098-947a-fca083a43429
01:18:14.240 --> 01:18:16.068
I can make you.

NOTE Confidence: 0.0499743819236755

ddf50aeb-078b-4072-ae29-6a94da4e1fcd
01:18:17.530 --> 01:18:18.930
Uh.

NOTE Confidence: 0.698061466217041

c5ad3d9e-fcaf-4230-9b2f-95e83face7db
01:18:24.330 --> 01:18:26.030
So.

NOTE Confidence: 0.859911918640137

369de248-c868-4fc9-8542-3ace22094f60
01:18:31.280 --> 01:18:34.200
The opposite.

NOTE Confidence: 0.880231559276581

8c853e61-4d57-4863-a8af-bf70e4f8027b
01:18:36.130 --> 01:18:42.650
So. Let me let me
enable your mic so you can.

NOTE Confidence: 0.830218315124512

d66125f2-802b-4c99-bbff-fd53141da32e
01:18:44.690 --> 01:18:48.280
It's not, it's not OK.

NOTE Confidence: 0.755257546901703

bed5e0dc-8e90-4a80-9e5c-c9551bee03fc
01:18:51.590 --> 01:18:58.246
Make presenter so now I believe
you can enable your Mike and so

NOTE Confidence: 0.919703543186188

f6aad071-9144-4c94-8c7f-6e59de0137b0
01:18:58.246 --> 01:19:00.340
we can. We can talk.

NOTE Confidence: 0.0405693054199219

82a004aa-3c53-4f6c-98c6-f635ef3d5cb0
01:19:01.510 --> 01:19:06.510
Wow. Oh
Um?

NOTE Confidence: 0.910083711147308

ab3abcf9-bb8c-42de-8ab9-42ad8366c526
01:19:07.940 --> 01:19:14.650
If X + y is 0
then X is equal to.

NOTE Confidence: 0.93758624792099

76863d6a-220f-4c4e-910b-5f5c5bb9e01d
01:19:14.940 --> 01:19:18.679
Twilight. Yes, correct, yes.

NOTE Confidence: 0.851239085197449

e9e1d4b9-02f2-45ec-9835-846f23b71fad
01:19:19.240 --> 01:19:24.112
I think that's what you. OK,
yes, correct, but The thing is,

NOTE Confidence: 0.851239085197449

4c9f4846-bfa3-439b-b561-26fa204b2aaa
01:19:24.112 --> 01:19:28.984
as I said, when you do the
addition in sign magnitude will

NOTE Confidence: 0.851239085197449

55371b4d-5b0f-4f10-b858-8100b01b5ee9
01:19:28.984 --> 01:19:33.044
still I mean next lecture that
you shouldn't consider the

NOTE Confidence: 0.851239085197449

c34e152e-e1dd-4df2-89fd-a8d77962cfbf
01:19:33.044 --> 01:19:37.510
position in your arithmetic or
let me come back to slide.

NOTE Confidence: 0.853176653385162

e7531b82-8907-47d0-8c3b-326c38661784
01:19:38.110 --> 01:19:43.975
So for instance, as I said, if X
+ Y is 0 means that X is minus

NOTE Confidence: 0.853176653385162

b96d1e11-2785-4eb7-ac6a-7352de850eea
01:19:43.975 --> 01:19:46.390
Y, but then you do that. For

NOTE Confidence: 0.0720118880271912

e7db62ce-4c46-4ac9-bb40-75e9bc7ed0a1
01:19:46.390 --> 01:19:49.140
instance, imagine. Uh.

NOTE Confidence: 0.872465133666992

30aa66b3-cca0-4388-bb21-6015e62cb04e
01:19:49.810 --> 01:19:56.254
Here, imagine here, so positive
X plus. Assume that Y is equal

NOTE Confidence: 0.872465133666992

60e0b0a2-43dc-4479-a3bf-82c325b4d177
01:19:56.254 --> 01:20:01.624
to X, so it becomes positive X
plus negative Y.

NOTE Confidence: 0.866661190986633

841caf45-a168-4d83-965f-2d247f891212
01:20:02.620 --> 01:20:10.268
So when you do that, you have to
do X -- X. So which becomes zero

NOTE Confidence: 0.866661190986633

d2ec38eb-91ba-40a6-adfe-ca6eb17254d5
01:20:10.268 --> 01:20:16.004
when it becomes zero. There is
no last borrow, it means that.

NOTE Confidence: 0.840356886386871

41a65810-b1fb-4302-a8d5-a715fecab20e
01:20:16.030 --> 01:20:21.574
X was not smaller than Y. As a
result, it becomes 0, so the

NOTE Confidence: 0.840356886386871

5483fc96-3244-43bd-a5bd-e38b6586d949
01:20:21.574 --> 01:20:25.930
final result going to be 0 in.
This had the positive.

NOTE Confidence: 0.85788094997406

e76e74f1-ee7f-443e-a879-fd18d49ae889
01:20:26.470 --> 01:20:30.990
Sign and the result gonna be 0
so positive 0.

NOTE Confidence: 0.87287312746048

49f7aaeb-0592-4f92-994d-0b0be47a3755
01:20:32.070 --> 01:20:34.710
Yeah, if that's the that
was the question.

NOTE Confidence: 0.930490851402283

34cf098a-9106-4f7f-bd09-d4cc14ca5798
01:20:36.400 --> 01:20:37.500
Yeah.

NOTE Confidence: 0.830714225769043

8e756606-4557-4fe9-9cbf-5d20fbf0b563
01:20:39.330 --> 01:20:44.466
But again, as I saw how we
represent, if number have more

NOTE Confidence: 0.830714225769043

8413a960-ba92-47e9-bad2-152c3c9232c6
01:20:44.466 --> 01:20:45.750
than one position.

NOTE Confidence: 0.755396962165833

289a9d5c-4f3d-4127-ac40-639567dbcefa
01:20:49.910 --> 01:20:53.956
Oh, we'll see I mean, in the
Lexus line, let me go back to

NOTE Confidence: 0.755396962165833

cb0ff3e6-84b5-446f-a8ab-2fccd4f27859
01:20:53.956 --> 01:20:55.112
the next slide here.

NOTE Confidence: 0.767476737499237

dc2cd4a0-8553-43dc-b24b-8c8752f416d3
01:20:55.840 --> 01:21:00.754
I I I didn't have enough time to
explain this examples, but here

NOTE Confidence: 0.767476737499237

9ba91eec-d053-4d15-94b9-a6fc3cdbefca
01:21:00.754 --> 01:21:06.424
assume that we are we are given
2 numbers in the base, 16 in the

NOTE Confidence: 0.767476737499237

a0c4da52-1067-4d3c-bbec-7557c8f29426
01:21:06.424 --> 01:21:07.558
sun magnitude system.

NOTE Confidence: 0.873992681503296

d549b626-5928-44bc-b43e-3b4345d2edb7
01:21:08.170 --> 01:21:13.422
So here we have fraction part an
integer part, but you see here

NOTE Confidence: 0.873992681503296

808ec8f6-cb70-41a2-add4-f14575dad6f0
01:21:13.422 --> 01:21:18.674
we have we had three position in
the integer part. But because we

NOTE Confidence: 0.873992681503296

e4854ffe-fa02-4354-93e2-f010bba97b65
01:21:18.674 --> 01:21:23.118
are in the sign magnitude we
just remove the last position

NOTE Confidence: 0.873992681503296

37623ab7-ced8-45b8-901a-a56895bc02ae
01:21:23.118 --> 01:21:27.966
for the sign. So you see this
arithmetic this line. This line

NOTE Confidence: 0.873992681503296

e284f385-22fa-47f1-b251-a8332a346893
01:21:27.966 --> 01:21:32.006
only applies on the remaining
position. It doesn't include the

NOTE Confidence: 0.873992681503296

2cfcfc8e-34f0-4e1c-a915-a9c69e86063d
01:21:32.006 --> 01:21:35.642
last position because the last
position doesn't have any

NOTE Confidence: 0.873992681503296

230e4c10-2b89-4c51-96e0-47ba705f6f31
01:21:35.642 --> 01:21:39.278
significant anymore. This is not
part of the number.

NOTE Confidence: 0.893156409263611

01029a6b-a310-4436-9071-eafa91934e4a
01:21:39.320 --> 01:21:43.604
This just shows the sun. Now
if you do this edition. So

NOTE Confidence: 0.893156409263611

8341a375-5c19-40ab-bd37-54002cf7ac66
01:21:43.604 --> 01:21:47.174
basically this addition is
the first one is a negative

NOTE Confidence: 0.893156409263611

a5dadefc-264a-44e5-967b-5c92afd8e939
01:21:47.174 --> 01:21:50.387
number because there is a non
0 value here.

NOTE Confidence: 0.896782159805298

a633b7ee-9735-47c4-9ce4-e3af652b5a26
01:21:52.050 --> 01:21:55.220
The second number is also a
negative number because there's

NOTE Confidence: 0.896782159805298

7a73710d-eabf-4c1d-af6b-a74b815138a1
01:21:55.220 --> 01:21:57.122
a one in this sign position.

NOTE Confidence: 0.818072021007538

1daa3085-658d-42a8-a5ae-4b646ff8d061
01:21:58.050 --> 01:22:02.574
Which is not part of the number
again and then you do padding

NOTE Confidence: 0.818072021007538

faa75606-03de-428e-8a2b-40021b68245e
01:22:02.574 --> 01:22:04.314
and it starts up addition.

NOTE Confidence: 0.808398067951202

7a63451f-9a6d-4f44-875b-d3cba4300309
01:22:05.260 --> 01:22:11.487
So you you do this, an addition
so becausw minus X the first

NOTE Confidence: 0.808398067951202

46c7e120-140d-4e4e-aacc-44e7ea0d8dfd
01:22:11.487 --> 01:22:18.193
number plus the second number is
minus Y, so it becomes minus X +

NOTE Confidence: 0.808398067951202

aec8d12e-dd32-4b53-b05f-7274dfdb0ae3
01:22:18.193 --> 01:22:24.899
-- Y which is equal to minus X
+ y. So before doing the

NOTE Confidence: 0.808398067951202

862b2f5c-b9bf-4b0f-b31d-a836fa46975f
01:22:24.899 --> 01:22:29.210
arithmetic you already knew that
the result gonna have.

NOTE Confidence: 0.875012636184692

e22bd5b8-e7e2-4a8d-8553-8c5b24579e54
01:22:29.800 --> 01:22:35.091
Gonna be a negative so you put
one so before the result you

NOTE Confidence: 0.875012636184692

b3a47a1d-b568-4736-a665-b99969ae430c
01:22:35.091 --> 01:22:37.533
know these sign of the result.

NOTE Confidence: 0.902924001216888

9fc8efa6-164f-4bb4-9bec-bc7d02272a93
01:22:37.540 --> 01:22:40.648
And then you do the addition.

NOTE Confidence: 0.89593631029129

0098a73b-9ba6-4869-abd0-507cb40372d3
01:22:42.550 --> 01:22:45.960
And here is the result of the
addition, so it becomes.

NOTE Confidence: 0.910940289497375

ead4d11c-ee94-4a45-8e3a-eec498cd1142
01:22:46.530 --> 01:22:50.080
Negative number and this is the
magnitude of the number.

NOTE Confidence: 0.914057075977325

0280a252-6b1d-4aef-be6f-16b68677868f
01:22:52.000 --> 01:22:54.466
I hope I explain your question.

NOTE Confidence: 0.821656286716461

795e4d89-c4b0-4e86-b333-fc9b3dd1c5c5
01:23:00.410 --> 01:23:04.850
Yes, yes, just the other thing
is when we say first position,

NOTE Confidence: 0.821656286716461

a87ca369-069f-4a63-ba6b-b6a707d9d63a
01:23:04.850 --> 01:23:09.290
the first position from the left
side. So sometimes you may say

NOTE Confidence: 0.821656286716461

426d8d66-15e8-42f2-85af-ad72339b89e3
01:23:09.290 --> 01:23:13.730
that the first position from the
right side, but we usually say

NOTE Confidence: 0.821656286716461

28d9a266-c9c3-4154-b89b-4be38669a7d9
01:23:13.730 --> 01:23:17.060
that the hyest significant
position. So basically the first

NOTE Confidence: 0.821656286716461

e6b37aa9-464d-40b4-9e98-99efc9b51f48
01:23:17.060 --> 01:23:18.540
position from the left.

NOTE Confidence: 0.869729995727539

a459b17a-dce2-4f45-9a6e-cdc69cd5f3a1
01:23:19.200 --> 01:23:23.308
We just leave it as the sign and
then we consider the the

NOTE Confidence: 0.869729995727539

2f9a3a08-3517-40d8-92cc-9b3297711949
01:23:23.308 --> 01:23:24.572
remaining position as the

NOTE Confidence: 0.93474280834198

db08ec5f-2741-4342-8428-bb54f7ceed28
01:23:24.572 --> 01:23:25.980
number. Yeah.

NOTE Confidence: 0.886123716831207

131e0ef4-db25-4a06-9ad4-b88810666987
01:23:27.880 --> 01:23:33.072
You're welcome and I'm glad that
I could answer your question.

NOTE Confidence: 0.882090389728546

0652f7cd-40d2-4535-bfd1-e8e3fbb8f924
01:23:33.910 --> 01:23:39.138
And any other
question.

NOTE Confidence: 0.879911959171295

6350390e-75bf-49a6-8132-7c51c631f197
01:23:40.820 --> 01:23:44.516
You too Michael have a great
day, so I'm going to be in the

NOTE Confidence: 0.879911959171295

b03ac871-319f-45dc-bbbd-6329938ffde3
01:23:44.516 --> 01:23:47.420
office hour, so if you have
any questions I'm ready to

NOTE Confidence: 0.879911959171295

0fffd03c-498e-4da5-a2fa-cb8d23b0fb83
01:23:47.420 --> 01:23:48.740
take your question there too.

NOTE Confidence: 0.802772462368011

cc816a03-5d80-40d3-9366-f8e5e6df0ce3
01:23:53.260 --> 01:23:59.404
 Thank you Seham so let me stop. 

NOTE Confidence: 0.897837281227112

61795c4b-14b4-47c3-8723-617607ebf4f6
01:24:00.540 --> 01:24:02.860
The recording.

