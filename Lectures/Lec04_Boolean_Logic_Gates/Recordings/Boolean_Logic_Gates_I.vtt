WEBVTT

NOTE duration:"01:23:34.1250000"

NOTE language:en-us

NOTE Confidence: 0.15692759

4a0e26dc-da8f-45f3-84fc-67540e1ecbb6
00:00:18.070 --> 00:00:19.670


NOTE Confidence: 0.89292735

c750c3aa-bc22-4a08-91cd-f335d57212f3
00:00:20.860 --> 00:00:24.630
We just wait for one or two
minutes for others to enjoy the

NOTE Confidence: 0.89292735

82e592ab-b8e8-48ad-ba42-42edeaead67c
00:00:24.630 --> 00:00:26.370
class and will start very soon.

NOTE Confidence: 0.8535422

6947e371-d516-4e09-acdb-4723352f5339
00:00:28.800 --> 00:00:32.080
Meanwhile, if you have any
questions regarding the.

NOTE Confidence: 0.7266627

2799b45b-740f-4843-923e-92eb42872c46
00:00:32.850 --> 00:00:37.490
Uh, any any issue related
to the course. I'm ready

NOTE Confidence: 0.7266627

94ef360d-58cc-4d17-bde4-38f663d557db
00:00:37.490 --> 00:00:39.346
to take your questions.

NOTE Confidence: 0.80767626

6483de04-9091-4c93-ad3e-38aa6503b5f1
00:00:44.170 --> 00:00:50.501
We already released the marks
for the first lab, I mean lab 02

NOTE Confidence: 0.80767626

27fc7818-1ca3-44d9-89f7-c87809300106
00:00:50.501 --> 00:00:52.936
and also for the lectures

NOTE Confidence: 0.8622906

80193405-b076-4a4e-9268-925a31055ed2
00:00:52.936 --> 00:00:59.771
lecture 02. So if you have
any problem with the marks or if

NOTE Confidence: 0.8622906

5ca394e5-82d8-4a6f-8021-599e8304fc27
00:00:59.771 --> 00:01:04.842
you want to review your marking,
you can contact your lab

NOTE Confidence: 0.8622906

667951ba-d527-4a9c-9dfe-66079e061a32
00:01:04.842 --> 00:01:10.374
instructor 1st and then he give
you an opportunity to review or

NOTE Confidence: 0.8622906

a9130784-4bd7-4827-8fe5-8c11b647a672
00:01:10.374 --> 00:01:13.140
he will explain what you receive

NOTE Confidence: 0.6773909

4171f008-c8e8-4640-9999-88b2ed77e92a
00:01:13.140 --> 00:01:17.030
this mark. And uh, yes.

NOTE Confidence: 0.7328075

74e9df0c-cb0d-4e22-8ad4-89d00e94273e
00:01:17.670 --> 00:01:22.100
Oh yeah, one 

NOTE Confidence: 0.7328075

7506cb32-34b8-4e3b-81cf-fd7be225972f
00:01:22.100 --> 00:01:26.530
thing is that uh, in the
discussion board is student

NOTE Confidence: 0.7328075

ebb86d8d-671c-48e7-ba1e-ca81d5481120
00:01:26.530 --> 00:01:27.859
asked me that.

NOTE Confidence: 0.84823716

a60eba3b-a106-444b-8358-1d5b94323535
00:01:29.360 --> 00:01:34.088
What is the range I mean, the difficulty of the questions or

NOTE Confidence: 0.84823716

80d51ed9-2cf6-47a8-b00f-1b05cfafba37
00:01:34.088 --> 00:01:38.816
what are the types of question
in the exams. Basically, as we

NOTE Confidence: 0.84823716

b22bdeb1-e0b8-438f-9074-fff144fe66c3
00:01:38.816 --> 00:01:43.544
said in the first lecture, there
are some topics that we don't.

NOTE Confidence: 0.84823716

171b9537-69ed-4537-a81a-d92486688ad2
00:01:43.544 --> 00:01:48.272
We don't have enough time to
cover in the lectures. Also it

NOTE Confidence: 0.84823716

c2000ae1-d962-4a3b-a999-635cd623c653
00:01:48.272 --> 00:01:53.394
is intentional, because, uh, you
want you to do is research or I

NOTE Confidence: 0.84823716

0441230b-d01e-4c77-a62c-11f4954841c3
00:01:53.394 --> 00:01:57.728
mean on Internet on other
sources in order to, I mean

NOTE Confidence: 0.84823716

b7ed1c51-efac-4142-a806-7048fe32d852
00:01:57.728 --> 00:02:01.668
learn some topics that we don't
cover in the lectures.

NOTE Confidence: 0.8514402

f420a000-37b3-4e7a-a8d6-77cede05b061
00:02:02.620 --> 00:02:07.647
Kind of developing your critical
thinking, so that's why we cover

NOTE Confidence: 0.8514402

1daad211-1e82-4e83-86bf-0a4b3f6c9c5e
00:02:07.647 --> 00:02:11.303
some topics in the lab
assignments and lecture

NOTE Confidence: 0.86647564

2b152450-0a05-4698-830d-e4e089830d10
00:02:11.303 --> 00:02:16.938
assignments. As a result, in the
exam we may have some questions

NOTE Confidence: 0.86647564

38906d6a-31ec-48a7-83a6-c6689e06d7d5
00:02:16.938 --> 00:02:21.834
from those topics, so as a
result it's important for you to

NOTE Confidence: 0.86647564

596f4eac-e2cb-49ac-86f6-a860af0824a2
00:02:21.834 --> 00:02:26.322
do the assignments or at least
read the assignments, just to

NOTE Confidence: 0.86647564

1efdd83c-3097-4d38-a541-b43faf5562ad
00:02:26.322 --> 00:02:31.218
know that what are those new
topics or related topics. But in

NOTE Confidence: 0.86647564

60739589-5d5c-4c98-8598-6786a24d09cd
00:02:31.218 --> 00:02:36.114
terms of the difficulty in the
exam, we're going to have much

NOTE Confidence: 0.86647564

851408a0-f24d-4b42-9cb5-0cb8e781fa5d
00:02:36.114 --> 00:02:40.194
more easier questions, and the
reason is that for the

NOTE Confidence: 0.86647564

191ad810-fb5b-4f3c-af52-a80cf2a6b7c4
00:02:40.194 --> 00:02:42.234
assignments you have one week.

NOTE Confidence: 0.8889055

9960c4c0-6263-4277-8382-ff61aaf2c358
00:02:42.450 --> 00:02:47.790
 To do the assignment or to do the lab but in the exam you may 

NOTE Confidence: 0.8889055

db70639a-1902-4b27-8d82-f2638bfd5327
00:02:47.790 --> 00:02:52.418
have two or three hours, so as
a result I mean the difficulty

NOTE Confidence: 0.8889055

dc388a70-cea8-4f10-b5ae-17d83eb311ea
00:02:52.418 --> 00:02:55.622
of the question in the exams
are much more.

NOTE Confidence: 0.8434189

431e4914-ef15-47e1-8f31-470c480f8aee
00:02:57.350 --> 00:03:01.814
Easier compared to the
difficulty of the questions in

NOTE Confidence: 0.8434189

93995b9e-8ca0-4bd2-89de-353e60308745
00:03:01.814 --> 00:03:05.286
the assignments versus lecture
or lab assignments.

NOTE Confidence: 0.7395246

0ae84116-fed1-4585-afff-8fa122d9bdf3
00:03:06.770 --> 00:03:11.210
Instance in the exams we never
ask you to write a code.

NOTE Confidence: 0.7509812

6992f671-695c-485e-aa15-3baef947bb8a
00:03:12.400 --> 00:03:19.360
Uh, or uh, we may ask
you to prove something, but not,

NOTE Confidence: 0.7509812

cff91935-50c6-4306-bd7d-ce894cc6d497
00:03:19.360 --> 00:03:22.260
I mean long mathematical proofs

NOTE Confidence: 0.8742624

f91a4790-2497-472d-9d40-4549f96bbaf9
00:03:22.260 --> 00:03:27.677
so. Yes, I does. It make sense
on it so.

NOTE Confidence: 0.13949394

eef87627-bde4-4c3c-8cb3-06303e1f8e75
00:03:28.680 --> 00:03:29.340
Uh.

NOTE Confidence: 0.75473845

6b1887b7-64b0-4433-bbb0-e4157478bb0b
00:03:34.420 --> 00:03:35.000
Awesome.

NOTE Confidence: 0.8896876

2a313ec3-b04c-4dba-b8b5-677e6f60a400
00:03:36.520 --> 00:03:39.616
You're welcome, so any
other questions, so I

NOTE Confidence: 0.8896876

689d9c46-e465-4cb9-a0ed-ad100496fab4
00:03:39.616 --> 00:03:41.164
was just trying to.

NOTE Confidence: 0.7925612

b9cf3b68-0c80-4bd3-ae56-4ac9705289e2
00:03:42.790 --> 00:03:44.668
Share my screen.

NOTE Confidence: 0.6803991

29139134-3c57-4681-bde7-a66e1fe1b2c2
00:03:55.720 --> 00:03:57.748
Share my screen.

NOTE Confidence: 0.8913004

18a95b51-a838-4382-88fa-420d630fa8b8
00:03:58.950 --> 00:04:04.054
So again, I don't have two
monitors, so I'm going. I'm

NOTE Confidence: 0.8913004

e349e01f-0960-4095-9acc-f93ab66d1fef
00:04:04.054 --> 00:04:08.230
using my laptop, so I'm
going to share my.

NOTE Confidence: 0.81906426

8631208a-974e-4328-b839-2b540abb5ad2
00:04:09.400 --> 00:04:14.236
A screen, so if you have any
questions etc you can put it

NOTE Confidence: 0.81906426

57bf817b-c53c-4719-be8c-27514c9f6af3
00:04:14.236 --> 00:04:19.072
in the chat box an every 10
or 15 minutes. I stop and

NOTE Confidence: 0.81906426

830057db-a49e-4bf0-9ea8-205a6ad376e2
00:04:19.072 --> 00:04:20.188
take your questions.

NOTE Confidence: 0.9435288

72f23f46-4b77-4801-ab9e-9c908b79f7d6
00:04:21.570 --> 00:04:24.170
So are you able
to see my screen?

NOTE Confidence: 0.8113287

8ea06b6a-c748-4c1b-b815-0e26d035b0ba
00:04:30.450 --> 00:04:36.546
When we get there, will we get
the answer for the lecture

NOTE Confidence: 0.8113287

ee07a6b0-2ebe-41cb-9ef5-d229c3d1b3a3
00:04:36.546 --> 00:04:42.134
assignments? Yes, I will release
the key to the assigned lecture

NOTE Confidence: 0.8113287

167f6e55-291f-4d41-bdbc-633eb76c138a
00:04:42.134 --> 00:04:44.166
assignments, not for the.

NOTE Confidence: 0.8517393

080ef1b5-18a7-4bb0-8cd0-25065481fbd1
00:04:45.680 --> 00:04:50.724
Lab assignments, so I won't give
you the correct code for the lab

NOTE Confidence: 0.8517393

a244ca15-ebbd-49df-87c4-9905a6ed76a8
00:04:50.724 --> 00:04:54.992
assignments, but for the lecture
assignments I give the key for

NOTE Confidence: 0.8517393

1003c408-c666-40c4-bc1b-e3c16492542d
00:04:54.992 --> 00:04:59.648
the questions, But The thing is
that some keys has answers to

NOTE Confidence: 0.8517393

30c63ce5-4eb6-4cdd-ad84-4177ab9d1a45
00:04:59.648 --> 00:05:04.304
all questions, but some keys
only has answers to some of the

NOTE Confidence: 0.8129053

30950d05-77a7-48c2-b671-77e9a8cd6807
00:05:04.304 --> 00:05:10.090
questions. So, uh, yes, I
release the key, but the key

NOTE Confidence: 0.8129053

996ab1bb-87f5-4d4a-8e97-a2ee04d5540c
00:05:10.090 --> 00:05:15.194
may include all the answers or
some. I mean questions that

NOTE Confidence: 0.8129053

565688d3-26fa-4c71-9b70-ab1257586eb5
00:05:15.194 --> 00:05:19.370
most of these students select
those questions and answer

NOTE Confidence: 0.8129053

51954e33-2de5-45bf-9927-0eebda88f621
00:05:19.370 --> 00:05:24.010
them. There is all the provide
keys to those questions.

NOTE Confidence: 0.80891174

12b26f49-f15f-457c-b9c7-379aadea035b
00:05:25.130 --> 00:05:29.162
Uh, for the first lecture
assignments will list all

NOTE Confidence: 0.80891174

60303ee3-9049-45c1-945a-114c76145c6d
00:05:29.162 --> 00:05:33.642
the keys, but for the next
I mean other assignments.

NOTE Confidence: 0.80891174

e9d027ec-c4e4-4294-8780-b8e6a244c50a
00:05:33.642 --> 00:05:39.018
We just have questions. We
will have a key for two or

NOTE Confidence: 0.80891174

156ed252-0e65-4f8f-a1a5-599afb7c4c53
00:05:39.018 --> 00:05:43.050
three or five questions.
Not all of the questions.

NOTE Confidence: 0.7151821

5f6b812d-3185-49f3-8daf-97dcbe35691b
00:05:46.180 --> 00:05:47.720


NOTE Confidence: 0.9091011

29e1568c-c570-464c-aa24-3fc7b77b36cd
00:05:50.720 --> 00:05:53.600
Yes and also I mean.

NOTE Confidence: 0.87334216

1c509525-5d1b-47ea-a5dd-9bed3dcff87d
00:05:54.200 --> 00:06:00.080
It is helpful for the exam so
you can practice on the I mean

NOTE Confidence: 0.87334216

507ac0d0-3dd3-4f9a-b6c5-1e840358802a
00:06:00.080 --> 00:06:03.860
different type of question in
the exam as well.

NOTE Confidence: 0.87617254

3725d729-9849-4e09-9c32-b031292fb692
00:06:06.430 --> 00:06:11.434
Even if you don't have, you
don't have the key for the

NOTE Confidence: 0.87617254

d3f8a406-82a7-4bfb-a9f9-6a0bb8b7260b
00:06:11.434 --> 00:06:15.604
question. You can attend the
lab sections and the lab

NOTE Confidence: 0.87617254

3400bb69-0a1e-448c-81ff-a98ac9c72ac7
00:06:15.604 --> 00:06:19.774
instructor can help you not
give you the direct answer,

NOTE Confidence: 0.87617254

863e593b-4d54-4adb-bf08-d838fafcde86
00:06:19.774 --> 00:06:24.361
but can help you to find an
answer to the question.

NOTE Confidence: 0.90020573

079dfe4c-b16c-43a1-8478-7b1065a07e34
00:06:25.390 --> 00:06:28.965
So you can attend the office
hour and so we can discuss the

NOTE Confidence: 0.90020573

f8388545-60e3-43b6-a9cb-ec282bfc4e0c
00:06:28.965 --> 00:06:32.815
problem and I can give you some
guide in order to come up with

NOTE Confidence: 0.90020573

f152eb13-b824-4ca6-b1f9-2fc068e86c03
00:06:32.815 --> 00:06:34.190
the answer to the question.

NOTE Confidence: 0.7680397

1b83777a-91c7-473b-84b1-9e205fb794da
00:06:35.570 --> 00:06:37.858
So let's start a.

NOTE Confidence: 0.9007031

48e7ae7c-2d01-439f-9e40-9b19308efdac
00:06:41.530 --> 00:06:43.198
So let me.

NOTE Confidence: 0.6358576

cd51a597-ab7c-4e02-a05c-bbc7cdd8fa55
00:06:44.080 --> 00:06:47.341
A laser pointer

NOTE Confidence: 0.9143014

1da01da9-8096-4423-a62b-cf7f623057e1
00:06:47.341 --> 00:06:50.270
OK? So.

NOTE Confidence: 0.8915916

fdfd35d5-6068-44d3-9f97-106be29a6881
00:06:51.670 --> 00:06:56.920
So far we learn how to do
the quantization procedure,

NOTE Confidence: 0.8915916

3ce79bcd-f1fa-46a0-a360-429204cc89e0
00:06:56.920 --> 00:07:01.645
meaning that if we have some
information about continuous

NOTE Confidence: 0.8915916

14f39c45-0278-40bb-a08a-4f706eaeabc1
00:07:01.645 --> 00:07:07.945
entity in the real world, we
said that we have to break

NOTE Confidence: 0.8915916

3bbfe9ce-ebce-483b-ac7e-9b5b893b9393
00:07:07.945 --> 00:07:11.095
the continuous entity into
discrete units.

NOTE Confidence: 0.843297

a98dda87-5c99-44f5-a5c7-133a5e0da773
00:07:12.210 --> 00:07:16.410
And then we represent
the discrete units by

NOTE Confidence: 0.843297

7db3def8-5902-4600-a2b6-75702d935dc0
00:07:16.410 --> 00:07:18.510
some symbols or digits.

NOTE Confidence: 0.85961294

29921c8c-0eb1-4694-8bd4-143afa4e5639
00:07:20.100 --> 00:07:25.440
That was the birth of the
numbering system, so we know how

NOTE Confidence: 0.85961294

42a50bd3-12de-4008-ad98-f0353c66420d
00:07:25.440 --> 00:07:29.445
to represent numbers in
different bases. Base two to

NOTE Confidence: 0.85961294

29a3f423-3566-4c9a-bad4-0214b94da9fe
00:07:29.445 --> 00:07:34.785
base 1016, etc. And then we said
that those are unsigned numbers.

NOTE Confidence: 0.85961294

a2df8654-24f9-44d5-8ed7-adb4322343cd
00:07:34.785 --> 00:07:39.680
Or we could improve it to have
signed numbers negative and

NOTE Confidence: 0.85961294

a5eb79a7-60c3-4f43-a8ea-08a3d5057622
00:07:39.680 --> 00:07:43.685
positive numbers. We introduced
two systems signed magnitude and

NOTE Confidence: 0.85961294

33009ccd-49b9-4174-994b-09feaa060bd8
00:07:43.685 --> 00:07:45.020
radix complement system.

NOTE Confidence: 0.8221664

c650bc45-f3b0-4c8e-b7b0-3711d5989783
00:07:45.700 --> 00:07:48.330
We said that although the.

NOTE Confidence: 0.77440095

cc986ac9-1fc3-4cd6-a162-9f802b1c2db8
00:07:49.370 --> 00:07:55.387
Radix complement systems are a
little bit complex, but in doing

NOTE Confidence: 0.77440095

38593d0e-8c5f-464f-881b-779ab97a0fb9
00:07:55.387 --> 00:08:01.404
math it is much more simpler
because all the addition and

NOTE Confidence: 0.77440095

d9d6ac38-ad51-4de4-a583-494be2121c33
00:08:01.404 --> 00:08:03.045
subtraction becomes addition.

NOTE Confidence: 0.6529536

b1e9d403-6299-4cd0-b1c6-b38d380223d6
00:08:03.620 --> 00:08:08.116
Um, by I mean, applying
the radix complement

NOTE Confidence: 0.6529536

39a090c6-8c09-420f-a13b-22d252835a41
00:08:08.116 --> 00:08:10.364
operation on a number.

NOTE Confidence: 0.8418837

a2cfdec2-2439-4ac3-8978-bd9a3139d52b
00:08:11.890 --> 00:08:16.968
Um? And also we said we
introduced fraction have

NOTE Confidence: 0.8418837

636ec037-7d8b-4dc0-a09b-a9e877f6a607
00:08:16.968 --> 00:08:21.228
subunits of a unit. So
in general we know how

NOTE Confidence: 0.8418837

b542284e-3f66-44ee-b0b2-a90fb4d855b7
00:08:21.228 --> 00:08:22.506
to represent numbers.

NOTE Confidence: 0.8977819

08b4c92e-4a0a-4d21-b7ab-cc4609990641
00:08:23.530 --> 00:08:28.205
Now we want to build the
actual machine to do the

NOTE Confidence: 0.8977819

1ac600e7-b3a1-4f43-8dcd-9724e94aa626
00:08:28.205 --> 00:08:31.605
analysis. So imagine we can
represent information in

NOTE Confidence: 0.8977819

b48efa05-b509-453f-bade-622226a5bdd7
00:08:31.605 --> 00:08:36.280
discrete units by numbers now
or we have some algorithm to

NOTE Confidence: 0.8977819

78fc5aaa-9c83-4baf-ba6e-c877bfd969fb
00:08:36.280 --> 00:08:37.555
process the information.

NOTE Confidence: 0.9088834

b036cdfb-5cc5-4844-a013-31688398a271
00:08:39.110 --> 00:08:43.048
And we want to build some
machines that does the algorithm

NOTE Confidence: 0.9088834

c0e92e9b-2a24-4fb6-bc01-7ecc2689f168
00:08:43.048 --> 00:08:44.838
on these numbers or information.

NOTE Confidence: 0.8688899

c6d41f01-21e2-4976-bd81-dc61cb2b7e73
00:08:46.260 --> 00:08:51.600
So the history begins from
analog systems. At first the

NOTE Confidence: 0.8688899

17788696-f481-4fe9-a307-605af02201b1
00:08:51.600 --> 00:08:56.406
systems were supposed to analyze
whatever they receive, whether

NOTE Confidence: 0.8688899

52cbc5f0-1357-44aa-97c0-a3f1e281c156
00:08:56.406 --> 00:09:01.212
they are discrete or continuous.
For continuous systems, recall

NOTE Confidence: 0.8688899

5c585ff1-2d08-415e-8440-700244decb28
00:09:01.212 --> 00:09:03.882
analog systems working with the

NOTE Confidence: 0.8609094

7cedd85c-e51d-4333-b447-b3c35ab06aab
00:09:03.882 --> 00:09:08.382
continuous entities. As an
instance of assuming voltage

NOTE Confidence: 0.8609094

3fdfbaec-330e-4eae-ac0b-08f384a33cd8
00:09:08.382 --> 00:09:12.952
from physics, we know that
voltage is correct. The metric

NOTE Confidence: 0.8609094

1420f79c-00d5-4d52-893a-00da6633f1ff
00:09:12.952 --> 00:09:17.522
is the amount of the electrical
currents divided by the

NOTE Confidence: 0.8609094

45cb38ce-f1d2-4500-a58a-fc9da798b604
00:09:17.522 --> 00:09:19.350
resistance of the material.

NOTE Confidence: 0.90278435

b3dc0c2d-d5fe-4d2a-81a7-9d03dd81b549
00:09:20.110 --> 00:09:21.200
So.

NOTE Confidence: 0.8227593

dec506b1-1ae7-4cb6-b65f-a1f84ce9eae7
00:09:24.400 --> 00:09:29.537
I also typed. We know that time
is a continuous entity.

NOTE Confidence: 0.8554589

9f9c23b2-3c96-4e6d-a22b-3be08d269d6d
00:09:30.360 --> 00:09:35.868
So if you build a system that
can analyze this change of

NOTE Confidence: 0.8554589

ef367908-f662-4081-89bd-1be26353d67f
00:09:35.868 --> 00:09:39.999
continuous entity within another
mean time, which is another

NOTE Confidence: 0.8554589

a188a406-f33e-42be-a77b-05ba4cae0d79
00:09:39.999 --> 00:09:44.589
continuous entity, this system
is called can I mean analog

NOTE Confidence: 0.89136654

5e85166a-5420-4368-8c30-3f228ad0c94e
00:09:44.589 --> 00:09:50.660
system? But we said that in such
systems we are not able to do

NOTE Confidence: 0.89136654

85f8193a-7dc6-452d-9bdd-10685cd3830b
00:09:50.660 --> 00:09:53.900
processing or applying some
algorithm to analyze more this

NOTE Confidence: 0.89136654

ddb2c65f-5d98-4a87-a260-32baf7925171
00:09:53.900 --> 00:09:54.980
type of information.

NOTE Confidence: 0.71025085

dca75043-3c91-4e71-b6ce-aab5adaa56aa
00:09:56.120 --> 00:09:59.060
So we said that we can

NOTE Confidence: 0.7225777

b4d72b1f-548a-435c-aa02-8fc9b0abebc3
00:09:59.060 --> 00:10:04.056
discretize a. Of continuous
entity or quantity size. A

NOTE Confidence: 0.8530335

77b16595-72dd-4e7d-bd55-928ae0213d14
00:10:04.056 --> 00:10:08.978
continuous entity. And that was
the birth of discrete system.

NOTE Confidence: 0.83289474

3bd00820-df6c-4076-bcde-016c6dc52cea
00:10:09.580 --> 00:10:14.970
Or Digital's just the systems
that can work with the numbers.

NOTE Confidence: 0.88439345

56c941aa-1f9f-4efd-8b09-f96b6d737d96
00:10:16.550 --> 00:10:22.920
So now here is the task. We know
how to represent information in

NOTE Confidence: 0.88439345

715f41a7-21ba-482e-add8-7d66e19dd9e5
00:10:22.920 --> 00:10:27.820
numbering system and also we
have a power source electricity.

NOTE Confidence: 0.88439345

0a830307-d552-4c47-8f70-16c22e75c1d6
00:10:27.820 --> 00:10:33.700
Now we want to build machine
using these two top I mean

NOTE Confidence: 0.85701996

4a1db7b3-95fb-4a7c-8839-651a7a376688
00:10:33.700 --> 00:10:37.242
ideas. Numbering system to
represent numbers, electricity

NOTE Confidence: 0.85701996

2b4bd35d-10d9-4a88-9de9-cbe7a79189d6
00:10:37.242 --> 00:10:39.504
to give power to our machine.

NOTE Confidence: 0.8461858

2b7f1cb9-33fd-4a5e-a085-3f33650d6cf4
00:10:41.040 --> 00:10:46.962
So the first question is that
what is the best is or what is

NOTE Confidence: 0.8461858

74f1cdd7-70bc-41ac-89f4-84ab9e33cd06
00:10:46.962 --> 00:10:50.769
the best number system to
represent the discrete units?

NOTE Confidence: 0.87926704

e7984bb2-d10c-4146-a781-fd798e54f553
00:10:51.700 --> 00:10:57.410
So we said that within the
history of human human.

NOTE Confidence: 0.8649015

07fab488-c4e4-4add-8fa0-5ba652db608d
00:10:58.760 --> 00:11:01.680
Most common or the most
involved system was.

NOTE Confidence: 0.8437372

7a7e44bc-61f3-413a-898e-7eec6c1e5941
00:11:04.010 --> 00:11:06.348
 Oh sorry, that was my phone siri

NOTE Confidence: 0.79609215

6b6a33e2-ac21-4eb6-83b2-bfaa0c3c5649
00:11:09.400 --> 00:11:13.602
She said she thought that I'm
asking about, I mean history

NOTE Confidence: 0.79609215

0101ba7c-05b6-4184-b93d-8e3d38071442
00:11:13.602 --> 00:11:14.748
of computer systems.

NOTE Confidence: 0.84051675

65ff8a5a-c512-4912-b55a-e9632d68ee36
00:11:16.190 --> 00:11:23.241
So yes, base 10 or decimal
system was the assistant that

NOTE Confidence: 0.84051675

3d8853a8-e429-497c-b692-5bdff3d1aed8
00:11:23.241 --> 00:11:29.010
developed the most in the
history of human calculation.

NOTE Confidence: 0.8188319

e064d7d2-e9c1-45ba-ab08-4bf6c0745936
00:11:30.700 --> 00:11:37.356
So if we want to represent
voltage in a base 10, here is

NOTE Confidence: 0.8188319

4a50996f-d0b8-475d-b726-675a8759ee60
00:11:37.356 --> 00:11:42.988
this plus way to descriptor size
voltage. Basically we just split

NOTE Confidence: 0.8188319

328e93b7-6d0c-4ff7-a7d3-530081c81c55
00:11:42.988 --> 00:11:48.620
the voltage from the lowest
amount of voltage to the highest

NOTE Confidence: 0.8188319

70c668a7-e00c-4137-b97c-3ca5e4ddc48c
00:11:48.620 --> 00:11:51.180
amount of voltage into 10

NOTE Confidence: 0.887388

37b80c0e-2d72-4495-95e1-5aa3b3bac577
00:11:51.180 --> 00:11:55.739
different ranges. Imagine that
the maximum voltage is 10.

NOTE Confidence: 0.8281785

ce81a02c-8a51-4aa8-aeb1-5ac2c00a7313
00:11:56.310 --> 00:12:02.394
So it could be, I mean infinite,
but we just in Miami. For

NOTE Confidence: 0.8281785

eaa51a15-c3b9-4143-bfc6-aaa75d251f41
00:12:02.394 --> 00:12:04.266
simplicity, the highest voltage

NOTE Confidence: 0.8859036

ed94791f-d8d7-4b08-9456-98fcf57c2a51
00:12:04.266 --> 00:12:10.109
is 10. So even if it is
infinite, we can split the range

NOTE Confidence: 0.8859036

d4f3fa7e-4d27-4fd1-b7dd-f6974418047f
00:12:10.109 --> 00:12:11.216
into 10 units.

NOTE Confidence: 0.9128163

9fd5b6ef-fa34-42c6-818f-294e07497512
00:12:12.220 --> 00:12:16.770
So and then we could say that as
long as the voltage is within

NOTE Confidence: 0.85799396

c0e57b21-ab7b-494d-8311-5846e028ce27
00:12:16.770 --> 00:12:23.296
this range. We can assign either
0 or 1 two voltage.

NOTE Confidence: 0.79412216

e8f44ffa-5c8c-472d-ad19-479e52da890f
00:12:23.940 --> 00:12:28.054
As long as the voltage changes
between these range this range

NOTE Confidence: 0.79412216

acef7ba3-bfaa-4fef-bcdf-a6b32e5f3041
00:12:28.054 --> 00:12:31.046
we could assign either symbol
one or two.

NOTE Confidence: 0.8360051

c65c3d70-b28a-4edf-8cc5-96a4208e0621
00:12:31.900 --> 00:12:36.988
 You see that with changes within the different ranges of changes of 

NOTE Confidence: 0.8360051

cc1f5b5d-14ea-4497-b9b1-869dd731a75d
00:12:36.988 --> 00:12:41.228
voltage within different ranges, we can assign different units of

NOTE Confidence: 0.8360051

8e78ac82-f016-4e78-aa92-923eaeed183d
00:12:41.228 --> 00:12:42.500
the decimal system.

NOTE Confidence: 0.85966647

a1341e7e-486a-4ac0-9724-4092f08f5187
00:12:43.240 --> 00:12:48.664
You could say that if voltage
is more than 10 to Infinity,

NOTE Confidence: 0.85966647

c990b63c-45ed-4ffd-8713-de53c0bdb023
00:12:48.664 --> 00:12:54.088
we could assign the value 910
or larger number in a decimal

NOTE Confidence: 0.85966647

e6d3d96e-6fb0-4a90-8a1d-4c23e501b0e2
00:12:54.088 --> 00:12:54.540
system.

NOTE Confidence: 0.7567766

10e8c604-a8b5-4645-9336-6c1f89af087b
00:12:56.690 --> 00:13:02.146
This is 1 uh, this criticizing
voltage, but we have another.

NOTE Confidence: 0.72322434

6b17bf84-e4a8-4a38-99d4-21191bff52f6
00:13:03.210 --> 00:13:07.280
Continuous entity time. So we
have to discretize time as well.

NOTE Confidence: 0.8641072

3542f1f9-802c-41e6-b363-f8144b4fb000
00:13:08.370 --> 00:13:14.324
So this and simplest way is just
a breakdown the time into some

NOTE Confidence: 0.82856095

3d66628d-7808-45d0-a268-dd80f509b8ba
00:13:14.324 --> 00:13:19.510
time intervals. And then assign
it digit or number to each range

NOTE Confidence: 0.82856095

c94d7354-cdf8-4689-9d61-964aa3ab865b
00:13:19.510 --> 00:13:20.990
or each time interval.

NOTE Confidence: 0.76479125

2d693d06-3d7b-4cb9-8bde-21cf33b1faca
00:13:21.810 --> 00:13:27.167
So that was the bigger for
instance. Uh, the metrics such

NOTE Confidence: 0.76479125

4050f646-84bd-48bb-99d7-8f821886be2f
00:13:27.167 --> 00:13:33.011
 as year. So the amount of time Earth  over the Sun 

NOTE Confidence: 0.76479125

c5340cdf-13db-43e2-ac20-231c885367e5
00:13:33.011 --> 00:13:37.881
we call it a year you can divide year into smaller units months 

NOTE Confidence: 0.76479125

4a5f668f-dfd8-4908-80f9-3fca17e55763
00:13:37.881 --> 00:13:44.212
and then split units a an etc.
So all those metrics are were

NOTE Confidence: 0.76479125

c32193bf-dc34-4ff8-88a4-7d1147b0fc33
00:13:44.212 --> 00:13:49.569
based on the way you divide time
into sun, shorter time

NOTE Confidence: 0.73638314

de1ea538-7b82-4e97-8330-5189e3aac954
00:13:49.569 --> 00:13:51.980
intervals. Presence here, it

NOTE Confidence: 0.7416852

bd95f9a8-6f4d-44ea-8cda-d9378dab0968
00:13:51.980 --> 00:13:56.048
could be dead. It could be
hours, an, etc.

NOTE Confidence: 0.8720428

c875de90-5cac-4130-8a4a-b0d43aa16c6e
00:13:56.960 --> 00:13:59.330
So putting these two together?

NOTE Confidence: 0.8960902

c69be502-2d2e-44be-8d6f-b6ec63aeb0dd
00:14:00.540 --> 00:14:04.215
Now we have a better
interpretation of

NOTE Confidence: 0.8960902

882baa70-0d0b-47b7-b115-446a6d04af89
00:14:04.215 --> 00:14:05.790
voltage within time.

NOTE Confidence: 0.86958355

a3c217f1-b00e-4c38-8725-1c227c01a5c4
00:14:06.970 --> 00:14:11.585
So we say that as long as the
change of voltage, for instance

NOTE Confidence: 0.84297574

9cf1ff1f-babd-4cda-8ba0-0000024cbd9d
00:14:11.585 --> 00:14:17.370
here. The change of voltage
within the time interval stays

NOTE Confidence: 0.84297574

f8164af9-3205-4b5a-8a03-77c93baebb38
00:14:17.370 --> 00:14:23.310
in within one range. We can
assume that in this time

NOTE Confidence: 0.84297574

edc11373-26f0-4122-86df-f3fb52f7abeb
00:14:23.310 --> 00:14:28.170
interval the voltage has
concerns 5 in this range.

NOTE Confidence: 0.8537724

04720951-d4ef-44e1-8aef-48e522955008
00:14:29.930 --> 00:14:35.358
Or here. As long as the voltage
changes within this time

NOTE Confidence: 0.8537724

c1b50020-0c3b-417d-9e08-6d2334899631
00:14:35.358 --> 00:14:39.278
interval remains within the same
range of voltage, we could

NOTE Confidence: 0.8537724

a7db8008-691b-4e2c-ab77-1c192a361ce8
00:14:39.278 --> 00:14:43.198
assign a single digit in decimal
system functions here 9.

NOTE Confidence: 0.72367984

a3a2df7d-48c6-4acf-aebd-8e6b3a88adea
00:14:44.580 --> 00:14:48.260
 However, in the first time interval Because, 

NOTE Confidence: 0.72367984

9bb8d6a9-0d4d-4d27-90ce-3b26b2ebea42
00:14:48.260 --> 00:14:50.100
the change of voltages.

NOTE Confidence: 0.8341639

43f9bf43-cc39-4860-ac92-977d5a1c8a30
00:14:51.730 --> 00:14:56.002
Passing different ranges, we are
not sure that what digit we have

NOTE Confidence: 0.8341639

1f253104-5bcb-4ec4-873f-9638c36f5472
00:14:56.002 --> 00:14:58.138
to assign in this time interval.

NOTE Confidence: 0.86198103

d40d3cde-2e2e-432d-8793-87db6b06e777
00:14:59.600 --> 00:15:05.658
So there are some time interval
that we don't know the value of

NOTE Confidence: 0.86198103

bfe0102f-611a-4581-b299-1f43e1b86312
00:15:05.658 --> 00:15:07.522
voltage. The discrete value

NOTE Confidence: 0.86049986

8ec0f704-e9c3-4589-82f2-4404bf9b729f
00:15:07.522 --> 00:15:12.080
voltage. But there are some
cells that because the changes

NOTE Confidence: 0.86049986

9eb348d8-fb79-449f-8f04-772616e615f6
00:15:12.080 --> 00:15:16.150
of voltage is limited to that
range, you can assign discrete

NOTE Confidence: 0.86049986

69414f91-17c7-45bc-984a-c9474d6c538b
00:15:16.150 --> 00:15:17.260
unit to that.

NOTE Confidence: 0.70341235

7d81550c-0edf-4c72-abc7-c8ade01ce614
00:15:19.110 --> 00:15:20.430
A time interval.

NOTE Confidence: 0.86802334

31bfba7a-e1d2-4953-b4ef-5169bfd3643c
00:15:21.070 --> 00:15:23.830
But since you're not here,
you see that the changes

NOTE Confidence: 0.86802334

48dff333-0989-4dd0-92c9-6847e603b2de
00:15:23.830 --> 00:15:26.866
between the range is 2 to
three, so we can assume

NOTE Confidence: 0.86802334

43c03398-2b25-4b41-b1a3-2e48bd241b1d
00:15:26.866 --> 00:15:28.246
that the voltage is cheap.

NOTE Confidence: 0.8046873

3f72e2d1-216b-4d45-8d20-3073d744496b
00:15:29.400 --> 00:15:34.130
 So this way we are discretize what is within the 

NOTE Confidence: 0.8046873

eedb3c99-44d5-4fe0-8228-5f50ce55a9de
00:15:34.130 --> 00:15:38.860
time. But however, there's a
problem here. There are lots of,

NOTE Confidence: 0.8046873

0714d43a-4bb1-4c79-a970-378186cc7d8d
00:15:38.860 --> 00:15:43.160
um. I mean, I'm clear or
ambiguous values for voltage.

NOTE Confidence: 0.9237737

eb4171e5-7838-4282-bdc9-f97a64053b41
00:15:45.170 --> 00:15:46.878
So what's the solution?

NOTE Confidence: 0.8411987

1617d3b2-b715-42c9-bd3a-46cef242c2d4
00:15:48.150 --> 00:15:54.582
Solution is playing with at the
range that we introduced to this

NOTE Confidence: 0.8411987

66b3cece-8384-41cf-88c5-306f1bab719c
00:15:54.582 --> 00:15:59.406
criticize the coin and
continuous entity which we call

NOTE Confidence: 0.79759115

821aa701-177d-4f6e-b6ff-1ee0d7ac6dc6
00:15:59.406 --> 00:16:04.012
 it granularity. Granularity means that the size 

NOTE Confidence: 0.79759115

d350db2e-34c0-4b82-9752-49c7993377bc
00:16:04.012 --> 00:16:08.832
 of the range we choose to discretize a quantity. 

NOTE Confidence: 0.875594

bd43ae64-eb62-46be-8404-41aa3263e5e8
00:16:10.140 --> 00:16:15.145
So for instance, here in terms
of the time, we could say that

NOTE Confidence: 0.875594

c8543473-6dd2-4b16-8a41-c39ad2db3141
00:16:15.145 --> 00:16:17.070
we can kick smaller time

NOTE Confidence: 0.8050844

c4586945-a489-4788-a0cd-02d19d208fd8
00:16:17.070 --> 00:16:20.714
intervals. Instead of, for
instance, assuming we our

NOTE Confidence: 0.8050844

45c67504-6aa4-4d58-9f8d-30f60fd16130
00:16:20.714 --> 00:16:25.680
timetable is day, you could say
that we can break day into 24

NOTE Confidence: 0.8050844

f193fe4e-84a1-4e6d-b922-ef704bf5f9e1
00:16:25.680 --> 00:16:30.264
units, so we have a smaller
units versus hours or even a

NOTE Confidence: 0.8050844

9f005ca3-db90-4eef-8ea2-6b1d99367c9c
00:16:30.264 --> 00:16:31.792
smaller 2nd and etc.

NOTE Confidence: 0.86113036

5cafbde4-a729-4a64-84fb-45bd2e8b5996
00:16:32.510 --> 00:16:37.856
This way shorter time intervals
gives a less chance to the

NOTE Confidence: 0.86113036

8e79ff42-0fa0-45ba-8844-c7ed4d93e3ee
00:16:37.856 --> 00:16:40.772
voltage to have a high change.

NOTE Confidence: 0.9049875

c75d93e4-a624-4ab6-b185-ab294a96b4f0
00:16:41.780 --> 00:16:43.970
For instance here.

NOTE Confidence: 0.8713344

85fd8828-a9e8-45c6-827a-97bcc2e06ebd
00:16:45.440 --> 00:16:49.940
Because we limit, we have a
shorter time interval. The

NOTE Confidence: 0.8713344

cf767b13-2ed1-43a7-9a32-e570b9111d53
00:16:49.940 --> 00:16:54.440
change of voltage remains
limited to this short amount of

NOTE Confidence: 0.8713344

2cdbddbc-e407-4f79-a0dc-c7f48ca9f8b6
00:16:54.440 --> 00:16:59.840
time, so we now we can assign
the digit for this one.

NOTE Confidence: 0.83278394

7cb6b164-d21e-49b0-b7cb-fd50fb84ff15
00:17:00.610 --> 00:17:05.109
Otherwise, if this should we
have a longer time interval, the

NOTE Confidence: 0.83278394

8ca4438f-fd50-49a9-83ef-3dde28981fd4
00:17:05.109 --> 00:17:10.426
voltage is unclear. The value of
it because it changes from 2 and

NOTE Confidence: 0.83278394

be4ada75-5b70-4845-8e06-b4f65d124d8c
00:17:10.426 --> 00:17:12.471
then goes to another range.

NOTE Confidence: 0.870129

8411a6d1-34e1-4c47-8c2d-ce78edcabc80
00:17:14.680 --> 00:17:18.664
But it's still for the first
time interval you see that is

NOTE Confidence: 0.870129

c2162fdf-d1f9-43a3-8e0f-614a10032538
00:17:18.664 --> 00:17:22.316
still the value is not clear,
because in this short time

NOTE Confidence: 0.870129

adb5a672-57d5-4c8f-b941-c04af318c78e
00:17:22.316 --> 00:17:25.636
interval the voltage changes a
lot within different ranges of

NOTE Confidence: 0.8488334

1c18e83c-1c19-41ef-835c-269315c8f2be
00:17:25.636 --> 00:17:29.167
voltage. So it's still we are
not sure that whether they did

NOTE Confidence: 0.8488334

f9785793-21f0-46a2-a30b-a1c9bc5b42b5
00:17:29.167 --> 00:17:30.589
it for in this time itself.

NOTE Confidence: 0.8564354

afcb067a-993e-4ce3-a6cf-04b97cf57e1c
00:17:32.340 --> 00:17:37.173
So shorter time interval.
Another approach is that instead

NOTE Confidence: 0.8564354

1f2992e6-e8ae-4925-9ad6-06b3e7f56c31
00:17:37.173 --> 00:17:42.543
of having shorter time interval
having longer ranges or larger

NOTE Confidence: 0.8564354

74225a01-5f38-4ac7-9f83-6295aff5c44e
00:17:42.543 --> 00:17:45.228
size of ranges in voltage.

NOTE Confidence: 0.8174047

8d0caf31-9e29-4446-814b-19f59935676d
00:17:46.110 --> 00:17:50.502
So instead of dividing into 10
year ranges, we can divide it

NOTE Confidence: 0.8174047

7b1f17e1-23bd-4f55-b991-b8be538ab09c
00:17:50.502 --> 00:17:51.600
into full ranges.

NOTE Confidence: 0.8580819

beb12fd2-a6a9-405c-88ae-372e204937c2
00:17:53.080 --> 00:17:59.383
So we although we give more
freedom to voltage to change,

NOTE Confidence: 0.8580819

21385571-ac31-4524-9e7c-4ac5ad802c14
00:17:59.383 --> 00:18:05.113
but instead we have a better
interpretation of voltage within

NOTE Confidence: 0.9187313

ee16364a-1e38-4e2a-810c-76ce23b90c4b
00:18:05.113 --> 00:18:10.358
that range. For instance, here
in this area.

NOTE Confidence: 0.76996297

407536d9-d568-4e54-ba42-c3dd49b836ca
00:18:11.780 --> 00:18:17.632
Becausw voltage can change from
9 up until Infinity, any change?

NOTE Confidence: 0.868208

d7e804da-f68c-4be0-849b-faa8a87514e5
00:18:18.300 --> 00:18:25.476
In all the time intervals can
be considered as the value in

NOTE Confidence: 0.868208

4ec52893-4fe2-478a-aeb3-d007d652f518
00:18:25.476 --> 00:18:27.270
the third range.

NOTE Confidence: 0.8524132

cd371716-1e50-4051-aba3-668784126e62
00:18:27.970 --> 00:18:32.637
From 9 two Infinity, so we can
assign in what ranges of the

NOTE Confidence: 0.8524132

1dda5420-2b9a-4787-9679-314a22a3ac32
00:18:32.637 --> 00:18:34.073
change the voltage is.

NOTE Confidence: 0.828847

051e87f9-9288-4c29-8810-9c9039585261
00:18:34.890 --> 00:18:36.238
In the third range.

NOTE Confidence: 0.84011155

75db2c40-89b8-410a-931b-c3a2394344a4
00:18:37.790 --> 00:18:44.328
So now we have from base 10 to
base four because we have four

NOTE Confidence: 0.84011155

242726c9-efd2-488b-883b-72d1890a618d
00:18:44.328 --> 00:18:49.465
ranges. You can assign whatever
change in the first Train 0.

NOTE Confidence: 0.84011155

a06c9455-25e4-4b16-bf7d-6f732cb3a2de
00:18:49.465 --> 00:18:55.069
Whatever change in the second
range 1/3 went two and third 4th

NOTE Confidence: 0.84011155

97305711-b00d-4ad3-bb21-90c7b2dbdd2d
00:18:55.069 --> 00:18:57.871
range 3 so far it's 023.

NOTE Confidence: 0.91887945

cde7c3d6-c460-45c7-b6de-01aff7d990f2
00:18:59.020 --> 00:19:01.030
This is the best for system.

NOTE Confidence: 0.79712635

35240292-9f55-42e2-9a98-ff8960b99c25
00:19:02.770 --> 00:19:08.853
So as you can see here, we
have more valid digits.

NOTE Confidence: 0.85502326

0eebe33b-959b-4f42-8cf3-dda11f1dfc86
00:19:09.630 --> 00:19:14.173
In the time interval and less
unclear digits for the voltage.

NOTE Confidence: 0.81873024

898da2f2-6de7-4d33-af96-cee53d48a752
00:19:15.730 --> 00:19:22.026
So another. Approach would be,
I mean just divide the whole

NOTE Confidence: 0.81873024

8ccdb2c4-f48e-4c56-aff8-76353ee1e2bc
00:19:22.026 --> 00:19:23.722
range into two ranges.

NOTE Confidence: 0.85973775

76a7171d-872c-47df-98bb-5cb6eff941f5
00:19:24.590 --> 00:19:29.366
From zero to five, for instance,
is we can consider the first

NOTE Confidence: 0.85973775

04fc0157-4c78-41c4-b66f-e289f871bc43
00:19:29.366 --> 00:19:33.744
rent and then from 5 to
Infinity. You can assume that

NOTE Confidence: 0.85973775

88ecc79a-e16c-40e4-9a12-c963303c6f23
00:19:33.744 --> 00:19:38.918
there is another rent. So as you
can see we are reducing from

NOTE Confidence: 0.85973775

746a04a5-cb92-407b-94ce-fe2f240866db
00:19:38.918 --> 00:19:40.908
base 10 to base 2.

NOTE Confidence: 0.80785114

b282bb25-49ac-46bb-827e-b27225f64475
00:19:41.840 --> 00:19:45.350
The first ones we can assign the
digit zero and the second range.

NOTE Confidence: 0.80785114

b5baa6ce-24c3-4624-934d-2b49dea91f4d
00:19:45.350 --> 00:19:46.970
We can assign the digit 1.

NOTE Confidence: 0.8922886

f1899bdf-a666-4acb-b202-4ffab61285ab
00:19:47.610 --> 00:19:53.588
And as you can see here now, any
change within the voltage 5 to

NOTE Confidence: 0.82055074

557ea3bb-3901-4b67-944e-3de426f89d8c
00:19:53.588 --> 00:19:57.321
Infinity? Within all time
intervals can have an

NOTE Confidence: 0.82055074

3f087012-adf4-4ffa-9297-0607228bd714
00:19:57.321 --> 00:19:59.086
interpretation of the digit 1.

NOTE Confidence: 0.88718826

d097ea1b-d848-46e8-9b02-1afe0133a52b
00:20:02.940 --> 00:20:06.570
Although there are still some

NOTE Confidence: 0.86578894

537d0903-cbae-4018-916d-bf36276b5213
00:20:06.570 --> 00:20:11.524
area. Add the changes. Actually
is still within two ranges.

NOTE Confidence: 0.86787325

dcb2c2ed-1f1d-4bf3-af5d-9101d21c0578
00:20:12.380 --> 00:20:15.240
As you can see here, the
voltage changes from one

NOTE Confidence: 0.86787325

3a884127-4b5d-49e1-84a9-e65e96a322a4
00:20:15.240 --> 00:20:18.672
branch to another, and so we
cannot. We are not sure what

NOTE Confidence: 0.86787325

7d204376-2196-43ed-b8ad-716698a56fef
00:20:18.672 --> 00:20:22.104
did we have to assign this
time. Tell the same is here.

NOTE Confidence: 0.81394243

79757bb7-ee10-43af-94fd-021280631a59
00:20:23.370 --> 00:20:28.640
So we can put these two
together is small time

NOTE Confidence: 0.81394243

0e82d792-ca97-4278-bc95-10a8b355a5c7
00:20:28.640 --> 00:20:32.856
interval larger time for
time and larger time

NOTE Confidence: 0.81394243

2bba78d3-a146-46dc-846d-430f480b5cc9
00:20:32.856 --> 00:20:38.126
interval for voltage in
order to come up with a

NOTE Confidence: 0.81394243

2fab4f63-b750-4ef4-9af3-6970fdc1ee79
00:20:38.126 --> 00:20:41.815
clear interpretation or
discrete digit for voltage.

NOTE Confidence: 0.92969483

89602104-41c7-43d1-89f0-3b0cb4f3d745
00:20:44.020 --> 00:20:47.625
So as we can see so far.

NOTE Confidence: 0.8065284

d4b525a4-3101-47ce-9d88-8dc1dbd70cbf
00:20:48.350 --> 00:20:53.745
This is just this is not the
problem of the base. I mean

NOTE Confidence: 0.8065284

78183b4c-1018-49ef-a3d5-0dc1d1003513
00:20:53.745 --> 00:20:57.480
already's number system. We can
represent the continued entity.

NOTE Confidence: 0.8065284

0915bf36-9564-43e8-a715-1b92a66079d8
00:20:57.480 --> 00:21:00.800
We can this criticize the
continuous entity and

NOTE Confidence: 0.8065284

76655057-44c5-4f7e-b9d3-8f415c989a37
00:21:00.800 --> 00:21:05.365
represented in any basis base
two base Freebase, 10 days, 16

NOTE Confidence: 0.8065284

34dcbb75-3644-47bd-827e-a0e8615adb3a
00:21:05.365 --> 00:21:09.930
base, any basis. So from the
abstract point of view from

NOTE Confidence: 0.8065284

9edee454-efbf-4f5b-843e-209beb6fdaa7
00:21:09.930 --> 00:21:13.665
mathematical point of view we
can repeat discrete any

NOTE Confidence: 0.8065284

26d1d03b-7742-4a1d-9e42-075f53301337
00:21:13.665 --> 00:21:16.985
continuous entity into discrete
unit in any basis.

NOTE Confidence: 0.9040057

b460ad93-6701-4bb8-bd0d-5a7b9fe868c6
00:21:17.620 --> 00:21:22.820
But this is just because of the
hardware or engineering

NOTE Confidence: 0.8569125

0c52e7ef-d5b2-4287-b7bc-e2c7cc410f72
00:21:22.820 --> 00:21:27.584
limitation that. Because the
continuous entity is able to

NOTE Confidence: 0.8569125

9123657f-26f2-46d3-82e3-22a7e4e3d2a5
00:21:27.584 --> 00:21:33.008
change within ranges in the time
interval, an hour device may not

NOTE Confidence: 0.8569125

a91eae75-1537-4691-ba0f-1df79939b6cf
00:21:33.008 --> 00:21:38.432
be captured. I mean may not be
able to incorporate shorter time

NOTE Confidence: 0.8569125

dc6cbd49-bb8b-44bb-8c20-eb3ef654fd66
00:21:38.432 --> 00:21:41.144
intervals, so as a result, for

NOTE Confidence: 0.8100221

8d88787e-bf30-44e5-8746-03e004142d73
00:21:41.144 --> 00:21:47.931
instance here. I read out system
is not that good. In order to

NOTE Confidence: 0.8100221

2bd6aef3-d597-4578-a622-f39914df0b6f
00:21:47.931 --> 00:21:52.741
capture, for instance, having a
very small time interval to

NOTE Confidence: 0.8100221

360fd5d8-7c38-4602-bd8d-bca255ee9f33
00:21:52.741 --> 00:21:58.032
limit the change of voltage
redeem. I mean small, I mean

NOTE Confidence: 0.7268383

83738500-2355-489d-b59d-bb64d71447ef
00:21:58.032 --> 00:22:02.640
this range. So I have a bill. I
mean assign a digit to that.

NOTE Confidence: 0.8810832

17863d94-a401-45bc-9f5e-3c6ccb234bd7
00:22:03.410 --> 00:22:07.326
So this is just because of the
hardware or engineering problem

NOTE Confidence: 0.8810832

5f2799a0-d906-46bb-81a5-1a6236ec2588
00:22:07.326 --> 00:22:09.106
that we come from the.

NOTE Confidence: 0.7571869

91265d98-6902-4606-ae2a-07b8d9c276dd
00:22:10.070 --> 00:22:12.780
Eastern Base 22 Base 2.

NOTE Confidence: 0.8599781

95d99b90-dc7e-4598-8537-45421cbf4ef2
00:22:13.800 --> 00:22:17.094
This is not the only
factor, but the most

NOTE Confidence: 0.8599781

6c399806-df82-426f-9500-d2d6dbdcec31
00:22:17.094 --> 00:22:20.022
important one, but later
will see that there's

NOTE Confidence: 0.8599781

986347c6-0731-40a0-918f-d46a041f6695
00:22:20.022 --> 00:22:23.316
another factor that we
choose base 2 instead of

NOTE Confidence: 0.8599781

34f8952a-d6a8-48f2-8486-8847aa006b34
00:22:23.316 --> 00:22:24.780
base 10 or base.

NOTE Confidence: 0.9158188

9a3dae25-92ca-448d-a813-f02d84b86198
00:22:26.170 --> 00:22:30.497
Other bases. So I can. I
could hear some.

NOTE Confidence: 0.66739494

d6933ca8-58f0-45a5-b9b8-954c31314556
00:22:32.970 --> 00:22:35.178
Sam from the chat box so.

NOTE Confidence: 0.9171924

74913244-8b24-4d4b-ab96-7b14de9f6c2a
00:22:36.350 --> 00:22:39.270
Any questions so far? I'm happy
to take your questions.

NOTE Confidence: 0.7126277

c2bf5188-dc5a-418b-98f3-6241dca052f8
00:22:40.110 --> 00:22:44.043
Barbecue would be helpful as my
family come here.

NOTE Confidence: 0.7808616

71209b5c-0c78-4e4e-9f9a-722666db4cd7
00:22:45.110 --> 00:22:46.638
Robot gonna destroy us.

NOTE Confidence: 0.75818735

405b067b-6f19-494e-a398-813426d5d42e
00:22:48.890 --> 00:22:55.316
Yes, this series? Uh I, I
suggest you to saw a movie a I

NOTE Confidence: 0.75818735

55625b6f-cefe-4b89-918f-344143b9d5af
00:22:55.316 --> 00:23:01.742
mean as as we put the name for
us, I mean the space Odyssey,

NOTE Confidence: 0.75818735

90f36211-79c0-4433-b8b2-a758ddc5bf6f
00:23:01.742 --> 00:23:06.332
the movie by Stanley Kubrick. So
we're starting with Digital

NOTE Confidence: 0.805822

bddf9daa-da93-4a85-8002-6f6e57264047
00:23:06.332 --> 00:23:12.040
Odyssey. So I really suggest you
to watch the movie Space Odyssey

NOTE Confidence: 0.805822

746fcdbc-1b81-4e32-a6ae-abaa587a324b
00:23:12.040 --> 00:23:17.080
by Stanley Kubrick. Yeah, I kind
of look at it like scale.

NOTE Confidence: 0.597592

5d605f8c-a928-4807-84f0-343f1a1ad97c
00:23:17.740 --> 00:23:18.680
I.

NOTE Confidence: 0.80802095

7a8782b3-ea48-4b37-927d-ed17d78b6a4f
00:23:20.040 --> 00:23:23.919
I'm not sure what you mean
by logarithmic scale.

NOTE Confidence: 0.039451748

8f5a3c1e-bdc5-4ff9-9874-01cad92f3c1f
00:23:25.230 --> 00:23:26.410
Um?

NOTE Confidence: 0.85890985

8e09ff5a-9d7a-4686-9d06-11eb680f8e7e
00:23:28.160 --> 00:23:33.033
Sometimes if you are dealing
with a very large I mean

NOTE Confidence: 0.85890985

ae96cc5b-7d72-4f24-bcd7-7c27ac6bc485
00:23:33.033 --> 00:23:37.906
magnitude or large numbers in
order to represent or I mean

NOTE Confidence: 0.85890985

12b08ae8-8d7c-42f2-8d42-d43eef49b04a
00:23:37.906 --> 00:23:41.893
control the large numbers you
work with logarithmic scale.

NOTE Confidence: 0.85348064

413fe0df-6a6d-474a-982a-617e58a23f92
00:23:43.340 --> 00:23:46.448
So we could say that yes, for
instance in voltage, if the

NOTE Confidence: 0.85348064

2d0aacdf-359f-4470-aa3a-a798baeb28cf
00:23:46.448 --> 00:23:49.038
water changes from 9 to
Infinity, we assume just they

NOTE Confidence: 0.85348064

4846c404-9c5f-4dee-bb1e-ab061662c471
00:23:49.038 --> 00:23:52.405
are in the higher rent. So we
assume just one digit to that

NOTE Confidence: 0.7810084

98ec8761-0f22-48bb-be3d-57b049b0869b
00:23:52.405 --> 00:23:57.560
higher rent. In that sense, we
could say that the same

NOTE Confidence: 0.7810084

091e013e-2474-4b9b-9ccb-8ddcc05c3f51
00:23:57.560 --> 00:24:01.610
treatment as we do with the
logarithmic logarithmic scale.

NOTE Confidence: 0.7024506

65dacbd0-fef5-43b9-97a0-1a33aba01b4a
00:24:04.130 --> 00:24:09.090
Uh, that is breaking down this
system into discrete parts.

NOTE Confidence: 0.7024506

7153d0f9-3df0-4fc0-8ce1-85f7e704c78b
00:24:09.090 --> 00:24:14.546
No, no, no. This criticize a
shun is this granularity means

NOTE Confidence: 0.7024506

37c67cfd-6138-47d8-8744-6bfa1f097339
00:24:14.546 --> 00:24:19.506
that the size of that discrete
unit is smaller size.

NOTE Confidence: 0.8209488

4e7e3258-a27c-4581-9901-ba088676ae37
00:24:21.150 --> 00:24:26.892
Find granularity the largest
size in college course, so I put

NOTE Confidence: 0.8209488

54be5c7e-e656-439e-915f-ca7ef84425eb
00:24:26.892 --> 00:24:30.546
it in the chat box, so fine.

NOTE Confidence: 0.8070784

94333e39-18b1-4185-8a25-6ac620a6a7b8
00:24:31.590 --> 00:24:36.498
 We call it fine-grain granularity. 

NOTE Confidence: 0.7170431

d26b6986-a76a-4482-a22b-a95da114c5e3
00:24:38.070 --> 00:24:41.130
 As opposed to coarse-

NOTE Confidence: 0.38219887

f796009f-6c82-4050-bbb0-c027706b1616
00:24:42.120 --> 00:24:43.548
grain granularity

NOTE Confidence: 0.836337

3bd5b7aa-0e07-4046-b81c-c665930fb152
00:24:47.320 --> 00:24:53.080
the size of the unit we
choose for split the

NOTE Confidence: 0.836337

1ad6e9f7-9d4f-4daa-a95d-0cecae0b8b71
00:24:53.080 --> 00:24:56.536
continuous entity. Yeah,
any other questions.

NOTE Confidence: 0.92480457

8beb61ad-2653-48c8-ad43-5d7b8af4d7fb
00:25:03.840 --> 00:25:04.990
No questions.

NOTE Confidence: 0.9034913

1968244d-7c4a-440e-8776-0efc4132ed65
00:25:06.400 --> 00:25:07.618
Everything makes sense.

NOTE Confidence: 0.75485295

c60fac66-4219-4058-931e-e52e161b505a
00:25:11.740 --> 00:25:16.213
I yes actually borrowed these
terminology from there. Yes,

NOTE Confidence: 0.75485295

d1a784b4-a381-4e93-8bde-309c6e2a9d3b
00:25:16.213 --> 00:25:17.704
yeah, my salt.

NOTE Confidence: 0.9206979

0fcdb8ed-ef53-44e8-bedf-e3494d3b349d
00:25:18.280 --> 00:25:18.760
Yeah.

NOTE Confidence: 0.8223869

84b78595-092f-4e8b-a7fa-0616a775a6a8
00:25:20.290 --> 00:25:24.086
Well, as you know any option, I
mean any object in the real

NOTE Confidence: 0.8223869

c7dc8fca-8d99-421c-bb17-c9f7c622c2ee
00:25:24.086 --> 00:25:25.546
world is a in a.

NOTE Confidence: 0.8259475

3577c765-fd35-403c-8094-26813805870f
00:25:26.900 --> 00:25:31.316
Again, this is a controversy, so
we could say that Adams or

NOTE Confidence: 0.8259475

fc37c4e4-d776-4814-a5e5-4a0551ab4ee6
00:25:31.316 --> 00:25:34.996
discrete, so anything in the
real world is discrete because

NOTE Confidence: 0.8259475

a3bb443d-1725-41fb-8c51-77dc7578d802
00:25:34.996 --> 00:25:38.676
they are made of atoms and atoms
are discrete units.

NOTE Confidence: 0.86597395

5cf3eb50-80cd-447f-9826-c4655130e255
00:25:39.240 --> 00:25:45.024
But again, if you want to
measure the things, measure is a

NOTE Confidence: 0.86597395

ff292b66-aeb5-4637-aa8e-dbee58ac3110
00:25:45.024 --> 00:25:49.844
continuous entity. So we could
say that the objects are

NOTE Confidence: 0.8034885

84e81d64-3da4-444c-8039-4c04168fe369
00:25:49.844 --> 00:25:54.488
continuous entities. So again,
you can breakdown the object

NOTE Confidence: 0.8034885

ebe1bf3d-458e-40b7-ac4e-e3ad5215e097
00:25:54.488 --> 00:25:59.456
into smaller units like salts. I
mean smaller grain of salt or

NOTE Confidence: 0.8034885

12a202ec-8830-4b85-96b1-1dcd25a05f6f
00:25:59.456 --> 00:26:01.526
larger grain of salt, yeah?

NOTE Confidence: 0.8369641

ab78df1f-b276-4849-acbc-2b2a1f371477
00:26:03.060 --> 00:26:04.900
Yes, similar, I'm in concert.

NOTE Confidence: 0.7040205

6244fd69-c5bc-4538-b3b8-b97c3df64806
00:26:05.860 --> 00:26:08.080
So let's continue, uh?

NOTE Confidence: 0.8024135

cd087261-9416-463f-8020-d588b9930d8e
00:26:10.420 --> 00:26:16.680
So indeed, uh, the first
computers built in 1840 by

NOTE Confidence: 0.8024135

de80c423-f265-4dde-9196-a64c220a3ae7
00:26:16.680 --> 00:26:22.940
Thomas folder was not based on
the electricity, so entirely

NOTE Confidence: 0.8024135

aacc03ac-a9e8-4cd4-91b6-1cc20ed6dbf7
00:26:22.940 --> 00:26:30.452
worked by kinetic energy and the
whole system was built by wood.

NOTE Confidence: 0.8086595

31f6ea50-be2c-469c-98d1-46458da72c96
00:26:31.550 --> 00:26:35.447
So the working power was
kinetic energy and the

NOTE Confidence: 0.8086595

945bac51-4a3d-4ab9-8a7d-7ee9877db875
00:26:35.447 --> 00:26:39.344
material was would and in
terms of the numbering

NOTE Confidence: 0.8086595

8860b745-c142-4606-ae4a-debc4b20926d
00:26:39.344 --> 00:26:43.674
system, a system was not
binary. It was based free.

NOTE Confidence: 0.8086595

c539e01c-6157-4345-90be-fcfcc3fdcd78
00:26:43.674 --> 00:26:47.571
It has 3 digits minus 1
zero and one.

NOTE Confidence: 0.82388306

d34d8067-115b-437a-9f38-d74a2bfc9b66
00:26:49.570 --> 00:26:56.018
You can read more about a
history of. I mean what was the

NOTE Confidence: 0.82388306

408934ec-c571-403b-9ea3-b71dcdc8c888
00:26:56.018 --> 00:27:01.474
first computing device? So it
wasn't the 1960. The birth of

NOTE Confidence: 0.82388306

8557a9c5-0aa4-4414-9d5c-7d41d317c80b
00:27:01.474 --> 00:27:06.434
the current digital systems, so
it was way before that.

NOTE Confidence: 0.81055516

f7cfe9f0-92e4-4439-87f7-581aadbf4536
00:27:07.140 --> 00:27:11.136
And the first system, that
numbering system that was

NOTE Confidence: 0.81055516

705f6308-4251-468b-9f75-d9876c111e33
00:27:11.136 --> 00:27:14.244
used for computing devices
where ternary systems.

NOTE Confidence: 0.78192073

e0464563-170f-494a-8785-b3cf3831ebdd
00:27:16.480 --> 00:27:20.380
So you can read more about
other native systems here

NOTE Confidence: 0.78192073

e98900af-e58f-4f9c-b83a-f9a872bb3ed5
00:27:20.380 --> 00:27:22.330
in this link of Wikipedia.

NOTE Confidence: 0.86614525

dd2230d5-4e9e-4296-8cfc-5b3a5519fd95
00:27:23.730 --> 00:27:29.456
But as I said, I mean a binary
system is more robust to changes

NOTE Confidence: 0.86614525

0d60660c-d0d2-47c7-b596-9feabfd940a8
00:27:29.456 --> 00:27:31.501
or noises to the system.

NOTE Confidence: 0.8546404

a111cf72-572e-412c-8789-087584f6febb
00:27:33.290 --> 00:27:38.402
You might hurt that the first
computers are was based on the

NOTE Confidence: 0.8546404

9497d411-4415-45c2-aac5-1ed5fd0b70ac
00:27:38.402 --> 00:27:42.236
decimal system or we have
already decimal computers. Why

NOTE Confidence: 0.8546404

734a1d18-8518-46d1-8322-e8d9631611b7
00:27:42.236 --> 00:27:47.774
we said that the computers we
are going to build our base base

NOTE Confidence: 0.8546404

9436b264-f0af-43a0-8c58-51685d0addf7
00:27:47.774 --> 00:27:49.478
two or binary computers.

NOTE Confidence: 0.8904733

d1110811-e7be-4b83-8817-a377ecc00a73
00:27:50.320 --> 00:27:56.230
I will discuss this later, but
actually these computers were

NOTE Confidence: 0.8904733

5f91779e-ebd7-4f86-880a-bac81b75d96c
00:27:56.230 --> 00:28:01.549
not decimal computers. These
computers were working with the

NOTE Confidence: 0.7455745

49d0802c-c849-404a-879e-7d92cafb9223
00:28:01.549 --> 00:28:06.952
binary numbers. But the
interface to the user where

NOTE Confidence: 0.8615833

ba94893f-f2c6-49f3-a0a5-8d5f13b12e90
00:28:06.952 --> 00:28:11.630
decimal. You see this in the
lectures on the lab assignment

NOTE Confidence: 0.8615833

ff003a7c-cba4-4b29-8a53-d1f303c88f53
00:28:11.630 --> 00:28:16.310
this week in the lab assignment
of this week, I asked you to

NOTE Confidence: 0.8615833

cbef3ada-832c-4bb1-b98e-4a2dedf4e82c
00:28:16.310 --> 00:28:20.630
write a program that outputs the
result to the user based on

NOTE Confidence: 0.8615833

8b22a88d-0340-435f-bf2b-2ddcd344adec
00:28:20.630 --> 00:28:22.070
different systems based on

NOTE Confidence: 0.88348204

d31b92fd-2428-4e42-b2a1-5130fcf179a5
00:28:22.070 --> 00:28:26.356
different basis. But it doesn't
mean that you store the

NOTE Confidence: 0.88348204

1f71832d-986c-4bac-841a-4a5a052247c9
00:28:26.356 --> 00:28:29.704
information in these systems.
For instance, in the lab

NOTE Confidence: 0.88348204

ba8fc631-dbe2-4573-8763-b61d5cde2b47
00:28:29.704 --> 00:28:32.680
assignment you already stored
the information in binary

NOTE Confidence: 0.8668943

5c62483a-df25-47e7-b04f-b754402e0209
00:28:32.680 --> 00:28:37.892
system. But whenever you want to
show it to the user, you can

NOTE Confidence: 0.8668943

f945bb3c-2eae-41e6-bec6-bdf7b2cb8adf
00:28:37.892 --> 00:28:41.753
show it in different systems.
This is the exact thing the

NOTE Confidence: 0.8668943

d7ea21c8-4202-475a-96b7-15d026c2ed55
00:28:41.753 --> 00:28:44.561
decimal computers does. The
decimal computers we're actually

NOTE Confidence: 0.8668943

b0eba030-0bf1-4071-bacb-36f4b9bbe6c2
00:28:44.561 --> 00:28:48.071
storing the information binary
system, but whenever he wants to

NOTE Confidence: 0.8668943

d13d40ce-c0ad-4df6-80b7-75092a008283
00:28:48.071 --> 00:28:52.283
show the information to the
user, it shows it in the decimal

NOTE Confidence: 0.8668943

085fb4d3-3bff-4de5-a537-2f04161c4fcd
00:28:52.283 --> 00:28:55.091
system because the decimal
system was more understandable

NOTE Confidence: 0.8668943

0596d616-08b4-4487-944c-7f0d43225eb4
00:28:55.091 --> 00:28:56.495
to the normal user.

NOTE Confidence: 0.88065636

c4f870a9-5996-4650-ad7b-29e3d2aa45f1
00:28:57.440 --> 00:29:02.055
So we'll discover this play more
later, but I can read more in

NOTE Confidence: 0.92888033

59d4c013-51d0-4e49-a63d-d62be65d29ec
00:29:02.055 --> 00:29:04.050
this URL. So.

NOTE Confidence: 0.8822493

bac6eed9-1c8a-4da6-b38c-5751308e74e2
00:29:05.500 --> 00:29:10.461
Basically, we want to again we
want to build binary systems.

NOTE Confidence: 0.7958596

01201f9b-9365-4568-862c-fe6771a4bb6d
00:29:11.220 --> 00:29:15.207
Roll system that this criticize
continuous information into two

NOTE Confidence: 0.7958596

85aca3d7-f44e-45a6-b5f0-7d4d0b7efe01
00:29:15.207 --> 00:29:17.865
ranges, and we assign 2 digit.

NOTE Confidence: 0.88904244

2724dd0f-0559-442b-befb-605a137fe28e
00:29:20.130 --> 00:29:22.110
And this is because of the

NOTE Confidence: 0.10848957

a79939b7-9ed0-4e96-b4ae-341897285441
00:29:22.110 --> 00:29:24.270
hardware limitation. Anne.

NOTE Confidence: 0.9272945

2aa51c1a-bae2-46f5-9e32-2ab4dce9b9c3
00:29:24.940 --> 00:29:26.648
Another factor is this.

NOTE Confidence: 0.87182826

0206f228-d2d8-454b-bdee-28ae0ba1d9f3
00:29:27.490 --> 00:29:28.888
True and false.

NOTE Confidence: 0.82640386

72d043e0-3be2-43c6-983d-c07bde953224
00:29:29.570 --> 00:29:35.620
So within the history, whenever
we want to validate his

NOTE Confidence: 0.82640386

88129cd1-d82a-4b0a-af47-fd51cb70b93b
00:29:35.620 --> 00:29:41.065
statement, we say that that
statement is correct or

NOTE Confidence: 0.82640386

4e050bc8-ee67-4bb9-8df9-8ce61bba6491
00:29:41.065 --> 00:29:47.115
incorrect. So we already are
familiar. We with the binary

NOTE Confidence: 0.82640386

0572b206-474a-4d7f-bd80-2d03775998b3
00:29:47.115 --> 00:29:52.560
systems whether we accept
something or we don't accept

NOTE Confidence: 0.8926298

064a4543-984d-4c68-a8ab-0f4adc607199
00:29:52.560 --> 00:29:57.384
something. So whether something
is true or not true.

NOTE Confidence: 0.719767

b6fe3738-e8fc-477d-9b55-ed736e49c576
00:29:59.280 --> 00:30:06.210
So. Uh, indeed, in
1854, George Boole, who was

NOTE Confidence: 0.719767

17283574-fd92-4340-93a3-8520a4d168f6
00:30:06.210 --> 00:30:08.970
a mathematician, philosopher and

NOTE Confidence: 0.88529646

99477fcd-aea6-477f-a7f1-58082cc89bbb
00:30:08.970 --> 00:30:15.290
logician. He in this book
he introduced some mathematics

NOTE Confidence: 0.88529646

b2ba95c7-393f-4af1-9cc9-d54fe03d0cca
00:30:15.290 --> 00:30:18.950
or algebra in order to validate

NOTE Confidence: 0.8932958

a3e4ec44-52b3-49ec-a8bd-3b47ac5aab10
00:30:18.950 --> 00:30:24.792
his statement. And you can label
that a statement whether this

NOTE Confidence: 0.8932958

94ce8f82-84cc-44ef-812e-6486d8c1a475
00:30:24.792 --> 00:30:27.300
statement is true or not true.

NOTE Confidence: 0.8590711

e61c482a-3e83-4585-8373-78f05c69341d
00:30:27.940 --> 00:30:32.760
So wait for the numbering
system. We already have this

NOTE Confidence: 0.8590711

fe05c3b5-e2c2-4503-929e-f9741eeafab2
00:30:32.760 --> 00:30:35.170
system that has two symbols,

NOTE Confidence: 0.895273

fca6d763-3dfe-42ae-b365-3f603c9b1496
00:30:35.170 --> 00:30:41.215
true false. This is another
factor that we like to build

NOTE Confidence: 0.895273

b6b6c460-dd46-4fed-b8e9-c2b94c80dc71
00:30:41.215 --> 00:30:45.965
systems that work with binary
digits because there's a huge

NOTE Confidence: 0.78136075

973a2dfc-3464-4b6b-a46b-b4547f609c8e
00:30:45.965 --> 00:30:51.697
 math behind or huge theory behind the binary systems. 

NOTE Confidence: 0.8389198

67534f82-6c09-4248-af11-bdea4ad9756d
00:30:52.640 --> 00:30:58.124
So not only we can build a
system that is robust to

NOTE Confidence: 0.8389198

bb134633-8060-4618-8d07-1573504d4c72
00:30:58.124 --> 00:31:01.780
noise because of the
hardware limitation, we can

NOTE Confidence: 0.8389198

eb4ad7d1-c2bf-498d-9a58-99791cf60fbd
00:31:01.780 --> 00:31:05.893
employ all these theories in
Boolean algebra for doing

NOTE Confidence: 0.8389198

f6c0c720-1ba4-4e0f-95d7-2386bdc05248
00:31:05.893 --> 00:31:06.807
our arithmetics.

NOTE Confidence: 0.8619794

b52ecc07-806f-4e23-825d-980955d1ec37
00:31:08.600 --> 00:31:13.170
So in fact, I mean, Claude
Shannon, who was mathematician.

NOTE Confidence: 0.8619794

ef795ef5-b63c-414e-aa07-c6898459952b
00:31:13.170 --> 00:31:19.111
As a result, he is well aware of
the Boolean algebra, the true

NOTE Confidence: 0.8619794

6eb4e6d8-b53e-4d37-97aa-9c55a5e190dc
00:31:19.111 --> 00:31:24.595
false system in math and also he
was an electrical engineer. So

NOTE Confidence: 0.8619794

78e16831-a5ee-4615-8435-ee7541a5e9e6
00:31:24.595 --> 00:31:29.622
 he was well aware of the how to discretize continuous 

NOTE Confidence: 0.8619794

06a6459a-6fd2-4419-afe3-f7082cca0658
00:31:29.622 --> 00:31:34.649
entities with. I mean some
ranges, and he knows that. What

NOTE Confidence: 0.8619794

f55c1118-5494-4526-9674-e5d2246b257c
00:31:34.649 --> 00:31:36.934
are the limitation of the

NOTE Confidence: 0.87714016

9bf679ef-da26-494a-8cc7-bcefe6aa3c82
00:31:36.934 --> 00:31:42.024
electrical systems? So he said
that that's used a Boolean

NOTE Confidence: 0.8739178

384ede99-3575-4907-9ddf-d0e2e70bc135
00:31:42.024 --> 00:31:47.810
algebra. The true value of
these statements to do

NOTE Confidence: 0.8739178

337aa7bb-3b2d-49c1-a03c-3d0ab1ed4309
00:31:47.810 --> 00:31:50.050
arithmetic on binary numbers.

NOTE Confidence: 0.85151476

d04b677b-ffc8-4dff-8d65-ea69bd70c710
00:31:50.840 --> 00:31:58.185
So this I can say the marriage
is marriage of a Boolean algebra

NOTE Confidence: 0.85151476

d31a3107-583b-409d-a972-59a55c828c64
00:31:58.185 --> 00:32:04.400
and the binary system happened
by Shannon. Actually he was 21

NOTE Confidence: 0.776165

6e5a0b4e-c51a-44ae-8d73-c3ac8587253c
00:32:04.400 --> 00:32:10.660
 year old. Just a student at Master in at MIT. His master

NOTE Confidence: 0.776165

a366b397-575f-42ea-94cf-2ef87433f9c5
00:32:10.660 --> 00:32:15.130
thesis was about this which we
call today switching algebra.

NOTE Confidence: 0.87640846

a0c7e0ef-88ee-4daa-9daf-8a793c2fe9d3
00:32:15.980 --> 00:32:20.610
The switching algebra is using
the Boolean algebra to do.

NOTE Confidence: 0.8375888

3d069080-d668-4c47-a1e8-cc8eb1e654ed
00:32:21.410 --> 00:32:26.274
Math or to do arithmetic
subtraction. Addition on

NOTE Confidence: 0.8375888

4ca62fca-8f19-4530-b1a3-4fa982b4e9c9
00:32:26.274 --> 00:32:29.922
binary systems in an
electrical electrical

NOTE Confidence: 0.8375888

d3fd8e57-3ee1-4596-9603-6ec2e3cd2257
00:32:29.922 --> 00:32:30.530
system.

NOTE Confidence: 0.8627463

50ba58b2-4a26-4c53-b655-098cec124ad3
00:32:32.010 --> 00:32:37.275
So that was the birth of the
binary computers. So you see we

NOTE Confidence: 0.8627463

33b7ec09-92ce-4346-8ab2-bb6a325b0f1e
00:32:37.275 --> 00:32:41.325
have analog systems. Then we
have discrete system or digital

NOTE Confidence: 0.9129989

a5aae161-3d03-4bfe-9345-8cf5c8b717f5
00:32:41.325 --> 00:32:46.645
systems. And then we have binary
systems or binary computers.

NOTE Confidence: 0.8337343

a3fe150d-6e9a-4b7b-ada9-cea202229723
00:32:48.520 --> 00:32:54.010
So in binary computers are, this
is the proposition.

NOTE Confidence: 0.87076265

aaf36dea-49ae-42a9-a9e7-09ca2eae405c
00:32:54.780 --> 00:33:01.430
We say that as long we have two
main ranges, as long as the

NOTE Confidence: 0.87076265

a23afe26-bd5d-4e83-950c-eab2a47fc960
00:33:01.430 --> 00:33:06.180
voltage or any continuous entity
changes within very small amount

NOTE Confidence: 0.87076265

bec22715-cad6-437f-81e3-64972694aaf7
00:33:06.180 --> 00:33:11.880
of change, for instance 02 zero
point 8 less than one unit.

NOTE Confidence: 0.7807113

ff8a9a5f-532e-4a63-b723-81e5e80b4183
00:33:12.460 --> 00:33:18.076
We can assume symbol 0 or the
digit 0 from binary system.

NOTE Confidence: 0.86891484

b8d093fd-16f1-45e1-8664-1b4c961e6170
00:33:18.960 --> 00:33:24.053
If the changes is from 2
to Infinity or to some

NOTE Confidence: 0.86891484

f4d6836a-9a32-4b74-8557-e7b6781a1eca
00:33:24.053 --> 00:33:27.757
maximum value, we can
assume that we can

NOTE Confidence: 0.86891484

0f14b5f1-eb3e-4af1-aa70-45ce000a1bef
00:33:27.757 --> 00:33:30.998
interpret that change as
a digit 1.

NOTE Confidence: 0.7927449

261e5c28-4bb3-4356-a462-797ba6cc39b6
00:33:32.340 --> 00:33:36.260
It's called positive logic,
meaning that we give high change

NOTE Confidence: 0.7927449

4fe07b87-0a8d-442d-8ef1-d5259225d8a8
00:33:36.260 --> 00:33:37.436
2 digit 1.

NOTE Confidence: 0.5972633

931f3b77-f68d-4d67-8a35-e7ce2f671629
00:33:38.030 --> 00:33:40.058
Low chance digit 0.

NOTE Confidence: 0.79500836

23b818f8-3205-4a44-874f-744d146f923b
00:33:40.860 --> 00:33:46.371
An any changes from the low
change to high change within

NOTE Confidence: 0.79500836

21f8c5bb-2a42-4323-b7c4-97add22ae304
00:33:46.371 --> 00:33:51.381
this range is called a
determinant, or we call it

NOTE Confidence: 0.79500836

ce3662eb-af06-4c03-b8b8-09882d8973b1
00:33:51.381 --> 00:33:53.385
unclear or ambiguous value.

NOTE Confidence: 0.90527594

521b7b53-9c42-411d-8362-8273e1fdc611
00:33:56.150 --> 00:33:59.139
So for instance, if I have this

NOTE Confidence: 0.8202787

fb504e92-ed7d-4018-8045-88b446e73561
00:33:59.139 --> 00:34:03.106
continuous signal. Which is
voltage within the time.

NOTE Confidence: 0.87465894

a8d50904-6647-491b-a018-0a0959a8b596
00:34:03.690 --> 00:34:08.772
So as long as the change is in
the lower change, we assume that

NOTE Confidence: 0.87465894

2babf0a9-1beb-4c49-9d62-b07bea62ae84
00:34:08.772 --> 00:34:09.861
you did 0.

NOTE Confidence: 0.8082502

207bd882-b37b-47c8-a0eb-7537781e00a9
00:34:10.420 --> 00:34:12.772
However, if the change goes to

NOTE Confidence: 0.82315946

77dbcf29-841c-4246-ad33-7a5652d54bdd
00:34:12.772 --> 00:34:16.380
hiring. We assume there
is a digit one there.

NOTE Confidence: 0.87968206

8132b27c-6e93-4a19-9ac9-8fb4ce4a48b6
00:34:18.700 --> 00:34:23.432
As you can see, is still in this
system due to some noise

NOTE Confidence: 0.87968206

2d444df2-f044-471b-b807-e33229623262
00:34:23.432 --> 00:34:27.072
happening from the external, I
mean things or internal things.

NOTE Confidence: 0.88763076

dd669fe3-2809-4710-9c0a-36411e0e3057
00:34:27.650 --> 00:34:31.467
Uh is still. There is a
possibility that we cannot have

NOTE Confidence: 0.88763076

2a022996-c9a7-4750-8154-672434190786
00:34:31.467 --> 00:34:33.202
a correct interpretation of the.

NOTE Confidence: 0.8227007

958ef886-33ec-497b-9736-214a66bd187d
00:34:33.760 --> 00:34:40.260
Value. That's why we put
this range as a kind of

NOTE Confidence: 0.8227007

d39a5b6a-884b-4244-bead-191c5bf7b21e
00:34:40.260 --> 00:34:43.816
damping. The change for
the continuous entity.

NOTE Confidence: 0.829579

17f361a5-e422-48b6-8613-31b4ad9de5d1
00:34:45.750 --> 00:34:51.420
So again, high changes or one
load changes are zero.

NOTE Confidence: 0.8603285

ef8309b1-b992-4da9-9012-deccc867d52c
00:34:53.260 --> 00:34:58.900
And here is the actual physical
design, so we can attach. I

NOTE Confidence: 0.8603285

52988271-0de5-4a00-a441-418ce7302648
00:34:58.900 --> 00:35:03.600
mean, one point of circuit to
Earth, meaning that zero

NOTE Confidence: 0.8603285

aa7e2461-7f34-40b3-b0ef-ec676072e008
00:35:03.600 --> 00:35:08.300
voltage, another point to a
power source. For instance a

NOTE Confidence: 0.8646256

288cb3e0-75c3-4f41-9985-cb395bdc9f6a
00:35:08.300 --> 00:35:13.753
battery. And then I register and
we introduce a gate.

NOTE Confidence: 0.8510289

89282231-8d43-4854-b301-e85014ed2f8d
00:35:14.330 --> 00:35:18.686
If the gate is closed, we
know that I mean from

NOTE Confidence: 0.8510289

4b32c31b-0eb2-4449-8d7b-9675172e0a0d
00:35:18.686 --> 00:35:22.250
physic. You know that the
current wants to make.

NOTE Confidence: 0.81183374

9656fe26-9150-424a-81a5-f4582bf342c8
00:35:24.070 --> 00:35:27.374
Points of a circuit to
minimum voltage. Stable

NOTE Confidence: 0.81183374

3a20e14c-4e3b-4bc1-8da1-fcd05cbc57cd
00:35:27.374 --> 00:35:30.678
minimum voltage. So the
current actually move this

NOTE Confidence: 0.81183374

80a8f68f-4c08-404d-a287-c269a2f209fe
00:35:30.678 --> 00:35:31.091
way.

NOTE Confidence: 0.8826849

7e34e4ea-2fe5-4237-b1aa-01eb6436b111
00:35:33.350 --> 00:35:35.744
In electricity we call
this short circuit.

NOTE Confidence: 0.8417146

566a1262-f4e0-4abe-be77-0686692724bb
00:35:37.170 --> 00:35:41.958
However, if the gate is open,
the current moves from the high

NOTE Confidence: 0.8417146

c9ac88e1-07f8-4676-9e0e-639c3cd1ba03
00:35:41.958 --> 00:35:43.554
voltage to lower voltage.

NOTE Confidence: 0.88418347

5c7c3e44-18fb-40e9-8ed0-bcfb458de176
00:35:46.880 --> 00:35:50.590
So whenever the gate is
closed, we can interpret we

NOTE Confidence: 0.88418347

b7bcef7f-72ba-437b-b474-65167ca0319b
00:35:50.590 --> 00:35:54.671
are dealing with the zero
whenever the gate is open, we

NOTE Confidence: 0.88418347

f230b7fe-ce57-4d4c-9d8f-f1d4b16f4ce7
00:35:54.671 --> 00:35:56.155
are dealing with one.

NOTE Confidence: 0.8039693

5af9ca17-16b8-4444-88f7-015e1732e1aa
00:35:57.670 --> 00:36:01.342
And this way we can
discretize a continuous

NOTE Confidence: 0.8039693

790c6267-2d1f-49b3-bfe8-0671f9509f05
00:36:01.342 --> 00:36:03.637
entity and represent binary
numbers.

NOTE Confidence: 0.8329755

65d1ec7b-3805-498e-90e6-d19ed6975d6f
00:36:05.220 --> 00:36:07.992
We can switch our
interpretation. This way we can

NOTE Confidence: 0.8329755

669579bd-28a9-4ccf-af03-2cf5240ae811
00:36:07.992 --> 00:36:12.304
say that as long as we have low
change, we assign digit one high

NOTE Confidence: 0.8329755

6d6af32c-b14f-42ac-8cd1-7679808213bd
00:36:12.304 --> 00:36:15.384
you assigned, it is zero. This
is called negative logic.

NOTE Confidence: 0.6933749

f71169c5-93dd-4ecb-b819-97a9f14db996
00:36:17.550 --> 00:36:23.710
Ann is still have this, uh,
on deterministic and determined

NOTE Confidence: 0.6933749

ba2a0a51-4118-4b27-8517-03c92dec3287
00:36:23.710 --> 00:36:26.174
area of a change.

NOTE Confidence: 0.91262877

30532f24-c0c5-4e33-b7dc-33f250e42eb7
00:36:27.660 --> 00:36:32.079
And this is the negative logic
interpretation of voltage.

NOTE Confidence: 0.7191716

8f3eac9d-7f7f-4fcf-a6e2-c66ec2b9dffa
00:36:35.080 --> 00:36:41.188
And this is the negative. I
mean a logic in the same

NOTE Confidence: 0.7191716

3b694bee-fb34-4737-9e07-122191052b23
00:36:41.188 --> 00:36:43.224
circuit but different
interpretation.

NOTE Confidence: 0.8584413

c6b03e4c-e255-49b3-a777-b154a23eda9a
00:36:45.790 --> 00:36:51.445
So, but what is the default? The
default is that in this course,

NOTE Confidence: 0.8584413

9be7f5bd-6540-41d4-a794-d3cd96b7b957
00:36:51.445 --> 00:36:56.230
and in any computer discipline,
whenever we say we have a

NOTE Confidence: 0.8584413

9b2399c5-d060-4cd1-916a-455bccf22fc6
00:36:56.230 --> 00:37:00.145
computer, by default the
computer is a binary computer

NOTE Confidence: 0.8584413

ccb58e86-c052-4396-9f8c-44683dd4278d
00:37:00.145 --> 00:37:06.235
and we are in a positive logic.
So the high voltage is 1, low

NOTE Confidence: 0.8584413

29d776e4-822e-4914-b210-93bd920fbaa2
00:37:06.235 --> 00:37:11.890
voltage is zero and are in this
course we want to build the

NOTE Confidence: 0.8584413

f330f9f6-5862-420e-81fb-d96aa4076a52
00:37:11.890 --> 00:37:16.675
binary computer in a positive
logic and our approach is bottom

NOTE Confidence: 0.8117819

750b9298-6b93-4e12-8c75-3151417f7325
00:37:16.675 --> 00:37:21.910
up. That we want to start with
this smallest part of the binary

NOTE Confidence: 0.8117819

413b67e4-189a-42da-873f-f5accfe97ab4
00:37:21.910 --> 00:37:25.410
computer and then put them
together to build larger units.

NOTE Confidence: 0.8590171

c7a36808-b06d-449c-bf9d-6734fc2a8ef9
00:37:26.350 --> 00:37:31.714
In building anything, there
are two main levels, design

NOTE Confidence: 0.8590171

0ab461d8-dd1f-41a0-b3d8-a0a0a933b9ed
00:37:31.714 --> 00:37:32.906
and build.

NOTE Confidence: 0.8507018

06fc86d5-3572-4b91-b01d-0b30b23ed6bb
00:37:34.060 --> 00:37:36.825
So we have design we have built.

NOTE Confidence: 0.8494858

3a4a86fd-bcd8-459b-98e4-5fcb07b9faaf
00:37:37.620 --> 00:37:42.924
So what is the design in the
design step before? I mean

NOTE Confidence: 0.8494858

d89f211d-b29d-40b0-96ce-bb1927bc99a4
00:37:42.924 --> 00:37:47.344
putting money, buying some
materials and etc and build the

NOTE Confidence: 0.8494858

5b8eb64f-242e-4fd4-9c2d-5710d7a8d931
00:37:47.344 --> 00:37:52.206
actual object. We usually make a
sketch and we usually think

NOTE Confidence: 0.8494858

85552473-4cc1-4ef0-b133-5fe8670a4767
00:37:52.206 --> 00:37:56.184
ahead whether this design
actually this thing gonna work.

NOTE Confidence: 0.8494858

d4023c3d-4313-4554-bae5-10be0130e69a
00:37:56.184 --> 00:38:02.814
What are the parts of the object
we want to build and we kind of

NOTE Confidence: 0.8494858

709429a3-1a96-4fad-9fa7-b4e280fce294
00:38:02.814 --> 00:38:07.676
proof read the design, the
object we want to build first.

NOTE Confidence: 0.7362474

974165fb-b8d7-43d1-8205-34eb6230a9a1
00:38:08.480 --> 00:38:12.350
So we usually deal with the
designer step first.

NOTE Confidence: 0.8510841

038ef274-b486-41ff-9531-bd89f5950f78
00:38:12.950 --> 00:38:16.261
In a designer step, we just
wanted to find a simpler.

NOTE Confidence: 0.85947937

7b691460-bd9e-4184-850b-6916f6a2f238
00:38:16.870 --> 00:38:22.590
And a cost effective object. And
then after that we give it to

NOTE Confidence: 0.85947937

e914c74b-2eac-4200-9416-788db6bb4f53
00:38:22.590 --> 00:38:26.990
some engineers to the object.
Plus actually the same happened

NOTE Confidence: 0.85947937

f768126b-77df-41fe-8fe7-4298c74e1008
00:38:26.990 --> 00:38:31.830
with the computers. So now we
want to build binary computers.

NOTE Confidence: 0.85947937

68b21701-8489-4287-a7e8-a547bc31788e
00:38:31.830 --> 00:38:36.670
We first designed the binary
computers in the design step in

NOTE Confidence: 0.80528986

41bd4f68-b45d-4bc3-986b-4096817e5511
00:38:36.670 --> 00:38:43.544
this course. We want to sketch
a computer 1st and just to prove

NOTE Confidence: 0.80528986

37dcef0a-4ff3-41de-9418-441d1e38bb90
00:38:43.544 --> 00:38:48.648
that this computer that we want
to build is working correctly.

NOTE Confidence: 0.87302685

b8a794ef-6808-4ccb-b1e6-c1d2993c25ca
00:38:49.290 --> 00:38:52.737
And also it is cost
effective, meaning that we

NOTE Confidence: 0.87302685

494af1fe-7d64-4461-9a16-5ce6459a4ad7
00:38:52.737 --> 00:38:56.184
put minimum amount of money
to build that up.

NOTE Confidence: 0.8164359

09bc6793-ec66-4155-952c-31035009e4e8
00:38:57.350 --> 00:39:01.590
So in order to do an
efficient design we use

NOTE Confidence: 0.8164359

92641aa2-f823-4ea4-a8d2-8fb56d18518a
00:39:01.590 --> 00:39:04.134
medical methods or
mathematical proof from

NOTE Confidence: 0.8164359

7a414ca8-0b4d-407d-9311-e472796f3cc4
00:39:04.134 --> 00:39:04.982
Boolean algebra.

NOTE Confidence: 0.8316732

efbf972b-6854-47e0-b98b-c7c18fad9d7b
00:39:06.400 --> 00:39:10.698
That was the thing that we do in
this course, and also the next

NOTE Confidence: 0.8316732

d2532d70-0387-4fcd-86ef-03ff5793047b
00:39:10.698 --> 00:39:11.619
course computer architecture

NOTE Confidence: 0.8777502

f3d9d118-1bf7-4cb6-a266-e95eef97ec0c
00:39:11.619 --> 00:39:17.564
too. And when we come up with
the I mean efficient design, we

NOTE Confidence: 0.8777502

1f6a2a16-7d29-4d69-b415-be50f5cf978f
00:39:17.564 --> 00:39:21.182
give it to engineers, electrical
engineers and computer engineers

NOTE Confidence: 0.8777502

c4c530bc-1b2f-4e27-840c-14e02cd13336
00:39:21.182 --> 00:39:25.604
to build the computer for us. So
that's the difference between

NOTE Confidence: 0.8777502

a39acb49-fee4-4811-b109-2836bd0107f7
00:39:25.604 --> 00:39:29.222
the computer science and this
course, and the computer

NOTE Confidence: 0.8777502

7adf1acc-511f-42d7-9b64-a6c2c580fbba
00:39:29.222 --> 00:39:30.428
engineers or electrical

NOTE Confidence: 0.87261486

a071eb53-4491-447e-9eba-dc8cd3e23c48
00:39:30.428 --> 00:39:35.302
engineers. They start to
build the actual circuit or

NOTE Confidence: 0.87261486

8677783b-76c7-4ac5-ba0a-e55e46f42316
00:39:35.302 --> 00:39:37.178
the actual physical object.

NOTE Confidence: 0.84511405

a64c45b7-06d2-4c4d-af47-00fc2d60496d
00:39:39.980 --> 00:39:44.946
So in this course, as we said,
we are not dealing with physical

NOTE Confidence: 0.84511405

add6b651-32a7-49cb-b8d3-e42539b73ea4
00:39:44.946 --> 00:39:48.384
things or we don't apply
insensibility actual circuit. We

NOTE Confidence: 0.84511405

9a55147d-3d2e-4263-91e4-1c914a4f20c4
00:39:48.384 --> 00:39:53.350
just use pen and paper to sketch
the design and we just proved

NOTE Confidence: 0.84511405

139b1869-1145-462b-b295-2431b0313fa4
00:39:53.350 --> 00:39:57.934
that this design works perfectly
and then we we give it to

NOTE Confidence: 0.84511405

fc6cf295-e9f0-41e5-bbc3-8313b159d47b
00:39:57.934 --> 00:40:00.226
engineers to build that for us.

NOTE Confidence: 0.9111459

f33b991a-6389-468c-9733-e559afde0753
00:40:02.090 --> 00:40:04.590
So any questions so far?

NOTE Confidence: 0.9162155

af565ad1-1a68-4592-b5f7-19e250008479
00:40:17.760 --> 00:40:18.880
No questions.

NOTE Confidence: 0.851064

a8d00ae0-afcb-4483-9ef0-71d8e4b02375
00:40:24.930 --> 00:40:29.526
Uh, just make sure that everyone
has attention to the class. So

NOTE Confidence: 0.851064

49f1430a-33e2-4b28-b633-d65d4ff0a0ca
00:40:29.526 --> 00:40:33.739
again like before, so send me
some feedback just by clicking

NOTE Confidence: 0.851064

52b27469-2014-4301-a888-9969c9cdf8e1
00:40:33.739 --> 00:40:36.420
on your icon and then send me.

NOTE Confidence: 0.58692884

aebf14d1-d85f-4bb3-9a61-105606e1286b
00:40:38.320 --> 00:40:41.329
A happy or?

NOTE Confidence: 0.7367026

10d2fd27-96f5-4676-a2e7-c30085217fb0
00:40:43.570 --> 00:40:45.230
Oh, seems everyone is.

NOTE Confidence: 0.8678255

3278403e-66d0-4908-95ca-ebc71a5a9c4f
00:40:45.990 --> 00:40:50.958
The attention, but we have 50
three students in the class so.

NOTE Confidence: 0.87340355

2e65766e-e112-463e-bb1e-c7ebd3da9be9
00:40:54.490 --> 00:40:56.730
Can you actually just put
it, period.

NOTE Confidence: 0.10668701

58aa9a57-030d-4a77-bdff-de00230bba54
00:40:58.140 --> 00:40:59.070
Phillip

NOTE Confidence: 0.32059613

16a166c7-392a-40fe-a043-4b5242fb086d
00:41:01.320 --> 00:41:01.840
ha.

NOTE Confidence: 0.69903755

3518ee1d-c569-4096-8a01-e04d8a75303c
00:41:06.160 --> 00:41:08.180
 Awesome, Ahmad feels like. 

NOTE Confidence: 0.9045485

184c8b71-e1a3-43c8-89f9-5c615fbb9beb
00:41:09.060 --> 00:41:10.140
Yes.

NOTE Confidence: 0.72294337

4744f2df-0de7-4b75-902e-5671992ff4be
00:41:11.970 --> 00:41:16.490
I mean, it's starting building
their robots, so let's continue.

NOTE Confidence: 0.72294337

eb2eb0a1-fe5e-4eab-98d9-21640e5438e9
00:41:16.490 --> 00:41:19.202
So uh, since everyone has the

NOTE Confidence: 0.89098614

004d2fca-db92-4445-85e5-c70bcd3d8bea
00:41:19.202 --> 00:41:24.840
focus. So what is the smallest
unit of a binary computer?

NOTE Confidence: 0.729384

c697a18c-616c-405f-b6fa-bb340d724fc9
00:41:25.720 --> 00:41:29.002
We call these smallest unit I

NOTE Confidence: 0.7934669

24fcb557-5f2f-4ee5-8016-ffec7af1875e
00:41:29.002 --> 00:41:35.064
gates. Or because we borrowed
the terminology from Boolean

NOTE Confidence: 0.7934669

4978c206-9176-4eec-929f-306d7f92100e
00:41:35.064 --> 00:41:41.807
algebra from introduced by the
George Boole in 1850s, so we

NOTE Confidence: 0.7934669

b830e78b-e049-4773-ad7c-6bae8e479ee0
00:41:41.807 --> 00:41:46.711
called. Sometimes we call it
logic gates, but.

NOTE Confidence: 0.7720846

36a882d7-44ad-4820-a5f1-51c9ff6247e7
00:41:47.650 --> 00:41:52.182
Whatever you can change the
gates to units. Or could you

NOTE Confidence: 0.7720846

b58dbacf-f2c2-4c64-b60b-fc1559b82807
00:41:52.182 --> 00:41:57.126
could say that logic units so
their names for the same thing.

NOTE Confidence: 0.7720846

8fe9071a-7317-424d-bfaa-a3046997b830
00:41:57.126 --> 00:42:01.246
So logic gates, logic units,
Boolean gates, Boolean units, so

NOTE Confidence: 0.7720846

8a3cbde0-b92a-4464-a2a6-e270d777e60e
00:42:01.246 --> 00:42:03.306
all are the same thing.

NOTE Confidence: 0.8204289

260bf6e8-4541-41f5-a146-8e70728bd500
00:42:04.340 --> 00:42:07.930
So Boolean gates, because they
are working or Boolean because

NOTE Confidence: 0.8204289

a76d63c5-ca24-49c4-b6d0-dc215f353abd
00:42:07.930 --> 00:42:11.520
they are working with zero and
ones. So binary system.

NOTE Confidence: 0.81855845

354dcbe3-050e-423b-b3e1-76df2186a4b5
00:42:12.340 --> 00:42:15.240
Also or true false?

NOTE Confidence: 0.81731284

eb67f2a8-c562-4094-aae7-45aec330fc4d
00:42:16.140 --> 00:42:19.542
Also, binary gates because
they are dealing with binary

NOTE Confidence: 0.81731284

28d57716-e71d-4d10-9b2e-96ead921cf12
00:42:19.542 --> 00:42:20.676
systems around 1:00.

NOTE Confidence: 0.8071466

9876ba69-d0a5-401e-8b81-c92935eaafc8
00:42:21.810 --> 00:42:26.386
The logic and Boolean comes from
the Boolean algebra. The gates

NOTE Confidence: 0.8071466

40edecac-5ad3-4448-9289-b20cd458aa90
00:42:26.386 --> 00:42:30.130
come from the Edward Shannon,
who proposed the switching

NOTE Confidence: 0.8071466

ef977ff6-2801-452d-8a3e-e0c6e3495c15
00:42:30.130 --> 00:42:31.794
algebra to build computer

NOTE Confidence: 0.8119208

95f87ea0-58b9-46cb-ab1f-c12fe611f206
00:42:31.794 --> 00:42:36.870
system. I'm finally comes from
the binary numbering system,

NOTE Confidence: 0.8119208

76f3c92f-d9be-4de8-ad7f-29bee91f86b4
00:42:36.870 --> 00:42:38.250
so these terminologies.

NOTE Confidence: 0.87869036

8ed6b970-f8e6-4470-a840-6bea4881243e
00:42:39.550 --> 00:42:43.926
So the first unit we
introduce is this.

NOTE Confidence: 0.85875374

43b93539-6bcd-4899-abe3-e55f9e8d9f7d
00:42:45.160 --> 00:42:50.332
So again, we are in the
design level, so we just put

NOTE Confidence: 0.85875374

36c308d9-41af-4794-89e0-8f81a5e9123f
00:42:50.332 --> 00:42:55.935
some picture for energy on
it. So if you ask me what is

NOTE Confidence: 0.85875374

c64b7808-92f8-450f-aefc-a30faa028d9c
00:42:55.935 --> 00:43:00.245
this object, I cannot show
you this object. This object

NOTE Confidence: 0.85875374

10e49fc0-f820-4e9d-b102-5d8b504f4025
00:43:00.245 --> 00:43:04.555
is actually if an electrical
circuit, but we leave those

NOTE Confidence: 0.85875374

88cee0d4-d115-4353-b9ad-f1fd23f2df28
00:43:04.555 --> 00:43:07.572
issues with the electrical
circuit voltage current

NOTE Confidence: 0.85875374

979e33cf-b691-4d42-a9d3-7db5a98f9002
00:43:07.572 --> 00:43:11.451
register. Answer 2 electrical
engineers at the design level

NOTE Confidence: 0.85875374

9c0ebde6-6ade-4024-bf06-1223422c5c03
00:43:11.451 --> 00:43:14.899
at computer science. We just
want to design.

NOTE Confidence: 0.8419842

3bcef643-ac98-458a-afa2-b6ef2192cc21
00:43:16.010 --> 00:43:19.502
Efficient computer, so we put
some picture for that.

NOTE Confidence: 0.8063344

705a9d2b-9759-42ca-8b5b-60c6741d512e
00:43:20.120 --> 00:43:25.712
So this is this is the first
unit the smallest unit we

NOTE Confidence: 0.8063344

552b38c7-d2a2-459c-8dfc-3f6ce4b10bc0
00:43:25.712 --> 00:43:28.042
introduce, and this is called.

NOTE Confidence: 0.8847734

8df49b5b-2b88-49a2-9104-e24e3c4ff31f
00:43:28.610 --> 00:43:29.380
Not.

NOTE Confidence: 0.8826718

6877dfad-0423-4bbf-ad6f-e4628c6780ab
00:43:30.940 --> 00:43:36.778
The way this unit works is this
given a value zero, it makes it

NOTE Confidence: 0.9155297

426c1741-9990-4bef-ba85-fbe4b579082e
00:43:36.778 --> 00:43:40.118
one. If you give it one, it

NOTE Confidence: 0.8598022

bf506f22-8967-4b3f-9ad1-84be455798b2
00:43:40.118 --> 00:43:44.874
gives you 0. Very simple,
although very simple. Introduce

NOTE Confidence: 0.8598022

eb3ce0f5-1eef-4ae7-ad17-9071d94466e4
00:43:44.874 --> 00:43:48.866
some new terminologies.
Basically any unit has some

NOTE Confidence: 0.8598022

b4b59aaf-f917-4c7f-8562-fe1e66735b2b
00:43:48.866 --> 00:43:51.860
inputs. Here we have only one

NOTE Confidence: 0.8653512

3f961957-eb81-4768-b6a6-5cfbb17c2e42
00:43:51.860 --> 00:43:57.210
input. Any unit have some output
here we have one output.

NOTE Confidence: 0.8231492

c48a8de2-66c8-4a3a-87bc-0dae531ca399
00:43:58.000 --> 00:44:02.080
Most of the units or gates we
introduce has one output, but

NOTE Confidence: 0.8231492

89c6cfd6-da4d-4812-adfa-9873fcd09ce5
00:44:02.080 --> 00:44:04.120
they may have more than one

NOTE Confidence: 0.8297566

a7d65d40-f5b7-48c5-91cc-cecac647fc33
00:44:04.120 --> 00:44:09.990
inputs. Also, whenever we want
to represent the inputs and also

NOTE Confidence: 0.8297566

6e243deb-0a82-4951-bc85-ea180e1664b6
00:44:09.990 --> 00:44:12.756
the output, we put some alphabet

NOTE Confidence: 0.85021484

89145fba-9000-48f1-a889-e5d9e03d2a18
00:44:12.756 --> 00:44:17.423
or variables. Variables means
that they can have different

NOTE Confidence: 0.85021484

e549a365-99cf-4980-87db-eec76c71d149
00:44:17.423 --> 00:44:22.142
values. So for the inputs, for
instance, here we have one

NOTE Confidence: 0.85021484

476f63f6-c6a8-4c5c-a5f2-91de5cd5c188
00:44:22.142 --> 00:44:27.719
input. So we picked the name X,
could pick any other names ADI

NOTE Confidence: 0.85021484

b6108938-d72b-41f1-a087-4b5d14e147a4
00:44:27.719 --> 00:44:33.296
don't know. I mean WZ whatever
after that you like you can use

NOTE Confidence: 0.85021484

f49d5b0d-062f-4e91-9d13-cf306fc67265
00:44:33.296 --> 00:44:35.441
it as a variable name.

NOTE Confidence: 0.88496107

26078445-7fe1-4127-beab-21ae340400a3
00:44:36.130 --> 00:44:40.695
And because this variable name
can have only two values, binary

NOTE Confidence: 0.88496107

47a67428-a0db-4822-96eb-168fac61950d
00:44:40.695 --> 00:44:43.185
value zero and one, we call

NOTE Confidence: 0.8346733

34b89859-c28e-46e0-8c99-d94ea0420b66
00:44:43.185 --> 00:44:48.010
these. Boolean variables or
binary variables.

NOTE Confidence: 0.8651192

c702819a-695d-4e04-a148-f47a2426edf4
00:44:49.750 --> 00:44:54.200
Whatever you do on binary
variables on binary digits at

NOTE Confidence: 0.8651192

a5257439-75a4-40b4-ae31-cd8298abf9f9
00:44:54.200 --> 00:44:59.540
the end of the day, you're gonna
have another binary value or

NOTE Confidence: 0.8651192

6a67df39-0f3d-4a53-8679-64b9676c1153
00:44:59.540 --> 00:45:04.880
another binary or Boolean value.
So as a result, the output is

NOTE Confidence: 0.8651192

245c8375-9bd7-45cf-a89a-296119f0ffa7
00:45:04.880 --> 00:45:06.660
also a very variable.

NOTE Confidence: 0.8392297

fe87dec9-4d24-45c6-a56a-48424cdb8438
00:45:07.270 --> 00:45:12.106
We usually choose the name F as
a short form of function,

NOTE Confidence: 0.8392297

0ed85938-7fd1-4577-8263-a50c343d3184
00:45:12.106 --> 00:45:17.345
meaning that we apply a function
on input and we output in you

NOTE Confidence: 0.857463

2aaf692a-b201-42e8-b603-5ede5e83e3ef
00:45:17.345 --> 00:45:22.240
result. That's why we usually
use the and the alphabet F&F

NOTE Confidence: 0.857463

7343b2d6-bb17-42c4-a371-0d637006a142
00:45:22.240 --> 00:45:26.644
is I mean very similar to the
input variable. This is a

NOTE Confidence: 0.857463

478cc253-e44c-4555-ae75-b5d04ca1f0fe
00:45:26.644 --> 00:45:29.213
binary variable, but it
represents the result.

NOTE Confidence: 0.78803605

6de790b0-9e2a-4c55-a2f7-40692d998640
00:45:30.990 --> 00:45:35.620
And for this unit, this second
is called inversion table,

NOTE Confidence: 0.78803605

8a739ca4-a264-4ff9-86c6-b17cf014be60
00:45:35.620 --> 00:45:40.713
meaning this is another name for
not inverted. So basically we

NOTE Confidence: 0.51613563

e0467e9c-e50b-4712-bb1f-6e7f151dda33
00:45:40.713 --> 00:45:43.240
invert. Uh, input.

NOTE Confidence: 0.7842375

e50757d8-0279-431f-a297-fb58496a6866
00:45:43.830 --> 00:45:48.341
If it is zero invited to one. If
it is imbedded to 0.

NOTE Confidence: 0.8736108

eff6bc9b-ef00-49bb-93ac-40d84ffda88e
00:45:49.930 --> 00:45:54.802
So these are another thing. So F
is called Boolean expression or

NOTE Confidence: 0.8341311

c54dd171-ea4f-4c73-8bbb-d549a247c3b3
00:45:54.802 --> 00:45:59.454
function. And if you want to say
it in sentence, we could say

NOTE Confidence: 0.8341311

35bb0982-cb06-4afd-ac0d-6791a37adc05
00:45:59.454 --> 00:46:01.498
that the inverse of X gives F.

NOTE Confidence: 0.88105583

52b3778b-d509-4071-8100-5d7f04ba2ae4
00:46:02.760 --> 00:46:06.450
And these are different ways to
show a base unit.

NOTE Confidence: 0.69151187

ab81185c-91cf-46e1-b571-fd790636a2bc
00:46:07.050 --> 00:46:11.010
Not X inverter XX

NOTE Confidence: 0.8285788

90ea68f8-c884-4ada-a915-0839346a343a
00:46:11.010 --> 00:46:14.728
 prime X bar There's a bar over 

NOTE Confidence: 0.9019946

6b3dfb67-522d-483b-99bc-88713a5ddcde
00:46:14.728 --> 00:46:17.468
here. So all are the same thing.

NOTE Confidence: 0.81985396

a62d9e3a-e3d9-41b1-998d-d96f458defc4
00:46:19.130 --> 00:46:22.642
Some come from math, some
come from electrical

NOTE Confidence: 0.81985396

d5874a2c-e0f2-48b4-988f-22d9023280de
00:46:22.642 --> 00:46:26.593
engineers, so that's why we
have different annotation to

NOTE Confidence: 0.81985396

8e0eefd3-96cd-413d-8053-bb4f5d3dae09
00:46:26.593 --> 00:46:29.227
show. I mean just same thing.

NOTE Confidence: 0.8831432

8ea7e130-de49-4dc7-bc0c-67b46e667494
00:46:32.110 --> 00:46:38.006
So as an immediate application
of the not gate is this.

NOTE Confidence: 0.8850494

ec1933aa-ae6b-4eca-ab59-3844953ae5d7
00:46:38.670 --> 00:46:43.506
If we are asked to build a
system that gives us the ones

NOTE Confidence: 0.8850494

2b74a78c-4263-4109-82f9-697b6d3812f5
00:46:43.506 --> 00:46:47.226
complement of the binary number,
we could simply create these

NOTE Confidence: 0.7409144

7f14c8d2-061e-4044-a1c2-f0b5cc4a1f24
00:46:47.226 --> 00:46:52.980
wires. And then attach to
not gates at the end of

NOTE Confidence: 0.7409144

8c785050-fecb-41e5-81f8-79b8066fae9d
00:46:52.980 --> 00:46:57.057
these wires. So X comes
after skate becomes Expo.

NOTE Confidence: 0.75459486

c6450565-7929-4ef6-ab6e-35a1b3880357
00:46:58.100 --> 00:47:03.768
Why cops and then it becomes
viable? Or why from an etc? So

NOTE Confidence: 0.75459486

9171c8a6-5d48-43d4-8510-4063eaa06fcd
00:47:03.768 --> 00:47:06.820
basically you're applying nuts
on each wire.

NOTE Confidence: 0.891395

8498c236-d889-47dc-b51b-54635a6ffca5
00:47:07.560 --> 00:47:12.900
So the final result is
F1F2F3F four is the one's

NOTE Confidence: 0.891395

d8c927b8-09b3-4e7c-9c81-b0de267f367a
00:47:12.900 --> 00:47:15.036
complement of the input.

NOTE Confidence: 0.80773777

b0a5aeba-ce44-47e6-8fe6-2ff8156aeaf2
00:47:16.090 --> 00:47:21.843
So here you have four binary
variables. Here you have four

NOTE Confidence: 0.80773777

86a9cd4e-f0a8-463d-8b1b-e4b0272af3b9
00:47:21.843 --> 00:47:23.935
Boolean expressions or Boolean

NOTE Confidence: 0.81787544

912ef4cb-7830-4a66-9273-9c9e3a36b6f3
00:47:23.935 --> 00:47:28.316
functions. The input is the
binary number. The output is

NOTE Confidence: 0.81787544

912ce29b-1d00-417a-9317-8da6465fa6e3
00:47:28.316 --> 00:47:30.380
the first complement of
binary number.

NOTE Confidence: 0.7842538

2b409185-b409-4bc5-9afc-ed839e22acb8
00:47:32.280 --> 00:47:35.440
So binary variable, boolean
variable. These are the

NOTE Confidence: 0.7842538

65afaf97-2ab7-4bc1-93df-3bc31ff58752
00:47:35.440 --> 00:47:38.995
operating choose Boolean
function and these are the way

NOTE Confidence: 0.7842538

08c974b5-727d-46bc-88c7-750912f4c7d8
00:47:38.995 --> 00:47:44.130
we show a unit FX is equal to
export, for instance for not.

NOTE Confidence: 0.79361594

de66c72f-3709-4b53-8432-d78b6ed38782
00:47:46.280 --> 00:47:53.157
Uh, the second unit is called
and so we already know what is

NOTE Confidence: 0.79361594

81a3de2f-a3c4-442d-b89b-a1f71142381d
00:47:53.157 --> 00:47:54.744
aunt in math.

NOTE Confidence: 0.9155014

6aaf1668-c4e3-4515-890d-5a25857079a2
00:47:56.050 --> 00:47:57.979
But in the.

NOTE Confidence: 0.8543976

56bedd4e-8e15-4cf5-b223-358d125e9468
00:47:59.940 --> 00:48:05.184
Computer systems in the design
level we show and like this, but

NOTE Confidence: 0.8543976

3db327b6-8cc0-42ba-9b04-539c0405488a
00:48:05.184 --> 00:48:09.991
what is physical sense of the
end? Again, we don't care.

NOTE Confidence: 0.8543976

12e6fbee-5a90-4a4f-8473-71efbc0d259d
00:48:09.991 --> 00:48:15.235
That's for electrical engineers.
As long as we care at the end.

NOTE Confidence: 0.77824354

f1ce3d1b-6d77-4445-9813-5d576d055823
00:48:15.910 --> 00:48:21.840
An Ant has two binary inputs
and one binary outputs.

NOTE Confidence: 0.9425294

d6c1159c-88c6-4b2d-812e-430a4ec33fdd
00:48:22.810 --> 00:48:25.050
So what is the functionality?

NOTE Confidence: 0.8610329

65290d90-1e97-4c04-bdbf-60e589aff992
00:48:25.600 --> 00:48:30.700
If you are given two binary
variables in the end and these

NOTE Confidence: 0.8610329

1c8ffc7a-7602-436d-8286-6d0800ce43c9
00:48:30.700 --> 00:48:34.525
are different combinations or
possibilities for the values of

NOTE Confidence: 0.8610329

b6d6be20-8b37-48ad-ace4-a23433430a1d
00:48:34.525 --> 00:48:40.475
X&Y, there is all gonna be this.
If both are zero, the output is

NOTE Confidence: 0.8610329

565849b0-7ea4-4d25-be29-be0c80f58e40
00:48:40.475 --> 00:48:46.000
0. If at least one of them is 0,
the output is 0.

NOTE Confidence: 0.8832599

ef64f9fa-ab6d-479d-ba19-eac000a744bb
00:48:46.580 --> 00:48:50.974
And this is important. The only
time that the end outputs one is

NOTE Confidence: 0.8832599

33376cec-13cf-48ff-8c2e-250a50862f00
00:48:50.974 --> 00:48:53.002
that all the inputs are one.

NOTE Confidence: 0.8319958

2f08a8e5-80c4-4965-a03c-2058dd2e3be2
00:48:54.220 --> 00:48:59.823
What we mean by 1, meaning that
all the inputs must have high

NOTE Confidence: 0.8319958

55686061-64bf-4a35-b9d9-34c207d8c283
00:48:59.823 --> 00:49:04.995
voltage. So we put high voltage
in the input and this device.

NOTE Confidence: 0.8319958

a46307d6-5fda-49bc-aa65-a999476b4ef2
00:49:04.995 --> 00:49:10.167
This unit is highly wanted if
one of the inputs actually drops

NOTE Confidence: 0.8319958

26555a69-4788-4702-aaeb-ef5d9f30819f
00:49:10.167 --> 00:49:15.339
to hello voltage, this device
drops the voltage for us in the

NOTE Confidence: 0.8917236

5a6c7b64-8ad4-43d5-847d-9b42c07c09ce
00:49:15.339 --> 00:49:20.433
output. And these are different
ways to show this unit X&Y. If

NOTE Confidence: 0.8917236

f7067a64-1767-4790-a94d-753e0aca4bdd
00:49:20.433 --> 00:49:22.551
you want to write about this.

NOTE Confidence: 0.8433429

2731eb8a-8a02-487b-8fa3-7921405973b5
00:49:23.390 --> 00:49:29.350
Or use this multiplication
operator Y dot X.

NOTE Confidence: 0.7948806

afe2f2fd-a666-4543-a60a-e51677b60551
00:49:30.080 --> 00:49:37.126
4 multiply y * X here. Multiply
because we are in the binary,

NOTE Confidence: 0.7948806

9a230f49-c70d-4035-8c08-6104dba95779
00:49:37.126 --> 00:49:39.836
multiply is exactly the at.

NOTE Confidence: 0.87403655

b62ac78a-cf3e-4883-a8ed-c38c0e16b3b1
00:49:40.940 --> 00:49:46.415
For instance, one by one is one
1 * 0 is zero and it's set.

NOTE Confidence: 0.8495662

0b1b120e-9456-4cac-b27b-9feaa1bd0617
00:49:47.140 --> 00:49:52.024
Also, you can simply remove any
symbol. We could simply say that

NOTE Confidence: 0.8495662

64968b65-8d6b-4c98-89d3-d63c75ad23ad
00:49:52.024 --> 00:49:57.722
why ax meaning at Y is and with
the same we do in the

NOTE Confidence: 0.8495662

a685f5b1-b1f1-4755-9511-aa818eef9853
00:49:57.722 --> 00:49:59.350
multiplication in base 10.

NOTE Confidence: 0.86195624

f1927961-1229-4f6f-8f6e-b3ffa3a36df3
00:50:02.830 --> 00:50:07.806
Another property of the and
operator is that.

NOTE Confidence: 0.82751846

c8ec58f6-07a9-42b1-b856-c8fc9fd517f6
00:50:08.510 --> 00:50:11.180
It doesn't matter the order of

NOTE Confidence: 0.8357919

400351c7-98f7-41af-b40b-eb5bc3877408
00:50:11.180 --> 00:50:15.660
the inputs. Because from the
Boolean algebra, this comes from

NOTE Confidence: 0.8357919

2cc609b2-d37b-4c29-92d7-1c84501b3064
00:50:15.660 --> 00:50:19.675
the math theory. That's why I
say that the Boolean algebra

NOTE Confidence: 0.8357919

12ad2471-55f3-4945-a3bb-ac88bb6c024a
00:50:19.675 --> 00:50:23.690
from magic helps us a lot to
build a computer system.

NOTE Confidence: 0.8302985

fcecd8cd-5437-4b6f-b56a-15ee14c1028d
00:50:24.440 --> 00:50:28.750
So this comes from the math
theory that multiplication is

NOTE Confidence: 0.8302985

a84a7a7a-1400-4995-8c05-9cd5ef95cca9
00:50:28.750 --> 00:50:32.629
commutative. On Boolean algebra,
the end is multiple commutative,

NOTE Confidence: 0.8302985

a26b4a7b-dda9-4b82-b65a-02e0adbcafb7
00:50:32.629 --> 00:50:37.370
meaning that if you switch the
inputs, there is no difference

NOTE Confidence: 0.8302985

ef4bd22b-45f0-487a-80f5-6dd476bca9de
00:50:37.370 --> 00:50:38.663
in the output.

NOTE Confidence: 0.70540977

1b4578dc-c04d-40af-8275-761ca5593f00
00:50:39.730 --> 00:50:45.220
So again, compare this with this
XY now YX.

NOTE Confidence: 0.89595324

5b188fe6-498b-4560-9fef-f8fae54c81c9
00:50:46.220 --> 00:50:48.450
Nothing changes in the output.

NOTE Confidence: 0.8696224

52d51a6e-ee14-44cf-be45-31f7726bf668
00:50:49.600 --> 00:50:51.588
This property is permitted.

NOTE Confidence: 0.7924811

27cca1fa-f35f-4446-915a-ef27eb138894
00:50:53.370 --> 00:50:56.754
Hey Louise, see that what
the math behind the

NOTE Confidence: 0.7924811

dd57cb56-ab48-4bea-8fee-c92384b36c8c
00:50:56.754 --> 00:50:57.506
commutative property.

NOTE Confidence: 0.84332377

c1771310-576d-4290-a9c2-42a8436d85cb
00:50:59.410 --> 00:51:04.493
Some interesting thing about the
Ant is this. If one of the input

NOTE Confidence: 0.84332377

6eebe3f5-fe02-49ed-88ea-81f82d4009fc
00:51:04.493 --> 00:51:08.794
drops too low it brings the
Alcatel or whatever the other

NOTE Confidence: 0.84332377

2119670d-6729-4455-aff3-2a248a000668
00:51:08.794 --> 00:51:10.358
inputs is doesn't matter.

NOTE Confidence: 0.8629304

b5eb8e78-c235-44c9-b43d-13b6fcf84a18
00:51:10.960 --> 00:51:16.446
So one interpretation is this.
As long as we have at least 1

NOTE Confidence: 0.8629304

d1be7b6d-9ad0-40e8-ab2d-511952e12266
00:51:16.446 --> 00:51:18.978
zero in the input, the end

NOTE Confidence: 0.90780073

c0e63cc5-0dd2-42ac-ba67-df3648c54c33
00:51:18.978 --> 00:51:23.058
output 0. So we don't
have to wait for the

NOTE Confidence: 0.90780073

705917b2-c7da-4f97-ae69-0bb929401843
00:51:23.058 --> 00:51:24.262
value of other inputs.

NOTE Confidence: 0.8231326

e9f0bc29-d63e-4911-99eb-5b08a325747b
00:51:25.440 --> 00:51:27.358
As long as we see zero, we

NOTE Confidence: 0.8833813

cbab6115-0f47-44d6-b1f7-0d4b56415df7
00:51:27.358 --> 00:51:29.836
output 0. It's a kind of
short set.

NOTE Confidence: 0.829181

7a354bc5-0d7c-4916-adc0-d251e8de01c9
00:51:33.160 --> 00:51:36.650
Again here, as long as
we see 0 doesn't matter

NOTE Confidence: 0.829181

4274d1c8-80cd-40ed-98ee-c1d3dba4bff3
00:51:36.650 --> 00:51:38.046
the other input output.

NOTE Confidence: 0.8088595

92741cf1-d112-42e0-86f9-7c32fe738573
00:51:39.450 --> 00:51:41.984
This is very helpful,
although simple, very

NOTE Confidence: 0.8088595

88641925-5902-49f7-8e21-36e1ad122579
00:51:41.984 --> 00:51:43.432
helpful you'll see later.

NOTE Confidence: 0.8854009

7bccb968-c006-47e6-82e1-b0693328c713
00:51:44.640 --> 00:51:48.380
Another thing is that as long as
the input is 1.

NOTE Confidence: 0.85535353

dc1c4fbc-682c-4422-ac2b-684c4acd14ed
00:51:49.000 --> 00:51:52.920
We cannot determine the
output. We have to wait for

NOTE Confidence: 0.85535353

0bc95dd0-63ef-4fa7-8d35-3267504c5574
00:51:52.920 --> 00:51:54.880
the value of other inputs.

NOTE Confidence: 0.7055322

4606d3ea-397f-43c8-8763-5141f4ae5287
00:51:55.990 --> 00:51:58.350
So ending with one.

NOTE Confidence: 0.8725032

6cdaedc5-d8e4-46d7-9181-cd9fa20c63d8
00:51:59.770 --> 00:52:04.810
We have to wait to see what is
the value of X if X becomes

NOTE Confidence: 0.8725032

f475dd5e-639b-4801-bfe2-f678300aabe8
00:52:04.810 --> 00:52:07.162
zero, at least 1 zero drops the

NOTE Confidence: 0.8697483

d9555405-b284-4729-82e5-0dc10e54e99b
00:52:07.162 --> 00:52:13.907
Apple. 20 What if it
is 1 then we have one, so one,

NOTE Confidence: 0.8697483

36eb5c2a-1589-47c4-9081-2a6a80fc71d9
00:52:13.907 --> 00:52:19.325
if you want we have to wait. We
cannot see what is the Apple.

NOTE Confidence: 0.9225841

e6b72c7a-07a0-4b88-a67c-c6c96a3eca40
00:52:20.750 --> 00:52:21.958
As you see here.

NOTE Confidence: 0.858855

cd4ef605-d7e8-4dad-8596-e816a3eaf3ce
00:52:25.920 --> 00:52:31.164
If you add the same value with
each other doesn't have any

NOTE Confidence: 0.858855

70103794-e1fb-4b8b-a447-66377cc93f2c
00:52:31.164 --> 00:52:33.786
 impact. X and X is equal to X. 

NOTE Confidence: 0.8376803

870bf64d-e960-4649-8212-6c12980f6efa
00:52:34.610 --> 00:52:38.835
 So if X and x the both inputs are the same, the output depends 

NOTE Confidence: 0.8376803

1d0afdf4-9358-442c-8832-b5ae97e0bda3
00:52:38.835 --> 00:52:40.460
on the value of X.

NOTE Confidence: 0.85666174

223abb46-f3a9-455b-a976-787c0a1bd523
00:52:41.120 --> 00:52:45.327
If both, if zero
and with 0011.

NOTE Confidence: 0.83875215

95f4818a-d52a-4e49-8d62-1d78b85ec1c6
00:52:48.730 --> 00:52:54.372
So another way to show this is
this. So 1X comes to both input

NOTE Confidence: 0.83875215

28b7239b-fe69-45f7-9bca-a91336e5e3c0
00:52:54.372 --> 00:52:57.193
off the end unit or and gate.

NOTE Confidence: 0.9331978

15327588-5b3f-42e0-9c5d-e8fceb42b138
00:52:59.040 --> 00:53:00.290
So these are the same.

NOTE Confidence: 0.8587298

63ae4608-4c65-4c58-a227-f5c2d1a60d99
00:53:02.710 --> 00:53:08.434
Another interesting thing about
the end is this. If you end a

NOTE Confidence: 0.8587298

f9760ad9-ea70-4e4d-a205-bf65b64079db
00:53:08.434 --> 00:53:12.727
binary variable with the not of
the binary variable.

NOTE Confidence: 0.7955517

ef0f4166-6bf0-4052-9c5d-74a32fe6e2b4
00:53:13.690 --> 00:53:15.216
Please this is all gonna be 0.

NOTE Confidence: 0.8506829

b0b957ca-6d94-49ca-9b71-cb8e78897e4d
00:53:16.360 --> 00:53:19.944
So X and Explorer exploit
is always 0.

NOTE Confidence: 0.8327775

19ab7fa1-72eb-4563-a517-a173987bc859
00:53:21.460 --> 00:53:26.220
Because at least you gonna have
1 zero in the input and as a

NOTE Confidence: 0.8327775

37d22326-1b20-40ff-a71e-69cfb146f33f
00:53:26.220 --> 00:53:28.260
result we have zero and Apple.

NOTE Confidence: 0.89938456

5a8167ab-caf2-47c1-80ec-1ac775190673
00:53:29.010 --> 00:53:36.303
So if I ask you, is
it able to produce 0?

NOTE Confidence: 0.81937444

24f78bbf-c23f-4d0d-b9f5-435212382fad
00:53:37.260 --> 00:53:42.177
Uh, the answer is yes,
regardless of the wire you bring

NOTE Confidence: 0.81937444

b4be1fe0-ce23-4ec8-a0b4-d73dd4d42421
00:53:42.177 --> 00:53:47.988
from anywhere in the system, you
have to simply make it not and

NOTE Confidence: 0.81937444

b9219507-993b-4907-93e6-2d8c2b82f356
00:53:47.988 --> 00:53:49.776
then add them together.

NOTE Confidence: 0.8930539

37d5144a-fd8f-4e0d-b79c-6149245e8db5
00:53:50.340 --> 00:53:55.422
So you have the value of 0, so
later whenever you want or you

NOTE Confidence: 0.8930539

8c79db45-1404-4517-8edd-8a53e951f552
00:53:55.422 --> 00:54:00.141
need to produce the value zero.
You can at any point of the

NOTE Confidence: 0.8930539

742152a9-fe4b-4bce-a0e9-99865cca2635
00:54:00.141 --> 00:54:01.593
system you can create.

NOTE Confidence: 0.7952352

e352c2b1-8cc9-42cf-b62c-332b65aac3c4
00:54:02.650 --> 00:54:06.810
Just by adding any wire with
enough of that way.

NOTE Confidence: 0.801348

1e3065e9-eb4a-4720-8f08-75a88f419c0f
00:54:10.070 --> 00:54:14.666
Another way to show that is
this. The wire comes and then

NOTE Confidence: 0.801348

127de2ec-9a88-44ea-9002-873b6c74dc81
00:54:14.666 --> 00:54:18.879
cut the wires inversion bubble.
The short form of the knot.

NOTE Confidence: 0.8223277

852f74f2-36d7-4181-bfc8-87660c7f50c7
00:54:19.660 --> 00:54:21.494
And then the Apple pie
with zero.

NOTE Confidence: 0.7964373

c83410d0-7d0d-4843-a022-5a708d89a05b
00:54:23.210 --> 00:54:26.675
This is another way to show that
X and with Expo.

NOTE Confidence: 0.8289222

c9bf4366-6102-4dd9-be8d-52c09923a571
00:54:29.220 --> 00:54:34.308
So my next topic is free input
answer. Before that, let's see

NOTE Confidence: 0.8289222

2bbc28bf-f3d7-475b-9453-f57fe43ee8d6
00:54:34.308 --> 00:54:36.428
if there is any question.

NOTE Confidence: 0.82398367

167fb148-716f-45e8-b9c7-9bb50cc29ffc
00:54:41.670 --> 00:54:47.291
So any questions so far
so we have not. And now

NOTE Confidence: 0.82398367

aafac271-3f83-4da8-83d2-0c3cb43142cb
00:54:47.291 --> 00:54:51.890
we want to build other
unit using these small.

NOTE Confidence: 0.19960679

3596a29e-cad5-47ad-a81d-5181260287f6
00:54:54.000 --> 00:54:56.360
Uh, units.

NOTE Confidence: 0.81548977

78393e68-a538-4a7d-8db5-09457a41be97
00:54:57.950 --> 00:55:00.947
Inversion bubble is the circle
and not the triangle.

NOTE Confidence: 0.1257734

38d186ce-c670-4fb9-bfd1-5f7451e85577
00:55:03.220 --> 00:55:04.030
Uh.

NOTE Confidence: 0.84503555

861de65a-2aea-4d00-92c9-1ffe08033b31
00:55:05.290 --> 00:55:10.366
Yes, yes, invasion bubble is the
circle. Yes, let me show you.

NOTE Confidence: 0.8149315

7175f2ec-7ac6-4ee0-a06c-71d3077578ab
00:55:12.120 --> 00:55:16.320
This is a shorter form of the
nuts, so sometimes yes, it's

NOTE Confidence: 0.8149315

020a5473-2948-4220-a67c-16296654435b
00:55:16.320 --> 00:55:18.070
just. This circle is called

NOTE Confidence: 0.8785991

7ff861f3-8258-4a4b-96fc-35088284fc63
00:55:18.070 --> 00:55:22.588
inversion bubble. So sometimes
you show not here. Sometimes you

NOTE Confidence: 0.8785991

96950f8b-1efc-4bad-908a-1503da5a72d6
00:55:22.588 --> 00:55:24.132
just Simply put this.

NOTE Confidence: 0.80717826

3b5fdd1e-59a9-4b9e-9d87-8ef3bdb9c543
00:55:25.280 --> 00:55:30.571
This is just a circle. It's
A kind of acronym or kind of

NOTE Confidence: 0.80717826

17e34ab5-7d4e-4e32-a403-63cbbd122e86
00:55:30.571 --> 00:55:33.420
shorter picture for the
whole picture, yes.

NOTE Confidence: 0.78717786

bb36993e-1b90-4208-af4f-1bba455ced83
00:55:35.570 --> 00:55:40.736
As an instance here, which we
make it shorter.

NOTE Confidence: 0.8103539

0dd3d181-0034-41b9-aad1-383a182b88f5
00:55:41.370 --> 00:55:42.459
So this effort.

NOTE Confidence: 0.83074147

000c7f43-6b2a-4077-bb1b-cb1fe91a655a
00:55:43.470 --> 00:55:47.782
So whenever you want to show an
not, we can Simply put a circle.

NOTE Confidence: 0.8506732

a7567166-4d5c-4ef3-a361-8b752c3e4475
00:55:49.800 --> 00:55:55.128
Remember that circle must be
empty, so later we'll see that I

NOTE Confidence: 0.8506732

72ce4e7d-fe31-453b-a6da-d120e754ae3d
00:55:55.128 --> 00:55:57.348
can show it now here.

NOTE Confidence: 0.14471117

71752be4-5552-4e4e-a0f6-7bbe9e70ccd7
00:55:58.710 --> 00:55:59.540
Uh.

NOTE Confidence: 0.93167925

a984a6a2-da19-4ae0-a668-a01182ad129d
00:56:01.220 --> 00:56:03.410
Let me come back here.

NOTE Confidence: 0.82722265

c6fb48c1-1c60-4670-ac01-efd9519e2db3
00:56:04.930 --> 00:56:08.967
You know he sometimes we have
some circles, but these circles

NOTE Confidence: 0.82722265

482ad8d2-45f3-456a-bc7e-27262ad828ea
00:56:08.967 --> 00:56:12.637
these are not empty circles. It
shows attachment. So basically

NOTE Confidence: 0.82722265

69110514-180b-4f65-9f81-c7b906b974cb
00:56:12.637 --> 00:56:16.674
this wire is and this where are
attached to each other.

NOTE Confidence: 0.8517785

55c1999c-9449-471d-9b7f-f46c0bbd9921
00:56:17.340 --> 00:56:21.212
But this circle is an empty
circle, meaning that it's an

NOTE Confidence: 0.8517785

211409a8-859e-4d6c-97ce-b713d4daf18a
00:56:21.212 --> 00:56:24.380
inversion problem. That's why
I called bubble. So be

NOTE Confidence: 0.8517785

da7ebdcd-a674-4e11-815c-8a126b972c5c
00:56:24.380 --> 00:56:25.436
careful about that.

NOTE Confidence: 0.8770191

f4c817cb-b292-45b3-aa97-35fb0424cc58
00:56:28.870 --> 00:56:30.070
Any other questions?

NOTE Confidence: 0.7476788

5298c55e-8e7b-4211-95d8-70dffaa4704e
00:56:32.930 --> 00:56:35.906
So we can continue with, uh.

NOTE Confidence: 0.67424244

3db6b306-c8a3-4391-ac4f-df316eb94189
00:56:37.220 --> 00:56:37.770
You

NOTE Confidence: 0.7040469

155ec104-9042-491e-8084-38cb1ea760ba
00:56:40.040 --> 00:56:41.750
larger unit so.

NOTE Confidence: 0.7230298

f16a206b-1813-4e72-a287-a3de725a6389
00:56:42.300 --> 00:56:47.085
How about a unit of Ant or with
except three inputs?

NOTE Confidence: 0.85716736

aed397fc-6285-48e2-90a8-d6387fb136cb
00:56:48.110 --> 00:56:55.058
So from the math we know
that we are able to add

NOTE Confidence: 0.85716736

3246a777-c7fd-44d0-a95b-e8c2eb986b6a
00:56:55.058 --> 00:56:57.374
3 binary variables X&YNZ.

NOTE Confidence: 0.90465885

e16f7ec3-87fb-4300-90c3-bde8f1f03089
00:56:58.000 --> 00:57:03.404
And here is the truth table for
that. So again, if you see at

NOTE Confidence: 0.90465885

21040500-8db1-40ce-a837-8c0fe105cb4f
00:57:03.404 --> 00:57:04.562
least 1 zero.

NOTE Confidence: 0.8375435

a8267b71-721c-467c-930b-538e89c0387a
00:57:07.030 --> 00:57:08.440
The output gonna be 0.

NOTE Confidence: 0.8474888

00da1e31-40cd-4e14-8618-ec2a967b617f
00:57:09.400 --> 00:57:13.720
However, if all the inputs are
one, the output gonna be 1.

NOTE Confidence: 0.84908086

16ed306e-308b-425b-990a-69aeb71a0940
00:57:14.320 --> 00:57:18.467
So be careful about the
behavior of the gates, so this

NOTE Confidence: 0.84908086

fb56fcaa-2924-4e73-aac3-fa3fc3837463
00:57:18.467 --> 00:57:23.745
is the behavior of the and as
long as you see at least 1

NOTE Confidence: 0.84908086

9a389fd9-587a-4a9d-94aa-b59e53c91cc8
00:57:23.745 --> 00:57:25.253
zero simply output deal.

NOTE Confidence: 0.88367015

08a415a6-726b-49c5-9035-7c83bce85ee2
00:57:26.290 --> 00:57:28.650
If you wanna act with
one, you have to check

NOTE Confidence: 0.88367015

8bd4c69b-2176-4882-a794-33ebe10b8acb
00:57:28.650 --> 00:57:29.830
all the inputs or one.

NOTE Confidence: 0.8862473

0c1895d7-d9be-4c45-85dc-b64478e25fa4
00:57:30.870 --> 00:57:34.986
But how we can build this in a
in a design perspective?

NOTE Confidence: 0.84133935

38c06dd7-19f1-497d-a762-3d99052aab4a
00:57:35.750 --> 00:57:41.532
So here's the way we build the
end with three input. So we have

NOTE Confidence: 0.84133935

668df530-3ed4-452a-9028-832dfae62aa4
00:57:41.532 --> 00:57:47.727
the end with two input. So we
first an X&Y and then we end the

NOTE Confidence: 0.84133935

e597dc2e-a23d-431d-baa2-be7732fbf8fb
00:57:47.727 --> 00:57:50.205
result with the next input Z.

NOTE Confidence: 0.76795423

a3631957-2687-4ae6-a427-277b996a0aca
00:57:51.350 --> 00:57:54.650
So X&Y then and with Z.

NOTE Confidence: 0.8747888

1079c802-8cee-41ff-9dd7-1cc7b4f1b0a2
00:57:55.480 --> 00:57:57.920
This is the way we build
out with free input.

NOTE Confidence: 0.9245977

45926a8b-a866-43c2-ae81-45748f0f1a89
00:57:59.560 --> 00:58:01.200
But the interesting thing.

NOTE Confidence: 0.6797136

fda66272-4d80-4240-b4fd-2ff86862c3c5
00:58:01.810 --> 00:58:08.790
Is a come from account
comes from math, which is

NOTE Confidence: 0.8582233

ec35a4ad-92a9-4770-b4cb-7d455cd63767
00:58:08.790 --> 00:58:13.120
associative property.
Associative property means that

NOTE Confidence: 0.8582233

f0da8b76-641c-432c-a1f7-9f394b7d5f5d
00:58:13.120 --> 00:58:19.500
it doesn't matter that at what
order you apply the operator.

NOTE Confidence: 0.8490123

aaae5a40-c1ae-41fd-9c22-320922af9776
00:58:20.360 --> 00:58:25.508
For instance, for the end, if
you apply X&Y and then with Z.

NOTE Confidence: 0.8287266

0e9d7c99-b7aa-4193-a6d5-18f0b19d87a2
00:58:26.090 --> 00:58:30.986
Because X&Y can be switched, so
you have Y&X.

NOTE Confidence: 0.93566746

25dc1942-2f9f-49dd-8e5b-25939f3d6263
00:58:32.260 --> 00:58:34.330
And then you can apply.

NOTE Confidence: 0.72151166

552c0365-2c3f-482a-8224-d803d1c53b10
00:58:35.020 --> 00:58:38.541
And on the DNX first and then

NOTE Confidence: 0.8025126

5491dc23-b3c8-4eba-a806-2ad7e2250bfc
00:58:38.541 --> 00:58:45.226
on, why? So that the annex
and then and why? Why so then?

NOTE Confidence: 0.8025126

2b64e5b9-7592-4f04-9e66-d8a0b20316cf
00:58:45.226 --> 00:58:50.578
You can reach an etc. So the
order of applying an doesn't

NOTE Confidence: 0.8025126

48e02a1b-b1a5-4757-be85-0a97af42e4dc
00:58:50.578 --> 00:58:54.592
matter because of the
associative property of the Ant.

NOTE Confidence: 0.8025126

5717e508-8017-4b13-8ce7-49ef26aac136
00:58:54.592 --> 00:58:56.822
This comes from Boolean algebra.

NOTE Confidence: 0.86134124

d6c6c4e1-5bff-40ba-805c-6b03cc446714
00:58:58.300 --> 00:59:03.820
So as a result, if you change X
with Z or if you change Y with

NOTE Confidence: 0.86134124

4e35844b-81a4-4b05-a9a5-7fdc06de56d5
00:59:03.820 --> 00:59:04.855
Z, doesn't matter.

NOTE Confidence: 0.902928

e4514671-2454-45c9-98af-dc4a244fd2d6
00:59:06.690 --> 00:59:08.830
And here is the proof.

NOTE Confidence: 0.9227246

6556d730-8112-4513-ba4f-9c5ca90836b4
00:59:09.710 --> 00:59:12.320
So if you are given 0.

NOTE Confidence: 0.84926236

42f77f97-8468-422b-8e90-d0387cebe72d
00:59:13.350 --> 00:59:16.890
At any order you apply the and
the result is the same.

NOTE Confidence: 0.88857025

e9fb5911-0f32-41ec-92d6-0d319dd5b599
00:59:18.360 --> 00:59:21.990
If you have this variation of
this possibility or combination,

NOTE Confidence: 0.88857025

bd92820b-b19c-4b75-993d-0cec0dde6357
00:59:21.990 --> 00:59:23.805
the result is the same.

NOTE Confidence: 0.87732047

53a64138-a699-4299-8e46-bcd0bfb52df2
00:59:26.800 --> 00:59:29.905
You can see in other
combinations and the only

NOTE Confidence: 0.87732047

974677ad-2982-4b15-bd95-4006ecd91b81
00:59:29.905 --> 00:59:33.700
possible for output one is that
all the inputs are one.

NOTE Confidence: 0.85768265

fe4468f4-92d0-40ec-b5a1-baa60f4a07ea
00:59:34.440 --> 00:59:38.610
So this is the immediate proof
for associative property. So

NOTE Confidence: 0.85768265

b01d7973-9e8a-4322-a2a9-8d89f149b7d3
00:59:38.610 --> 00:59:43.614
whenever you are asked to prove
that whether the operator or a

NOTE Confidence: 0.85768265

a9bd6c6b-0c83-4edd-a2f4-df3a20396cf5
00:59:43.614 --> 00:59:48.201
gate is associative, use have to
simply create this table, which

NOTE Confidence: 0.85768265

ed727c7e-6855-41aa-b6b6-64d6520dbac8
00:59:48.201 --> 00:59:49.869
we called truth table.

NOTE Confidence: 0.91312176

3ab4a923-5407-4de3-b905-b37c64a6fc31
00:59:50.520 --> 00:59:54.760
And then you put different
possibilities of the values for

NOTE Confidence: 0.91312176

4ce83b90-9b64-4258-99f6-8f7b60c4db3c
00:59:54.760 --> 00:59:56.456
the input binary variables.

NOTE Confidence: 0.93663234

6824a9d5-bcbb-4a8b-bdf1-bf16c1946447
00:59:57.180 --> 00:59:58.928
And then for each.

NOTE Confidence: 0.7773028

073e485c-7b0a-4a72-a4f7-7656339cf29e
00:59:59.690 --> 01:00:04.236
Uh. Order of application. I mean
up in the.

NOTE Confidence: 0.85263026

5464573e-a650-45b9-aabc-f61500a2ce6a
01:00:05.000 --> 01:00:09.323
Function or operator. You create
one column and you compare them.

NOTE Confidence: 0.85263026

6269dba2-64ce-4709-9230-5fd71036a897
01:00:09.323 --> 01:00:14.039
If for the same inputs you
output the same value for all

NOTE Confidence: 0.85263026

b5551ebf-e896-4cb3-a9a9-476c847bea60
01:00:14.039 --> 01:00:17.183
possibilities means that these
two are the same.

NOTE Confidence: 0.80961

56b4a058-70bc-4854-922f-2ba1df6ddb67
01:00:20.930 --> 01:00:25.675
As a result, sometimes you have
a shorter form of and with three

NOTE Confidence: 0.80961

a636d57c-a18b-4704-a193-c40c3050e19a
01:00:25.675 --> 01:00:30.420
gates, so you have to Simply put
three input the app, but inside

NOTE Confidence: 0.80961

cbed0178-574a-4173-b87b-cfa5a03e4ea0
01:00:30.420 --> 01:00:32.610
this and you have two ads.

NOTE Confidence: 0.88483435

55bdb497-9369-4913-818e-00ba74b843fc
01:00:33.290 --> 01:00:37.550
So you have one every two
input and then the final end

NOTE Confidence: 0.88483435

9d61509a-9af4-41f1-b977-659c86cb5bd4
01:00:37.550 --> 01:00:38.615
with another app.

NOTE Confidence: 0.8767356

b651d51c-f7ba-4409-a3e1-b3a3bf7b5e64
01:00:39.750 --> 01:00:43.950
In physical perspective, in the
physical and the build level,

NOTE Confidence: 0.8767356

f7770503-626f-43b2-9ceb-cc72ff9df4fa
01:00:43.950 --> 01:00:48.570
the electrical engineers could
put one simple circuit to do for

NOTE Confidence: 0.8767356

3e295d18-cd46-47b3-a3f2-55f854bf2d24
01:00:48.570 --> 01:00:54.870
us. So if you go to the market
and buy an and gate with three

NOTE Confidence: 0.8767356

27760ee6-75f2-49b8-9e74-d2b56c85aa36
01:00:54.870 --> 01:00:59.910
input and you zoom inside, you
won't see two hands because they

NOTE Confidence: 0.8767356

a148ab91-821e-488a-b909-270f4200218b
01:00:59.910 --> 01:01:04.530
could build a device that can do
the three hands together.

NOTE Confidence: 0.9098049

0a32c54b-dd85-49f2-8a6d-8eb89429927a
01:01:05.130 --> 01:01:07.490
But from the design perspective.

NOTE Confidence: 0.8182736

edb8eb70-c140-4c7e-ac52-b09c60aae80a
01:01:08.970 --> 01:01:12.897
Long as we care inside a an
endless stream, there are

NOTE Confidence: 0.8182736

a7335cac-e14a-42bc-836c-a2d6a9bee70c
01:01:12.897 --> 01:01:17.181
two ants and the order of
the input to these two and

NOTE Confidence: 0.8182736

8e1cffb0-5726-442e-88db-12fda0340c65
01:01:17.181 --> 01:01:19.680
doesn't matter because of
the associative property.

NOTE Confidence: 0.79843867

68b811c2-a091-45b0-bf06-049133bbd3c7
01:01:22.280 --> 01:01:28.160
And and with four inputs. So
either we do end with four

NOTE Confidence: 0.79843867

a1d4b7aa-6938-49b3-9881-38ae8066e26f
01:01:28.160 --> 01:01:29.630
rebels this way.

NOTE Confidence: 0.80514914

20cdc0a5-5857-4123-b1ab-b9d4cd4fb3c3
01:01:30.590 --> 01:01:33.999
Kind of stacking,
the two input ends.

NOTE Confidence: 0.8395747

18464ea4-eafb-4908-a009-d5b59dfc372f
01:01:35.410 --> 01:01:39.271
X&Y and then end with C and then
end with W.

NOTE Confidence: 0.8607577

e01fb81a-f0e8-42d6-99d4-ef339d2e2451
01:01:39.920 --> 01:01:45.640
And this way X&YZ&W and then
and the result again.

NOTE Confidence: 0.90211487

a78e8712-00e6-4336-8378-9be15233e384
01:01:46.220 --> 01:01:51.470
So in order to show that F1 and
F2 is equal, we have to simply

NOTE Confidence: 0.90211487

39728582-c72a-43ef-8603-2480c7c5daec
01:01:51.470 --> 01:01:52.870
create the truth table.

NOTE Confidence: 0.9161524

5623907b-d410-4add-b9a4-91135978458e
01:01:53.560 --> 01:01:56.060
We put all the.

NOTE Confidence: 0.8769729

20399bbc-cf17-4d1c-a840-48d421f43220
01:01:57.570 --> 01:02:01.200
Possibilities for the four
variables in the left side, we

NOTE Confidence: 0.8769729

55685f85-3525-457f-a7d4-bca604400692
01:02:01.200 --> 01:02:04.467
created columns for different
variations in the right side

NOTE Confidence: 0.8769729

9b471551-d6b4-4b50-95d4-0153e63d7504
01:02:04.467 --> 01:02:08.823
we check for the same input.
We are put the same result.

NOTE Confidence: 0.8769729

bda384a8-3f54-4c0b-838c-62ba4fc5ee47
01:02:08.823 --> 01:02:10.275
This is the proof.

NOTE Confidence: 0.9052504

32385c4d-5da8-4f14-bfbd-3c06484f86d7
01:02:11.410 --> 01:02:14.875
So if you do at home, you see
that F1 and F2 is the same.

NOTE Confidence: 0.8695415

9bb741e7-12c4-4991-afab-37014c4d72ec
01:02:16.880 --> 01:02:20.290
And the order again doesn't
matter. You can switch W here

NOTE Confidence: 0.8695415

45c36762-bc35-4349-b170-4d87af516cfa
01:02:20.290 --> 01:02:22.150
and Z here and at church.

NOTE Confidence: 0.9059531

2886561a-ea90-42bc-bc16-2cb9fba23944
01:02:24.780 --> 01:02:28.608
But one thing is I want to
explain are here is this.

NOTE Confidence: 0.9137872

1e4907a5-e8e0-42bc-9f56-648da838d022
01:02:30.130 --> 01:02:31.290
Which one is better?

NOTE Confidence: 0.89976776

40fc9d82-21f3-421d-82d3-9e7d7e077c53
01:02:33.010 --> 01:02:34.189
The first one.

NOTE Confidence: 0.7018777

3e58db5b-b0a2-4da4-aa8e-76397ea0843d
01:02:35.450 --> 01:02:40.850
That attaching three and each
one with two input an or this

NOTE Confidence: 0.7917482

2973d25c-d213-4947-8912-cec33ef7e555
01:02:40.850 --> 01:02:47.280
one. Attaching again 3 input,
three ads for one Level, 2

NOTE Confidence: 0.7917482

58e79daf-c8aa-4457-88a2-7429d2b3b249
01:02:47.280 --> 01:02:50.370
level. Here we have 3 levels.

NOTE Confidence: 0.93311006

0f865102-e01f-46b0-b7da-0dc08eb64da6
01:02:51.130 --> 01:02:52.500
Here we have two levels.

NOTE Confidence: 0.9025988

b99ea54c-8c18-4f67-93e5-4669410f109a
01:02:53.980 --> 01:02:58.640
So the answer is that why this
question is important.

NOTE Confidence: 0.85677797

357d688a-e688-413e-9453-724468fa9166
01:02:59.190 --> 01:03:03.040
Because although from the math
we know that it doesn't matter,

NOTE Confidence: 0.85677797

e0823216-bdf5-4da1-8fee-d1173c0165ff
01:03:03.040 --> 01:03:04.790
the order of applying ends.

NOTE Confidence: 0.8540647

832b6717-8165-4f11-88d1-063174c094e6
01:03:06.500 --> 01:03:12.365
Both F1 and F2 is equal, but in
the design we want to come up

NOTE Confidence: 0.8540647

b9e054c8-4a46-485d-82cf-dcaa69cdda40
01:03:12.365 --> 01:03:16.666
with it an efficient one.
Efficient 1 means that first of

NOTE Confidence: 0.8540647

7abc5b32-305b-40fe-b4ba-5e7368cda161
01:03:16.666 --> 01:03:20.967
all, the first thing is that
true design, meaning that both.

NOTE Confidence: 0.8933947

1d4bd75d-928a-4c03-8adb-eaa70d3586d1
01:03:22.730 --> 01:03:27.616
Does the correct thing for us,
so we know that F1 and F2 is

NOTE Confidence: 0.8933947

a381e22f-3298-4809-87df-9b271a624828
01:03:27.616 --> 01:03:31.106
doing the same thing, so it as
long as the.

NOTE Confidence: 0.7928814

07edffd0-a1e7-4e95-ba9e-6e59a69de312
01:03:31.670 --> 01:03:38.204
Effective or true, being true
matters, both are equal.

NOTE Confidence: 0.8950743

da3af267-10c5-4357-bc37-b326d917fbca
01:03:39.390 --> 01:03:45.390
But in terms of speed or
efficiency, we are looking for a

NOTE Confidence: 0.8950743

a74bafd7-2a33-4b2d-aaeb-9ae5f50b9d1d
01:03:45.390 --> 01:03:48.390
unit that is much more faster.

NOTE Confidence: 0.8737622

e1297589-c6c9-483b-a204-ed6eea339f8e
01:03:49.090 --> 01:03:53.724
In the first design, if you want
to see the output of F1, you

NOTE Confidence: 0.8737622

c9b0a4a5-3209-4310-b41b-2109dbe11435
01:03:53.724 --> 01:03:58.358
have to 1st do one end and then
second and and then the third

NOTE Confidence: 0.9103217

f3d232c4-579e-4cb5-933f-42ae9380c846
01:03:58.358 --> 01:04:03.070
one. As long as you don't do
the 3rd and you are not

NOTE Confidence: 0.9103217

4d9a9d17-bbb5-408e-8157-ab38555420a7
01:04:03.070 --> 01:04:05.815
looking at, you shouldn't
look at the final result

NOTE Confidence: 0.9103217

82765893-fc9d-4864-9bc3-3f2b0d47effe
01:04:05.815 --> 01:04:07.950
because you have to wait for
W.

NOTE Confidence: 0.87753046

433a702d-bbca-42e4-bac7-dcbb1d59a454
01:04:09.850 --> 01:04:16.300
But in this design we can
do X&Y&Z&W in parallel.

NOTE Confidence: 0.83866477

d2e2eb87-9f6b-4606-8316-15af67cfb402
01:04:17.040 --> 01:04:23.040
So while you are doing the X&Y,
you can do Z&W, so in at one

NOTE Confidence: 0.83866477

4e20e972-1a6d-476a-b74e-4ac7650b890f
01:04:23.040 --> 01:04:27.840
time interval we have the result
of both units and wait for

NOTE Confidence: 0.83866477

6687e1ee-89f8-424a-8e18-988724f37a09
01:04:27.840 --> 01:04:30.240
another time interval to see the

NOTE Confidence: 0.8711415

90f323c4-eab9-4e13-b5b8-e879df74cc2b
01:04:30.240 --> 01:04:35.530
app. So the second design we say
that is faster because we need

NOTE Confidence: 0.8711415

ed8c6414-acc5-49b7-8f8e-d1aa351bb10f
01:04:35.530 --> 01:04:38.725
only to wait two time interval
or two levels.

NOTE Confidence: 0.81396294

2ca725f5-4971-4946-a0ff-278985ea22b7
01:04:39.490 --> 01:04:43.234
How is the first design you have
to wait for free time interval

NOTE Confidence: 0.906314

efd1f88d-17b2-4821-9f09-f8f3a90d27f7
01:04:43.234 --> 01:04:48.950
levels of app? So we can set up
F2 is better than F1.

NOTE Confidence: 0.8895413

9bd85d9a-86ab-4cff-8785-71f023de3246
01:04:49.750 --> 01:04:51.170
In terms of cost.

NOTE Confidence: 0.85461086

c877e570-b0fb-4d6c-818b-302f9e496ec8
01:04:51.800 --> 01:04:56.246
How many units we have to buy
from the market in the first

NOTE Confidence: 0.85461086

db3f3f65-8acf-4b1d-9c28-b2d9ff97e41a
01:04:56.246 --> 01:05:01.034
design we have to buy three and
in the second design we have to

NOTE Confidence: 0.85461086

a608d941-33d2-4ea6-8c38-98d623b84546
01:05:01.034 --> 01:05:05.822
buy three and so in terms of
costs money we have to pay. Both

NOTE Confidence: 0.85461086

4df88264-de30-4f1c-8572-815322bb7865
01:05:05.822 --> 01:05:07.190
designs are the same.

NOTE Confidence: 0.87227637

056d75de-e4eb-4f1b-9519-d395eb9b556e
01:05:08.020 --> 01:05:12.980
So this simple example just want
to show you that.

NOTE Confidence: 0.88875276

32552c36-d094-43b9-b908-2e2cfa7fa5ce
01:05:13.690 --> 01:05:18.240
Whenever we design A unit, first
we have to check the design is

NOTE Confidence: 0.9262284

f35d2f0d-ebb7-480f-a318-f373ab0bcfe4
01:05:18.240 --> 01:05:20.500
correct. So the effectiveness.

NOTE Confidence: 0.89100695

838cea96-3167-4d1c-a34c-a3fccaedc424
01:05:21.100 --> 01:05:25.429
2nd, we have to say that, OK, we
have. We might have different

NOTE Confidence: 0.89100695

cc60cab1-f223-4b1b-b04f-7c633e444c8b
01:05:25.429 --> 01:05:27.094
correct designs. Which one is

NOTE Confidence: 0.90320134

ddf64f9e-b7f3-467b-bb04-e6d7d183df95
01:05:27.094 --> 01:05:31.834
the better? We have to check in
terms of speed and in terms of

NOTE Confidence: 0.90320134

13dea68f-c54b-458f-9334-9b961ed73399
01:05:31.834 --> 01:05:33.586
the money we spent on that

NOTE Confidence: 0.8923108

79e281c6-a99a-4014-8461-a7edd979154f
01:05:33.586 --> 01:05:38.906
design. So in terms of money,
how many gates we have to buy in

NOTE Confidence: 0.8923108

c4104892-28a4-4a08-b6ae-adfc965e27a1
01:05:38.906 --> 01:05:42.650
terms of efficiency with speed?
How many levels you have to wait

NOTE Confidence: 0.8923108

3d65d059-942a-45a8-9026-f91bc783cac5
01:05:42.650 --> 01:05:43.898
to do the operation?

NOTE Confidence: 0.83833486

7d0d7b89-b67f-4160-a659-889f63921d08
01:05:46.810 --> 01:05:52.808
So. Another way to design the
and with four input is this one,

NOTE Confidence: 0.83833486

1aabed62-a05f-49c7-b76d-634e9711feb2
01:05:52.808 --> 01:05:56.867
and with three inputs and use
another end with two inputs.

NOTE Confidence: 0.83711624

009af6d1-703f-4a46-8346-8aecedd9a4fa
01:05:57.630 --> 01:06:00.087
So we have two levels of Ant.

NOTE Confidence: 0.87021273

bb879883-f313-411a-ad7c-3a8ec4e0e55e
01:06:01.350 --> 01:06:06.113
Another way is go to market and
see the electrical engineers

NOTE Confidence: 0.87021273

1567ae09-6e04-459b-9e8c-3599cbd3145f
01:06:06.113 --> 01:06:10.876
could build one single circuit
for doing 4 ends together or

NOTE Confidence: 0.9006229

3a53e0f9-5717-40d6-8cbb-86546480ea36
01:06:10.876 --> 01:06:16.315
not. So this is another way to
show an with four inputs.

NOTE Confidence: 0.8323878

200b3cd4-8b21-442d-8144-47eb12ab76c4
01:06:18.720 --> 01:06:22.680
Luckily in the market, the
electrical engineer could build

NOTE Confidence: 0.8323878

2f3ea652-36ab-424d-9a6f-c750eaa8ec1f
01:06:22.680 --> 01:06:28.400
one single unit of and that
Acccept 2 four inputs so we can

NOTE Confidence: 0.8323878

e6ba76c3-e50a-43cb-abde-70af263556d6
01:06:28.400 --> 01:06:33.680
go to market and buy one gates
to do and with four.

NOTE Confidence: 0.10730672

510b9121-aee4-4485-bbd2-c5e9990f6036
01:06:34.420 --> 01:06:35.490
Uh.

NOTE Confidence: 0.8702803

12b326b6-b1bf-410a-b5b3-1c93783ad359
01:06:36.570 --> 01:06:41.778
Puts if the market doesn't have
that I can buy in and with three

NOTE Confidence: 0.8702803

b709b8bc-b556-42da-8e2f-e6503b35c1a8
01:06:41.778 --> 01:06:45.330
inputs and another and with two
inputs and build the and with

NOTE Confidence: 0.87972194

83bae7bb-6eb3-4109-ac13-2c403380de17
01:06:45.330 --> 01:06:49.403
four inputs. If the market
doesn't have that, we can buy

NOTE Confidence: 0.87972194

d2684655-6dc6-4868-a227-1df7d6b09898
01:06:49.403 --> 01:06:51.305
and with two inputs and design

NOTE Confidence: 0.68927085

ccc8ab51-6684-4847-a880-24ffc159f3d9
01:06:51.305 --> 01:06:55.520
and. Uh, for inputs like
this, or like this, but we

NOTE Confidence: 0.68927085

40fc3f5a-ce2d-4ba0-8cee-38e50796675f
01:06:55.520 --> 01:06:57.180
said that this is better.

NOTE Confidence: 0.8275725

f38c7407-d7ad-4879-bf87-9a30bec2883e
01:06:59.250 --> 01:07:05.130
All my question is that if you
go to the market and you only

NOTE Confidence: 0.8275725

b16419ef-d5c2-4639-865b-955dcc2dc805
01:07:05.130 --> 01:07:07.650
could find and with four inputs.

NOTE Confidence: 0.8817868

366cfc5e-d2f2-4f62-8222-cf3c2bff945e
01:07:08.310 --> 01:07:12.822
But your need is 2 and two
inputs, so how can you

NOTE Confidence: 0.8817868

0d42d737-9c4d-435d-b2ed-923879fbda98
01:07:12.822 --> 01:07:13.950
handle this situation?

NOTE Confidence: 0.90812767

7c097381-7fa1-4336-8a43-991c26cd3a68
01:07:15.030 --> 01:07:19.650
So you go to the market you want
to buy an end with two inputs.

NOTE Confidence: 0.81740946

cb733a08-ea5c-4c90-9f60-be93f4dc9450
01:07:20.250 --> 01:07:24.617
But it is out of stock. So
the only availability is

NOTE Confidence: 0.81740946

5ac31456-fdf6-4d12-a85a-ca691a00291d
01:07:24.617 --> 01:07:29.381
and with four inputs. So
how do you use the end with

NOTE Confidence: 0.81740946

162c6200-3f4c-4c24-bdac-20d6272c0207
01:07:29.381 --> 01:07:31.366
four inputs for your need?

NOTE Confidence: 0.8284686

dd6216e1-bd73-4c8f-86c3-fd51e82bd57d
01:07:34.610 --> 01:07:37.028
Well, it's back to the answers.

NOTE Confidence: 0.78824353

8ef92726-4cf8-45be-a7c8-2bc26fba429b
01:07:39.050 --> 01:07:43.110
A corrected gianna. Correct,
yes, you just simply input one

NOTE Confidence: 0.78824353

9a7e54c2-b727-45b2-b678-644e891ecd3b
01:07:43.110 --> 01:07:47.170
in other extra inputs because
one doesn't have any influence

NOTE Confidence: 0.78824353

5db3997c-5927-48c8-854e-83cd27cbae45
01:07:47.170 --> 01:07:52.042
on the end gate. So whenever
you have extra input and you

NOTE Confidence: 0.78824353

c01676ad-e70f-4347-bdaf-3d5952f41532
01:07:52.042 --> 01:07:57.320
don't need them in the end
kit, you can fill it up with

NOTE Confidence: 0.78824353

d97bdc5e-6327-459d-b5d7-1f0d0c3b0b6b
01:07:57.320 --> 01:07:58.538
one correct? Yes.

NOTE Confidence: 0.89175844

87886fbe-40a5-4316-8c65-0f785b9d5762
01:07:59.940 --> 01:08:04.472
So let's move on to the
next unit, which is or

NOTE Confidence: 0.89175844

70bee8b8-3e7a-4b00-ad28-8cb763289ec2
01:08:04.472 --> 01:08:06.532
we use or like this.

NOTE Confidence: 0.91920006

80e43d6c-9cae-415f-9fab-66b07383984f
01:08:07.720 --> 01:08:10.846
So it's kind of a curve.

NOTE Confidence: 0.79559404

41816960-e7c7-4d53-b68b-ddc1a91917de
01:08:11.450 --> 01:08:17.022
Here and also care here, so this
part is could be the same Ann,

NOTE Confidence: 0.79559404

deda89c2-5845-4a32-a5e6-90ec86c67d8b
01:08:17.022 --> 01:08:22.196
but this one is important for
the end we have just a straight

NOTE Confidence: 0.79559404

41c3685b-da02-4852-b4b6-7f4f80d9682d
01:08:22.196 --> 01:08:24.982
line for the all we have curved

NOTE Confidence: 0.6963821

aa2b65d6-4340-4b86-a42e-dc8b30d972b2
01:08:24.982 --> 01:08:31.352
line. This is called or. Four
is, uh, has some similarity with

NOTE Confidence: 0.6963821

c0b8639f-d576-4195-b8fb-6e56d95935c1
01:08:31.352 --> 01:08:33.712
and function. It accepts two

NOTE Confidence: 0.79045

bd4d6f32-ec8b-4263-92da-a45060e96eb7
01:08:33.712 --> 01:08:36.894
inputs. And it apples one

NOTE Confidence: 0.91562283

15a08380-ce91-4c97-b64d-6977d0f58b3c
01:08:36.894 --> 01:08:41.432
output. So, and here is the
functionality or the truth

NOTE Confidence: 0.8821908

6812915a-1ad0-478f-b85b-e12e6fad4654
01:08:41.432 --> 01:08:47.362
table. X or Y if both are
00. If one of them, at

NOTE Confidence: 0.8821908

4f10bbf9-4d62-4c5d-9eb0-0f2c881d6e76
01:08:47.362 --> 01:08:51.938
least one of the inputs
are one, the output is 1.

NOTE Confidence: 0.8663402

26374e83-7916-4a70-a2e0-881b0e167f47
01:08:55.210 --> 01:08:59.698
It's not the not of the
end, but it's kind of,

NOTE Confidence: 0.8663402

4d78e080-680c-475c-b167-a066a7438d9c
01:08:59.698 --> 01:09:02.146
I mean a very I mean.

NOTE Confidence: 0.765302

0731c78c-af46-4177-90c5-9a22bb47cbfa
01:09:03.970 --> 01:09:09.250
I mean a reverse another
reverse, and how can I say that?

NOTE Confidence: 0.765302

27a8063e-23b1-465b-825f-9c98ecfaf7d3
01:09:09.250 --> 01:09:11.890
It's kind of, I mean behavior

NOTE Confidence: 0.87056035

a01e080e-791c-4cad-bfd1-09600e52cde5
01:09:11.890 --> 01:09:16.542
that. In the end, if you have
at least 1 zero the output

NOTE Confidence: 0.87056035

0945f28f-eb3e-4481-b450-d693055e1cc2
01:09:16.542 --> 01:09:20.756
gonna be 0 here if you have
at least one 1 Indian for the

NOTE Confidence: 0.87056035

ca8ac96b-e4ea-46be-b74c-9d198e40ccad
01:09:20.756 --> 01:09:21.960
output, gonna be 1.

NOTE Confidence: 0.84078586

abfa6979-3572-4409-be29-fd390b501bb0
01:09:23.630 --> 01:09:25.830
If all are zero,
the output is 0.

NOTE Confidence: 0.8296387

78816ab6-bc6c-4f4e-bd63-37e2d476bf71
01:09:26.880 --> 01:09:30.786
So it's kind of I mean in
the end, if all are one, the

NOTE Confidence: 0.8296387

717a43b9-ed39-465b-8179-bd1def5b1221
01:09:30.786 --> 01:09:33.855
output is 1 here with all
our zero thereafter is here.

NOTE Confidence: 0.8664319

bfba5504-9a8c-42d9-9f8d-da8233713237
01:09:35.110 --> 01:09:38.750
And these are different
notations for or, so you can

NOTE Confidence: 0.8664319

e1b7ca93-3a55-481b-bc66-5fa3e7160168
01:09:38.750 --> 01:09:42.754
simply say or or use the plus
operator to show or.

NOTE Confidence: 0.84309006

5fdc87e8-9fbd-4806-9b25-b0904cc3b253
01:09:43.720 --> 01:09:47.130
But remember you in the ad
you can remove the operator,

NOTE Confidence: 0.84309006

49bec966-eb87-472b-9586-7f5a2bdb95cb
01:09:47.130 --> 01:09:50.850
but here in the OR you are
not allowed to remove that.

NOTE Confidence: 0.84309006

7100e7e4-a06c-44cd-9c75-ea5ec927e43f
01:09:50.850 --> 01:09:54.880
So you have to put some mark
for some symbol to show that

NOTE Confidence: 0.84309006

b400ce14-f138-43b9-82ff-d9022fd73990
01:09:54.880 --> 01:09:56.430
this is an or operator.

NOTE Confidence: 0.8364982

790845bb-2200-4947-b95b-06977ea47fa7
01:09:58.320 --> 01:10:00.460
Alright, and has the community.

NOTE Confidence: 0.82761526

1aa0ae15-5967-4d51-a8b5-6e44667aa1c8
01:10:00.560 --> 01:10:03.480
Property, meaning that if you
switch the inputs, the output

NOTE Confidence: 0.82761526

74c524d2-b4e3-43fc-9bf0-2704803e31b3
01:10:03.480 --> 01:10:04.940
going to be the same.

NOTE Confidence: 0.8445856

7293437f-24a5-41cb-b714-aa8e1c8f1dd8
01:10:05.490 --> 01:10:10.313
So if you create two columns and
you switch the inputs the same

NOTE Confidence: 0.8445856

36539198-dfaf-49f0-8cd6-9ef32e3ac7cc
01:10:10.313 --> 01:10:12.168
result, you will gonna see.

NOTE Confidence: 0.8270338

3175ff80-8da0-40a1-809d-960d096a4956
01:10:15.570 --> 01:10:21.173
Some interesting property of the
OR is this if you or with one

NOTE Confidence: 0.8270338

bfba2b64-46ab-4e92-8c85-4480eb3bd2dd
01:10:21.173 --> 01:10:22.897
because you have a.

NOTE Confidence: 0.8600733

21463cf6-b129-4a10-9604-a9901e11fac7
01:10:23.490 --> 01:10:27.872
One input with the one that was
gonna be one so you don't have

NOTE Confidence: 0.8600733

c0508844-fab4-4f22-a44d-6d90cb56f456
01:10:27.872 --> 01:10:29.750
to wait for the other inputs.

NOTE Confidence: 0.86097914

79fdfab5-8afd-490a-aead-e527d3394d14
01:10:32.180 --> 01:10:38.774
If you or with 00 doesn't have
any impact, so you have to wait

NOTE Confidence: 0.86097914

5e025fa3-90d4-41de-a983-27993ad6039f
01:10:38.774 --> 01:10:40.658
for other binary input.

NOTE Confidence: 0.88544744

b7ae4a99-c4a3-475a-be28-404243c2ba25
01:10:42.390 --> 01:10:46.173
So in the end, one doesn't
have an impact in the OR 0

NOTE Confidence: 0.88544744

4872f21e-e514-4505-95ca-84ed095f0b7d
01:10:46.173 --> 01:10:47.337
doesn't have any impact.

NOTE Confidence: 0.79071724

538053e8-bb5c-4a77-a74a-879eb8cbbdc3
01:10:49.000 --> 01:10:54.400
Also, the same, uh, like and
if you or a binary variable

NOTE Confidence: 0.79071724

d3ebf627-b296-4b02-882f-dd24f0aec8ab
01:10:54.400 --> 01:10:57.550
with itself doesn't have any
impact, so.

NOTE Confidence: 0.84169906

bf7d8709-7c9e-4515-b162-858c3efeaadc
01:11:00.690 --> 01:11:05.370
And also, if you or a binary
variable within a lot of itself,

NOTE Confidence: 0.84169906

93566a44-6057-4dca-b6a2-268197b360ee
01:11:05.370 --> 01:11:08.970
because if you create another
binary variable, it at least

NOTE Confidence: 0.84169906

61a6f5c8-6426-440d-96cb-650854fd1ee4
01:11:08.970 --> 01:11:13.290
you're gonna have one digital
one in the input output gonna be

NOTE Confidence: 0.84742224

dc92fdfa-3bb4-4d06-835c-2d3ae76ddb0d
01:11:13.290 --> 01:11:20.240
1. This is exactly the same as
not. Sorry it's the I mean do

NOTE Confidence: 0.84742224

c07f196e-2c8f-4336-9e78-fc405f7bfb90
01:11:20.240 --> 01:11:25.960
all or it's kind of similar
behavior in the end X and export

NOTE Confidence: 0.84742224

d52b4a0c-6b96-4743-a1ca-26ac44d8c99c
01:11:25.960 --> 01:11:30.800
produce 0 here X or export
produce one. So again like

NOTE Confidence: 0.84742224

50e64bd6-32eb-445c-b410-ca3981560943
01:11:30.800 --> 01:11:36.080
whenever you need generate the
digit one in any point of your

NOTE Confidence: 0.84742224

d55f604d-8cb4-457e-9b69-18705dd3fde0
01:11:36.080 --> 01:11:37.840
system, you can simply.

NOTE Confidence: 0.75017786

6b67a401-c0d3-434e-81b2-dc415eea3267
01:11:38.710 --> 01:11:44.506
Bring the white, bring the OR
gate and create another the wire

NOTE Confidence: 0.75017786

e3909e6d-ebb9-471b-95e3-991cc6bcfb7b
01:11:44.506 --> 01:11:49.819
and then or it so X or export
always produce one.

NOTE Confidence: 0.83891886

e5873618-5a3a-4d8d-a324-52f133defbbf
01:11:52.530 --> 01:11:54.595
So we can build a wall with

NOTE Confidence: 0.87437475

17b8dbd6-60cc-4d81-b32f-ec0546479482
01:11:54.595 --> 01:11:59.490
three inputs. Very similar to
the way we did with the free

NOTE Confidence: 0.87437475

64f07fd2-abb8-4497-9ab0-bcaa53603d46
01:11:59.490 --> 01:12:04.183
input, and. So here's the truth
table. As you can see, at least

NOTE Confidence: 0.87437475

e8f1f123-e38a-4767-bc5d-314ec0c6d330
01:12:04.183 --> 01:12:06.349
one digital one in the input

NOTE Confidence: 0.80165094

3e4c6282-4e1e-41a8-8de9-720bd7512435
01:12:06.349 --> 01:12:10.079
outputs one. However, if
all inputs are zero, the

NOTE Confidence: 0.80165094

9ecf7610-1eaa-4f1e-ae1d-bfe50c7c2561
01:12:10.079 --> 01:12:11.060
applicant ID 0.

NOTE Confidence: 0.73973966

3bf9f8ec-3ab7-4ff2-983e-daac7ae5aad9
01:12:13.190 --> 01:12:16.450
And or has associative property,

NOTE Confidence: 0.8474944

1d75148a-b12b-4a6c-bb49-c2644e363010
01:12:16.450 --> 01:12:21.580
meaning that. The order of
applying the operator doesn't

NOTE Confidence: 0.8474944

449628fd-19b5-4988-8c8e-6385603016e7
01:12:21.580 --> 01:12:23.830
matter if you apply X.

NOTE Confidence: 0.7248639

32eb8c18-52c0-41ec-9fdf-906532d0a29a
01:12:24.880 --> 01:12:31.698
Uh, the OR on top of X&Y 1st
and then do the OR next.

NOTE Confidence: 0.8107494

884b186c-cba4-46a8-a377-0eec26e1e9ec
01:12:32.990 --> 01:12:39.215
It is the same result as if you
apply or first on X&Z and then

NOTE Confidence: 0.8107494

0b66ccc6-23bb-4d28-9337-5b3243368e4d
01:12:39.215 --> 01:12:40.460
have a while.

NOTE Confidence: 0.7243978

c3ffa1f6-f0e4-49a8-a213-89311cee4a07
01:12:43.080 --> 01:12:47.678
So because of this, uh,
we can show and all with

NOTE Confidence: 0.7243978

ee546275-b330-4b25-ac4a-b6426ca83d4f
01:12:47.678 --> 01:12:49.350
free improve like this.

NOTE Confidence: 0.85650057

7b036509-a342-42e4-b61b-001853c36864
01:12:50.920 --> 01:12:55.265
Because inside we know that
there are two orders, but the

NOTE Confidence: 0.85650057

cb1c1679-aac3-4f3c-8cba-58b72beb2327
01:12:55.265 --> 01:12:59.215
order of X&Y&Z doesn't matter,
so the inside doesn't matter.

NOTE Confidence: 0.8575858

4bb92743-9d33-47ed-9517-04ae65b76afc
01:13:01.200 --> 01:13:04.180
With four inputs like this.

NOTE Confidence: 0.8932569

ee8aa2e0-1cae-498e-8a84-55669cc3e614
01:13:06.060 --> 01:13:10.174
So very similar if I ask you
which design is better.

NOTE Confidence: 0.88054293

73a5d200-8e2c-4328-9a46-6372f7ac0724
01:13:11.060 --> 01:13:15.805
Because in the second design you
have two levels of or. It's much

NOTE Confidence: 0.90951467

32b10bcd-0fb0-4d09-9c7c-e6b8236ba952
01:13:15.805 --> 01:13:18.044
more faster. So the second

NOTE Confidence: 0.82287675

9994c60e-7f00-4d86-aef4-334502d53a63
01:13:18.044 --> 01:13:23.750
design is better. Both are
correct. Both you have to pay to

NOTE Confidence: 0.82287675

453aec36-928c-4ce1-b9b4-2d8b60050dc7
01:13:23.750 --> 01:13:28.150
buy three or gates for the
second design is faster.

NOTE Confidence: 0.8786079

45827497-9ed9-417c-b530-6b15fce66ca1
01:13:30.230 --> 01:13:32.610
And here is the summary.

NOTE Confidence: 0.8846003

34f4aae9-a715-4a01-98a9-afb48327eae5
01:13:33.420 --> 01:13:35.730
Comparing these two
different designs.

NOTE Confidence: 0.60175425

fd8fcd56-dcfe-4e2a-af3a-4d8c40bab211
01:13:38.630 --> 01:13:40.020
And, uh.

NOTE Confidence: 0.9027133

6c0b56b2-f189-4c17-ac61-3b09c1c7d2a9
01:13:41.920 --> 01:13:43.468
The next topic is.

NOTE Confidence: 0.8836432

8f3e491d-a7cf-41d7-8d6a-28005de446c6
01:13:44.340 --> 01:13:47.226
Now that we know three gates.

NOTE Confidence: 0.8239794

02af5994-1b93-41cd-a3b8-49ef4ac56f65
01:13:48.980 --> 01:13:52.528
And or and not.

NOTE Confidence: 0.7945048

fc526306-759e-40d6-a7f7-72fb0fb9b48a
01:13:53.600 --> 01:13:59.830
So we could have and with three
input for input we could have an

NOTE Confidence: 0.7945048

54c44134-b10b-47be-b75c-c2f819dd3b5e
01:13:59.830 --> 01:14:02.500
or with three or four input

NOTE Confidence: 0.86111647

3d5699f7-fee2-4a06-91ad-dd826bc610d6
01:14:02.500 --> 01:14:09.640
inputs, so. We can put them
together to generate or to build

NOTE Confidence: 0.64469403

bd9b2932-d814-414c-a2ad-2cc78dfbb8ea
01:14:09.640 --> 01:14:13.970
larger units. So
to do that, uh.

NOTE Confidence: 0.86280894

72bb5f4d-7f08-4ce9-985d-4060152e78d1
01:14:15.040 --> 01:14:19.696
We first we split the task of
building larger units into 2

NOTE Confidence: 0.88740426

eef784ac-7a3e-478b-bbff-06f6c667f523
01:14:19.696 --> 01:14:24.322
directions. The task of analysis
and the task of design.

NOTE Confidence: 0.85626245

57ae5040-e6d8-4376-9ec6-90be708464e1
01:14:24.920 --> 01:14:29.220
In the task of analysis,
somebody design A larger unit

NOTE Confidence: 0.85626245

73a11f14-6f6d-4c86-96de-cf8fbc3d6ab5
01:14:29.220 --> 01:14:35.240
for us and ask us to analyze the
design. Basically we want to do

NOTE Confidence: 0.85626245

49f876ec-49bd-4964-abc1-376735831da3
01:14:35.240 --> 01:14:40.400
the reverse. We are already
given the design and we want to

NOTE Confidence: 0.85626245

c322a3f7-ac1a-4dd9-9b21-d53cea112bd9
01:14:40.400 --> 01:14:45.990
see or prove read or kind of
check the design. This is called

NOTE Confidence: 0.87004906

6e066c10-a101-4142-a346-a9cf6c96fd6f
01:14:45.990 --> 01:14:51.268
analysis. The next step is we
want to design our own units, so

NOTE Confidence: 0.87004906

2d87fefe-d978-4739-9d41-e635fb233891
01:14:51.268 --> 01:14:52.564
that's a design level.

NOTE Confidence: 0.8477883

b579122f-804e-471e-8e84-c9a298957ff7
01:14:53.180 --> 01:14:57.580
So why we introduced an answer
first? Because analysis is

NOTE Confidence: 0.88527733

814e9e43-9a6a-4e1a-8d9f-12b1560fa6f9
01:14:57.580 --> 01:15:01.801
simpler. So somebody else
actually designed a unit for us

NOTE Confidence: 0.88527733

9dd9c2e5-9e11-4b25-b96a-436606167b96
01:15:01.801 --> 01:15:03.835
and we just want to analyze

NOTE Confidence: 0.83136296

34707ec5-5067-4e69-b76c-c7f39dbe8dd8
01:15:03.835 --> 01:15:08.908
that. The design is a little bit
harder because you have to come

NOTE Confidence: 0.83136296

ba662c0c-ef71-4efc-8f94-6f8432a22141
01:15:08.908 --> 01:15:12.298
up with an efficient design
attaching the gates together to

NOTE Confidence: 0.83136296

fdcc72fa-318a-4f8a-b472-15676c4f43af
01:15:12.298 --> 01:15:16.027
come up with an efficient
design. That's why we discuss it

NOTE Confidence: 0.8755432

884a89cd-5d7a-4c13-a552-a21609121612
01:15:16.027 --> 01:15:21.940
next. So we first with the
analysis. So into analysis step

NOTE Confidence: 0.8755432

578a9956-eddc-48f6-b5f4-78a0a39a4ec9
01:15:21.940 --> 01:15:26.780
you already given the design you
have to determine the

NOTE Confidence: 0.8755432

882e809d-8eea-4f91-9cf1-d7a6f87a29b6
01:15:26.780 --> 01:15:30.652
functionality exhibited by the
unit of the design.

NOTE Confidence: 0.7549132

8446989a-ada1-496a-a8de-6a5057127712
01:15:32.240 --> 01:15:39.692
So the most simplest larger unit
is this. Stacking two OK and

NOTE Confidence: 0.7549132

dbb2e9d7-2381-4795-9700-f705fbd4b3ed
01:15:39.692 --> 01:15:42.797
not follows in and out.

NOTE Confidence: 0.8846206

f4357813-e753-4816-b7f3-21775984e1b0
01:15:43.920 --> 01:15:47.556
So you're asked to see what is
going to be the output.

NOTE Confidence: 0.90039027

b3f71491-3c38-454f-93fd-4c16e23bab72
01:15:49.030 --> 01:15:53.470
So basically the first step is
create a truth table.

NOTE Confidence: 0.8562205

fdb1e361-3704-4524-84f1-262ab7d59a2f
01:15:54.110 --> 01:15:59.869
The truth table has two sides.
The left side is for the input

NOTE Confidence: 0.8562205

6af303ff-1b5e-49ec-8b76-164f2c686c79
01:15:59.869 --> 01:16:04.299
binary variables. The right side
is for output binary variables.

NOTE Confidence: 0.8562205

4c75b8a4-619a-46ba-ad25-3d6b57c40329
01:16:04.299 --> 01:16:08.729
We might have multiple outputs.
We might have multiple inputs.

NOTE Confidence: 0.8562205

657f0a32-b812-45cf-b3de-bebaff394b71
01:16:08.729 --> 01:16:11.830
Here we have two inputs, 1 app.

NOTE Confidence: 0.88362265

90344cb9-9faa-4324-8f5d-4d565835eb5f
01:16:12.620 --> 01:16:17.130
So analysis is that determine
the right side of the table.

NOTE Confidence: 0.85495025

25e3b8ee-478b-4feb-b8a3-9bdc7225cb43
01:16:18.230 --> 01:16:21.446
So in order to determine the
right side of the table, you

NOTE Confidence: 0.85495025

aaa6b34f-bdc0-4325-b9c0-e4cff49e17ec
01:16:21.446 --> 01:16:22.518
have to create rows.

NOTE Confidence: 0.9199222

a1451924-5802-4157-8266-9be1f42bbb1f
01:16:23.130 --> 01:16:24.762
For different possibilities in

NOTE Confidence: 0.89639443

c1582372-0430-4494-8245-52ca2c59d4db
01:16:24.762 --> 01:16:30.700
the input. In the input, because
you have two binary variables,

NOTE Confidence: 0.89639443

fca6d41e-2a0f-41e8-87ed-7381e491cac5
01:16:30.700 --> 01:16:34.700
you have four different
possibilities. Both are 00110

NOTE Confidence: 0.89639443

91bc0700-1405-46f2-be97-c9bafa41c872
01:16:34.700 --> 01:16:36.200
and 1 one.

NOTE Confidence: 0.91344094

e12d0583-ecee-40dd-b9f2-73aca627a888
01:16:37.050 --> 01:16:39.570
So now what is going to
be the output?

NOTE Confidence: 0.934512

6e854605-84da-4355-9411-8988f4a8dd5a
01:16:40.640 --> 01:16:41.370
So.

NOTE Confidence: 0.8477476

9395fe5f-f5d6-4c10-8183-83ab32ea1cba
01:16:42.520 --> 01:16:46.272
You breakdown the units into
different intermediate outputs,

NOTE Confidence: 0.8477476

fb069f23-44cc-4edd-ae35-f314de581eb8
01:16:46.272 --> 01:16:52.838
so the first level, what is the
act of the first level. So you

NOTE Confidence: 0.8477476

d961ed23-c2c4-4397-bd84-2d346ebb2dc3
01:16:52.838 --> 01:16:58.466
first determine the value of the
first level and the output so

NOTE Confidence: 0.8428968

53e71db0-0a05-43a9-9742-18210924b6ac
01:16:58.466 --> 01:17:04.008
F1. Is X&Y so the
X&Y, is this?

NOTE Confidence: 0.81228346

52fb3f2c-a269-4063-8c58-ca323c02fd6f
01:17:04.990 --> 01:17:10.142
If both are zero after 0 is at
least 1 zero after 0. If all are

NOTE Confidence: 0.81228346

b54b4cfb-f1ca-43f8-8195-177488301dee
01:17:10.142 --> 01:17:11.430
one after this one.

NOTE Confidence: 0.89439106

104ba3e0-5465-462b-a681-4f6ab9ae68c7
01:17:12.260 --> 01:17:16.348
And then you can assume that now
you have a not with one input

NOTE Confidence: 0.89439106

103ca732-eb69-458d-ada8-21aca6ca8ebf
01:17:16.348 --> 01:17:17.808
and then put is this.

NOTE Confidence: 0.8360691

4878746f-1d2c-4f0e-8fc5-cb98583bd292
01:17:19.880 --> 01:17:25.184
If input is this, what is
going to be the final FX&Y

NOTE Confidence: 0.8360691

fa08f627-f7f6-44a0-8385-b2b72f6ac22f
01:17:25.184 --> 01:17:26.952
followed by the nuts?

NOTE Confidence: 0.7741496

c3ef080c-8e87-4c1f-bd80-45fa2ba54491
01:17:28.710 --> 01:17:32.940
So 0 not becomes one,
so becomes 10 becomes

NOTE Confidence: 0.7741496

635d15bc-74f5-4155-b89d-8c542203c52b
01:17:32.940 --> 01:17:35.290
one and one becomes 0.

NOTE Confidence: 0.83123094

e150245b-e53f-4100-96c2-bf862d0e8e50
01:17:36.460 --> 01:17:43.456
So this is the final output,
so this is the analysis, so

NOTE Confidence: 0.83123094

69a82db7-6067-4109-8093-e0ac412cbf68
01:17:43.456 --> 01:17:46.954
different inputs, intermediate
outputs, final output.

NOTE Confidence: 0.8630255

e7127a4e-a23b-438c-958f-8721bca079ed
01:17:49.510 --> 01:17:54.154
So another way to show this
design and and followed by not

NOTE Confidence: 0.8630255

68fea9fe-c241-4e97-8249-0dc2d146e955
01:17:54.154 --> 01:17:58.411
is this just putting the
inversion bubble at the end of

NOTE Confidence: 0.8630255

8dc0cfe4-a0be-440d-a842-f04ddf340e95
01:17:58.411 --> 01:18:00.733
the end so XY and not?

NOTE Confidence: 0.79875714

829c78a3-93d7-4e29-afa4-9a3428e2ba27
01:18:01.370 --> 01:18:04.858
So we call this not an or map.

NOTE Confidence: 0.8303098

5c868ff0-018d-4c3d-a623-78dd09980c2c
01:18:05.800 --> 01:18:11.026
This is a new gate. If you go to
the market, the electrical

NOTE Confidence: 0.8303098

f62bcf7e-ea13-4a10-9681-1ae91eee29b6
01:18:11.026 --> 01:18:16.654
engineers already built this for
us, so we can buy a not sorry in

NOTE Confidence: 0.8303098

78551b12-475f-47e3-9ba4-1ba5597b9648
01:18:16.654 --> 01:18:20.674
NAND gate inside we have and
followed by the nuts.

NOTE Confidence: 0.86500293

ac5e352d-0a4c-42f9-8fd1-5ea88a104444
01:18:22.030 --> 01:18:28.498
And what is the truth table
00100 N and become zero followed

NOTE Confidence: 0.86500293

5742f93c-c411-4f34-bcc6-e080f9c71658
01:18:28.498 --> 01:18:30.654
by the North one?

NOTE Confidence: 0.92448485

709e376e-28be-4158-b77a-f0e99e39ce46
01:18:31.270 --> 01:18:34.410
011101 and

NOTE Confidence: 0.9219226

30a52f12-9264-44f9-9a53-f4cf05f81d56
01:18:34.410 --> 01:18:39.840
110. So look
at the behavior.

NOTE Confidence: 0.9077475

4e7123d0-da6e-4902-9eb1-267fe211ab44
01:18:40.500 --> 01:18:45.690
Here if you have at least 1 zero
in the input, the output is 1.

NOTE Confidence: 0.83300734

8c4d4f8d-0771-45a7-82bf-6a5761049686
01:18:46.900 --> 01:18:49.408
 Exactly the not behavior of the 

NOTE Confidence: 0.90528464

c10aa502-609a-4603-9956-0a5d24828c39
01:18:49.408 --> 01:18:54.109
Ant. So at least 1 zero the
output is 1.

NOTE Confidence: 0.6621068

7dbeebdd-d354-43cc-968e-4240c9488506
01:18:54.670 --> 01:18:56.780
Older one output is it.

NOTE Confidence: 0.75724393

d5ac4ec9-5706-4445-8dc7-c0ee538cb761
01:19:00.410 --> 01:19:05.210
Not a NAND gate, this gate is
commutative becausw X&Y,

NOTE Confidence: 0.75724393

acd9068d-13dc-4d35-b2c6-75d896398fc0
01:19:05.210 --> 01:19:10.970
followed by did not. You can
commute at the end, so Y&X

NOTE Confidence: 0.75724393

7766356c-cd66-4a41-bfa4-a958a8e50060
01:19:10.970 --> 01:19:13.850
follow do not both the same.

NOTE Confidence: 0.7345164

dfbf1ad3-be80-4a31-9105-7c8f8cfe912f
01:19:14.690 --> 01:19:17.805
So this is special
operator for Nan.

NOTE Confidence: 0.78547454

f00772c3-d56d-44d1-8b07-183c78bf0484
01:19:19.180 --> 01:19:25.771
What arrow? So instead of just
writing like this X&Y not or yx

NOTE Confidence: 0.78547454

235c1793-2a6e-491d-a694-d95d3f24df7b
01:19:25.771 --> 01:19:32.362
not. You can simply say why
sorry X of arrow Y or Y

NOTE Confidence: 0.78547454

5d633eb4-5c43-4d4a-9871-a3b79dfb50ed
01:19:32.362 --> 01:19:36.925
of arrow X. This is another
notation for Nan.

NOTE Confidence: 0.8838919

41c1eed7-93a3-4611-8f15-df4c51665fa7
01:19:40.170 --> 01:19:45.420
So my question from you is this.
This is the last thing. What is

NOTE Confidence: 0.8838919

4fad4f64-f3ba-4016-b7aa-7a804cf2f87e
01:19:45.420 --> 01:19:47.295
the analysis of this unit?

NOTE Confidence: 0.824869

3fb3aaa8-5292-4793-8348-595a178dbced
01:19:48.380 --> 01:19:53.024
And and followed by the nut
which is the NAND gate. But

NOTE Confidence: 0.824869

c99c93ad-69bc-46c4-a017-72139b139e23
01:19:53.024 --> 01:19:56.120
the input we have just one
binary variable.

NOTE Confidence: 0.9188651

de0f9fe7-2e84-4a4e-b9a0-6a271b2fe0c3
01:19:57.940 --> 01:19:59.916
So what is going to be
the output?

NOTE Confidence: 0.87818563

27d8426e-ee75-4803-9196-087aaca5a685
01:20:01.760 --> 01:20:04.328
If X is zero, what is the F?

NOTE Confidence: 0.85138583

39ef9f95-fd35-4c50-add2-b86554ca631a
01:20:04.940 --> 01:20:06.948
If X is 1, what is the app?

NOTE Confidence: 0.86853766

6dd96b92-5851-4aea-ba54-108a3f804128
01:20:09.210 --> 01:20:10.670
So let's back to.

NOTE Confidence: 0.713537

64ce242f-1b19-4ad5-8087-7188eaa805ed
01:20:14.770 --> 01:20:16.530
Opposite expert.

NOTE Confidence: 0.8962821

66440a3f-1747-4cab-896f-0be7d8d0167d
01:20:17.600 --> 01:20:21.264
So if X is 00 and with zero.

NOTE Confidence: 0.8286059

1e654cfc-ea50-46eb-b62b-ee866d0f59f8
01:20:22.450 --> 01:20:24.500
Zero followed by not becomes

NOTE Confidence: 0.83296424

4a3814f0-7e98-47a5-8399-94f903254381
01:20:24.500 --> 01:20:30.084
one. If X is 1 one and one
becomes one followed by North

NOTE Confidence: 0.89278567

40d19107-da66-4f54-ba15-d789a38850a7
01:20:30.084 --> 01:20:35.759
becomes 0. So here is this
the intermediate output.

NOTE Confidence: 0.7638421

43413d0b-78fa-486d-b337-882507a8f14e
01:20:36.530 --> 01:20:39.510
X&X followed by nuts.

NOTE Confidence: 0.8689209

3e6750dc-b55f-4145-ab08-172a784ce24e
01:20:40.270 --> 01:20:41.878
So you see that.

NOTE Confidence: 0.6471275

a12323a7-d0b5-4234-b2b3-afcafb559183
01:20:42.560 --> 01:20:48.810
And NAND, who's except one
binary variables in both inputs

NOTE Confidence: 0.6471275

655365e9-afaf-410b-af57-602e7059ac48
01:20:48.810 --> 01:20:51.310
acts like a nut.

NOTE Confidence: 0.75876117

2c5dfbb3-8ac0-47c6-b837-94fbd694d911
01:20:52.570 --> 01:20:57.465
So NAND of two another same
binary variable is exactly the

NOTE Confidence: 0.75876117

004748e2-0a99-40f7-84b1-1c1c9678a8a5
01:20:57.465 --> 01:20:58.800
same as not.

NOTE Confidence: 0.8219071

f55a8e62-2ce9-4b50-b497-bfc22cdd8722
01:20:59.600 --> 01:21:04.111
So if you go to market and you
couldn't find the Northgate, you

NOTE Confidence: 0.8219071

a51e6195-081c-4eb9-a152-d4229978173c
01:21:04.111 --> 01:21:07.581
can buy the NAND gate and attach
the inputs together.

NOTE Confidence: 0.89027065

1b8cb595-f94f-4a97-9052-ac64e7ab8bfe
01:21:08.150 --> 01:21:08.840
So.

NOTE Confidence: 0.8187545

435e3db8-49e8-4639-bd61-6b3d0ae153c8
01:21:10.160 --> 01:21:14.670
This is the way that we
may create the knock it

NOTE Confidence: 0.8187545

dbd1377d-4bee-46bb-9d5e-1a773ebc16c5
01:21:14.670 --> 01:21:16.310
using the NAND gate.

NOTE Confidence: 0.78293663

0aded1be-cc99-4a8f-a971-13b93505c6d1
01:21:19.110 --> 01:21:24.894
So remember whenever you you
need a NOT gate and you cannot

NOTE Confidence: 0.78293663

74e0f0c0-fd74-420f-9c9a-a532470e7abd
01:21:24.894 --> 01:21:29.714
find it, you can recreate the
Northgate within Anki simply

NOTE Confidence: 0.80460757

0fd35847-3342-480d-a871-c954f41045fb
01:21:29.714 --> 01:21:34.009
attach. The binary variable to
both input off the market.

NOTE Confidence: 0.8309453

29ea78ed-8a88-42f7-b725-a0327c65745d
01:21:35.970 --> 01:21:41.586
Oh, we're done today. So if any
questions I'm happy to take your

NOTE Confidence: 0.8309453

fce373e0-67fb-4fd7-b4a0-585f687fbbd3
01:21:41.586 --> 01:21:44.610
questions. But the most
important thing is.

NOTE Confidence: 0.8615757

3c57b84f-24da-4670-9f6e-03c8a74030d0
01:21:46.510 --> 01:21:50.540
Whenever you cannot find a
gate, there is a possibility

NOTE Confidence: 0.8615757

087b50d4-2fb2-4689-ac1d-3504e722bf60
01:21:50.540 --> 01:21:54.570
that you can build that kid
from other gates. Remember

NOTE Confidence: 0.8615757

0cac0f81-3403-4f9f-a573-b95d5b99a9bb
01:21:54.570 --> 01:21:59.809
this and one more thing I
want to show you is this. So

NOTE Confidence: 0.8615757

4b561fdf-be4b-44ad-bd2e-cb9e7f300673
01:21:59.809 --> 01:22:01.824
you remember that at first.

NOTE Confidence: 0.93460935

c45c9f25-93f7-40c4-8482-61609e136e1e
01:22:03.040 --> 01:22:03.780
You asked.

NOTE Confidence: 0.7541221

ceae47a7-b939-4506-9a69-06e99959ee3b
01:22:04.950 --> 01:22:08.934
What is the goal of this

NOTE Confidence: 0.8408483

2d9e26bf-04aa-4d35-b50d-6e545e07f744
01:22:08.934 --> 01:22:15.518
banner? So you see that this
flower is made of not. This

NOTE Confidence: 0.8408483

bb7d9c1c-e499-4692-b9eb-bc2f4ed2921d
01:22:15.518 --> 01:22:21.014
flower is made of and, and
this flower is made of or

NOTE Confidence: 0.8408483

8daa2487-23d3-40e7-b3bd-5d20373bf831
01:22:21.014 --> 01:22:26.510
gate, so the combination of
nuts and or we can build these

NOTE Confidence: 0.8408483

1ebce997-a072-4e86-af43-b097458c9741
01:22:26.510 --> 01:22:31.090
current Now this CPU's CPUs
are the most powerful engines

NOTE Confidence: 0.8408483

fef7e11f-dfa5-4826-9aaf-8f1f3c24e872
01:22:31.090 --> 01:22:35.670
for algorithm, so we just
using these simple units. We

NOTE Confidence: 0.8408483

c6e522ab-b691-46f1-81c6-820e0de31f68
01:22:35.670 --> 01:22:37.502
can build that complicated.

NOTE Confidence: 0.49654236

7047b34a-f4fe-47b5-a072-2a1dbb0c84a2
01:22:38.880 --> 01:22:39.250
Instant.

NOTE Confidence: 0.85432094

f86bf99d-bf76-47b5-80ee-8882f9c37bc0
01:22:40.700 --> 01:22:45.650
So that was the intention behind
the design of that battery.

NOTE Confidence: 0.84756726

9834d987-ca99-4a3a-9958-e1d0f2756f23
01:22:46.250 --> 01:22:50.166
So any other questions? Yes,
there's lots going to be posted.

NOTE Confidence: 0.84756726

c9041129-ee8f-4fa4-a095-f3b3ac667ab3
01:22:50.166 --> 01:22:53.726
I mean in two or three hours.
Yes, for sure.

NOTE Confidence: 0.8981084

f43853cb-e124-493f-b70e-973d5936d0d8
01:22:57.840 --> 01:23:02.339
Thank you dear. Oh thank you
all for your attention and

NOTE Confidence: 0.8981084

f3041237-5892-4e69-a09f-389f27f6d659
01:23:02.339 --> 01:23:03.157
your attendance.

NOTE Confidence: 0.7983114

e827b937-af2c-4d34-b415-64125bd003eb
01:23:06.370 --> 01:23:10.855
Thank you Amir and all of you have a great rest of the day.

NOTE Confidence: 0.87416834

5311f469-c4da-421d-9320-f289d0a855a0
01:23:13.100 --> 01:23:15.790
 Goodbye. You too Amir

NOTE Confidence: 0.85455376

81366aa5-52ef-4341-90ef-1e164024d233
01:23:17.330 --> 01:23:19.718
 Thank you Zach thank you Ming

NOTE Confidence: 0.8549357

7a08ea2a-4969-4d03-b53d-e23fa6d9620b
01:23:22.260 --> 01:23:27.070
So I just wanted to stop the
recording. I'm going to be in

NOTE Confidence: 0.8549357

39a75fa7-ebfe-47fb-8118-3efe6fa840ec
01:23:27.070 --> 01:23:30.770
the office. I'm in the
blackboard, so if you have

NOTE Confidence: 0.8549357

1ec92e6c-7aa9-4308-956f-b7b43cc5c672
01:23:30.770 --> 01:23:34.100
any questions I'm ready to
take your question there.

