WEBVTT

NOTE duration:"01:16:31.9170000"

NOTE language:en-us

NOTE Confidence: 0.554621

b78060c5-6e73-4da6-9a20-467e39aca8c8
00:00:00.040 --> 00:00:01.780
That's great, uh?

NOTE Confidence: 0.86280614

8bb8922c-5d41-4ecb-b148-8713a6200276
00:00:03.250 --> 00:00:07.666
So we'll start in one or two
minutes just waiting for other

NOTE Confidence: 0.86280614

8f5b95ba-e992-4669-b5c0-9cf1847d1799
00:00:07.666 --> 00:00:09.506
students to join the class.

NOTE Confidence: 0.10946226

3f4f1f54-e3ad-4574-a7d9-2f70fbfa3ce1
00:00:10.150 --> 00:00:11.320
Uh.

NOTE Confidence: 0.84555346

be433d10-3364-4498-94e9-20fc793821c1
00:00:12.900 --> 00:00:16.896
My Internet status says that I
mean my Internet is not that

NOTE Confidence: 0.84555346

97540474-ac59-42c4-be24-925497657583
00:00:16.896 --> 00:00:19.227
accurate. So if at some point my

NOTE Confidence: 0.882151

eb0728cc-5548-40aa-9f3d-204350a000e7
00:00:19.227 --> 00:00:22.748
sound cutoff or. Whatever
happened, let me know in

NOTE Confidence: 0.882151

fc7b91c7-a44a-4c82-8f31-963a6e23a149
00:00:22.748 --> 00:00:23.920
the chat box so.

NOTE Confidence: 0.5074548

5b8d3496-f12d-43c8-b1b8-d30359b4be2f
00:00:25.060 --> 00:00:26.968
Uh, thank you.

NOTE Confidence: 0.8010957

f52377b8-2f55-4c3d-861b-6ac8223f6256
00:00:29.960 --> 00:00:31.784
 Oh OK, thank you, Ariya, thank 

NOTE Confidence: 0.9321268

bb912476-0bc9-48b1-aa24-f786cfdf34a8
00:00:31.784 --> 00:00:33.930
you. So.

NOTE Confidence: 0.87618303

13494f5a-b503-45ad-bc37-044ec0235480
00:00:35.080 --> 00:00:36.470
Finally, my.

NOTE Confidence: 0.88836193

dfc01b45-854c-42eb-83b5-9a32cfef0762
00:00:37.870 --> 00:00:41.740
Monitor is actually delivered to
my place, so I can.

NOTE Confidence: 0.84660804

b8cbcc1a-6b04-4dc7-a757-1bfd7b50e267
00:00:42.600 --> 00:00:44.868
Use my monitor today.

NOTE Confidence: 0.9395145

58b26ef2-9efb-4fe8-a5f3-83f5d3cc59e1
00:00:47.390 --> 00:00:49.600
Let me share my screen.

NOTE Confidence: 0.9028437

62ccdd9f-e9d1-48b1-8075-6a68d667688c
00:01:22.060 --> 00:01:22.830
OK.

NOTE Confidence: 0.86871326

fbaf6706-90d1-4249-b055-4f68f7700efc
00:01:35.330 --> 00:01:36.610
What happened?

NOTE Confidence: 0.8721651

de07c1e7-9db3-41bc-b6a9-4adc891b0c06
00:01:49.340 --> 00:01:50.910
What's happened?

NOTE Confidence: 0.39667445

ebd42de5-e60f-4283-960c-a96c90368efa
00:02:38.670 --> 00:02:39.530
Nothing.

NOTE Confidence: 0.8963188

4724e74a-5911-436a-8f3a-997622cc35fa
00:02:43.530 --> 00:02:45.990
Oh, I don't think so.

NOTE Confidence: 0.76468635

611cdae7-0b80-452e-84d1-6a10e460ab25
00:02:46.960 --> 00:02:47.540
It's.

NOTE Confidence: 0.68163925

037ff407-6e64-4f1e-be3e-5e89b0a4637e
00:02:49.000 --> 00:02:53.354
 Maximum hz is 75 for this monitor. 

NOTE Confidence: 0.9254612

571c5c55-6a51-42d6-a3e1-4b6308fbef69
00:02:58.920 --> 00:03:02.460
Yes, I. But

NOTE Confidence: 0.8986087

b045bbc8-691c-48f5-91f5-f91dc673d57b
00:03:04.240 --> 00:03:07.397
I checked the response time,
so I guess the response time

NOTE Confidence: 0.8986087

8501a5a8-4d68-44d0-92dc-500f927385fb
00:03:07.397 --> 00:03:08.258
is less than.

NOTE Confidence: 0.93086606

1bd3136f-1021-4a5e-b7af-c5488ca0eb19
00:03:09.890 --> 00:03:10.979
I forgot that.

NOTE Confidence: 0.5981715

ba0c285a-281d-45ab-8e7b-f05fe734cd02
00:03:12.460 --> 00:03:15.764
Ah yes, correct, yes

NOTE Confidence: 0.7733877

813276c4-2bc8-4a3c-aee7-e51b9496ad17
00:03:15.764 --> 00:03:23.008
millisecond, yeah. Uh so,
but when I check the I

NOTE Confidence: 0.7733877

65751a9a-e63f-4d00-8ae9-76d6f6d0f822
00:03:23.008 --> 00:03:26.554
mean, oh maybe it depends on.

NOTE Confidence: 0.6202984

917f4c74-446e-47c5-aa04-0e930507c90c
00:03:28.760 --> 00:03:33.065
 My laptop as well, because uh, hertz

NOTE Confidence: 0.8164224

895504a5-f36a-488d-b3e1-26be5cd58bb5
00:03:34.170 --> 00:03:37.797
Because when I wanted to
change the Hertz, it

NOTE Confidence: 0.8164224

c8697032-8cac-4768-bdd4-ca1c3bd155d9
00:03:37.797 --> 00:03:40.215
just give me the 5th 75.

NOTE Confidence: 0.88220817

20357320-725d-45d6-96d0-c1f9d35b2289
00:03:41.350 --> 00:03:42.010
So.

NOTE Confidence: 0.8091374

69db11f9-93d4-4f9b-affa-53ddb691e5de
00:03:46.870 --> 00:03:51.487
latterÂ  we will see what does it mean hertz and. 

NOTE Confidence: 0.90036124

5c077e8b-2c9a-41f5-a32c-55c32bab566c
00:03:54.090 --> 00:03:55.510
What we mean by?

NOTE Confidence: 0.7556306

44e1edc9-6cc1-456d-bfa8-2fc2bdd98046
00:03:56.850 --> 00:04:01.410
Higher Hertz the better, so I'm
going to start up.

NOTE Confidence: 0.8039243

f339b01e-fe74-47c0-b5ec-8cac20cbdef4
00:04:03.740 --> 00:04:08.072
An mean time. If you have any
questions, just Simply put your

NOTE Confidence: 0.8039243

dcb18116-71ea-4261-83de-8e9a143f5526
00:04:08.072 --> 00:04:09.516
question in the lectures.

NOTE Confidence: 0.6745829

581f29a9-3cac-4dbc-862a-d1ef8758faca
00:04:10.090 --> 00:04:12.428
we can't start without seeing your face. 

NOTE Confidence: 0.845456

7e4bf289-adf2-4643-b3c4-1c28a3e18821
00:04:14.970 --> 00:04:19.128
I have it now. I mean in the
bottom of the blackboard you can

NOTE Confidence: 0.845456

f34d00df-054b-4156-a9b1-b217546495b7
00:04:19.128 --> 00:04:20.910
see my face. I believe Michael.

NOTE Confidence: 0.91527504

74f7156e-3b85-4664-9dad-9e790b92f894
00:04:21.840 --> 00:04:22.710
Or no.

NOTE Confidence: 0.1116156

872d9649-bccb-473e-8ac9-233285b68201
00:04:30.600 --> 00:04:31.330
Oh

NOTE Confidence: 0.5675485

198d4af9-1a05-4e88-b713-97957c6776ba
00:04:37.790 --> 00:04:39.130
that's a strange 'cause, uh?

NOTE Confidence: 0.9000117

ba64c615-53c5-4157-b348-636858efd875
00:04:42.170 --> 00:04:44.830
I can see let me check my.

NOTE Confidence: 0.9291614

58a5bfcc-b469-43db-b94e-51f69ee57adc
00:05:03.230 --> 00:05:04.169
How about now?

NOTE Confidence: 0.79595995

7ddaff9c-7439-4eed-a760-72092d8f0957
00:05:06.700 --> 00:05:10.720
Because I can
see my awesome.

NOTE Confidence: 0.75420976

d1f2369c-1a02-4e0e-b5a1-bec75fbe1ce7
00:05:11.990 --> 00:05:12.450
OK.

NOTE Confidence: 0.8251526

eda675eb-5df9-4d78-97b8-f0187660e16e
00:05:16.270 --> 00:05:19.240
Great, yeah, so let's start but.

NOTE Confidence: 0.77725387

b7a2f57d-d787-4b36-a511-62252e09f241
00:05:21.800 --> 00:05:25.376
Thought it was better, uh, I
just wanted to mention that we

NOTE Confidence: 0.77725387

9a589766-ccfc-4e72-b0ef-b4eea511f3bb
00:05:25.376 --> 00:05:26.866
released the grade or marking

NOTE Confidence: 0.78591573

daac5e18-d002-4663-a684-216e36eba016
00:05:26.866 --> 00:05:32.480
 for the lab. Three, and also for the lecture assignment three, uh, I 

NOTE Confidence: 0.78591573

68cd8273-7437-4176-8345-e49b9acd0210
00:05:32.480 --> 00:05:36.310
received some email from a
student about, I mean the

NOTE Confidence: 0.78591573

85cfb9d7-8493-49f2-a063-ab1885119229
00:05:36.310 --> 00:05:37.459
marking issues and.

NOTE Confidence: 0.9109478

fcf6ccaa-9c27-4c9a-846d-4f8c4468666c
00:05:38.730 --> 00:05:42.630
Also, for the lab 0504.

NOTE Confidence: 0.7666088

dbb67b8a-1172-48d9-b493-fdb1fff1c927
00:05:44.590 --> 00:05:47.299
Someone, for instance, I
received an email about. I

NOTE Confidence: 0.7666088

de072586-cc9d-4623-88ce-e39d7237ac20
00:05:47.299 --> 00:05:49.406
mean the second attempt or
third attempt.

NOTE Confidence: 0.83337694

86bf8d96-842d-4720-89e2-ae8c284a87f3
00:05:52.980 --> 00:05:57.768
 In my first class, also in the course outline also in the 

NOTE Confidence: 0.90801

bb26452e-0c12-48bd-bf6c-7a758f8b50be
00:05:57.768 --> 00:05:59.520
blackboard. So.

NOTE Confidence: 0.80880386

93e65e14-3129-4ee1-9236-a831601f5f95
00:06:00.530 --> 00:06:04.780
Probably all the students that
are attending the class knows

NOTE Confidence: 0.80880386

0b7c07ce-b3d2-4532-9ce2-8e23419e6a7f
00:06:04.780 --> 00:06:10.305
this. Plus I say this an in
order to record to be recorded

NOTE Confidence: 0.80880386

6c588abd-ee8d-4ab4-a1d2-4f7eec211c6e
00:06:10.305 --> 00:06:14.980
and then others can know that.
Please reach out to the.

NOTE Confidence: 0.8248677

3c86021f-79be-4f5e-8551-fa42c5258d85
00:06:15.690 --> 00:06:20.475
Course lab instructor. For all
of these. So basically if you

NOTE Confidence: 0.8248677

1d647b5b-cca9-4631-92cd-af0dc9625207
00:06:20.475 --> 00:06:25.260
want to see who's your lab
instructor, you can simply go.

NOTE Confidence: 0.7361835

265e976c-e9a2-4fe9-a464-d577a080542a
00:06:26.960 --> 00:06:29.300
Let me show you a.

NOTE Confidence: 0.90815663

1918367b-9414-4640-9c04-a2405191af44
00:06:30.080 --> 00:06:32.006
You can simply go to the.

NOTE Confidence: 0.84450585

33d0351d-8595-481e-adba-97814501af20
00:06:33.440 --> 00:06:35.459
Sections and instructors.

NOTE Confidence: 0.68434894

900e4267-5e04-421f-b69f-8759658de701
00:06:40.290 --> 00:06:42.318
And then here.

NOTE Confidence: 0.6098463

fd1dbda7-1b3e-4875-b71c-259fd868a8c5
00:06:43.140 --> 00:06:45.308
You can see a.

NOTE Confidence: 0.89364207

34cfe47a-a93c-4aeb-874c-2340a10e5290
00:06:49.610 --> 00:06:53.196
Here you can see that who is
your lab instructor. For

NOTE Confidence: 0.89364207

8e50b9de-a1c8-4bd4-b2dd-f29c073081fb
00:06:53.196 --> 00:06:54.500
instance, if you already.

NOTE Confidence: 0.85146034

f0089ad1-139a-4b55-8633-6eaccbd8918f
00:06:56.080 --> 00:07:02.128
if you are in sec 53 Moeed is your lab instructor? Or if you are in the 

NOTE Confidence: 0.85146034

b76aa616-24de-482e-bfb7-18d8281364e5
00:07:02.128 --> 00:07:06.880
Section 54? This is based on
your registration for the labs.

NOTE Confidence: 0.85146034

6a4f7ef4-1951-4486-97b8-eebacf26bfc3
00:07:06.880 --> 00:07:12.496
 So then you know that that your lab instructor is Manil, so you 

NOTE Confidence: 0.85146034

3f3d2dc4-ed08-4863-b67f-0b15bdebb4b5
00:07:12.496 --> 00:07:16.384
communicate with the lab
instructor and you explain your

NOTE Confidence: 0.85146034

906cc1dd-c675-4883-9c8f-df412f8bac87
00:07:16.384 --> 00:07:21.136
problem or whatever you have and
they are responsible to address

NOTE Confidence: 0.85146034

9d4c04cd-89ea-4ba2-b128-f02a9fa04244
00:07:21.136 --> 00:07:25.024
your issue. If your problem is
not resolved, then.

NOTE Confidence: 0.79018444

7730a8d2-a757-4b5b-9939-d73782b61abe
00:07:26.370 --> 00:07:28.337
 Get back to me and. I'm happy 

NOTE Confidence: 0.87833846

1a6b2765-0832-464b-88fe-2c9a6082ae47
00:07:28.337 --> 00:07:33.040
to help you. So at first try the
lab instructors. I know that

NOTE Confidence: 0.8667597

958e8445-be6c-4520-9918-6913e5fd7d6f
00:07:33.040 --> 00:07:38.012
there are some. Marking issues
sometimes the market cannot run

NOTE Confidence: 0.8667597

a03f218a-94cd-4476-a10e-e829ba661b7e
00:07:38.012 --> 00:07:44.330
your program, so you may receive
0, but then when you explain how

NOTE Confidence: 0.8667597

79bd52c7-4065-4ea8-ab79-6e609caef79b
00:07:44.330 --> 00:07:50.162
to run the program or sometimes
the markers actually miss to see

NOTE Confidence: 0.7892425

d279a879-bfea-451c-a652-8fd5a5aa48ac
00:07:50.162 --> 00:07:56.650
your files. And then you you
receive, I mean less than 100

NOTE Confidence: 0.7892425

f04a352a-b5d6-44f6-a93c-40986abf0e98
00:07:56.650 --> 00:08:00.871
Mark. So then you can
communicate with the Lab

NOTE Confidence: 0.7892425

29ce0b35-2e1e-429e-bacf-8dde1b648445
00:08:00.871 --> 00:08:06.030
 Instructor they will, review your labs and then as I said, if. 

NOTE Confidence: 0.8674663

1a7f38cf-4b93-49a8-bd9a-9348413064f5
00:08:06.800 --> 00:08:11.216
As I said here, if not resolved,
then reach out to me.

NOTE Confidence: 0.8207331

ef01c24b-6480-4081-a247-8201c14f308a
00:08:12.010 --> 00:08:16.625
So please do that and then, uh,
that's it. That's the only thing

NOTE Confidence: 0.7872335

4fbac76a-71cd-4a95-8572-76a88cf619dc
00:08:16.625 --> 00:08:20.480
that I. I wanted to mention.

NOTE Confidence: 0.8085586

066ddf2b-b46e-4e80-b9e5-68800a7ff7d2
00:08:21.970 --> 00:08:27.082
So is there any other questions?
Can we please get solutions to

NOTE Confidence: 0.8085586

1b0dc644-6662-428c-a2fd-89381d6d53be
00:08:27.082 --> 00:08:31.768
assignment so we have thorough understanding yes yes, I release the.

NOTE Confidence: 0.72068375

358eb4f7-0986-400a-b439-dc538d145ea8
00:08:32.470 --> 00:08:36.565
An added key, the key for
the assignments. So

NOTE Confidence: 0.72068375

928d5ca8-ee71-4537-9de0-e0e1151f3434
00:08:36.565 --> 00:08:40.660
 basically now that we have the marks for lab

NOTE Confidence: 0.8628952

943e97d6-b8bc-4c71-a3f5-978481dfdb0d
00:08:42.940 --> 00:08:47.368
Â I will release the key for lab 2

NOTE Confidence: 0.8628952

a5cc0cc1-81c2-4924-bb06-c93eb39d45be
00:08:47.368 --> 00:08:51.058
because sometimes I extend the
deadlines for some students, so

NOTE Confidence: 0.8628952

b18682fd-c6ca-45c9-ae4f-1af0eb1846be
00:08:51.058 --> 00:08:55.855
I have to wait for them to
submit and then I will release

NOTE Confidence: 0.8628952

10880c97-dab9-43d3-8ed5-22462eff9dbb
00:08:55.855 --> 00:09:00.283
the key. But as I said,
sometimes you don't have the key

NOTE Confidence: 0.8628952

27007d41-5300-4be4-a116-45f0d9d40b1d
00:09:00.283 --> 00:09:05.080
for all questions. You only have
the keys for. I mean those that

NOTE Confidence: 0.8628952

cc7930bf-38db-43f2-931e-42c57097c73a
00:09:05.080 --> 00:09:07.294
most of the students try to

NOTE Confidence: 0.803291

f4d60384-d4f1-4849-87c1-e48fcc83eae0
00:09:07.294 --> 00:09:12.980
answer them. So if you see
that, for instance we have 10

NOTE Confidence: 0.803291

75f72792-180a-445c-9bff-b4c98c684e2f
00:09:12.980 --> 00:09:16.886
questions at the first
assignment, you will see the

NOTE Confidence: 0.803291

4b6b3958-c857-4d56-8444-960ae5086de9
00:09:16.886 --> 00:09:21.660
whole I mean answers, but for
the old questions, but in

NOTE Confidence: 0.803291

add41842-a2d4-40f8-9055-4680397273db
00:09:21.660 --> 00:09:24.698
later lectures assignment
there is only function.

NOTE Confidence: 0.8494636

ebf506d1-2491-4820-937a-0e87340a935b
00:09:28.080 --> 00:09:33.414
Is to the question. Yes, I will
do that also you can attend the

NOTE Confidence: 0.8494636

90dcda4f-fff1-49da-be89-584ec161dd04
00:09:33.414 --> 00:09:37.605
office hour or lab sections so
myself or the language structure

NOTE Confidence: 0.8494636

8546fdb1-58d8-4895-87c0-47e71ed36084
00:09:37.605 --> 00:09:39.891
can solve the problem for you.

NOTE Confidence: 0.124078505

85d67968-748e-431a-848a-2c86a05ce742
00:09:41.970 --> 00:09:42.570
Ah.

NOTE Confidence: 0.9077649

c4f8ad0f-2933-4928-8363-8190c0272a12
00:09:43.860 --> 00:09:45.220
So any other questions?

NOTE Confidence: 0.73338044

bb8ea022-e334-4e28-a818-813db7eee81b
00:09:49.110 --> 00:09:55.350
So seems like good to start up,
so we were at design.

NOTE Confidence: 0.06930575

aa4d76ad-daf4-4367-9eb0-09e95224372e
00:09:56.760 --> 00:09:57.620
Um?

NOTE Confidence: 0.36907306

0b36f246-3891-4e24-93d1-18455b6d3ed7
00:09:59.660 --> 00:10:01.290
We Said that, uh?

NOTE Confidence: 0.91918206

57aa615a-d518-406f-a64e-ba3f549533c5
00:10:02.660 --> 00:10:04.970
The design is that we are given

NOTE Confidence: 0.87318623

9c9855cf-d611-409e-b67a-ffb5b4927d61
00:10:04.970 --> 00:10:10.611
a problem. And we have to design
A logic circuit or digital unit

NOTE Confidence: 0.5236021

d756628d-563a-45d3-a78d-6865328ce73e
00:10:10.611 --> 00:10:14.260
for that. Uh, and we said that.

NOTE Confidence: 0.81078076

4baaa206-7a1c-4b8b-b73a-e6fce2137982
00:10:16.250 --> 00:10:21.934
I go to them or a step by step
manual to design any logic

NOTE Confidence: 0.81078076

afe47e43-893d-4c43-accd-735700682784
00:10:21.934 --> 00:10:23.558
circuit for any problems.

NOTE Confidence: 0.7689355

b157a9a9-4188-415e-9d3a-67cbbac3fa5e
00:10:24.340 --> 00:10:28.270
Uh, in order to do that, we
introduced the midterms.

NOTE Confidence: 0.86176586

78ea5474-589f-41c0-b521-966719123420
00:10:28.960 --> 00:10:35.560
He said that any logic circuit
can be represented by some of

NOTE Confidence: 0.7419948

06945d0e-39e2-4b63-b355-495918982b05
00:10:35.560 --> 00:10:39.468
 minterms. Minterms was the. 

NOTE Confidence: 0.8168593

554b78cb-80a5-4df3-bdae-25142995d446
00:10:40.880 --> 00:10:43.382
At the end, within the binary

NOTE Confidence: 0.8398867

a51d7e14-a731-4bed-9349-831d21975624
00:10:43.382 --> 00:10:48.560
variables. Such that it makes
the output of 1. So basically

NOTE Confidence: 0.8398867

050c9d49-127d-4926-a202-073a200ee531
00:10:48.560 --> 00:10:52.268
 there is a relationship between minterms and truth table. 

NOTE Confidence: 0.8176308

eec1daf4-da8c-4dd8-9527-4f4a0fc0ebc8
00:10:53.510 --> 00:10:57.899
 And then we said that when we write the boolen, the 

NOTE Confidence: 0.8176308

6808f5b1-66dd-4300-b382-7be380841217
00:10:57.899 --> 00:11:01.490
output in the truth table
based on the midterms.

NOTE Confidence: 0.7704029

ecf05c43-6152-4dc0-be01-cf6e495f63de
00:11:04.530 --> 00:11:08.820
And, uh, to level at first level
we do and.

NOTE Confidence: 0.8280515

e107a779-ac2d-400b-97e8-5fe6c983065a
00:11:09.740 --> 00:11:13.890
Basically the products by
product we mean ending and then

NOTE Confidence: 0.8280515

2af0a9a7-56f7-4865-9d5e-506b99c0a1ec
00:11:13.890 --> 00:11:19.285
the result of these ants become
or together. So one final or at

NOTE Confidence: 0.8280515

c48f7170-3d03-466e-8585-4beea46336bf
00:11:19.285 --> 00:11:25.510
the end. As a result, for the OR
we say that we use the symbol

NOTE Confidence: 0.8280515

8a5fd635-9e0a-4d15-9e36-e240f8c5ad3d
00:11:25.510 --> 00:11:30.490
plus, so that's why we call it
some. So design the logic

NOTE Confidence: 0.8280515

d7628c8a-4dd4-4c89-9900-d5b4a52b1845
00:11:30.490 --> 00:11:35.055
 circuit based on the minterms becomes the sum of products or 

NOTE Confidence: 0.8280515

a21f8bc4-26e2-4808-9d82-ec571eda8b6d
00:11:35.055 --> 00:11:39.620
we do products and then we sum them together or SOP

NOTE Confidence: 0.77860904

631f9bd7-56eb-457f-a035-869163d08f64
00:11:40.210 --> 00:11:44.410
Or we Add all the inputs,
those inputs that makes

NOTE Confidence: 0.77860904

91ec9769-37a9-44df-ae51-e9b755cdc807
00:11:44.410 --> 00:11:46.510
the output one and then.

NOTE Confidence: 0.8342347

84ade96e-7338-48c2-874a-51fa40ef2754
00:11:48.180 --> 00:11:51.690
For them to better. So basically
two level logic 2nd.

NOTE Confidence: 0.87921995

405642a1-1ba0-41be-a6bb-bc9f192776ed
00:11:53.310 --> 00:11:59.615
So here is an example. Just to
remind you about the this design

NOTE Confidence: 0.8408535

f4e9861c-4756-417c-ad35-e7ffa897f351
00:11:59.615 --> 00:12:04.990
algorithm. So imagine we have a
truth table in the left side. We

NOTE Confidence: 0.8408535

175adcab-a849-4025-8f37-12b7abde17c3
00:12:04.990 --> 00:12:09.540
have the binary variables as the
inputs in the right side we have

NOTE Confidence: 0.8408535

edbcc74e-5e2c-4c15-b79a-e1f76e0b0944
00:12:09.540 --> 00:12:13.740
the binder variables at as the
output. So we have only one

NOTE Confidence: 0.8408535

50a12e04-1936-411c-af39-88157625f680
00:12:13.740 --> 00:12:16.890
binary variable as the output.
We called this Boolean

NOTE Confidence: 0.8408535

6d5797a0-072d-4e82-8018-985c31e1df0d
00:12:16.890 --> 00:12:20.390
expression or Boolean function F
as a function of XYZ.

NOTE Confidence: 0.82148314

1c2982ad-8b69-41c1-9819-73cc88410e5c
00:12:21.380 --> 00:12:25.527
So we see that whenever XYZ
are all zero, the art of this

NOTE Confidence: 0.82148314

21877bbb-4ef9-4b06-b711-eb60268f98be
00:12:25.527 --> 00:12:29.674
one. Whenever here Francis X
is 1 Y is 1 and Z0. The

NOTE Confidence: 0.82148314

488b8019-883a-476b-9223-cad062f12604
00:12:29.674 --> 00:12:31.269
output is 1 and etc.

NOTE Confidence: 0.8693409

887e2263-7e1c-4b08-ad32-fa429e17f280
00:12:32.740 --> 00:12:33.888
Also for these three.

NOTE Confidence: 0.7239818

f51e25ed-4f5b-441e-ba1a-1456fbfb053d
00:12:34.530 --> 00:12:36.190
When we want to design.

NOTE Confidence: 0.74586993

5fc3481b-c32a-44fc-bf9f-01ab9f6b07c6
00:12:38.390 --> 00:12:42.914
 So we said before minterms we only look at those entries. That 

NOTE Confidence: 0.74586993

bd864e46-db94-4050-babb-236c045d95c8
00:12:42.914 --> 00:12:44.799
makes up one. So here.

NOTE Confidence: 0.81834

2f0b32d6-2b12-4082-9aa4-4ba8f5f1dd11
00:12:45.560 --> 00:12:49.218
Here. And these two here.

NOTE Confidence: 0.8050265

fa14217e-fe88-41e5-a5a9-866ab8c1f2ba
00:12:49.800 --> 00:12:55.104
And then we said that we can
write the Boolean function F as

NOTE Confidence: 0.8050265

901f69aa-bd99-4d24-80f5-e94df3fe5a2b
00:12:55.104 --> 00:12:59.592
some of the minterms and these minterms are those minterms that

NOTE Confidence: 0.8050265

4aaf4d38-b5c8-4c77-bcd9-aa0d388eebd9
00:12:59.592 --> 00:13:03.672
makes the output one. For
instance, this is the first

NOTE Confidence: 0.8050265

59a1081c-bc01-44d7-a78d-27d6c00c5855
00:13:03.672 --> 00:13:07.344
entry that makes the output one
and for this.

NOTE Confidence: 0.73817515

e753d076-d189-415b-83e5-1ec4eb98be80
00:13:07.940 --> 00:13:14.002
What's the new term? The term is
0 if put the zero binary value

NOTE Confidence: 0.73817515

bea9feef-0f7a-4112-842b-d6ceacfbd0d4
00:13:14.002 --> 00:13:16.600
for the zero in the input.

NOTE Confidence: 0.78371984

9e376eed-a445-4062-b7f2-910bd1d284c4
00:13:17.630 --> 00:13:20.360
It makes the output one or.

NOTE Confidence: 0.786581

52903b71-ebea-4f64-aa41-8768a82d5205
00:13:24.000 --> 00:13:28.565
Free entries here mean that
if you put the binary value

NOTE Confidence: 0.786581

e99a1a65-067d-4801-bb0c-ac9ceaba8347
00:13:28.565 --> 00:13:32.300
for 3:01, one is the binary
number for free.

NOTE Confidence: 0.8907714

1e0c8326-7141-4798-bace-01b5506dfb87
00:13:36.160 --> 00:13:42.280
Oh OK, OK alright. So let me
turn off my camera so.

NOTE Confidence: 0.9031569

989b23aa-9fbc-47f2-be61-73d53b6748d7
00:13:45.520 --> 00:13:46.130
OK.

NOTE Confidence: 0.8758381

cfe7de9f-cb6d-4ab6-b958-ff620fc2ffd7
00:13:47.720 --> 00:13:49.020
So hopefully.

NOTE Confidence: 0.8940382

7a3ad2a1-fc76-4c62-8098-5646df99fcb0
00:13:50.500 --> 00:13:52.276
You don't have the
Internet issue.

NOTE Confidence: 0.87761885

4d42efe1-4c44-4256-b9d8-f11329ca3a4e
00:13:55.830 --> 00:13:59.229
How about now everything is
clear now you can see or

NOTE Confidence: 0.87761885

c56a8817-3611-4d1a-8d6e-3afcd257205b
00:13:59.229 --> 00:14:00.156
hear me well.

NOTE Confidence: 0.85443425

0d40cedc-9ad1-4921-8b18-baa1f9ba11b6
00:14:04.660 --> 00:14:05.240
Awesome.

NOTE Confidence: 0.49432877

b2d3f000-3bd6-435a-aa04-3c5e43dec15a
00:14:06.260 --> 00:14:09.705
Awesome. Great. So,

NOTE Confidence: 0.8450431

b78ff88b-6a1b-4424-a1f1-975b2d5cb3a2
00:14:09.705 --> 00:14:12.100
uh. Here first.

NOTE Confidence: 0.8209057

4faed4e0-a037-4bc3-9059-1634c6df171d
00:14:13.950 --> 00:14:18.690
that if you put the binary value for free, 

NOTE Confidence: 0.8209057

dca8a68f-4bc6-49f0-a709-893ecdb97650
00:14:18.690 --> 00:14:24.615
it makes the output one or here
here is 101 which is 5 so many

NOTE Confidence: 0.8209057

c6efdf86-fbc7-4a21-819d-edcf719e3a83
00:14:24.615 --> 00:14:29.750
that minterm five and here 110 which is 6 so minterm six.

NOTE Confidence: 0.8209057

01d99d28-f225-4c43-9bd2-e7c1d13f0d17
00:14:29.750 --> 00:14:34.885
Another way to run a right this
shorter way to write this is

NOTE Confidence: 0.8209057

b6dfc469-a6ca-4e10-b447-0cad9b92e226
00:14:34.885 --> 00:14:36.070
this just some.

NOTE Confidence: 0.8447444

b2920d48-f64f-456f-9664-8c7111e5a9a6
00:14:36.800 --> 00:14:40.510
Are midterms 035 and six?

NOTE Confidence: 0.8584244

0ea55212-e720-408a-a53f-4994bfe25b2b
00:14:43.390 --> 00:14:50.345
And then we don't. We want to
draw or sketch or put the

NOTE Confidence: 0.8584244

4c940794-6067-4d55-ac53-1bcf241b35d0
00:14:50.345 --> 00:14:55.160
circuit in the paper. Here is
the design so.

NOTE Confidence: 0.72278875

186005ec-fa32-48d6-8aae-d20cf56d2cbe
00:14:56.190 --> 00:14:58.020
 The first And is the. 

NOTE Confidence: 0.56977874

b1e2672e-678e-40e0-98e1-3cd819eb36ba
00:15:00.660 --> 00:15:04.206
X bar Y bar Z bar.

NOTE Confidence: 0.7680807

84e128aa-dfff-4783-8ccd-408fa8aad323
00:15:04.840 --> 00:15:06.350
This is the midterm 0.

NOTE Confidence: 0.7643824

a1658d54-f8b9-42d2-984f-bf43b0037fea
00:15:07.280 --> 00:15:12.060
And together. Here is the
midterm XY&Z, which is the

NOTE Confidence: 0.7643824

b6fae485-c0f3-4555-8345-b51c35125276
00:15:12.060 --> 00:15:16.800
midterm 3, so this is the
midterm free as you can see

NOTE Confidence: 0.7643824

0f4db373-98fd-4c13-a05d-d4c7b471f63e
00:15:16.800 --> 00:15:17.985
here XYZ bar.

NOTE Confidence: 0.6808376

8cfc5e51-bd2c-497b-91c0-6fe6fc510c6e
00:15:22.910 --> 00:15:27.410
Oh let me check
up.

NOTE Confidence: 0.59362173

7b076634-f94a-4c05-99b7-c2c29bc58ade
00:15:30.940 --> 00:15:35.404
The school is it cutoff so
maybe let me.

NOTE Confidence: 0.7985204

92eadbc4-ed6f-4ec2-8f4d-701f76291796
00:15:39.260 --> 00:15:40.838
Stop my old.

NOTE Confidence: 0.82166374

fb844cf1-5bf3-44cf-a1f1-9aaec9026a0b
00:15:44.350 --> 00:15:46.636
All my software that use
Internet.

NOTE Confidence: 0.6219545

6188d208-e8f8-4890-8f0c-5580150dbd83
00:15:51.050 --> 00:15:52.540
Stop this.

NOTE Confidence: 0.8269557

a7aaf9d2-db41-456a-8b57-e0169bd6eef1
00:15:54.520 --> 00:15:56.149
Also this one.

NOTE Confidence: 0.82656974

f4ac0950-21bb-4921-b650-b5ac1febaea4
00:16:09.100 --> 00:16:10.048
How can I?

NOTE Confidence: 0.25425065

283977cb-5bd9-4197-b38c-b16b9d289a85
00:16:11.650 --> 00:16:12.980
1K.

NOTE Confidence: 0.90180326

047ad755-c3de-438a-a882-6cc0f034c487
00:16:17.810 --> 00:16:20.000
I'm trying to stop all my.

NOTE Confidence: 0.84515387

8c130f46-ca42-4995-a107-411b2f219596
00:16:22.130 --> 00:16:25.298
Connection, I mean all
software that has a

NOTE Confidence: 0.84515387

850d3d73-1258-49f4-84a8-7fcceff091dc
00:16:25.298 --> 00:16:28.862
connection to the Internet
to make my Internet better.

NOTE Confidence: 0.9245665

61f4730e-350d-4a4b-81d0-34074d8ddc7a
00:16:33.660 --> 00:16:38.320
Oh OK, yeah, maybe that's the
issue on your side.

NOTE Confidence: 0.8352602

9eaa3a59-65a0-4efc-aa7f-bedaeaf4001e
00:16:40.160 --> 00:16:43.022
What so let me try
my best at least.

NOTE Confidence: 0.75664914

7f228857-052a-40c8-b625-4cc4256297f7
00:16:45.350 --> 00:16:46.610
Good one drive.

NOTE Confidence: 0.8738973

dbcb278e-ecda-4b74-9465-df97f1297c7e
00:16:50.250 --> 00:16:54.363
Yeah, let's continue and let me
know if again.

NOTE Confidence: 0.7887096

d6c60f90-00bb-4d2b-9b92-1c129342db68
00:16:56.500 --> 00:16:58.440
The issue actually persists.

NOTE Confidence: 0.79436344

26af0a96-ea6c-4c29-853a-5c2084b85968
00:17:01.420 --> 00:17:07.910
 OK, and then we order is the result of these ands. 

NOTE Confidence: 0.83592665

e6edb9dd-a46c-4ab2-bad7-ce5ca07ba0cd
00:17:08.530 --> 00:17:13.250
Uh, in the second level,
so it becomes products and

NOTE Confidence: 0.83592665

800abb7c-d21c-4f68-83a6-e1660555a0a9
00:17:13.250 --> 00:17:15.610
the sum sum of products.

NOTE Confidence: 0.86562496

b20ae45a-498e-4cde-b8c7-cfd9390e0c85
00:17:18.220 --> 00:17:24.304
One thing is that sometimes in
the right side of the truth

NOTE Confidence: 0.86562496

cf76d7bc-77e7-4625-b9b9-1135e91e8a7f
00:17:24.304 --> 00:17:30.388
table you may have more than
one output or more than one

NOTE Confidence: 0.86562496

378946c2-94a6-4bf3-a719-2e6c5095e8bd
00:17:30.388 --> 00:17:33.937
Boolean function. For
instance, F1F2F3 and more.

NOTE Confidence: 0.90019983

268a2901-522b-4ac4-a2b5-56f3fbc2120b
00:17:35.110 --> 00:17:39.807
As an example, here is the truth
table that has one.

NOTE Confidence: 0.8313304

d958660d-796b-452c-a50d-f6a9f893e131
00:17:41.760 --> 00:17:46.260
Output function this is the
previous truth table. Imagine we

NOTE Confidence: 0.8313304

efaae127-0e14-41e3-91f7-6da6d8249ba0
00:17:46.260 --> 00:17:48.510
have another. Here is the

NOTE Confidence: 0.8179902

5bde8090-7f84-4aa9-bbea-feb8e4f6ad1a
00:17:48.510 --> 00:17:56.000
design. Imagine we have another
function F2 that for the same

NOTE Confidence: 0.8179902

0d0283c1-3460-4c84-baeb-119a2ca74595
00:17:56.000 --> 00:18:02.180
series of input. For instance
XYZ. But this function F2

NOTE Confidence: 0.8179902

933d9d9a-2078-4101-8655-2fad6e24055e
00:18:02.180 --> 00:18:08.978
becomes one only for these
midterms midterm 100 which is 4

NOTE Confidence: 0.8179902

71a4b0ac-5650-492d-996b-3a919f9514c5
00:18:08.978 --> 00:18:10.832
 and minterm 5. 

NOTE Confidence: 0.82812333

4b61dc73-b3ec-46ba-acd0-e5e2f15cded8
00:18:12.180 --> 00:18:16.752
 So this is a totally different 2's table with another, I mean 

NOTE Confidence: 0.82812333

fe8c5c0a-d97d-410a-a2d7-9306951f65c2
00:18:16.752 --> 00:18:21.324
a function F2 that makes that
becomes one for only mid term,

NOTE Confidence: 0.82812333

6608fec4-ecf4-4ecf-a740-c33b52d6a582
00:18:21.324 --> 00:18:22.467
four and five.

NOTE Confidence: 0.79972595

e537da25-cbf1-49b5-bf6a-979b133a12ec
00:18:23.820 --> 00:18:31.184
So one way is that we can,
and here's the design. So F2 is

NOTE Confidence: 0.79972595

844771ed-f6d5-4112-ace4-ef4344f4c3f3
00:18:31.184 --> 00:18:38.548
 a minterm x bar y bar and Z which is 4 and XYZ which is 5 

NOTE Confidence: 0.79972595

33422145-22fe-4131-a03b-083d10ed4ed2
00:18:38.548 --> 00:18:43.808
and then and then and then and
then order together.

NOTE Confidence: 0.793005

2a1d8696-2412-4106-ae9d-76dcabd671be
00:18:45.100 --> 00:18:50.440
 So one thing always this in 1 2's table we put both functions 

NOTE Confidence: 0.793005

46ced7a7-95e5-46d7-9d51-f11ee4c622fe
00:18:50.440 --> 00:18:56.225
because the inputs are the same
for both functions. So XY and Z

NOTE Confidence: 0.793005

a8ba0d67-d667-4c8c-83c5-f5c72432483c
00:18:56.225 --> 00:19:00.675
so we can merge these two
through stable into one.

NOTE Confidence: 0.5827255

a8b0fbd3-4215-48bf-8e05-c5e62ac5660b
00:19:02.660 --> 00:19:03.070
Behind

NOTE Confidence: 0.74066645

732e80b4-9bc2-438e-9583-afb6e5ed55f6
00:19:05.190 --> 00:19:12.232
 F1 Z minterm 0356 as before and F2 is Sigma minterm four and five. 

NOTE Confidence: 0.81563264

200965d7-5852-4455-a58c-bc89c3151714
00:19:13.610 --> 00:19:18.823
So why this is good? The reason
is that you can merge the

NOTE Confidence: 0.81563264

9cbe5c34-4eaa-4b5c-89a6-ec468c5ad3fc
00:19:18.823 --> 00:19:22.031
circuit for these two functions
into one circuit.

NOTE Confidence: 0.821168

d3b46ddd-106b-49c7-bcf7-a93f19d7f209
00:19:22.860 --> 00:19:28.188
And here is the result. So
basically you have XY&Z. Each of

NOTE Confidence: 0.821168

7f2cc626-0c83-4b82-8c1d-87b21235d807
00:19:28.188 --> 00:19:34.404
them has in the normal form and in the compliment for. So as you

NOTE Confidence: 0.821168

678df9b1-885e-4c0e-a147-10d7c6846c18
00:19:34.404 --> 00:19:36.624
 can see here minterm 5. 

NOTE Confidence: 0.6248798

b5a0b5dc-279e-4fc1-95a1-599a1b822d61
00:19:37.380 --> 00:19:41.330
here it yes minterm 5. 

NOTE Confidence: 0.7676861

254b7605-a3d4-4942-b419-13b2cc9c97d5
00:19:42.500 --> 00:19:48.410
Uh. Oh, let me know
this one. Yes yes

NOTE Confidence: 0.7676861

2f1f157a-7c86-4fe3-bf7a-7c804a6de91a
00:19:48.410 --> 00:19:52.850
 midterm 5 minterm 5 repeated in F2 and 

NOTE Confidence: 0.7676861

81659d57-89b4-47f6-b985-890da332f1e8
00:19:52.850 --> 00:19:54.515
also in F1.

NOTE Confidence: 0.70463514

7092f151-8181-463a-8a2e-2757e72de86c
00:19:56.290 --> 00:20:00.106
 Put that one circuit. This is the minterm file. 

NOTE Confidence: 0.78768283

610306f4-c72a-4f0c-b194-553bda57cfa6
00:20:00.730 --> 00:20:03.200
So XY bar and Z.

NOTE Confidence: 0.82411546

82b7fdf9-7cac-4e53-ace3-7c2d90842758
00:20:03.900 --> 00:20:08.385
So not only we can use the result of the this for the

NOTE Confidence: 0.82411546

457ca253-78bb-4373-95fc-0e84730768b3
00:20:08.385 --> 00:20:12.180
first function, also we can use
it for the second function.

NOTE Confidence: 0.8361111

753e56b1-f43d-481c-a227-6b17cfc7ade3
00:20:13.000 --> 00:20:19.664
So if you merge the two table
into 1 two stable and then merge

NOTE Confidence: 0.8361111

9b0eef65-9a95-4485-b6f6-a57ee34fdeb0
00:20:19.664 --> 00:20:24.424
the circuits into one circuit,
there's a probability that you

NOTE Confidence: 0.8361111

04a70ad4-cc03-41a1-ae02-7c5df9cf736f
00:20:24.424 --> 00:20:30.612
 can reuse the minterms in both circuits, as you can see here in 

NOTE Confidence: 0.8361111

cbca33db-5bbf-4f08-9965-fc2bec34a185
00:20:30.612 --> 00:20:36.800
 this minterm, it and five is also using F1 and also have two. 

NOTE Confidence: 0.8361111

937599ee-1da7-42c2-a1ab-1c6bb4908d27
00:20:36.800 --> 00:20:42.512
So this is 1 shorter way to
design circuits. So whenever you

NOTE Confidence: 0.8361111

6371485f-1a28-4aa7-98b5-e62b7ea6f2a9
00:20:42.512 --> 00:20:44.892
see is saying series of.

NOTE Confidence: 0.8239792

0f5af442-92bf-4b35-b809-3ee8b8939625
00:20:44.980 --> 00:20:49.776
 Inputs in the for instance XYZ and you want to design different 

NOTE Confidence: 0.8239792

a7878152-b922-479e-88fc-9ffa573b7767
00:20:49.776 --> 00:20:55.444
Boolean functions out of the XY
and Z. We can put all the

NOTE Confidence: 0.8239792

006db638-aed9-49d0-9169-c8d9a6cbe190
00:20:55.444 --> 00:21:00.676
Boolean function is 1 truth
table and then you can design it

NOTE Confidence: 0.8239792

852392e3-a1eb-48d1-98c3-7ac5d0cd796b
00:21:00.676 --> 00:21:05.472
 in one logic circuit because you can reuse the same minterms

NOTE Confidence: 0.8051666

c9988c8f-b293-4035-8a79-b13cd4a7c976
00:21:08.320 --> 00:21:12.280
 Well, another way would be you can list all the minterms 

NOTE Confidence: 0.8051666

6434f0cd-67fd-4ee5-a6d0-38fe5b882da0
00:21:12.280 --> 00:21:14.080
available midterms in the first

NOTE Confidence: 0.8451952

f16f446d-fd5b-4aea-b356-85fe29d697b4
00:21:14.080 --> 00:21:18.790
 level. And only use those minterms that are needed for you 

NOTE Confidence: 0.8451952

0005a663-3a2c-4c00-b5d8-5325f9e4833e
00:21:18.790 --> 00:21:19.912
for the OR.

NOTE Confidence: 0.7438425

ae59562b-69ff-4bce-85a5-d0d0cbced3e7
00:21:20.670 --> 00:21:24.883
 So I could for instance putting meet them, zero midterm, 1 

NOTE Confidence: 0.7438425

9d55ecef-27c1-492b-b831-6d7a927bff3e
00:21:24.883 --> 00:21:27.564
 minterm, 2 up until minterm 7. 

NOTE Confidence: 0.870512

0b72584c-1655-4d3c-a130-1cbb7d6cd422
00:21:28.120 --> 00:21:33.110
But only use the output
of those meters that are

NOTE Confidence: 0.870512

1c374dfa-8840-4d55-8398-ba4c48aedb95
00:21:33.110 --> 00:21:35.106
needed for my function.

NOTE Confidence: 0.8806085

f0513320-ca07-4f8e-869b-85f29628965f
00:21:37.430 --> 00:21:39.296
This is another way to design.

NOTE Confidence: 0.9120852

b8db3455-fda8-4c56-931a-80e29126087d
00:21:42.050 --> 00:21:47.367
So let's do a practice on a new
one. Here is the problem.

NOTE Confidence: 0.8605947

45de6189-e312-40ba-b94c-571d8f069dd7
00:21:48.190 --> 00:21:52.038
So so far we assume that the
truth table is given an will

NOTE Confidence: 0.8605947

65c24711-73c3-4461-bbb9-b6f6e33542cc
00:21:52.038 --> 00:21:55.294
 what is sum of minterms. But imagine this problem. I mean 

NOTE Confidence: 0.8605947

5571ad22-1546-4b1f-8f67-12b60e360f7a
00:21:55.294 --> 00:21:59.142
assume that we have this problem
but we are not given the truth

NOTE Confidence: 0.9057571

7ec8fab8-612a-46fc-80cb-7bc21cdab1e8
00:21:59.142 --> 00:22:01.800
table. So basically it says that

NOTE Confidence: 0.76837116

e64edcec-ce44-4b0a-9fea-2ef9d1df909c
00:22:01.800 --> 00:22:07.550
we wanted this. Circuit
that outputs the division

NOTE Confidence: 0.76837116

a295dc62-850c-407a-9e53-8a1b57b6aa1d
00:22:07.550 --> 00:22:10.064
the remainder of.

NOTE Confidence: 0.9134135

9d1f2753-4aac-45c4-b2e3-e210e1787a19
00:22:12.000 --> 00:22:14.640
Any number divided by three.

NOTE Confidence: 0.8671574

4d9e4234-98f5-4a6b-8ac6-ae41959e97d6
00:22:17.430 --> 00:22:22.019
So this is the problem. Now
we want to design. I mean I

NOTE Confidence: 0.8671574

6cfce3d6-6c6d-45f3-a52b-c93caff29106
00:22:22.019 --> 00:22:25.902
finally wanna design A logic
circuit and we give it to

NOTE Confidence: 0.8671574

e41815de-540e-4ad4-a72d-c26605472391
00:22:25.902 --> 00:22:29.079
engineer to produce the
result of division by three

NOTE Confidence: 0.8671574

5ca94fb5-467d-451a-9654-5cd1bf381c4f
00:22:29.079 --> 00:22:30.491
an output there remained.

NOTE Confidence: 0.8715017

441c175b-57a5-4b70-81bb-f08e338dfbde
00:22:31.990 --> 00:22:37.058
So the first question is that so
far we know how to design A

NOTE Confidence: 0.8715017

d43ae3b8-7415-4ad2-ba5c-bf2f15e0aa91
00:22:37.058 --> 00:22:41.402
 circuit by minterms, so we have to 1st create the truth table. 

NOTE Confidence: 0.759082

c37ea512-9951-422a-9800-a47f40346f5d
00:22:43.920 --> 00:22:48.470
 And then based on the table, we write the minterms and then we 

NOTE Confidence: 0.759082

617e50bb-b654-4b55-9d20-7354e325ae8c
00:22:48.470 --> 00:22:49.520
discuss the circuit.

NOTE Confidence: 0.8523835

a6d8f84e-1c21-4b28-93ed-506e1c2b7cf4
00:22:50.760 --> 00:22:54.972
So in the truth table we have
two sides, left side, the

NOTE Confidence: 0.8523835

3e818056-c540-4562-9516-6e6458470381
00:22:54.972 --> 00:22:58.833
binary or input variables in
the right side the outputs or

NOTE Confidence: 0.8523835

bfe102c9-243d-457c-ab1b-56b062a712a3
00:22:58.833 --> 00:23:02.343
Boolean functions. So we have
to see how many binary

NOTE Confidence: 0.8523835

f8f64ecf-7cb1-4dd3-8de0-482c4ca280e6
00:23:02.343 --> 00:23:05.853
variables we need in the left
side, how many binary

NOTE Confidence: 0.8523835

3bf4ca99-95fa-4176-8595-1f796f164fdc
00:23:05.853 --> 00:23:08.310
variables we need in the right
side.

NOTE Confidence: 0.9267875

25311252-16e7-4bbc-bdb6-7ac63a989d9d
00:23:10.110 --> 00:23:12.098
So let's start with the
left side.

NOTE Confidence: 0.89383566

14d8d767-aaad-4a91-975c-a1454cd78ad8
00:23:13.700 --> 00:23:18.510
So for the left side, we said
that the remainder of any number

NOTE Confidence: 0.89383566

91e2947a-2fcb-400e-b02f-7b94b8e61790
00:23:18.510 --> 00:23:23.690
divided by three, so we have to
ask what is the range of numbers

NOTE Confidence: 0.89383566

34b57271-76b2-41fd-a5d6-3555d6d68a50
00:23:23.690 --> 00:23:28.130
we want to divide by three and
then act with the remainder.

NOTE Confidence: 0.91928834

f50e000e-56d5-436b-a8cc-fd36b393017f
00:23:28.980 --> 00:23:32.160
So the first question is this,
what is the range of numbers?

NOTE Confidence: 0.86740005

830276b1-cf4a-4cd7-ba32-4301ea7f004c
00:23:33.330 --> 00:23:37.100
You ask the the person that put
give you the problem and said

NOTE Confidence: 0.86740005

2cfdc392-8a26-4a17-80b5-907c481ab67b
00:23:37.100 --> 00:23:41.160
said that I mean what is the
range of your number you want to

NOTE Confidence: 0.86740005

d5b489da-b72e-48b4-8d16-c43bfcd9c207
00:23:41.160 --> 00:23:44.350
divide by three and ask me to
help with the remainder.

NOTE Confidence: 0.91223174

e7748c88-168b-49fd-83ad-8254909d31f3
00:23:44.940 --> 00:23:49.236
So the guys would say that the
range of numbers would be

NOTE Confidence: 0.91223174

95fff012-0c09-4a95-b59d-dd2e4cee3e86
00:23:49.236 --> 00:23:50.668
between 0 and 15.

NOTE Confidence: 0.89569217

c6b37358-62e9-4702-8b32-5f93c62030e0
00:23:51.310 --> 00:23:52.858
So in decimal system.

NOTE Confidence: 0.8601524

c31898fb-f3b8-4ca9-8908-37316608a03f
00:23:53.500 --> 00:23:58.336
So basically it says that I want
to give any number between 01234

NOTE Confidence: 0.8601524

421ecdfe-b976-40d4-ace4-65b1594341a9
00:23:58.336 --> 00:24:03.916
open till 15 an I want to I want
you to design A circuit that

NOTE Confidence: 0.8601524

c0ac73d2-558d-47c6-9062-71ca09544c3a
00:24:03.916 --> 00:24:05.032
asked the remainder.

NOTE Confidence: 0.85260785

a6d3ecdf-266b-4aed-8af5-5da6c8d1e9b8
00:24:06.010 --> 00:24:11.036
But in our system we are working
with the Boolean logic or we are

NOTE Confidence: 0.85260785

d1bf48ce-3c9b-4472-9853-d2de118b7d4f
00:24:11.036 --> 00:24:14.985
working with binary system. All
our gates we know working with

NOTE Confidence: 0.85260785

35cb10e0-7f3d-4d0b-a277-53b5e2daa703
00:24:14.985 --> 00:24:17.498
zero and once so we have to.

NOTE Confidence: 0.84106404

4bc2d3c0-2020-40ac-9885-b7063ce931ec
00:24:18.190 --> 00:24:23.158
Transfer or transform this
decimal system to binary system.

NOTE Confidence: 0.8427432

9a989e0c-5555-4d6b-92a1-0c2edfcd13a5
00:24:24.220 --> 00:24:30.292
So in the binary system, zero
becomes zero and one becomes

NOTE Confidence: 0.8427432

c2d9272c-4ef0-4cfa-b40f-7a4f49c3d26d
00:24:30.292 --> 00:24:36.364
1/2, becomes 103, becomes 11,
etc. So basically you have to

NOTE Confidence: 0.8427432

9a465a5b-bd5a-4b12-89bd-5b81ffc46131
00:24:36.364 --> 00:24:40.228
convert all these decimal
numbers into binary.

NOTE Confidence: 0.88206

06b21729-dc7f-4224-9acf-b92756e08f09
00:24:41.040 --> 00:24:46.320
So you know already know that
the 15 becomes 111. So

NOTE Confidence: 0.88206

a9e5cf50-f0a0-4801-8536-4eb79613d1fc
00:24:46.320 --> 00:24:50.640
basically, for representing any
decimal number between zero to

NOTE Confidence: 0.88206

b69fc1de-65c9-4e31-8c8b-ab40017149ce
00:24:50.640 --> 00:24:53.040
15, we need 4 bits.

NOTE Confidence: 0.87957716

1354a687-7618-4b0e-a133-3c0e48a1ba9b
00:24:53.860 --> 00:24:59.550
Fan 0. 21111 this is the
binary system, so you already

NOTE Confidence: 0.87957716

e214efd3-08cc-4d7d-960d-58fdf691a42f
00:24:59.550 --> 00:25:04.050
know how to convert a decimal
system to binary system.

NOTE Confidence: 0.90268946

325c1bbd-2633-4416-95ff-5dbca1c13ec8
00:25:05.240 --> 00:25:10.652
So for this problem you see that
the input needs four positions.

NOTE Confidence: 0.899632

afa3fd54-d798-4d4a-adb0-c9516cfde15b
00:25:11.810 --> 00:25:17.300
From zero 123 up until 15,
which is 111.

NOTE Confidence: 0.90280753

80ecc214-4e1b-4d7f-aab8-221ae211af1a
00:25:19.850 --> 00:25:23.953
So now you know how many
positions you need for the

NOTE Confidence: 0.90280753

51c702e3-8bb2-4a95-98fc-caf30adf6792
00:25:23.953 --> 00:25:28.429
input, then you have to pick
a variable name for each of

NOTE Confidence: 0.90280753

2733920c-a452-4150-bc25-0c55abb89766
00:25:28.429 --> 00:25:31.786
these positions. You have
four positions, you have to

NOTE Confidence: 0.90280753

2e744f47-0454-4991-87b7-2c00ab894b00
00:25:31.786 --> 00:25:32.905
pick four variables.

NOTE Confidence: 0.8246031

ae0dcfae-f577-4021-82a3-f95fa74ac1d7
00:25:33.950 --> 00:25:41.546
I pick XY&Z&W. You could pick
ABCD, another guy with the kick

NOTE Confidence: 0.8246031

21395a21-4395-405c-82a7-a7735e889b0d
00:25:41.546 --> 00:25:44.078
and other variables, for

NOTE Confidence: 0.7524293

16e2cdca-081c-4393-9a0c-f9f49d98c274
00:25:44.078 --> 00:25:50.900
instance RF. EDS, whatever
any variable is OK.

NOTE Confidence: 0.8366455

7622ff6e-3368-43ac-b012-473538cff4e3
00:25:51.780 --> 00:25:57.060
Uh, this is my standard, XY, ZW.
You could say that YXYWZ.

NOTE Confidence: 0.7408686

00388f9a-c203-4216-8fcd-89f3250ad0d7
00:25:57.940 --> 00:26:00.270
Uh, it's just under there.

NOTE Confidence: 0.8822264

09cf7c51-58ba-4774-b835-8185c118f96e
00:26:01.760 --> 00:26:08.118
But the important thing is that
the order matters here because

NOTE Confidence: 0.8822264

447db74f-17b1-4bd4-959d-a9d4a8cf2885
00:26:08.118 --> 00:26:13.898
you are representing the binary
digit 40 binary number 4123456

NOTE Confidence: 0.8822264

613a313f-a2cd-4d86-a261-c34e0d9a9c7c
00:26:13.898 --> 00:26:15.632
up until 15.

NOTE Confidence: 0.9300014

e7b31e44-5e7b-49b0-bc19-dcf49b4b202f
00:26:16.470 --> 00:26:19.018
So the left side is OK now.

NOTE Confidence: 0.84590894

cb664655-087a-40b6-82f0-737c4f4321e9
00:26:19.670 --> 00:26:23.045
Unit 4 binary variable
in the input and these

NOTE Confidence: 0.84590894

998cfa37-057f-4e0e-8f95-b6805a287b2f
00:26:23.045 --> 00:26:24.170
are all combinations.

NOTE Confidence: 0.92693365

59c753ae-71d2-414a-bb48-8feef8125f28
00:26:25.510 --> 00:26:26.880
How about the right side?

NOTE Confidence: 0.89099175

a547a371-4f19-4446-9e83-ebdd10cb8ff4
00:26:27.620 --> 00:26:29.870
So now you have to calculate

NOTE Confidence: 0.8483855

640fff0b-0c34-40fc-a443-37c3cd2a664a
00:26:29.870 --> 00:26:33.498
the. In there of the
division by three.

NOTE Confidence: 0.8700475

76112de4-3f96-47c9-9b66-0e92773458ef
00:26:36.720 --> 00:26:41.879
The output what's the output?
The remainder of the output? Any

NOTE Confidence: 0.8700475

10af891c-ce6f-4286-9688-6d5b0a03e6c2
00:26:41.879 --> 00:26:46.569
number divided by three has the
correct. Andrew has the

NOTE Confidence: 0.8700475

a64c5d73-f09f-404b-9e88-cf508e497dcb
00:26:46.569 --> 00:26:52.197
remainder 012. This is by math
any number divided by three has

NOTE Confidence: 0.8700475

5c838e4b-2866-4fc5-9fcd-a5a136d6b0ef
00:26:52.197 --> 00:26:53.604
the remainder 012.

NOTE Confidence: 0.85762495

95de8107-5812-47ee-9ef7-d1edbf70d577
00:26:54.210 --> 00:26:58.470
In general, any number divided
by any another number, for

NOTE Confidence: 0.85762495

b6c31cc3-d42e-47dc-b44e-45d8d57612cb
00:26:58.470 --> 00:27:03.582
instance, M. The result gonna be
between zero point 11 -- 1.

NOTE Confidence: 0.8195952

3d00f4b4-7bde-4e67-99c0-cd4e02bc2389
00:27:04.420 --> 00:27:08.164
So if you want to cancel the
remainder by 5, is always

NOTE Confidence: 0.8195952

889299ed-eb97-4218-b986-4994499aec49
00:27:08.164 --> 00:27:11.284
between zero to four an, etc.
This is my math.

NOTE Confidence: 0.8757297

5c34b326-48bb-415c-a2ca-24adc720244e
00:27:11.950 --> 00:27:16.110
So here we are going to divide
by three. The remainder gonna be

NOTE Confidence: 0.8757297

2e34d0a2-b78c-4939-9fef-3c09c05b6064
00:27:16.110 --> 00:27:19.950
between 0, one and two. Again
this is in decimal system. We

NOTE Confidence: 0.8757297

13a7b6f8-a4f4-4aea-b6e5-51c8697da114
00:27:19.950 --> 00:27:21.870
have to convert it into binary.

NOTE Confidence: 0.8984716

2d168ca5-55b9-4df9-9bda-35999066476f
00:27:22.580 --> 00:27:26.028
So any binary number between
zero and two.

NOTE Confidence: 0.87973756

c835dc6b-2676-47e8-9632-2885d1da2111
00:27:27.730 --> 00:27:34.672
So 0222 the binary number for
two is 1 zero, so you need

NOTE Confidence: 0.87973756

df8ecc86-5639-473b-a710-519dbe6d4c16
00:27:34.672 --> 00:27:39.478
2 bits to represent the
remainder 0001 N 10.

NOTE Confidence: 0.86002314

8f8da847-b24f-4286-9e57-ec1bc6304bb9
00:27:41.220 --> 00:27:45.864
So you see that for the output
of Boolean function in the

NOTE Confidence: 0.86002314

da8e15d3-1e1b-4e21-bbb9-b274e1a6d68e
00:27:45.864 --> 00:27:47.799
output you need 2 bits.

NOTE Confidence: 0.8825922

6f37dda2-8af5-4be6-b740-3fbd6f00c62b
00:27:48.420 --> 00:27:52.752
The same you have to pick a
variable name for the outputs,

NOTE Confidence: 0.8825922

cce988b4-da58-444f-b82b-420cd0fa7a8e
00:27:52.752 --> 00:27:57.084
because these are in the right
side or the output be called

NOTE Confidence: 0.8825922

f6299d01-2f0b-4219-a3cd-4bd84b0c1d3a
00:27:57.084 --> 00:28:00.333
MF1F2 etc. Instead of just
putting AB or XY.

NOTE Confidence: 0.8987833

11318f33-ae23-4723-be2f-40d6f227d167
00:28:01.090 --> 00:28:04.400
So. You put it here F1.

NOTE Confidence: 0.8753913

add11c3a-c727-47e2-a0b9-2db32c476811
00:28:07.290 --> 00:28:11.706
So it would be it's to represent
the remainder between zero and

NOTE Confidence: 0.8753913

027faa30-54bb-42eb-a648-395439c0a53e
00:28:11.706 --> 00:28:15.018
 two, and these are the positions for the output

NOTE Confidence: 0.91407996

c76e8b0e-c5f5-4e56-a1fa-bc30890b5516
00:28:16.940 --> 00:28:22.595
And now we have to fill out the
two stable. So for the first one

NOTE Confidence: 0.91407996

3c4a4089-4d17-4fd9-ba5b-170a705c1cbd
00:28:22.595 --> 00:28:25.234
0 / 3, the remainder is 0.

NOTE Confidence: 0.8442614

5800e316-3d8f-484b-8fa9-c5e0cda757ea
00:28:26.720 --> 00:28:29.548
And zero the binary
number is 00.

NOTE Confidence: 0.9137954

ab0225dc-109d-4715-a4ae-213c9807254c
00:28:31.780 --> 00:28:37.268
And then the next number is one
1 / 3, the remainder is 1.

NOTE Confidence: 0.8595049

cbd232a7-1ead-40f9-a9a0-0e529cbb256e
00:28:41.490 --> 00:28:45.277
2 / 3 The remainder is 2.

NOTE Confidence: 0.8240576

657879cf-0659-47e7-83bf-66ae5ab73355
00:28:47.290 --> 00:28:53.769
Three, the remainder of three by
three is 0, so 00.

NOTE Confidence: 0.84643817

62a92bed-6b87-49f1-baf4-99befaa6a9f8
00:28:55.090 --> 00:28:58.996
4 / 3 is 1 the

NOTE Confidence: 0.8890961

8c37c1ae-592a-4bd5-9d17-ce6f1f039329
00:28:58.996 --> 00:29:04.880
remainder. And it sets
up until 15. So 15 / 3

NOTE Confidence: 0.8890961

2b23f5de-57c4-4052-8e83-0247b7f319e8
00:29:04.880 --> 00:29:06.696
the remainder is 0.

NOTE Confidence: 0.8946916

5b797c2e-ba25-45ac-a0b0-e9d60f87331b
00:29:07.940 --> 00:29:09.872
So you fill out the whole truth

NOTE Confidence: 0.8937945

c16f89be-8cfa-4d3d-bb92-1d7689b57279
00:29:09.872 --> 00:29:15.170
table. Now that you have the
truth table, you have to write

NOTE Confidence: 0.8937945

2e5bdf90-50bd-4a24-bb4c-76c540d8f826
00:29:15.170 --> 00:29:18.870
the mid terms for each output
for F1 and F2.

NOTE Confidence: 0.8842468

1261d5a2-54ba-45ad-9c70-69b96d11af41
00:29:19.440 --> 00:29:23.925
 For the minterm, we said that we only look at those entries. That 

NOTE Confidence: 0.8842468

5fe09eb4-2545-4405-8a2c-eeff5a0bad8e
00:29:23.925 --> 00:29:28.755
makes the output one. So for the
F1 this is the entry. This one,

NOTE Confidence: 0.8842468

c6c5e848-0caa-4566-8ced-5c9d8cf8dfe7
00:29:28.755 --> 00:29:33.240
this one and this one, and this
one for the F2 is this.

NOTE Confidence: 0.86050886

c7171a59-bf71-42ae-9332-6abced31dbff
00:29:33.860 --> 00:29:37.826
This, this, this and that. OK

NOTE Confidence: 0.7492829

0dbd53e6-10ac-4f2e-b88c-5c0aa39b99b8
00:29:37.826 --> 00:29:44.760
so. Here is the meters,
so for them it's for F1.

NOTE Confidence: 0.752842

bc89ec67-f565-4ea2-bf53-3c599e5d2219
00:29:45.370 --> 00:29:51.246
 Is minterm? What is the term, the minterm, the index for minterm

NOTE Confidence: 0.752842

f8e0de01-cbbf-415e-9c9d-977f111f2339
00:29:51.246 --> 00:29:57.122
is the binary digit, so this is
these two. So mid term 2.

NOTE Confidence: 0.84868914

f4665807-0992-499f-a316-61ceca739da5
00:29:58.510 --> 00:29:59.970
And then we turn.

NOTE Confidence: 0.7925427

296565a2-f49b-469a-9ff5-5c84f2a9de75
00:30:00.250 --> 00:30:06.334
Five, and then it turn. This is
the meter. 1000 is the meter

NOTE Confidence: 0.7925427

760f689f-12d7-4669-9dfa-574edee08dd5
00:30:06.334 --> 00:30:09.610
eight you see here we turn 8.

NOTE Confidence: 0.75819665

99eb46cf-085f-4d2e-baae-3bbf5a5b7db3
00:30:10.760 --> 00:30:16.370
Mid term this is the meter 8 +
311, so this is the meeting free

NOTE Confidence: 0.75819665

242a7e61-917c-4502-9574-860efe8198c7
00:30:16.370 --> 00:30:17.492
you see here.

NOTE Confidence: 0.8354513

d1e46509-7b6b-4d2b-be61-9aa8f3ca037f
00:30:22.060 --> 00:30:23.640
That was makes the F1.

NOTE Confidence: 0.86922467

4cf85213-440d-4524-ad16-4137824a1131
00:30:24.340 --> 00:30:25.520
In the output one.

NOTE Confidence: 0.8417068

f81a956a-9ff0-490c-9854-63b8379f401a
00:30:27.720 --> 00:30:33.075
We have to do the same for F2,
so for F2 what are the meetings

NOTE Confidence: 0.8417068

cb8a33d1-b304-4743-9a8c-76486aa99b0c
00:30:33.075 --> 00:30:36.645
that makes the F2 one? This is
the meter one.

NOTE Confidence: 0.56082004

21c5df5d-026d-4905-9824-cb9aeb63e8d2
00:30:38.110 --> 00:30:42.046
Return here is Mr. 30 sorry

NOTE Confidence: 0.74934053

432faa44-1fa0-4dcb-a08c-e7fa2bbc3a37
00:30:42.046 --> 00:30:45.810
Mr 4. This is the midterm 7.

NOTE Confidence: 0.7799044

5abce2a1-c16f-45e3-b8b7-0c445a34e70d
00:30:47.960 --> 00:30:53.360
So here is the meter 8 + 210.
This is the midterm 10 and this

NOTE Confidence: 0.7799044

1773e4c3-a31a-4219-9689-42a305cc8cee
00:30:53.360 --> 00:30:54.440
is midterm 30.

NOTE Confidence: 0.8897922

b29f1647-66d5-41a2-8328-477cd8af11e1
00:30:55.350 --> 00:30:58.540
So when you write them in
terms, you don't look at

NOTE Confidence: 0.8897922

cdc6c784-89d9-40e3-8b70-fbea048d7200
00:30:58.540 --> 00:31:01.440
what was the problem. You
just look at the entries

NOTE Confidence: 0.8897922

ddfc2a2a-691c-4fe7-8dc1-94a2483b98fc
00:31:01.440 --> 00:31:02.890
that makes the output one.

NOTE Confidence: 0.76896864

15a5c26e-b735-42bf-8146-1cd3ea548ef5
00:31:04.290 --> 00:31:08.745
So the shorter form for this
is just putting a Sigma

NOTE Confidence: 0.76896864

6e573370-6afa-4783-8642-208fc6a47dd3
00:31:08.745 --> 00:31:12.795
midterm and put the meter
numbers. So here is the

NOTE Confidence: 0.76896864

a4ebcd5b-e671-4f3e-a39b-6f69a83b3e5a
00:31:12.795 --> 00:31:14.820
Boolean function for the F1.

NOTE Confidence: 0.80245405

f032ee58-dbeb-48d0-97b3-f60db9375099
00:31:16.720 --> 00:31:22.323
 8 seven and 14 for the F2 is minterm 1 four seven 1013. 

NOTE Confidence: 0.8246087

aec12d70-e5d9-412f-8bcb-506fc421b8d7
00:31:24.630 --> 00:31:30.168
And now you have to sketch the
circuit or logic diagram or the

NOTE Confidence: 0.8246087

d3c831b8-91e5-4802-8b0a-148a8e71baa9
00:31:30.168 --> 00:31:31.446
unit logic unit.

NOTE Confidence: 0.90434575

be868c7d-b021-4c0b-80aa-a3fc1b431d03
00:31:32.340 --> 00:31:33.940
And here is this second.

NOTE Confidence: 0.85072005

796c3436-7f82-4f38-aa02-ca8b4fe0a93a
00:31:35.080 --> 00:31:42.160
So for the F1 midterm,
2, five, 811 and 14,

NOTE Confidence: 0.8351502

cd1ac098-7107-4a3c-8491-3255ae62db3d
00:31:42.160 --> 00:31:46.096
so XYZ. It's one in the
normal format.

NOTE Confidence: 0.7641031

710124b4-645e-4baa-9338-95fd0dbf434c
00:31:49.400 --> 00:31:50.708
Signs or red wire?

NOTE Confidence: 0.7594987

a915e93b-da8a-449e-922d-9bd1f1334934
00:31:51.380 --> 00:31:55.136
X bar YZ bar W bar.

NOTE Confidence: 0.73678505

f9f3d2e1-80a6-4bea-9480-a48dce169f36
00:31:55.740 --> 00:31:58.980
x bar y z bar w bar m2

NOTE Confidence: 0.6911227

ba7c03f5-5aff-430a-b429-ff4be94bef7e
00:32:00.240 --> 00:32:03.080
Over M5, an attachment.

NOTE Confidence: 0.7711498

71e75d73-6ff3-4c2e-bac8-c89175558659
00:32:04.470 --> 00:32:10.520
For the F2, the same m minterm, 1 minterm 4/7/10 and 13.

NOTE Confidence: 0.8811936

5feb9049-51dd-4f72-8778-7f3de9b70f71
00:32:12.140 --> 00:32:17.626
Or then again. So you see that
in one design we have F1 and F2.

NOTE Confidence: 0.9351137

2185d47c-5fa4-4120-9c5e-468f00b7c02e
00:32:18.990 --> 00:32:20.590
So now let's check.

NOTE Confidence: 0.8934806

51e329f4-03a9-4cb2-b580-61fbef5c1e6c
00:32:21.330 --> 00:32:26.682
Let's check that our design is
correct. So imagine the input is

NOTE Confidence: 0.8934806

805ec767-765a-4797-96a9-ae9c6f656000
00:32:26.682 --> 00:32:31.142
the number we want to see the
division of 10.

NOTE Confidence: 0.38019353

2667a29e-db0f-4759-9bb5-dfc58cba0d94
00:32:32.540 --> 00:32:33.220
Bar.

NOTE Confidence: 0.55847275

448dc41a-af2f-4c9c-8401-5e72e018e854
00:32:34.730 --> 00:32:35.280
Any?

NOTE Confidence: 0.8915919

d3c0c252-7e13-4ac0-8b1f-00529425afcd
00:32:37.380 --> 00:32:41.316
It becomes three and the
remainder is 1. So we want to

NOTE Confidence: 0.8915919

9ee38313-2675-47bd-a0bf-7278119f42f7
00:32:41.316 --> 00:32:43.940
see that. Can we see one in the

NOTE Confidence: 0.79486436

45067f2d-339e-46aa-be10-8bbdd8e78849
00:32:43.940 --> 00:32:50.170
output or not? So 10 in the
decimal system. If it goes to

NOTE Confidence: 0.79486436

995282af-05c3-4c48-bc55-fd3a49094e0a
00:32:50.170 --> 00:32:51.938
the binary system 10.

NOTE Confidence: 0.85121614

fe91aa9d-eaac-4ec0-859d-88d1e82b8b28
00:32:53.450 --> 00:32:57.300
In a decimal system, is
equal to.

NOTE Confidence: 0.9145276

d458e852-d53d-46fb-86dd-109631b8e770
00:33:00.180 --> 00:33:02.710
What number? Anybody?

NOTE Confidence: 0.83346516

9cfb8d7a-ac9a-4f6c-bbd1-f3a3394e0106
00:33:06.080 --> 00:33:10.128
Otherwise, I mean not the
number. If you have to practice

NOTE Confidence: 0.83346516

5e4a2b5f-c6c1-40be-9745-507d9ff2baed
00:33:10.128 --> 00:33:14.544
a lot that whatever. Whenever
you see it and you have to

NOTE Confidence: 0.83346516

ab16c35c-238f-461f-9bb9-65bacca7ffc2
00:33:14.544 --> 00:33:18.224
immediately put the binary as
correct, Kaden and Philip, 1010.

NOTE Confidence: 0.83346516

8a70fee9-a2c2-4f01-9555-554fb38efeb9
00:33:18.224 --> 00:33:23.376
So now I want to input the 1010
in the circuit, so here is

NOTE Confidence: 0.8690422

38a95248-f016-4390-83f6-1e8671573e5f
00:33:23.376 --> 00:33:26.271
become zero. Here it becomes

NOTE Confidence: 0.8986968

2d6bdd1b-2390-41b0-b2f7-ef576c521833
00:33:26.271 --> 00:33:30.128
one. Zero and one.

NOTE Confidence: 0.88189185

2f600e82-a62a-4d1d-832c-a0593635d696
00:33:30.810 --> 00:33:33.380
 And we want to see what's the output of F1. 

NOTE Confidence: 0.84957993

e37b5d40-a72d-4d6c-bcaf-ff949fc8916b
00:33:34.640 --> 00:33:38.210
So here O comes here becomes

NOTE Confidence: 0.87879735

d73e3700-d039-44f6-9c04-12ed90e9485c
00:33:38.210 --> 00:33:42.080
one. Here one comes here one.

NOTE Confidence: 0.79627496

46ec53c4-0a85-47fd-9030-d053fed5c167
00:33:42.830 --> 00:33:46.876
Here, O becomes not
here becomes one.

NOTE Confidence: 0.8805067

62018dd8-9283-42ea-8d09-8033ed6db06c
00:33:48.340 --> 00:33:52.993
And here one comes here becomes
not become zero.

NOTE Confidence: 0.90015894

3b596b7c-16e9-405d-83e6-f51e71af7ba0
00:33:53.560 --> 00:33:55.768
So because one.

NOTE Confidence: 0.8339058

dcf61ddb-0b42-4ddb-bf10-9bc5c59ae823
00:33:57.650 --> 00:34:00.498
Is 0, so the output gonna be 0?

NOTE Confidence: 0.85884714

55069da3-5d38-4bcc-a242-9398c889cd8e
00:34:02.540 --> 00:34:08.714
So let's go to the M5AN50 comes
here 0 comes here. It becomes 0

NOTE Confidence: 0.85884714

9781c20e-62ac-4423-83a8-d16060e8e3e4
00:34:08.714 --> 00:34:14.888
so we don't need to check other
inputs because in the end if the

NOTE Confidence: 0.85884714

15e0cad6-877a-49b7-8215-4bee7f420eca
00:34:14.888 --> 00:34:17.975
input is 0 the output is always.

NOTE Confidence: 0.84593934

c51d991b-801c-4ba6-a1d2-f2d180377bcc
00:34:20.320 --> 00:34:25.413
Let's see the M8 N 8.
Here we have zero and

NOTE Confidence: 0.84593934

ae9c7f5a-8787-4278-8c1b-169ff66ee512
00:34:25.413 --> 00:34:27.265
then not becomes one.

NOTE Confidence: 0.8561331

0095a8c0-22ec-4d26-b92c-aab1451aa0d5
00:34:28.950 --> 00:34:33.207
This input of the Ant is
attached to here one, not

NOTE Confidence: 0.8561331

945e9b41-344c-4bb3-bea6-8d00d40385c0
00:34:33.207 --> 00:34:37.851
it becomes 0. So again we
have 1 zero in the input,

NOTE Confidence: 0.8561331

c0518e77-b334-46bf-a0cb-ed0fe548d0fa
00:34:37.851 --> 00:34:39.786
so this one becomes 0.

NOTE Confidence: 0.87596655

ff42e873-ed90-401a-bcef-d614cd0e14a8
00:34:42.470 --> 00:34:44.670
And then in this one.

NOTE Confidence: 0.804711

8d54c466-912a-4064-85fa-fc8f05cc4cda
00:34:45.390 --> 00:34:48.216
For this One X is 0.

NOTE Confidence: 0.8814673

f71631e2-8695-4eea-9861-d85375622c9b
00:34:48.910 --> 00:34:52.090
So we have 0 here.

NOTE Confidence: 0.8897511

0c9279f8-a8da-41c3-99b1-4ca89dbe095d
00:34:53.320 --> 00:34:56.720
Because in the input of
the and you have zero

NOTE Confidence: 0.8897511

47658033-a79f-4fbb-87bc-28865a44e40d
00:34:56.720 --> 00:34:58.420
and let's check the M14.

NOTE Confidence: 0.6552349

56d11393-67bf-4e5d-8288-17fcd8e036e8
00:34:59.450 --> 00:35:02.190
M14 gonna be up.

NOTE Confidence: 0.81431115

56c3e906-421b-41d2-8ca4-4fe8629c91fb
00:35:04.030 --> 00:35:07.950
Zero comes here becomes one.

NOTE Confidence: 0.8316861

3622e106-2c11-4492-8429-215ab226090f
00:35:09.380 --> 00:35:15.204
This this input is attached to Y
which is 1. This input is

NOTE Confidence: 0.8316861

a2037252-45b6-45b8-9a54-ef4f5ed33f51
00:35:15.204 --> 00:35:17.444
attached to ZZ is 0.

NOTE Confidence: 0.8174766

e3d36a53-0eba-4923-afa5-2dea235651a1
00:35:18.330 --> 00:35:21.250
So here becomes 0.

NOTE Confidence: 0.8982243

5026354c-21a4-422d-be3a-2d925e5662a5
00:35:22.140 --> 00:35:28.940
So all the input of this or is
0, so the output for F1 is 0.

NOTE Confidence: 0.91806877

39b6cf4a-2ea6-49f6-adc6-06693f9e2caa
00:35:30.880 --> 00:35:32.530
Let's check for the F2.

NOTE Confidence: 0.81662375

08555ce0-3761-4291-9234-ec460110d4bc
00:35:33.230 --> 00:35:37.017
F2 for the first one, FM little

NOTE Confidence: 0.8081507

ad2f4c62-6581-4d8f-bf1b-3ba13357dbe0
00:35:37.017 --> 00:35:43.869
one. So here is the AX0, so
the output of this cannot be 0.

NOTE Confidence: 0.8064148

3dca9864-85b6-459b-86e6-04df7d3d6576
00:35:44.640 --> 00:35:50.405
M4 here we have
0 knots becomes one.

NOTE Confidence: 0.7979575

4be131f2-88af-4334-88f3-d8ea796bfe6b
00:35:51.140 --> 00:35:52.840
His input is attached.

NOTE Confidence: 0.695295

cdd3560e-654e-4df8-a816-0a24a8299ca4
00:35:54.730 --> 00:35:57.630
I not become zero.

NOTE Confidence: 0.85728294

2b989d4c-85ff-42cd-a1bd-52787e184c0c
00:35:59.430 --> 00:36:04.136
So here we have at least 10D
input, so the ad is 0.

NOTE Confidence: 0.7912579

9ac67ae3-3069-46ce-ba1d-6cd7ffd63cce
00:36:04.750 --> 00:36:05.790
M7

NOTE Confidence: 0.8284639

4957da56-0db6-41a2-b09a-1eb8dc86289d
00:36:07.040 --> 00:36:10.736
X is 0 so M7 gonna be 0.

NOTE Confidence: 0.5737062

e98e75e9-f025-4937-9a4c-6827b3e3f2b0
00:36:11.430 --> 00:36:15.000
Ant, an Ant and so.

NOTE Confidence: 0.75096965

aee539cf-c166-4489-8def-cba4453402a6
00:36:15.610 --> 00:36:18.075
Zero knots comes here becomes

NOTE Confidence: 0.86995476

3c8d9b70-4425-4c2f-aab5-cfa5c3e83814
00:36:18.075 --> 00:36:21.736
one. Here is why it is 1.

NOTE Confidence: 0.79136413

3948e061-abe4-40a8-a97b-56e1e6f90da2
00:36:22.480 --> 00:36:29.104
Here comes ZZ Bar Z0 becomes
NOTS becomes one and then here

NOTE Confidence: 0.79136413

6262ed3e-03a2-492c-a891-8e00fcc7e40f
00:36:29.104 --> 00:36:36.832
YW is 1. So all the inputs
are one. So the output is 1

NOTE Confidence: 0.79136413

b655f62e-cfd3-4b8e-8afd-a1f22f1a9689
00:36:36.832 --> 00:36:39.040
so we don't have.

NOTE Confidence: 0.8969081

1da57004-115a-4767-9e22-48d23b547ba8
00:36:41.690 --> 00:36:45.694
The second we don't have to
check this one because we see at

NOTE Confidence: 0.8394316

63158cf7-e88f-4a86-9bb5-cc3228dfe581
00:36:45.694 --> 00:36:51.047
least one. Digital one in the
input four or so have to gonna

NOTE Confidence: 0.92004675

d4f0238b-2d40-4ef8-908d-77a3c5beb843
00:36:51.047 --> 00:36:53.510
be 1. So.

NOTE Confidence: 0.8526267

11460ea0-5f6f-45f6-bf97-1f4b6a94d75c
00:36:54.150 --> 00:37:00.772
I think the output we have F10F2
one and this is the binary digit

NOTE Confidence: 0.8526267

434ec4f2-01e3-4a7c-a413-28b03877d8b8
00:37:00.772 --> 00:37:05.975
for remainder decimal 1. So it
seems that our circuit is

NOTE Confidence: 0.8261327

31e03bd9-1673-4a84-bc45-03d9919868ad
00:37:05.975 --> 00:37:10.855
working perfect. So you can
check for other inputs to see

NOTE Confidence: 0.8261327

52b74ae2-88c5-4c98-b5c6-ef51196f5a0d
00:37:10.855 --> 00:37:13.615
whether it apples the correct
remainder or not.

NOTE Confidence: 0.8741074

ceffd5e8-1f3d-401d-80c6-4bf873e5ecac
00:37:16.730 --> 00:37:17.670
Any questions?

NOTE Confidence: 0.9274043

32a5f4c4-947d-48f0-9859-7068f778fe39
00:37:26.380 --> 00:37:27.390
No questions.

NOTE Confidence: 0.84479797

48d7a066-4cac-4b42-8c99-c33f081690d9
00:37:34.060 --> 00:37:37.500
So seems everything is OK.

NOTE Confidence: 0.83340174

0fbee713-0308-417a-adb7-7f4c1bbf1f23
00:37:39.070 --> 00:37:40.650
There's 10.

NOTE Confidence: 0.8462501

998f6e29-233e-4e42-a72c-98f93804ceb6
00:37:50.370 --> 00:37:51.778
It's the end game.

NOTE Confidence: 0.85413176

d7f29855-2a0c-4504-a805-1bc55df8ae0c
00:37:56.880 --> 00:38:01.164
Yes, I mean in the end gate for
these ones. For instance here I

NOTE Confidence: 0.85413176

d31c491c-b07e-4c12-8cdb-82c900dc1559
00:38:01.164 --> 00:38:04.836
didn't check the these ones
because in the end get if you

NOTE Confidence: 0.85413176

0945a207-9486-4ce9-bb9a-015b50ac9d79
00:38:04.836 --> 00:38:08.508
have at least 1 zero in the
input, the output is 0.

NOTE Confidence: 0.6765569

2e8a1106-4eb8-4263-a24c-71a17080ddcc
00:38:09.510 --> 00:38:10.460
Indiana State

NOTE Confidence: 0.45822686

44d2dca6-ed59-4915-b102-b17c4a03f380
00:38:11.670 --> 00:38:13.358
but for the orgatec.

NOTE Confidence: 0.8110252

712f8cb5-64c3-4dad-b2b3-a3ca6b1da971
00:38:14.190 --> 00:38:18.964
You have to. The organ is that
if you have at least one digital

NOTE Confidence: 0.8110252

51d99f6d-1bb8-49ad-89d8-f9a1ec6978ed
00:38:18.964 --> 00:38:23.397
one in there, but you don't have
to check others because or one

NOTE Confidence: 0.8110252

979158c7-d6d0-4a44-8c67-da31d45f329f
00:38:23.397 --> 00:38:25.102
with anything gonna be 1.

NOTE Confidence: 0.91534066

7b9c1e77-f8ec-48ea-bf29-d7574eaf24ae
00:38:26.450 --> 00:38:28.640
So we already checked
this, yeah?

NOTE Confidence: 0.8721733

dc51bc2d-772b-4ef8-bfe9-c57973bb2abe
00:38:30.110 --> 00:38:33.730
How do you know which ones are
complementing the midterms?

NOTE Confidence: 0.9065105

de55ef03-649a-4713-9f50-879ce0a1b29f
00:38:34.970 --> 00:38:37.590
Two is. This one.

NOTE Confidence: 0.74284315

906162ef-f816-4a2f-bd16-70ad137f6fe4
00:38:39.250 --> 00:38:43.254
Oh, because for instance, why
your question is that why and

NOTE Confidence: 0.74284315

19477977-0c4a-4a90-abba-4f28f1fe4673
00:38:43.254 --> 00:38:44.346
things like this.

NOTE Confidence: 0.8536204

f3dc5aa1-6285-46a0-8701-ebcee407027d
00:38:47.670 --> 00:38:49.416
He wanted it for two years.

NOTE Confidence: 0.86377203

c5aa7dbf-7cfb-4118-ad89-3050b7545bc7
00:38:50.530 --> 00:38:56.482
When you are given four position
0010, it means that the first

NOTE Confidence: 0.86377203

7441e4ae-1b0b-4f5c-8947-3d4f41702f78
00:38:56.482 --> 00:39:01.938
position must be in the
complement form. If you put pick

NOTE Confidence: 0.86377203

90a658ff-70d3-4438-a7af-02e3587e66f1
00:39:01.938 --> 00:39:03.426
the variable name.

NOTE Confidence: 0.714293

a95ce721-8e8e-4bc2-a20d-2f53b7b8ebb6
00:39:04.350 --> 00:39:09.732
Exit, but it would be explored.
The second one must be in the

NOTE Confidence: 0.714293

0d60f35f-ba64-463d-af63-ff40e1075618
00:39:09.732 --> 00:39:12.216
normal form, while the third One

NOTE Confidence: 0.86224246

1528d38c-bb37-408f-8ec9-5900234fdeeb
00:39:12.216 --> 00:39:16.044
Zebra. And then this last one W

NOTE Confidence: 0.7289544

dd152d70-337d-4667-a75b-9204086b3e79
00:39:16.044 --> 00:39:21.750
bought. So because the in desert
in meter shows the binary

NOTE Confidence: 0.8728958

cb896c55-5f85-48dd-85c2-e3c5a2be988b
00:39:21.750 --> 00:39:25.144
number. That's why you
come up with the meter.

NOTE Confidence: 0.742438

fa0f61fe-4b65-4232-9998-b00fcbef321f
00:39:31.380 --> 00:39:35.934
So we already said that how you
map the midterm I.

NOTE Confidence: 0.79038566

01e7636b-1677-49e9-accf-6518ac0eb98d
00:39:36.970 --> 00:39:39.750
To the.

NOTE Confidence: 0.77797306

30bb4fa5-5cae-48bf-9428-39ce296b30e9
00:39:41.050 --> 00:39:46.090
Uh, the and form of the binary
variables you have to simply

NOTE Confidence: 0.77797306

b8de55fd-7aba-42de-833e-9b9461e32220
00:39:46.090 --> 00:39:50.290
make the AI into binary system
and then write the.

NOTE Confidence: 0.8074092

28599b3b-64e2-4b01-884f-152a0f55f99f
00:39:51.800 --> 00:39:53.720
The end of the binary variables.

NOTE Confidence: 0.69284856

65271590-4acd-438a-8575-d03d26792966
00:40:01.490 --> 00:40:05.140
313 converted to decimal is.

NOTE Confidence: 0.5600265

971459c2-f36a-43a3-9ede-cc5f22dad7ca
00:40:09.160 --> 00:40:13.786
A 14 let me let me
explain this again.

NOTE Confidence: 0.7675842

296966b8-f901-4b0e-9483-19cd8fba4f31
00:40:24.250 --> 00:40:26.218
How can I erase all the?

NOTE Confidence: 0.7795782

1d35a7fa-d428-4296-80ba-ab3f38de8866
00:40:30.160 --> 00:40:30.590
OK.

NOTE Confidence: 0.0801192

96230594-7207-4142-a606-b8b0c713ff9d
00:40:32.450 --> 00:40:33.280
Um?

NOTE Confidence: 0.75671476

e995ce38-9193-47e5-88f7-bda89f20d2f5
00:40:41.030 --> 00:40:48.375
So 13 let me see. So you
say that what's the M 13?

NOTE Confidence: 0.8533823

8a00b411-59f8-432e-ab3b-4aa8b7917625
00:40:49.340 --> 00:40:54.618
You have to convert the 13 into
binary system, so 13 in binary

NOTE Confidence: 0.7573133

977f7093-af50-4ae6-b1d5-f10dc4621c7d
00:40:54.618 --> 00:41:01.524
system is. A 13 so we already
know how the algorithm we have

NOTE Confidence: 0.7573133

1d2dc7e2-a2c6-4e31-b026-fa3d9d5e19b0
00:41:01.524 --> 00:41:03.500
to divide by two.

NOTE Confidence: 0.8294642

1a07c5b6-83d6-4737-821f-38d3ed2c6d35
00:41:04.400 --> 00:41:11.460
So it becomes A6 and
the remainder is 1 and

NOTE Confidence: 0.8294642

e4b423fb-9586-4d8c-9a3b-8307b3bb64fa
00:41:11.460 --> 00:41:13.578
then 6.2 is.

NOTE Confidence: 0.8865846

2f015a44-3ed2-431a-a7d9-b5490dc78698
00:41:15.060 --> 00:41:17.970
Three and the remainder is 0.

NOTE Confidence: 0.7664062

c8d3fe9c-ee22-4315-bf8f-5b7bc265fcbd
00:41:18.690 --> 00:41:21.250
Then a three by two.

NOTE Confidence: 0.8906168

aae33bdd-ce98-466f-81a3-106bb7a46881
00:41:21.900 --> 00:41:22.810
Is.

NOTE Confidence: 0.86792475

e1da21a7-c6e0-46fd-8f25-0cad79aa4dfc
00:41:24.540 --> 00:41:31.666
One and the remainder is 1 and
then one by two is 0 and

NOTE Confidence: 0.86792475

237f30d5-9e13-458d-aeba-30ccf8708f22
00:41:31.666 --> 00:41:38.283
the remainder is 1 and then you
put the remainder in the reverse

NOTE Confidence: 0.86792475

d78d9db4-88bd-457e-bcb1-f0a5e6577c24
00:41:38.283 --> 00:41:40.828
order so it becomes 1101.

NOTE Confidence: 0.9114588

63aa0a1a-0f54-4e10-900d-289257f406a9
00:41:41.580 --> 00:41:45.378
We already know how to
convert a decimal system.

NOTE Confidence: 0.86335546

c19e04f7-cfa0-47d9-a396-5f63320e2b72
00:41:48.990 --> 00:41:54.126
Now this is the binary #413. So
what is the M 13 and 13? Is that

NOTE Confidence: 0.86335546

c3e8fb24-9d76-48cd-a7e1-1d8898b70c94
00:41:54.126 --> 00:41:56.052
the first position in the normal

NOTE Confidence: 0.77479064

85a3b38b-50b4-4529-ad89-14b008595d11
00:41:56.052 --> 00:42:00.350
form? If you put pick their
variable then acts it becomes X.

NOTE Confidence: 0.81315106

87c17902-31ea-4042-b235-3efbfd200061
00:42:01.520 --> 00:42:03.280
The second position in the

NOTE Confidence: 0.3606466

bf52b1d7-34f6-4343-815b-15fd52ed49cc
00:42:03.280 --> 00:42:06.430
complement form. Libor?

NOTE Confidence: 0.81554127

2d902940-9dae-41cd-8b26-861290c7929f
00:42:07.420 --> 00:42:11.020
The third and fourth
position in the normal

NOTE Confidence: 0.81554127

7d50907b-d812-4449-9269-210e63787e9a
00:42:11.020 --> 00:42:13.270
forms, so it becomes Z&W.

NOTE Confidence: 0.8533366

93955801-2e72-4aaf-9a6a-1d88d210fcbe
00:42:15.970 --> 00:42:21.965
If you pick ABCD, so the meeting
three becomes this one.

NOTE Confidence: 0.67680943

9366cc81-59e0-4755-a87c-8879c4deaeda
00:42:24.650 --> 00:42:27.738
A normal form deeper.

NOTE Confidence: 0.6094739

c1e0de11-a0c0-4b1a-aa80-442d83cb3ab6
00:42:28.500 --> 00:42:30.699
Competent form Z.

NOTE Confidence: 0.7500602

83cfa610-2195-4c86-9611-11ffea5a0c3d
00:42:31.950 --> 00:42:34.070
Sorry, let me check.

NOTE Confidence: 0.7143739

3cf1d92b-5d75-451a-b70d-2d723ba7a651
00:42:34.300 --> 00:42:38.297
Also not Z because ABC becomes C

NOTE Confidence: 0.48330206

8b9325a6-c16c-4a38-96f9-3d2e2db06acd
00:42:38.297 --> 00:42:40.500
and then. Eat.

NOTE Confidence: 0.8199053

e6a60727-d602-40c3-a7a9-e6f1c481c1d6
00:42:41.240 --> 00:42:44.480
So whatever variable, then you
choose, you have to check

NOTE Confidence: 0.8199053

bbf2f99b-48f0-432f-a9ae-44bcf821e163
00:42:44.480 --> 00:42:48.692
whether the binary digit has one
or zeros. If it is one normal

NOTE Confidence: 0.8199053

8589cc54-baa6-479f-803a-8d1438d3b9df
00:42:48.692 --> 00:42:50.636
form, it is zero compliment for.

NOTE Confidence: 0.7900927

2b9eee47-0d35-4e25-9fa8-b5eaa1928130
00:42:51.950 --> 00:42:53.150
Makes sense, Kevin.

NOTE Confidence: 0.36239976

c0e82de1-c27b-414b-99ce-3073c22e7466
00:43:01.460 --> 00:43:05.560
Oh oh. See
team.

NOTE Confidence: 0.7864375

b74e0359-cf0d-48a7-8d28-318d12b46ec6
00:43:07.760 --> 00:43:10.019
13 Here is.

NOTE Confidence: 0.86976576

efe7f270-512d-4d79-81df-26e9fb7e866d
00:43:12.020 --> 00:43:19.316
And 13 this one is 1110,
which is 14 correct? Yeah Oh

NOTE Confidence: 0.86976576

ce2a4cef-6753-4c7a-8727-45ae5cd4da1d
00:43:19.316 --> 00:43:21.140
my God correct.

NOTE Confidence: 0.91337454

10820fd3-5ced-4825-9404-be6607db5403
00:43:21.790 --> 00:43:22.840
You're right, yes.

NOTE Confidence: 0.9391638

0e806169-1a78-4e95-b5b4-a19ce020cc92
00:43:23.900 --> 00:43:24.490
Correct?

NOTE Confidence: 0.73859584

09f773e5-f161-4558-b70f-d0eac0ae90d0
00:43:25.870 --> 00:43:29.668
This should be XI fixed that

NOTE Confidence: 0.82283425

addbcf9a-c447-4d48-ade9-e2689616e3c5
00:43:29.668 --> 00:43:35.848
XY bar. Z&W
correct, thank you.

NOTE Confidence: 0.92061293

3585ac4b-cb50-44ad-bf32-2f12eb9b7705
00:43:37.170 --> 00:43:38.259
Oh, thank you.

NOTE Confidence: 0.90638524

c85926c3-740b-4f06-958f-36a4a535797b
00:43:39.220 --> 00:43:44.230
So let's move on to the second
algorithm for design.

NOTE Confidence: 0.6671804

55846605-b39d-4856-85c6-12875052ecc0
00:43:45.570 --> 00:43:46.698
 I'll wait a sec

NOTE Confidence: 0.88494176

b4ab0dbf-1812-44d0-87ad-de15bc5009f0
00:43:52.240 --> 00:43:52.850
So.

NOTE Confidence: 0.85456824

db5afb2f-74c4-45b2-a994-d1664e4af3b1
00:43:53.940 --> 00:44:00.115
There is another design for any
problem. If you want to design A

NOTE Confidence: 0.85456824

02b42f4f-64d1-4258-8c14-4e6a78b243c9
00:44:00.115 --> 00:44:02.015
logic circuit for that.

NOTE Confidence: 0.74994266

8eee2084-072c-4654-8db1-533439744409
00:44:03.400 --> 00:44:08.779
Use in the first algorithm. We
looked at those entries that

NOTE Confidence: 0.74994266

59a622cb-0c66-433e-9bac-91d2d0ef9508
00:44:08.779 --> 00:44:10.246
makes up one.

NOTE Confidence: 0.88398015

00af45ab-01ad-4f3c-8891-999c7a531275
00:44:10.830 --> 00:44:14.900
Here somebody may say that let's
look at those entries. That

NOTE Confidence: 0.88398015

3a3667c8-1fee-4c9e-82bd-51181b918e6b
00:44:14.900 --> 00:44:16.380
makes the output 0.

NOTE Confidence: 0.8534023

cef4bfc1-45ce-4801-ba84-67ecf688a367
00:44:17.530 --> 00:44:22.726
So if I design a second that
considers the output with zero,

NOTE Confidence: 0.8534023

b5871c80-8c42-43dd-aaa8-dad72600ecef
00:44:22.726 --> 00:44:28.355
and then I applied the nuts at
the end, it becomes our circuit.

NOTE Confidence: 0.8835431

3f442e65-4ab0-44b9-b380-f91a0269b7ff
00:44:29.260 --> 00:44:33.390
So basically I capture those
entries that makes the output

NOTE Confidence: 0.8835431

0ea6c150-ba06-4701-ac55-4422184dcf1f
00:44:33.390 --> 00:44:38.346
zero and then apply and not
after that so it becomes a.

NOTE Confidence: 0.8318107

20ed0ecd-2aac-4102-8b8c-23d15e99ce45
00:44:39.670 --> 00:44:45.335
Correct design like before, so
here is the 2nd algorithm stuff,

NOTE Confidence: 0.8318107

b4d6f67f-02e0-4bdc-b745-7294b3477360
00:44:45.335 --> 00:44:51.000
But for this one I have to
explain something called maxter.

NOTE Confidence: 0.79928577

bd73c084-dd42-4514-91d8-cd81d9bb02fc
00:44:52.690 --> 00:44:57.464
For previous design, we said
meters. Now we need maximum, so

NOTE Confidence: 0.79928577

79866d81-a847-4519-8309-aa1edc50a135
00:44:57.464 --> 00:45:02.238
usually maximum is all in
capital letters just to make a

NOTE Confidence: 0.79928577

6a0c2a5d-fda0-4558-a4ba-5799881668fc
00:45:02.238 --> 00:45:03.974
difference from the midterms.

NOTE Confidence: 0.76512086

b353a3a1-b179-4b98-9b42-c264ea970522
00:45:04.600 --> 00:45:07.660
Midterms was based on the.

NOTE Confidence: 0.8597732

de35df43-ea58-4b99-b838-52fc2b24ea02
00:45:11.320 --> 00:45:14.030
Based on this standard and.

NOTE Confidence: 0.80378675

32a6bfd5-b4a2-4011-87c0-6dd36150d55b
00:45:15.680 --> 00:45:19.348
Or by and we mean
standard product.

NOTE Confidence: 0.79515946

d76a9308-fa2a-4a1b-9fa7-58c1b6ca4dc8
00:45:23.640 --> 00:45:29.932
But here we mean maxterm and we
are dealing with some of the

NOTE Confidence: 0.7407605

444792fc-9ace-4a70-8687-718005f5a811
00:45:29.932 --> 00:45:33.526
binary variables. Let's see what
we mean by maxtone.

NOTE Confidence: 0.86682546

0fe6c438-ee5e-4472-ad78-8bceb548b852
00:45:35.600 --> 00:45:40.480
So again, if you are given
only one binary variable,

NOTE Confidence: 0.86682546

5254fd9c-bf34-4edd-89e8-98a3c078d1bc
00:45:40.480 --> 00:45:44.872
the binary variable can be
in the normal form.

NOTE Confidence: 0.7982411

6a3f1706-3581-4079-a620-b911bfdba4da
00:45:46.130 --> 00:45:47.630
Or in the compliment for.

NOTE Confidence: 0.93448865

4730d036-3f02-4fde-8146-1427ace49a17
00:45:49.560 --> 00:45:50.160
So this.

NOTE Confidence: 0.791753

ed0f9f4b-9a2f-4bb4-907a-3941d1ee34bf
00:45:53.530 --> 00:45:55.450
Very similar to the midterms.

NOTE Confidence: 0.82191217

24518707-2a86-48bd-bcf2-d8191e6a3d1a
00:45:56.770 --> 00:46:02.380
So now instead of assigning me
terms, I assign something called

NOTE Confidence: 0.8647263

14f8e2bc-b7e5-4aec-b745-e9ce6d6c2e54
00:46:02.380 --> 00:46:08.200
Master. And the index is the in
in a way that makes the.

NOTE Confidence: 0.794731

2d5ef991-8458-46fd-9940-56648e3270a9
00:46:08.750 --> 00:46:13.106
Output for the binary variable
0. Instead of making one, it

NOTE Confidence: 0.794731

34f4f268-3960-4f94-ace8-eebafb3001aa
00:46:13.106 --> 00:46:14.294
makes it 0.

NOTE Confidence: 0.7782361

ef438633-55ea-4718-8801-43d2382e6367
00:46:15.380 --> 00:46:21.056
 The Max term is equal to minterm bar or minterm not. 

NOTE Confidence: 0.8881497

8a77fda8-d0d8-4601-b391-845a3ea464ef
00:46:21.690 --> 00:46:25.162
So for instance, if the
variable is happening

NOTE Confidence: 0.8881497

6d120226-d993-437a-8db5-122022f28d03
00:46:25.162 --> 00:46:26.898
in the complement form.

NOTE Confidence: 0.8068725

3db45604-19ff-4d97-add4-2ebde5d98c1c
00:46:28.720 --> 00:46:33.257
Which is the meters. I apply
another not on top of that. So

NOTE Confidence: 0.8068725

f2f458ab-9ad2-4565-9df3-73a9c4c3177f
00:46:33.257 --> 00:46:37.794
not on not becomes X itself so
it becomes in the normal form.

NOTE Confidence: 0.8078941

b186c51d-7aaa-459d-b048-e158ed1356c3
00:46:38.810 --> 00:46:42.860
So maximum zero goes
to the normal form of

NOTE Confidence: 0.8078941

4f6c922a-085d-4add-a520-9d038a1df7ac
00:46:42.860 --> 00:46:44.210
the binary variables.

NOTE Confidence: 0.7974592

32f4094f-1e81-4bcb-ab77-61bb05d0a940
00:46:45.930 --> 00:46:51.078
And then Max then one goes to
the emitter, one followed by

NOTE Confidence: 0.7974592

8e6fa5de-4766-41ce-969a-bd5dc8b9ff6e
00:46:51.078 --> 00:46:55.797
 not, so it was X followed by the Not becomes x bar

NOTE Confidence: 0.84014404

26e3bd4c-fb6e-4575-9efe-ae0b96295e51
00:46:57.380 --> 00:47:02.132
 So you see the difference here for the minterms we assign in 

NOTE Confidence: 0.84014404

2ae141ab-747d-4e56-9aa7-a8aca896c0e3
00:47:02.132 --> 00:47:06.488
 minterm such that makes the binary variable one. Here we 

NOTE Confidence: 0.84014404

89b6f0bc-3d5c-49b5-a2e8-1a27e6c8cb4a
00:47:06.488 --> 00:47:11.240
assign a Max term in a way
that makes the binary variable

NOTE Confidence: 0.84014404

82d0be3e-0f43-4d01-bd5c-593d998d70af
00:47:11.240 --> 00:47:15.200
0. So if you represent a
binary variable with the

NOTE Confidence: 0.84014404

a73f4795-6500-4a46-a894-d396ae0c359f
00:47:15.200 --> 00:47:17.180
binary #0, it makes the.

NOTE Confidence: 0.8533202

3ac7566b-971a-4238-a0b7-e8f6de1976b6
00:47:20.250 --> 00:47:24.930
Again here, if you put one in
the binary variable so one

NOTE Confidence: 0.8533202

057f222e-cc2d-4890-be75-c9ea6633f647
00:47:24.930 --> 00:47:27.270
followed by the not becomes 0.

NOTE Confidence: 0.79928917

db727b04-ecc6-4579-b8ea-0ecf615c0307
00:47:28.370 --> 00:47:33.506
So for the Max term we are
dealing with, when the binary

NOTE Confidence: 0.79928917

738f593a-557f-4962-af65-1ebea236f030
00:47:33.506 --> 00:47:38.214
variable or the term of the
binary values mix becomes 0.

NOTE Confidence: 0.82371086

8ec186db-bce4-46fc-836a-f0e8c10151f2
00:47:41.520 --> 00:47:45.690
So if you are given two
variables X&Y, these are

NOTE Confidence: 0.82371086

869fae06-0293-4966-93d7-9929989654b5
00:47:45.690 --> 00:47:49.443
different weight. You can order
them together, so again,

NOTE Confidence: 0.82371086

92e11b5d-939a-4d71-b789-f814d6ec4922
00:47:49.443 --> 00:47:54.864
midterms was based on the end.
As we step, Max term is for

NOTE Confidence: 0.82371086

2bedfed9-9621-4085-9fd4-74f55f171ac4
00:47:54.864 --> 00:47:57.783
this, some or all of the binary

NOTE Confidence: 0.8167375

82162e95-e258-4e4d-9155-583787c2a589
00:47:57.783 --> 00:48:03.810
variables. So if you're given
two binary variables, we are we,

NOTE Confidence: 0.8167375

b636ca56-6aa3-43a8-8b9b-a9b3d4e0e652
00:48:03.810 --> 00:48:09.167
we may we gonna have four
different 4 four different overs

NOTE Confidence: 0.8167375

7700b78d-7f39-44de-a57f-080029d5bc4a
00:48:09.167 --> 00:48:15.011
between them, either you or the
normal form here X or Y.

NOTE Confidence: 0.7164395

b9161e9a-e830-4f63-bcdf-b2828c1926a3
00:48:15.600 --> 00:48:22.650
Or you an order with Y or
explore or why bar or X or Y

NOTE Confidence: 0.7164395

58f0a471-6b03-484b-9a98-2b03a6205e5e
00:48:22.650 --> 00:48:24.530
bar or X bar?

NOTE Confidence: 0.8504913

12ca4095-6b5f-41ae-bcd0-bdd31389a755
00:48:25.500 --> 00:48:29.360
So with the two binary
variables, we're gonna have four

NOTE Confidence: 0.8504913

423e674f-c989-4ad0-9650-3755ad0be905
00:48:29.360 --> 00:48:30.904
different or within that.

NOTE Confidence: 0.91941

f478c7bd-57aa-4391-aacc-4d50f418404b
00:48:34.440 --> 00:48:35.170
So.

NOTE Confidence: 0.8688016

7466a054-4b10-45a8-9526-fec06e02b3a4
00:48:36.810 --> 00:48:42.030
Now I want to say that the
relationship between the end and

NOTE Confidence: 0.85957855

c28b1233-0812-4856-b764-286cba16c527
00:48:42.030 --> 00:48:48.070
or. So basically again, here is
the different orders between two

NOTE Confidence: 0.85957855

b151f981-00d3-40ac-ab66-29997a265b78
00:48:48.070 --> 00:48:49.910
binary variables, all the

NOTE Confidence: 0.86416286

fef3b4db-24f2-41cd-8af0-d0420b998c6e
00:48:49.910 --> 00:48:54.264
possibilities. We already knew
what are the possible and

NOTE Confidence: 0.86416286

07a10ab0-4136-4d0e-aae6-97ab22086e99
00:48:54.264 --> 00:48:57.894
within by new variables. Now
we want to see the

NOTE Confidence: 0.86416286

43c0011c-d9fa-4b31-a6b5-07411ee80416
00:48:57.894 --> 00:48:59.709
relationship between or an
end.

NOTE Confidence: 0.65300536

ada0b63b-e1f6-4ed0-923f-5f358bb64938
00:49:01.550 --> 00:49:05.240
Actually, this
mathematician and logician

NOTE Confidence: 0.65300536

5f4358f8-b3ca-45df-94bf-52074581237c
00:49:05.240 --> 00:49:05.978
are.

NOTE Confidence: 0.77379674

5ab19f42-7968-4720-a179-d92906b2ac53
00:49:07.810 --> 00:49:12.903
Said before there's a whole deep
theory behind the binary system

NOTE Confidence: 0.77379674

920f79f9-f332-41ec-a2a2-16d6074c4ad4
00:49:12.903 --> 00:49:17.070
and binary computer systems,
which comes from mathematics. So

NOTE Confidence: 0.77379674

b80bbd5d-06b1-4879-8e80-a29481ad2b88
00:49:17.070 --> 00:49:22.163
the Morgan was, I mean, as you
see here in 1800.

NOTE Confidence: 0.9052531

5d079458-0009-451b-bb29-eec8b356bbd2
00:49:23.030 --> 00:49:25.100
He was living at that time.

NOTE Confidence: 0.8339734

e0c9f6bb-38be-4524-8fba-55ef142f16cb
00:49:26.200 --> 00:49:31.634
Yes, because this guy is a
famous guy in mathematician and

NOTE Confidence: 0.8339734

a36628d1-378f-46a5-ae96-fa498b8e27b4
00:49:31.634 --> 00:49:33.610
he proposes through laws.

NOTE Confidence: 0.8665357

5989ba7f-19b7-4142-aa91-bb1722087d83
00:49:34.390 --> 00:49:39.164
And these laws are very although
very simple but very handful.

NOTE Confidence: 0.8208685

1378af41-bd89-4e48-a34b-e7e9dcb33f89
00:49:40.050 --> 00:49:44.857
Uh, actually, in any science
they say that the simpler, the

NOTE Confidence: 0.8208685

3b5e4356-96bc-4678-b86f-b96cffd32463
00:49:44.857 --> 00:49:50.101
more effective. So that was this
is 1 example this guy proposed

NOTE Confidence: 0.8208685

f586097d-9579-4a31-b521-ac9edbefea7d
00:49:50.101 --> 00:49:51.412
to simple law.

NOTE Confidence: 0.66818386

60df24a9-b870-45a8-9649-9967b8d6ff9f
00:49:54.880 --> 00:49:58.140
What kind of theory or kind
of accident, not axiom?

NOTE Confidence: 0.86738104

a5eb9937-27d6-442e-93ab-679061ebbae2
00:49:59.690 --> 00:50:03.864
Through it Vision that is
helping a lot will see this

NOTE Confidence: 0.86738104

774781c7-734a-4fa0-9078-1638a9bad464
00:50:03.864 --> 00:50:06.952
formula. I mean multiple times
in our course.

NOTE Confidence: 0.88630253

c71d409e-e255-41de-bc6f-44499ae80415
00:50:07.890 --> 00:50:09.310
And here's their relationship.

NOTE Confidence: 0.84902847

0f3b0342-a959-431d-9a19-3142bc9a70a2
00:50:10.020 --> 00:50:15.982
It says that if you add two
binary variables, here, X&Y.

NOTE Confidence: 0.87005967

f0c1d952-4d1e-4963-bbc2-df266f646ae9
00:50:17.150 --> 00:50:19.486
And then apply in not on top of

NOTE Confidence: 0.84673095

dff410ab-1d93-4375-a86f-dcccc0280180
00:50:19.486 --> 00:50:23.804
them. It is equal to
bring the nut inside.

NOTE Confidence: 0.7790505

e6924bd4-55b6-41e0-a9d3-981d47abc931
00:50:24.880 --> 00:50:29.680
 On top of each binary variables, so x bar

NOTE Confidence: 0.71221435

5106e029-07c4-4329-826c-e3141e14a266
00:50:31.160 --> 00:50:37.777
 And y bar, but it changes the add between that it makes it or. 

NOTE Confidence: 0.75503176

6f0f7cbf-1d63-4a37-b91e-d604248c0f26
00:50:39.440 --> 00:50:44.858
 So X&Y bar becomes x bar or y bar

NOTE Confidence: 0.8356465

53025685-2913-4640-9c2e-450eaff1402b
00:50:46.750 --> 00:50:53.755
The same is here if you apply
not on top of or of two binary

NOTE Confidence: 0.8356465

067483ee-714d-4651-bb4a-ff0129f49cc1
00:50:53.755 --> 00:50:57.024
variables. So X or Y followed by

NOTE Confidence: 0.76760584

ea593e37-1149-40bc-b0ff-1255c49fa979
00:50:57.024 --> 00:51:03.194
 nots. You have to bring the not inside so it goes on top 

NOTE Confidence: 0.76760584

36c6251c-47a2-4e26-b85f-0505083f6e40
00:51:03.194 --> 00:51:07.781
 of each pointer variable. x bar y bar and it changed the order 

NOTE Confidence: 0.76760584

f03bbed8-53da-479f-8d1e-cc5c8e19d988
00:51:07.781 --> 00:51:09.449
two dot or add.

NOTE Confidence: 0.84629077

720240f2-f0fc-43b4-90b0-9862f5c1a27e
00:51:11.780 --> 00:51:16.196
This is very I mean simple, but
very crucial. You can check

NOTE Confidence: 0.84629077

b7235675-6c2f-4f21-8924-fba5644d875c
00:51:16.196 --> 00:51:20.244
whether these two are correct by
truth table. Actually, in the

NOTE Confidence: 0.84629077

74b155aa-79b0-4250-8e1b-273a558d7ea8
00:51:20.244 --> 00:51:23.188
lecture assignment I asked you
to prove this.

NOTE Confidence: 0.61555356

023cc9bc-59f6-436f-9488-b63969fcc080
00:51:24.010 --> 00:51:26.798
Uh, these two formula.

NOTE Confidence: 0.8323669

46255a15-5c73-48df-b1ba-d971f6c83a3d
00:51:28.560 --> 00:51:32.388
By truth table. So in the left
side you can create the

NOTE Confidence: 0.8323669

b5e14202-6399-493a-9c60-8d4726039832
00:51:32.388 --> 00:51:35.578
pointer variables for XY
followed by not and then in

NOTE Confidence: 0.8323669

24a7af4c-87d6-40a7-a49e-cd94155f6a77
00:51:35.578 --> 00:51:39.406
the right side you can check
that the result cannot be like

NOTE Confidence: 0.8323669

f1ff6c03-ec02-4599-a034-4deda62d942d
00:51:39.406 --> 00:51:39.725
this.

NOTE Confidence: 0.93252355

239016f5-7af3-4744-989d-b67e3447e221
00:51:40.780 --> 00:51:41.800
So what's this?

NOTE Confidence: 0.812048

cf7180bd-558a-4404-83cb-142752a033bf
00:51:45.600 --> 00:51:52.165
Is it for maximum for two binary
variables? So if I have two

NOTE Confidence: 0.812048

76d9fdcf-0cfe-412e-bfb3-eb0a2a383de2
00:51:52.165 --> 00:51:53.680
binary variables X&Y?

NOTE Confidence: 0.77758247

62e42445-f435-4197-8e09-af1a1afe9fd5
00:51:54.320 --> 00:52:00.053
You already said that there are
four different ways X or Y Expo

NOTE Confidence: 0.77758247

f711a44d-4f25-4ab4-bc3e-e35946afca83
00:52:00.053 --> 00:52:06.668
or YX or Y board and explore why
bot. So how can I assign match

NOTE Confidence: 0.77758247

0e014c8e-fa21-424b-8d9a-b1fbd2ac8e59
00:52:06.668 --> 00:52:10.637
them to these different or
within two binary variables?

NOTE Confidence: 0.77758247

8d5eed88-5baa-4908-b28a-35b7a427aa7c
00:52:10.637 --> 00:52:14.606
Here is the way. Basically you
assign Maxim 0.

NOTE Confidence: 0.90657854

6cbe8095-2487-4f55-b984-2ae46cd26496
00:52:15.930 --> 00:52:17.079
To this one.

NOTE Confidence: 0.7615698

9d72bd4f-fba5-45de-926e-03426a54bbca
00:52:18.100 --> 00:52:22.213
 Which is equal to minterm 0 followed by nuts. 

NOTE Confidence: 0.77440923

7ebc3468-3a8c-4376-ae17-3b105c4528b0
00:52:23.290 --> 00:52:28.888
 So you already assigned minterm 02X, bar Y bar. 

NOTE Confidence: 0.7164998

9a92a08f-929e-4c1d-8f91-f7470cf57368
00:52:29.660 --> 00:52:34.750
 So now you assign minterm 0 followed by the nots. 

NOTE Confidence: 0.7588954

c42ee823-4e35-41bd-a3fc-ea8d07efc54f
00:52:35.910 --> 00:52:37.590
 Here followed by the nots. 

NOTE Confidence: 0.8191923

2760e690-f78c-4b9d-b354-72bbc4e95d75
00:52:38.280 --> 00:52:40.780
This is already, you know,
that this is midterm 0.

NOTE Confidence: 0.7527338

d3f623c6-2028-4d81-9173-4744a6f22672
00:52:42.470 --> 00:52:47.675
minterm 0 followed by the not so you bring the not inside so it 

NOTE Confidence: 0.7527338

52608093-b8e8-4aba-a779-de802acc2879
00:52:47.675 --> 00:52:51.492
goes on top of each pointer
variables so expor followed by

NOTE Confidence: 0.7527338

3819c033-d99c-4684-baf0-5bdcaefcee26
00:52:51.492 --> 00:52:52.880
another not becomes X.

NOTE Confidence: 0.78689754

0ab6a21d-24e5-4dbb-8893-a23f0f0160e4
00:52:54.280 --> 00:52:58.060
y bar followed by another bar becomes? Why and then it changed

NOTE Confidence: 0.78689754

65eba885-b76e-4346-9f3a-a8e1ee482a05
00:52:58.060 --> 00:52:59.320
the end to or?

NOTE Confidence: 0.7959485

486f5846-1b05-4445-a897-96b238d42b94
00:53:01.020 --> 00:53:05.348
So minterm Zero goes to X or Y.

NOTE Confidence: 0.93421066

2733fce6-ce84-4d0d-9a23-0cfc38098064
00:53:07.400 --> 00:53:08.768
Let's check this one.

NOTE Confidence: 0.73474807

0e9651cd-b968-4b0b-bea8-de0376426fdd
00:53:10.680 --> 00:53:16.518
 So minterm 2 minterm 2 is equal to me. Sorry Maxterm 2

NOTE Confidence: 0.7597479

3e63a7ca-8d52-44e6-857b-12b1d8c85208
00:53:18.690 --> 00:53:20.938
equal To minterm 2 followed by

NOTE Confidence: 0.8533252

f3522ca0-7b5a-4e16-b16c-0a6db32a84b5
00:53:20.938 --> 00:53:27.090
 nots. So what was returned to return two? Was this so 

NOTE Confidence: 0.8533252

79a00bf3-2803-4dfb-b96b-3d1c1dda962c
00:53:27.090 --> 00:53:28.096
basically 10?

NOTE Confidence: 0.843457

64ec6aa4-7a57-47fe-bc83-a9583b86d2d8
00:53:29.530 --> 00:53:33.046
So here is the zero, followed
by, not because one and by

NOTE Confidence: 0.843457

f5912ed8-3901-4185-87c4-31548d677c71
00:53:33.046 --> 00:53:36.269
 one becomes one. So this is. This is minterm 2. 

NOTE Confidence: 0.7556158

c798cc0d-51d3-4fff-b726-73ce2dc32454
00:53:38.320 --> 00:53:43.180
minterm followed by the not. So you bring the not inside. 

NOTE Confidence: 0.8112723

4172e270-c58f-4382-b81d-4b3112a3f3eb
00:53:44.310 --> 00:53:50.190
 So not on top of x bar becomes X not on top of XY, becomes Y 

NOTE Confidence: 0.8112723

16622a85-d9d2-44f3-ab54-be6bbd2f1b7f
00:53:50.190 --> 00:53:52.934
bar and it changed the end to

NOTE Confidence: 0.77453506

0a2aaf93-928d-4a68-bfae-ac2e9b06c497
00:53:52.934 --> 00:53:59.622
or. So you assign me
maximum 22X or Y bar.

NOTE Confidence: 0.8365755

adba04db-f6bc-4ae0-beb1-a0e0a5f11704
00:54:01.160 --> 00:54:06.728
Here is the mapping, so whenever
you forgot how to assign a

NOTE Confidence: 0.8365755

db410ce1-d6ad-42f9-bad7-2a2fc8a88777
00:54:06.728 --> 00:54:11.368
maximum two or of two binary
variables, you just simply

NOTE Confidence: 0.8365755

625fc745-fa8a-480f-bf7d-d572d7c935ba
00:54:11.368 --> 00:54:15.544
assume that how. Or you can
create the midterm.

NOTE Confidence: 0.8843413

8ef84bf6-08be-431b-ab1b-b7b0b121abae
00:54:16.370 --> 00:54:18.086
 And then followed by the nots. 

NOTE Confidence: 0.6699166

cd1c617f-5a42-40d8-a1fd-c90f302549af
00:54:22.050 --> 00:54:26.040
So also you can, uh, I mean.

NOTE Confidence: 0.8122203

9903be01-2d71-465f-8e29-6bb345cac47a
00:54:26.680 --> 00:54:30.816
Â that. So basically you could say this one Maxim two. 

NOTE Confidence: 0.8122203

0a244a8b-4902-4ef2-9d4d-4651753f378c
00:54:30.816 --> 00:54:36.080
What is the binary #4 two it is
given two positions. It is 1

NOTE Confidence: 0.86892724

c9eb0f5a-03f4-4d16-a70d-2d60b42edf52
00:54:36.080 --> 00:54:43.282
zero. If it is 1 zero
I applied not on top of that

NOTE Confidence: 0.86892724

3cd74903-8cbf-4076-8475-34466daa284c
00:54:43.282 --> 00:54:48.192
it becomes 10, but it
becomes or between them, so

NOTE Confidence: 0.86892724

f699af11-43d7-4798-baee-cd3dc1d1ffe3
00:54:48.192 --> 00:54:50.156
then it becomes X.

NOTE Confidence: 0.9329216

2358f875-0c38-4aa5-a634-8144c43ea04c
00:54:51.180 --> 00:54:54.848
 Or y bar This is another way. 

NOTE Confidence: 0.7837555

9db8ea96-8b20-49a7-b7f3-878ecdbf1f5f
00:54:57.670 --> 00:55:01.685
 For instance, for minterm 3 you can say that minterm 3

NOTE Confidence: 0.7837555

6476afe6-f3fd-4523-97fa-55ed6f8a33b4
00:55:01.685 --> 00:55:06.430
is. This is the three in binary
system and then you apply not.

NOTE Confidence: 0.90990883

ee2944d3-f0a5-48ba-8ab6-82c8e786cfa9
00:55:07.780 --> 00:55:11.160
It becomes zero or zero.

NOTE Confidence: 0.81416434

06367478-ad24-4382-b08a-56598df9a714
00:55:11.780 --> 00:55:13.720
So now you have export.

NOTE Confidence: 0.819202

6847f47f-0dbc-48c1-a7df-b2fd8a515ecf
00:55:14.370 --> 00:55:15.470
Or whatever.

NOTE Confidence: 0.89871466

f0871d13-602e-476a-bbbd-c7a9f30caa89
00:55:16.820 --> 00:55:19.980
This is another way to come
up with this mapping.

NOTE Confidence: 0.7906363

529e85ea-bf0b-44e3-9e9e-6ae22bfe11ba
00:55:22.420 --> 00:55:26.730
How about 3 binary variables
when you are given three

NOTE Confidence: 0.7906363

5cc40245-a4ec-413d-8e19-433ea81f93f7
00:55:26.730 --> 00:55:30.609
binary variables, you gonna
have how many different or

NOTE Confidence: 0.7906363

5374bb71-6291-4b66-ae69-e0901de22651
00:55:30.609 --> 00:55:31.902
you can create.

NOTE Confidence: 0.89826286

a070edd4-f893-46fd-99a3-9d78f83d5a76
00:55:34.390 --> 00:55:35.160
Anybody?

NOTE Confidence: 0.8446068

6c275e05-b960-42a5-a65e-8f48e7a12edf
00:55:47.680 --> 00:55:50.956
So you are given three
binary variables.

NOTE Confidence: 0.70897907

8bbb715b-a884-4df0-8a9f-256851947f1f
00:55:52.050 --> 00:55:56.769
Each one have a 2 forms,
but either in the normal

NOTE Confidence: 0.70897907

9419505f-1100-4a73-b9a4-d8341f3167c0
00:55:56.769 --> 00:56:01.488
form on the compliment for.
So this is very similar to.

NOTE Confidence: 0.7531757

4bd0ffc6-8b2b-424d-aa67-9648481bcf9b
00:56:03.170 --> 00:56:05.788
Have on your variables and you
want to add them together.

NOTE Confidence: 0.8874731

681d17b8-b6b7-48d9-9b8f-6d3a18aa3fa3
00:56:06.460 --> 00:56:10.770
So each one, two different
possibilities or two to the

NOTE Confidence: 0.8874731

284836c5-c09e-4c1e-8b71-fd2c8220103d
00:56:10.770 --> 00:56:13.787
power. Three 8 * 8
different ways.

NOTE Confidence: 0.84102213

4ebbbab4-3ddc-4862-b968-649605862fee
00:56:15.020 --> 00:56:19.448
So here is all those various. I
mean different ways you can

NOTE Confidence: 0.8041116

ae88eeff-853f-4bb7-866d-be7031020fd2
00:56:19.448 --> 00:56:26.860
order together. So either X or
Y or Z or the first one is

NOTE Confidence: 0.8041116

473e0b65-d27d-4c17-83f7-c1e3b50f682c
00:56:26.860 --> 00:56:30.255
not the other one, Y is not.

NOTE Confidence: 0.798656

10428ec8-71a4-4b93-95d3-aed1c55cf305
00:56:31.300 --> 00:56:37.904
X bar or white bar or ZXYZ
botan etc. You see you can

NOTE Confidence: 0.798656

d98aeedf-80ad-4d09-a98d-f1fd899d4ddf
00:56:37.904 --> 00:56:39.936
create 8 different forms.

NOTE Confidence: 0.738216

b2bcf85e-1da8-4e07-8d2f-2d7ae94cd620
00:56:40.900 --> 00:56:46.070
Given or as the operator and
each partner available either in

NOTE Confidence: 0.738216

00ed9c84-bf5f-4b77-9477-712f67148ca4
00:56:46.070 --> 00:56:47.480
the compliment form.

NOTE Confidence: 0.8614287

e690ec18-d628-4843-9959-49833d9fec42
00:56:48.160 --> 00:56:49.750
Or in the normal form.

NOTE Confidence: 0.79102176

5790cdfb-07e0-4165-a44e-fb86713c363a
00:56:53.470 --> 00:56:56.122
Now you have to assign Maxterms

NOTE Confidence: 0.7843588

48036681-634f-43cc-98b6-0f5a6ca704d4
00:56:56.122 --> 00:57:02.320
so. Maxim 0 so zero when
you are given three binary

NOTE Confidence: 0.7843588

68462dc5-7477-4389-baee-9cf1f8fc954e
00:57:02.320 --> 00:57:03.835
variables is 000.

NOTE Confidence: 0.8083758

009f150a-ea83-41d1-bb00-d0780cf11bc1
00:57:06.480 --> 00:57:13.284
Followed by not it becomes one
or one or one. So then you can

NOTE Confidence: 0.8083758

60b71591-d634-4ccd-bfdf-4809c26a0d41
00:57:13.284 --> 00:57:20.574
write it X or Y or Z. So
you assign meet Maxim 0 to this.

NOTE Confidence: 0.8626801

c48c4abd-223e-496e-9b53-3d08bfdce99a
00:57:21.450 --> 00:57:22.080
Turn.

NOTE Confidence: 0.76923454

5e400dbc-ff6f-4041-9b02-a853fbdd283d
00:57:23.250 --> 00:57:26.310
Which is equal to midterm 0,
followed by not.

NOTE Confidence: 0.8740455

5e62e6a2-ed78-45e2-a1b7-10a51a812a5b
00:57:29.620 --> 00:57:30.850
For instance here.

NOTE Confidence: 0.7974042

c28bd502-220c-4d29-82ea-fb9944dfe4be
00:57:32.080 --> 00:57:39.880
You assign maximum 5 to
disturb why? Because five is

NOTE Confidence: 0.90478647

471233ad-c137-463f-9ccc-106853ae2666
00:57:39.880 --> 00:57:46.920
101. And then you followed
by the not it becomes 01.

NOTE Confidence: 0.6320161

52442d3f-918b-4eb8-9d9c-53f3eb05af0b
00:57:49.770 --> 00:57:53.640
0. So export.

NOTE Confidence: 0.9006319

42c66c1b-7bc6-4f68-8d27-15d9eb79592f
00:57:54.840 --> 00:57:55.570
What?

NOTE Confidence: 0.22663558

905811f9-3eb0-4e35-9a16-8e85f3816095
00:57:57.850 --> 00:57:58.390
Anne.

NOTE Confidence: 0.8386073

71f1e98f-b616-46b3-abff-86b4235d6a0e
00:58:02.000 --> 00:58:04.772
So this is the
assignment of maxterms

NOTE Confidence: 0.8386073

ec9aaade-229a-498c-8be9-cf299dc5c2fd
00:58:04.772 --> 00:58:07.544
to three binary
variables that always be

NOTE Confidence: 0.8386073

3e612755-9a57-4511-9890-48387a66c550
00:58:07.544 --> 00:58:10.316
the only operator is
over between them.

NOTE Confidence: 0.81014955

17163f9f-e62c-43a3-97cb-70757db6ddfa
00:58:13.190 --> 00:58:17.102
So in general, if you are given
N binary variables, you're gonna

NOTE Confidence: 0.81014955

e1e77f25-ee51-4950-bd3f-a4ead2a06fc3
00:58:17.102 --> 00:58:21.666
have a 2 to the power of 10
different or within them. So it

NOTE Confidence: 0.81014955

6342172f-d909-43c2-955c-10f52b1de6cc
00:58:21.666 --> 00:58:24.926
 is going to be N -- 1 and here N

NOTE Confidence: 0.8437793

0f2668bf-722d-463e-8ff5-118d1e6d4b00
00:58:24.926 --> 00:58:29.883
minus one. From zero up until N
-- 1 becomes N variables, each

NOTE Confidence: 0.8437793

9cbf18c1-871f-4702-afa1-86fa12a3137a
00:58:29.883 --> 00:58:34.125
one have two forms. So in total
you're going to have two to the

NOTE Confidence: 0.8437793

c9f845e2-79ee-47e6-b52b-1c03dbde464c
00:58:34.125 --> 00:58:35.337
power and different forms.

NOTE Confidence: 0.89733064

10a94b8d-8dcb-46b2-9467-4ec71843714b
00:58:37.000 --> 00:58:40.080
 And here are the different forms, so. 

NOTE Confidence: 0.7121228

658dd629-f60c-4b4f-844c-d0e8de9a2cc0
00:58:41.730 --> 00:58:47.814
 You see, uh, the minterm Zero goes to when they all of them 

NOTE Confidence: 0.7121228

90473eec-6e8d-4788-932b-ed0aedb8e66a
00:58:47.814 --> 00:58:50.154
happen in the normal form.

NOTE Confidence: 0.88135505

5a7d69fa-0d50-4eca-af83-9c3a9b5b61df
00:58:52.560 --> 00:58:57.672
So basically, if you create zero
in each of these variables, it

NOTE Confidence: 0.88135505

225ffb88-224e-4c4e-9a19-ea0d9bf8a369
00:58:57.672 --> 00:59:03.636
makes the maximum 0 zero or zero
or zero or zero makes it 0.

NOTE Confidence: 0.8236712

72260f22-7e22-4829-81f7-9e477cd069df
00:59:05.210 --> 00:59:12.890
Maxim 1, meaning that if you
put a 0 here 00 and

NOTE Confidence: 0.8236712

3e10bbce-9990-4089-8667-b2b3c497287b
00:59:12.890 --> 00:59:14.810
then here one.

NOTE Confidence: 0.8459129

ba18d0ec-3078-44a5-8443-ebba6d87c0c4
00:59:15.920 --> 00:59:19.484
One followed by do not become
zero and at the end.

NOTE Confidence: 0.7698888

7a3d41ac-5952-4846-b7a7-bc8b3c683095
00:59:23.140 --> 00:59:28.585
So basically the maxterms are
making zeros based on the binary

NOTE Confidence: 0.7698888

1d3ce39b-2285-448c-85ec-659719bde69d
00:59:28.585 --> 00:59:31.060
numbers in the binary variables.

NOTE Confidence: 0.66971976

3f94a2ce-282b-4064-b605-23e2f309829f
00:59:32.800 --> 00:59:37.624
Up until here presence here
maxterm the maximum number.

NOTE Confidence: 0.79072237

c4603a19-760c-42fe-8b03-37939fde0a9a
00:59:38.560 --> 00:59:44.176
 Is for the minterm. We have one one in all position one. 

NOTE Confidence: 0.75435376

2bc7afdf-1c65-4f33-9839-2c235621bb3b
00:59:44.960 --> 00:59:46.540
 Followed by the nots. 

NOTE Confidence: 0.9368969

bc796e58-45a7-44a7-b771-df2bbf5a2e05
00:59:47.330 --> 00:59:48.630
So you see here.

NOTE Confidence: 0.8391542

75523817-f0a3-4473-bc36-ee953cc919f7
00:59:49.460 --> 00:59:54.692
It means that one here, one
here, all of them followed by

NOTE Confidence: 0.8391542

d5cc7c47-6c8c-4b94-9db0-09ca565018bb
00:59:54.692 --> 00:59:56.436
 the nots becomes 0. 

NOTE Confidence: 0.70965695

52508613-17be-41cf-966b-ae44b1020a24
00:59:59.310 --> 01:00:03.799
 So this is the. assignment of Maxterm to the orbiting binary 

NOTE Confidence: 0.70965695

46efa4b6-b4be-4e09-b415-c85af644fe66
01:00:03.799 --> 01:00:07.138
variables. So what's the
benefit of this?

NOTE Confidence: 0.8275281

1bcaa3c2-54b2-4c68-a751-a373387fc24e
01:00:12.020 --> 01:00:15.908
So now we want to write the
Boolean function in the truth

NOTE Confidence: 0.8275281

77cb04e3-a186-44c3-829e-19588a9f7a9d
01:00:15.908 --> 01:00:17.528
table based on the maxterms.

NOTE Confidence: 0.9214642

536409ee-983b-44f3-a0aa-74f47d592397
01:00:18.580 --> 01:00:22.888
So here is very important, so I
need your full attention. So

NOTE Confidence: 0.9214642

3d6bf204-75a5-441a-8bc0-b6079f0da00b
01:00:22.888 --> 01:00:25.401
before I start I just want you.

NOTE Confidence: 0.88479674

37ac928a-c709-41c4-89d0-b7c6af587810
01:00:25.970 --> 01:00:29.688
To give me some feedback that
you have the focus to be slides.

NOTE Confidence: 0.7442499

955b1324-7bf3-44b0-a1a9-d16e7f9ef577
01:00:34.330 --> 01:00:37.426
Guys, OK Michael,
thank you Michael.

NOTE Confidence: 0.49500415

51be6e8b-8b2f-4b64-afce-c3bba4ad3e60
01:00:38.640 --> 01:00:41.658
 Thank you

NOTE Confidence: 0.8951817

0ab0d1e5-b160-46ca-ba7d-98c21f0191bd
01:00:42.830 --> 01:00:46.823
Because this part is kind
of tricky, so I need your

NOTE Confidence: 0.8951817

98484213-86e5-4d76-a547-c17c1b9736b7
01:00:46.823 --> 01:00:47.549
full attention.

NOTE Confidence: 0.79234016

fe7ce453-b58c-4444-ad67-3fbd8f109fe2
01:00:50.630 --> 01:00:55.661
Thank you as some thank you Jim
Matthew Riley. So we have 50

NOTE Confidence: 0.79234016

92615d3b-8bd2-4e3e-8913-bb0aa55a14e3
01:00:55.661 --> 01:00:57.596
student in the class so.

NOTE Confidence: 0.9187506

3c4e0608-5577-4542-97d6-dcff35d00601
01:00:59.670 --> 01:01:00.020
I will.

NOTE Confidence: 0.5873707

412193d9-d22e-446b-9907-df9865671506
01:01:03.080 --> 01:01:04.720
So Taylor.

NOTE Confidence: 0.38866833

2fd8189e-b9bc-4bd5-9fba-728c6c506bf0
01:01:08.710 --> 01:01:10.820
Jaykumar animal.

NOTE Confidence: 0.8518977

c4f2c098-1ff9-4c5c-9c52-8323f7baac11
01:01:12.010 --> 01:01:16.789
Sorry if sometimes I cannot
pronounce your name correctly.

NOTE Confidence: 0.8518977

c3c180d5-31be-401d-ad75-8d8cf965bbba
01:01:16.789 --> 01:01:18.382
Cameron, thank you.

NOTE Confidence: 0.7463379

75ed6ae3-a36f-46e5-816a-2e5222f1ca24
01:01:20.200 --> 01:01:23.520
Various so it seems
everyone has the focus.

NOTE Confidence: 0.8205404

204240c2-7b23-444a-b7a9-3ac5c3dafcf4
01:01:24.580 --> 01:01:29.020
Although still I haven't
received 50 feedbacks, but

NOTE Confidence: 0.8205404

fcfb22f4-f9fd-49ef-b758-6e4174a2f266
01:01:29.020 --> 01:01:30.130
let's continue.

NOTE Confidence: 0.8810197

a204a02d-e140-4a60-bdea-8c2207d4098c
01:01:32.550 --> 01:01:37.203
You see, you already saw
that. If you are given two

NOTE Confidence: 0.8810197

f198012c-b3f1-40f6-b799-63300c03874d
01:01:37.203 --> 01:01:38.049
binary variables.

NOTE Confidence: 0.8521345

09e6b5da-e486-4e1d-9301-9b6b729eb828
01:01:39.500 --> 01:01:43.985
And we see in the right side of
the truth table. For instance,

NOTE Confidence: 0.8521345

d4fc11b2-80b0-4d9c-ac11-779b8f769225
01:01:43.985 --> 01:01:45.365
we have two ones.

NOTE Confidence: 0.77446854

95cdd4aa-48c8-4334-b1a4-ab654ccefe97
01:01:45.940 --> 01:01:49.892
 It means that the minterm here's the midterm 0, and here is the 

NOTE Confidence: 0.77446854

f71c1bf3-19a1-495c-8a2c-94ba4da1fbd8
01:01:49.892 --> 01:01:53.540
minterm one so we can write only those midterms that makes it. 

NOTE Confidence: 0.7478065

8eecf72b-12ad-4ee9-a273-1e65b4c6c6cc
01:01:54.570 --> 01:01:55.670
Output one.

NOTE Confidence: 0.8614603

17da2728-793e-4e7d-9621-b1bf8a981d54
01:01:57.190 --> 01:02:02.635
So be careful here I can
rewrite this function.

NOTE Confidence: 0.9292797

f72e0d1b-73ea-4a9e-ba76-5324426c2fec
01:02:03.300 --> 01:02:04.290
Another way.

NOTE Confidence: 0.8211657

cb925717-0aab-4403-a5b5-c83ac8711276
01:02:05.310 --> 01:02:10.140
So here is this cat. So here is
the. This is the midterm zero

NOTE Confidence: 0.8211657

59c55a51-3e60-468d-b01a-78aec360f28e
01:02:10.140 --> 01:02:12.555
and one and here is the midterm

NOTE Confidence: 0.8610832

e427e2c7-8270-4448-af44-6c4c91253acc
01:02:12.555 --> 01:02:17.728
0. And here's the meter one so
or them together. So basically

NOTE Confidence: 0.8610832

b7353d00-52d6-4702-adc9-cdc844c07cac
01:02:17.728 --> 01:02:22.024
this sum of some of these
products. So this is the design

NOTE Confidence: 0.8610832

b6296344-f069-49c2-aa3b-b27fb9c41194
01:02:22.024 --> 01:02:24.530
we already know how to do that.

NOTE Confidence: 0.8598226

ca27419f-da70-466f-a397-810d6a48134d
01:02:25.830 --> 01:02:31.554
So now I do am not on top
of the Boolean function.

NOTE Confidence: 0.76686174

62a82edc-362e-42d4-8b83-b85a58ccf0f0
01:02:34.000 --> 01:02:36.574
When I do and not on top of F.

NOTE Confidence: 0.849991

f2d7af27-505f-460b-87e7-dcd017d97e48
01:02:39.520 --> 01:02:41.384
We wanna see what it makes it 0.

NOTE Confidence: 0.8617562

0b7d1c47-905d-4700-adbf-5906ec655c20
01:02:42.450 --> 01:02:47.434
For instance, here one becomes
01, becomes 0.

NOTE Confidence: 0.8206864

56cc92c1-76ea-4c45-9fa9-9051b7500335
01:02:48.150 --> 01:02:52.847
But zero becomes one and zero
becomes one. So basically just

NOTE Confidence: 0.8206864

cb2d4fac-c26d-49fc-8294-29273a8eb3ce
01:02:52.847 --> 01:02:57.971
not of the F. Whenever you see
one, it outputs zero. Whenever

NOTE Confidence: 0.8206864

1edb2f42-71f9-4e86-8e6c-682306fe98f1
01:02:57.971 --> 01:03:00.960
you see zero it out. Which one?

NOTE Confidence: 0.8134248

80497860-1090-4471-b5eb-59afc4abf25a
01:03:03.090 --> 01:03:07.806
So F1 so if or if you write in
midterms for F.

NOTE Confidence: 0.8725397

dd30a6ca-8bd2-46de-9855-39a275f54b4c
01:03:10.280 --> 01:03:14.746
So assume that the function is
this. This is the function.

NOTE Confidence: 0.8243697

71e83a47-6a6f-4ca8-b461-15f6eece8a4b
01:03:16.010 --> 01:03:20.123
This is the function
F1. Now F bar becomes

NOTE Confidence: 0.8243697

f7d2fd34-5419-4263-b1d8-906c7327e25d
01:03:20.123 --> 01:03:22.865
one in the mid term 2.

NOTE Confidence: 0.72044665

cc6351ff-a19f-46da-90d6-00a63aa5d317
01:03:24.000 --> 01:03:25.389
And little 3.

NOTE Confidence: 0.79394424

97e2f1dd-628c-495f-9cfa-1914a0ea8b93
01:03:28.520 --> 01:03:34.669
So F becomes one for the enemy
terms zero and one F4 becomes

NOTE Confidence: 0.79394424

a59377cf-a7ea-4dbd-9d15-233b8fe2e8f3
01:03:34.669 --> 01:03:38.926
one for their remaining midterms
and two an M3.

NOTE Confidence: 0.9358136

e8c88864-aafa-468a-aaf2-917585ab3c09
01:03:40.640 --> 01:03:41.340
OK.

NOTE Confidence: 0.90213203

9e7c56e7-d044-4edb-b2f4-03f854013493
01:03:44.470 --> 01:03:47.150
So how about now?
Can you hear me?

NOTE Confidence: 0.8930537

02a3f3a0-d52e-4f6c-83bb-e855b0a9413c
01:03:54.430 --> 01:03:58.480
OK, OK so it seems
it's back so again.

NOTE Confidence: 0.7713788

ae32e4b0-3b8a-4f8d-9346-1400a31a1d37
01:04:00.070 --> 01:04:01.078
For the F.

NOTE Confidence: 0.76467794

e7c34683-fd5f-44dc-9ef1-1148bb0c4c03
01:04:02.580 --> 01:04:06.840
Return zero and one makes it one
for the F.

NOTE Confidence: 0.77355105

268babd6-5a3c-42d2-8d81-e0f895529c1b
01:04:07.510 --> 01:04:13.105
But for the F bar, the remaining
in terms makes it a four one. So

NOTE Confidence: 0.77355105

21430848-7a12-4e51-86e2-84faa633b612
01:04:13.105 --> 01:04:14.224
M2 and M3.

NOTE Confidence: 0.9105292

5a2af8ea-f680-4a9d-9e4a-8f3432b5f9e4
01:04:17.970 --> 01:04:22.542
So whatever makes it 0, four F1
makes it 1 four F4.

NOTE Confidence: 0.77793163

fb2ed13e-b827-42e1-a2ef-808677962f60
01:04:23.500 --> 01:04:26.398
So F4 is midterm 2 and three.

NOTE Confidence: 0.9338676

feccc228-bf6c-461d-a98c-3a222bff8ddf
01:04:27.400 --> 01:04:28.250
So.

NOTE Confidence: 0.90804434

f7b5b227-1ec1-4876-ac87-a197c0f3d292
01:04:29.300 --> 01:04:30.820
Now let's do this.

NOTE Confidence: 0.74946

94a7c026-2195-4156-adea-62780ce67ba8
01:04:37.260 --> 01:04:44.732
All. Let's put it laser point.
OK, now I do another nuts on top

NOTE Confidence: 0.74946

d634e7e8-2295-454b-ad28-77177690b923
01:04:44.732 --> 01:04:46.668
of the F bar.

NOTE Confidence: 0.808841

10a6f809-c27d-41c2-a22a-81ec00c8c94b
01:04:47.480 --> 01:04:52.238
So F4. Followed by
the not becomes F.

NOTE Confidence: 0.7581209

1b5cd011-5afc-44a1-9985-8cd2548d2963
01:04:57.860 --> 01:05:03.824
Ask for or was already an two or
an three, followed by the nuts.

NOTE Confidence: 0.7917863

3bce947a-17dc-4015-a097-fdac91d152bc
01:05:04.440 --> 01:05:08.990
So basically I applied another
nuts to bring the FO.

NOTE Confidence: 0.8653721

d694e3cf-1a3c-461f-a8cb-77bbcbc22f88
01:05:12.000 --> 01:05:17.040
But the right side is M2 or M3,
followed by the nuts.

NOTE Confidence: 0.8850294

65fe5ef1-2974-4b79-8efe-2de3ec820fc9
01:05:19.570 --> 01:05:27.322
So we although we see the
same truth table here, 1100 the

NOTE Confidence: 0.8850294

c6b2c91d-ecc1-4bb1-9da8-455ffdaa340e
01:05:27.322 --> 01:05:29.260
same as F1100.

NOTE Confidence: 0.9124388

779f8daf-d218-4eb8-b3dc-c51c0b46907b
01:05:29.900 --> 01:05:32.665
But the right side here you see.

NOTE Confidence: 0.7390239

b4281582-6f36-4890-b3bd-1100b2088526
01:05:33.260 --> 01:05:39.200
This is for the F4M2 or M3,
followed by them nuts.

NOTE Confidence: 0.84377444

d00d8f03-2d4e-4d11-bdc5-f4269cc833e0
01:05:40.360 --> 01:05:46.212
So again, F is N 0 or N1. I
create a four which becomes

NOTE Confidence: 0.84377444

d47b0c9d-5677-4594-b271-55a5232408e1
01:05:46.212 --> 01:05:51.646
M2 or M3. I applied another,
not an F for the right side

NOTE Confidence: 0.84377444

96bb8dc3-2799-4069-946d-cffd1a4181b6
01:05:51.646 --> 01:05:55.826
becomes F4 followed by the
North which becomes F but

NOTE Confidence: 0.84377444

5a00a3cf-b757-4500-9a63-089e4b16745b
01:05:55.826 --> 01:06:00.006
the right side becomes M2 or
M3 followed by dinner.

NOTE Confidence: 0.8492731

69bad1d8-478a-4b9e-b650-17d97cdc0764
01:06:01.510 --> 01:06:08.886
So you see that I can rewrite F
by M2 or M3 nuts and M2 an

NOTE Confidence: 0.8492731

585e9cf5-32a3-48bc-b6e6-80d8a9f02ebc
01:06:08.886 --> 01:06:13.035
M3 or those entries that makes
the output 0.

NOTE Confidence: 0.8667937

d957a9d4-6867-4131-8b6b-a76426cb98e5
01:06:16.450 --> 01:06:21.382
So now I bring the not
inside the parenthesis.

NOTE Confidence: 0.788017

d5ddd0fb-b13b-46f0-97c8-f18f14bcea82
01:06:23.040 --> 01:06:30.477
 So again. F is F bar followed by the nots and F4 was M2 or 

NOTE Confidence: 0.788017

0a791e1f-7a1c-43aa-8a49-b0f87ae9b8e7
01:06:30.477 --> 01:06:36.314
M3 followed by the not. I bring the not inside by D. Morgan's

NOTE Confidence: 0.788017

87418462-c180-4b0f-ba1d-69491834cb1a
01:06:36.314 --> 01:06:42.151
law. If I bring the not inside it becomes M2 bar and three

NOTE Confidence: 0.788017

4de9e7de-c21a-4968-857b-e8ce67314ee7
01:06:42.151 --> 01:06:44.396
board and or becomes an.

NOTE Confidence: 0.76340896

488658f6-c56d-4157-8806-aec454f6b559
01:06:45.980 --> 01:06:51.791
And I already know that M2
followed by the not the mid term

NOTE Confidence: 0.76340896

bc33aa8e-272f-4847-a1dd-4b5fa1bec070
01:06:51.791 --> 01:06:57.602
 2 followed by the not becomes maxterm to an M3 followed by the 

NOTE Confidence: 0.76340896

ba4189f7-e8eb-4571-a11e-4c5792f6ea50
01:06:57.602 --> 01:06:59.390
not becomes maxterm

NOTE Confidence: 0.7760976

418abc3c-8825-42b9-85c8-aa3610899b0e
01:07:01.980 --> 01:07:07.030
So it becomes Maxim 2, Maxim 3
and between them.

NOTE Confidence: 0.8547822

fc1f82d7-d7fa-4173-96c6-5a194c249ed0
01:07:08.100 --> 01:07:12.780
An Maxim 2 is the entry that
if you write the binary

NOTE Confidence: 0.8547822

e323806c-c924-4883-96f0-35eb0ec1ec2e
01:07:12.780 --> 01:07:16.290
number in the input, it
makes the output 0.

NOTE Confidence: 0.78833365

39cc66a9-1006-4432-80c6-1b4f8c70a67c
01:07:18.440 --> 01:07:20.068
And Max in three.

NOTE Confidence: 0.8782437

fba8ccc5-ba13-4e98-825b-3f4b34971a3f
01:07:21.580 --> 01:07:24.930
If you write the input by the
binary number 43.

NOTE Confidence: 0.84365654

42bdb935-218b-422f-be5b-ff6a59004372
01:07:27.600 --> 01:07:28.980
The output 0.

NOTE Confidence: 0.8446875

fd50aafd-2d33-4fb0-9051-9d3b5b673d5c
01:07:30.260 --> 01:07:36.212
So you see that now I write F as
the end of Max term. That makes

NOTE Confidence: 0.8446875

c529b74e-bbbd-4152-99a8-34fc592ddb43
01:07:36.212 --> 01:07:37.328
the output 0.

NOTE Confidence: 0.8518163

4d3d6234-30e4-435e-be4a-7bc4671d8c20
01:07:38.930 --> 01:07:46.070
And if you check, you see
that is still the app outputs

NOTE Confidence: 0.8518163

dfa7c3c7-094e-4190-b322-1b33f20544bc
01:07:46.070 --> 01:07:48.450
140001 and output 041011.

NOTE Confidence: 0.80151117

f0bc17e5-1e7f-4062-bd2b-bd4ba1d1b8fb
01:07:52.170 --> 01:07:54.826
So you can write app as the sum

NOTE Confidence: 0.70861745

53486981-174f-4df9-b96b-9ef4bae8e91c
01:07:54.826 --> 01:07:58.870
of midterm 0.
Or midterm 1.

NOTE Confidence: 0.80141234

d380a184-3897-46ba-88f9-587484bd6606
01:07:59.880 --> 01:08:05.382
Another way you can write F as
the Maxim 2 and Max down free.

NOTE Confidence: 0.89064866

e5083331-d02b-4f6a-98ef-08144e10c84d
01:08:06.630 --> 01:08:08.690
So this is another design.

NOTE Confidence: 0.8316739

586bed6b-d2cf-4492-a852-6296c598c313
01:08:09.790 --> 01:08:13.666
So we can rewrite it as a
product because Ann is means

NOTE Confidence: 0.8316739

ff981b58-b885-4048-9a01-b9985b37b7c4
01:08:13.666 --> 01:08:17.542
 that ending or producting two terms. So you can minterm 2

NOTE Confidence: 0.8316739

4574eaee-3846-4b25-8b04-8e2d7c7c1449
01:08:17.542 --> 01:08:19.480
 and minterm three you can 

NOTE Confidence: 0.85803956

a3ad5f98-0bc3-41e8-9dad-cd33328ada98
01:08:19.480 --> 01:08:23.128
write it. Product of
Maxim two and three.

NOTE Confidence: 0.7834046

72c48c77-d7ff-4ae9-bc6a-f848e1162ff4
01:08:25.130 --> 01:08:27.930
For the meeting we have some of

NOTE Confidence: 0.84423786

239b09f9-e898-4a62-b828-9449b0bf7e76
01:08:27.930 --> 01:08:31.930
midterms. For this one we have
product of Maxterms.

NOTE Confidence: 0.7460714

49b728ba-04e8-4838-b548-069cbc130a35
01:08:34.570 --> 01:08:40.870
An Maxim 2 based on our
assignment was X or Y bar.

NOTE Confidence: 0.7907459

15b09f5f-ae07-49b9-9972-d1eb3d0bfaa4
01:08:41.890 --> 01:08:45.742
Maxim three was export or
whiteboard. How can we

NOTE Confidence: 0.7907459

43389101-daed-4c51-8252-a59a9c7a318d
01:08:45.742 --> 01:08:50.450
come up with these terms?
You can simply say that OK

NOTE Confidence: 0.7907459

fee6b689-9897-4db2-8596-14854310c48b
01:08:50.450 --> 01:08:53.018
Max term two is here 10.

NOTE Confidence: 0.839455

df24b0aa-d314-4e8b-ac29-65162e9f051e
01:08:55.690 --> 01:09:02.234
So 10 you have to apply a nut on
top of that becomes 01, but the

NOTE Confidence: 0.839455

6c1f5525-b122-4d6a-ab19-6877885743e0
01:09:02.234 --> 01:09:06.324
OR between them? So let me
change to the pan.

NOTE Confidence: 0.82326525

16299f7f-9a68-4e15-8dfe-efe3d9be6867
01:09:07.200 --> 01:09:13.965
So Maxim 2 Maxim 2 is here 10.
You apply not it becomes one or

NOTE Confidence: 0.82326525

75e5a447-8073-4ad0-9f33-ceb75e1ad308
01:09:13.965 --> 01:09:19.377
zero. And now you can write it.
So this is the X.

NOTE Confidence: 0.8038483

8e5bcba0-a72e-4b9d-b87a-385609f54e49
01:09:20.550 --> 01:09:23.206
And this is the Y bar and then

NOTE Confidence: 0.86505765

3e1571ca-f913-4787-b8b8-5e85c9326e10
01:09:23.206 --> 01:09:25.704
or between them. This is the

NOTE Confidence: 0.7641959

d3a23130-b7ea-4ce7-b781-0240c3108106
01:09:25.704 --> 01:09:28.855
next time too. And this is
the Max term fee.

NOTE Confidence: 0.87468094

0e319a5b-56ea-4544-ba78-dbf46976cbb2
01:09:30.830 --> 01:09:35.105
So you see that if you write the
F only by looking at the zeros,

NOTE Confidence: 0.87468094

29fdb0ad-a42b-42de-917c-6755f3ab6ec8
01:09:35.105 --> 01:09:38.810
you have to write it by the Max
terms and product of that.

NOTE Confidence: 0.81026053

68d262fd-0412-4204-b13e-2894f7208dad
01:09:39.450 --> 01:09:40.479
And between that.

NOTE Confidence: 0.8994912

ea78c13a-2268-40c3-838e-eb109f390369
01:09:43.930 --> 01:09:45.430
And here is the design.

NOTE Confidence: 0.7280723

5972c314-5046-4305-9e27-98cc061c034f
01:09:46.050 --> 01:09:51.366
So for the match term you apply
orpin binding variables 1st and

NOTE Confidence: 0.7280723

c44c8de5-3860-4224-b3b4-299fd85ba1f0
01:09:51.366 --> 01:09:53.138
then add them together.

NOTE Confidence: 0.8349882

b8bb0cdc-aaf6-411d-9114-f1078af67c98
01:09:54.130 --> 01:09:56.030
So this is the master.

NOTE Confidence: 0.83473116

c5f98d32-6f76-46d7-bcbd-953397fdcffa
01:09:56.620 --> 01:09:58.128
What's the maximum here?

NOTE Confidence: 0.9028638

6e95ee23-cffc-4c5a-bcfd-e98a261846ac
01:09:59.210 --> 01:10:04.914
2. Because here if you
have zero or one.

NOTE Confidence: 0.85579294

3793697f-99a7-459a-91e1-e804b5c25fa0
01:10:05.490 --> 01:10:10.992
01 If you apply another nut, it
brings it to mid term, so it

NOTE Confidence: 0.85579294

175195e5-b441-42b2-806b-77e5c8340c28
01:10:10.992 --> 01:10:12.957
becomes 10 and between them.

NOTE Confidence: 0.75692314

e181f071-193b-47f4-8d0c-79d212c82205
01:10:14.250 --> 01:10:18.702
So this is the new term 2, so
meter two followed by the not

NOTE Confidence: 0.6300945

2f7d7629-2e5e-4c03-8288-db9838597a69
01:10:18.702 --> 01:10:23.200
becomes maximum 2. And this is
the Maxterm 3.

NOTE Confidence: 0.76143646

1842c54a-87ae-494a-b068-04ffcffe92c6
01:10:24.020 --> 01:10:27.188
Order the result gonna be under.

NOTE Confidence: 0.7406321

783795d1-a75d-4184-9f19-9fc89383ce34
01:10:27.890 --> 01:10:28.910
This is the ad.

NOTE Confidence: 0.8088057

de51b8d0-0541-4a62-9f28-3b2710faac74
01:10:30.400 --> 01:10:31.408
Add them together.

NOTE Confidence: 0.8309891

63e65639-6c31-4dd7-a7f5-a976aab61926
01:10:33.600 --> 01:10:37.450
So the difference between the
first is on and the second

NOTE Confidence: 0.8309891

48c4087e-c117-4911-b9a5-a6e957cf3d87
01:10:37.450 --> 01:10:41.650
design is this in the first
design you have at the first

NOTE Confidence: 0.8309891

a16ed566-124c-424c-9112-e6b0bae583d2
01:10:41.650 --> 01:10:46.550
level you have ants and then or
in the second design by Max term

NOTE Confidence: 0.8309891

402f6d11-2e89-4826-b2f1-b576929621f8
01:10:46.550 --> 01:10:48.650
you have or and then add.

NOTE Confidence: 0.8158143

5731f9cb-4f45-478c-9fc1-9f2b35ccae56
01:10:51.340 --> 01:10:55.157
That's why we called the second
design product of sums. So

NOTE Confidence: 0.8158143

23408a67-c5be-4b77-9b75-89728ba5af95
01:10:55.157 --> 01:10:59.668
basically you have to write the
Max terms in terms of this sum

NOTE Confidence: 0.8158143

b9620939-6a44-466e-8f6a-751ebf086f3b
01:10:59.668 --> 01:11:01.056
of the binary variables.

NOTE Confidence: 0.7939968

0ba3507a-367f-4a33-88f1-9b1ba7ee5e70
01:11:02.610 --> 01:11:08.224
This is all the sounds or is
gonna be and with each other or

NOTE Confidence: 0.7939968

b0c663e6-67cc-41db-92b8-7b96f551281f
01:11:08.224 --> 01:11:09.427
product so POS.

NOTE Confidence: 0.5531974

b5e7fb60-d586-461e-b546-23d8fcbc61d7
01:11:10.000 --> 01:11:14.200
 The first design is SOP the second design is POS

NOTE Confidence: 0.71133417

838e4c4a-85bb-4af8-a1f0-15e25cae4196
01:11:16.780 --> 01:11:22.522
So or then Max terms are by
over within binary variables.

NOTE Confidence: 0.862979

0185da25-15d8-40a4-bbe1-269c7e0db3c3
01:11:23.410 --> 01:11:26.049
And then add so again 2 levels.

NOTE Confidence: 0.92285967

1b5dedc6-007c-4337-af83-eae7e68aceed
01:11:28.340 --> 01:11:30.720
Or at. So.

NOTE Confidence: 0.8815944

d6fc4989-007d-4997-b4e6-aa838eaf81cb
01:11:31.680 --> 01:11:36.450
Here is the another example.
Imagine we have this truth

NOTE Confidence: 0.8129742

4ef5fca5-6f8e-4c0e-95c6-5c2d4e7e13a2
01:11:36.450 --> 01:11:41.886
table. X&Y and we already
know how to write it based on

NOTE Confidence: 0.8129742

4e31c54d-e8d7-4f06-92e8-6c717ef09e59
01:11:41.886 --> 01:11:46.022
the meter, so the midterm 01
and three is the function.

NOTE Confidence: 0.8129742

5220d93a-d27e-4667-af6f-7dcb31919c5e
01:11:46.022 --> 01:11:49.406
Now we want to write it as
the maxterms.

NOTE Confidence: 0.77510536

a76f570d-be15-4b00-85fd-6920c8eeb5d2
01:11:50.800 --> 01:11:54.463
The maximum is basically look at
those entries. So here's the

NOTE Confidence: 0.77510536

2c1a2b32-2bd7-4ef4-8d09-9e6516e6ec62
01:11:54.463 --> 01:11:56.128
 design based on the SOP

NOTE Confidence: 0.8178597

2d72f55f-68c8-408c-87e5-b40c86579d70
01:11:58.040 --> 01:12:01.725
For the Max term, as I said, you
apply an not.

NOTE Confidence: 0.9055622

a59cf5af-a1c2-4b92-a774-b68a310de1c7
01:12:02.810 --> 01:12:07.026
It becomes F4, which
makes this one one.

NOTE Confidence: 0.78185195

248f1d72-c056-424b-a0bf-73a0a10cd521
01:12:08.780 --> 01:12:10.750
 And then apply another not. 

NOTE Confidence: 0.8005894

77a55ab2-7c2e-4d63-84c7-4377e31d94d2
01:12:11.390 --> 01:12:17.438
To bring it back to F so F4
followed by bar becomes F, but

NOTE Confidence: 0.8005894

1048aa12-2de9-42a7-85e8-3f3981866f3b
01:12:17.438 --> 01:12:19.598
this time becomes M2 bar.

NOTE Confidence: 0.79642963

28885e5a-36da-4329-8aaa-5fe5bcf147c5
01:12:22.760 --> 01:12:27.520
So basically you see
that this this entry.

NOTE Confidence: 0.8664023

ae833d65-d524-489d-9887-9a0534c57194
01:12:28.600 --> 01:12:31.484
Makes it 0 for the original F

NOTE Confidence: 0.8252895

ac01af1a-58ae-41c1-bb70-bb0c13548e12
01:12:31.484 --> 01:12:37.907
 which is. The minterm 24F, four followed by the nots. 

NOTE Confidence: 0.7372687

d8e10e1c-40f0-4561-89c2-395de8fb9f7a
01:12:38.860 --> 01:12:42.108
 M2 followed by the not is maxed into. 

NOTE Confidence: 0.8781748

cb652632-72c5-4e4a-bf30-5247b7d9ec01
01:12:43.270 --> 01:12:47.310
Because if you write the
binary variable for two, it

NOTE Confidence: 0.8781748

903077ba-2442-48d0-90e1-8760235690be
01:12:47.310 --> 01:12:48.522
makes the F0.

NOTE Confidence: 0.8258558

4fa62a5d-4999-4230-b656-4920aec91eb8
01:12:53.420 --> 01:12:59.496
An If you design by based on the
Max terms, here is the same

NOTE Confidence: 0.79283905

25b83f33-2167-40e5-b61e-a6d3afc9c70a
01:12:59.496 --> 01:13:03.876
function. Max term and two which
is equal to mid term 2 followed

NOTE Confidence: 0.79283905

689ed3f8-9c0a-4866-877e-ea94d6111e33
01:13:03.876 --> 01:13:08.121
by the nuts and this is the mid
term 2 followed by the not. This

NOTE Confidence: 0.79283905

30015169-8931-4cad-93c2-1335c51487df
01:13:08.121 --> 01:13:09.253
is the maximum 2.

NOTE Confidence: 0.84793156

ba170dd7-98be-40d3-8061-d83c634f5585
01:13:11.360 --> 01:13:16.554
Just an OR gate is enough, but
because we say that we have two

NOTE Confidence: 0.84793156

e1f64625-08ab-4a77-89a4-ff5a7dc30291
01:13:16.554 --> 01:13:22.119
levels, you can add another and
in the end so or and with one it

NOTE Confidence: 0.84793156

96726b2a-fac1-494e-bc88-143af12bf6c2
01:13:22.119 --> 01:13:26.571
doesn't have any impact. Just to
keep this standard that we have

NOTE Confidence: 0.84793156

56446234-74bb-45df-8dc0-9984834a7fd3
01:13:26.571 --> 01:13:29.168
 one level of or and final level 

NOTE Confidence: 0.8774293

71b94d75-b949-4f8d-bdf3-49b333353ab4
01:13:29.168 --> 01:13:33.640
of AND. So if you add with one doesn't have any impact.

NOTE Confidence: 0.912525

82f8f1b9-8455-4fcb-b781-84bb6edf1408
01:13:34.260 --> 01:13:35.288
So here is the.

NOTE Confidence: 0.8062084

0ae47801-ec4e-4257-b766-04e2847b7524
01:13:38.710 --> 01:13:43.837
 So. We have SOP you have POS both end up with the 

NOTE Confidence: 0.8062084

7b5151a4-a44a-48b2-93e8-b022efd3134b
01:13:43.837 --> 01:13:47.207
same correct function. But
if you want to choose which

NOTE Confidence: 0.8062084

1952b433-d4e9-41b8-b1fe-a6769c6afa64
01:13:47.207 --> 01:13:51.251
one you choose. If you are
given a problem and you have

NOTE Confidence: 0.8062084

26d039da-7817-4b50-a85a-8a702b8f43d8
01:13:51.251 --> 01:13:54.958
the decision to, you have
the option to design it as

NOTE Confidence: 0.8062084

e9177562-1a5c-4ee8-b5a6-571fd608a6ea
01:13:54.958 --> 01:13:59.002
the aesopi or designed it as
a POS. Which one you choose.

NOTE Confidence: 0.92214465

a87ed482-436c-47f1-b5f5-1880bef8d387
01:14:00.070 --> 01:14:02.788
For this last example,
for instance.

NOTE Confidence: 0.86846125

ad0ae975-3603-47a3-8c6f-2577c0753280
01:14:04.210 --> 01:14:05.020
Here.

NOTE Confidence: 0.80495054

1785bbfa-0c08-437a-8c6f-2a76fa9a6214
01:14:06.250 --> 01:14:11.500
 If you write it as the sum of minterms, you need how many ands? 

NOTE Confidence: 0.8070116

5ce23316-657d-4e34-b3d0-9d64fec1c662
01:14:17.460 --> 01:14:21.936
Because you need one and four
with 10:01 and four midterm 1

NOTE Confidence: 0.8070116

f0bfd6f9-e379-48e2-8488-74f6852d9e0a
01:14:21.936 --> 01:14:25.293
one and 4,000,000 three. So you
need three and.

NOTE Confidence: 0.9283033

6e479ff7-3569-4d3b-b89e-e29747cea3b9
01:14:27.830 --> 01:14:30.386
And then finally you have to.

NOTE Confidence: 0.84182155

5a8ce3b4-ab48-4141-a8e7-0c659aa90b34
01:14:31.630 --> 01:14:36.349
One or you have to order so one
date of or.

NOTE Confidence: 0.87343484

e9db0af8-8e13-4f0b-864a-14a468173d82
01:14:39.090 --> 01:14:40.958
However, in this design.

NOTE Confidence: 0.8643969

1153a647-4676-4a2d-a548-0e8921c1e5a3
01:14:42.140 --> 01:14:46.436
How many gates do you need? You
only need one or gate.

NOTE Confidence: 0.8670455

5ad5cbbb-f391-485d-9105-8a77a292fcda
01:14:49.580 --> 01:14:54.816
Because you have only one entry
to look at to look into it and

NOTE Confidence: 0.8670455

c26c1083-a7c8-4f54-bf0f-5fb3e68c4615
01:14:54.816 --> 01:15:00.052
then write it as in your design.
Here you have to look at 2-3

NOTE Confidence: 0.85578126

87d8ed8f-92f8-4c32-917b-bf407b5132e2
01:15:00.052 --> 01:15:05.040
entries. So if you compare these
two design, although both are

NOTE Confidence: 0.85578126

d630f912-5854-41b5-b9cd-12b1693fa96b
01:15:05.040 --> 01:15:09.462
correct or effective, the first
design needs 4 gates. The second

NOTE Confidence: 0.85578126

c4cc0f7f-3df1-4e19-adf8-0cd23d39d4a7
01:15:09.462 --> 01:15:11.874
design is only one gate, so.

NOTE Confidence: 0.85053647

0205ff37-df34-4bb8-9627-92de7a0eaab2
01:15:12.570 --> 01:15:16.739
Uh, this second design is much
more cost effective, over much

NOTE Confidence: 0.85053647

11b5b4ef-7708-401d-9e74-0c68f747afed
01:15:16.739 --> 01:15:19.771
more cheaper, so the second
design is better.

NOTE Confidence: 0.90594405

9424c23c-8635-41c2-b484-df81850bec0b
01:15:21.290 --> 01:15:22.120
So.

NOTE Confidence: 0.851258

34032237-5564-4cb0-b142-e852c065fe9e
01:15:24.410 --> 01:15:29.086
We want it and also if you want
to add another and it becomes

NOTE Confidence: 0.851258

8345b49c-c508-4bbe-9c49-b34883694f86
01:15:29.086 --> 01:15:33.094
true gates. So in the second
design you have two gates, but

NOTE Confidence: 0.851258

db8b3a32-d196-4dd9-801e-5ffaaaa90a1f
01:15:33.094 --> 01:15:37.436
in the first design you need 4
gates. So whenever you want to

NOTE Confidence: 0.851258

febef3d8-71c9-492d-a862-9f409c54d0a9
01:15:37.436 --> 01:15:41.110
choose between these two design
you have to keep that. Although

NOTE Confidence: 0.851258

1006643c-e0e2-4ec1-aa23-582de29ac134
01:15:41.110 --> 01:15:44.784
 both are correct but which one needs less number of gates

NOTE Confidence: 0.8237666

5d67ca0d-751b-40d3-b2cd-ce0e10a3ed1b
01:15:45.690 --> 01:15:49.771
In terms of speed, both designs
actually has the same speed

NOTE Confidence: 0.8237666

e8a64e12-ebf8-4b13-94b2-9d7342d74915
01:15:49.771 --> 01:15:51.626
 because in the SOP

NOTE Confidence: 0.72794175

3238a116-6805-43b3-9898-e8f57aac4e2b
01:15:52.620 --> 01:15:54.690
You have one level of And

NOTE Confidence: 0.9202034

fa28237b-2e4d-4f7e-a38b-44aea9339ecb
01:15:58.310 --> 01:16:01.070
And then finally you
order together.

NOTE Confidence: 0.8799569

f2e2bf5b-ec84-4895-bc67-239ef9ab1661
01:16:02.370 --> 01:16:06.608
So two level you have to wait
two times or two time intervals

NOTE Confidence: 0.8799569

7978b414-14a4-43d1-8e11-23490d7a4b11
01:16:06.608 --> 01:16:10.520
to see the result. For the POS
you have one level of.

NOTE Confidence: 0.50599027

dd3263c9-4388-487c-b808-fed7936b380c
01:16:11.250 --> 01:16:12.090
Or

NOTE Confidence: 0.7043632

1366520f-ea26-4153-80ae-16ab6fa6f416
01:16:13.310 --> 01:16:15.530
 followed by final And

NOTE Confidence: 0.9132641

d493504b-d78c-4afe-b952-73a762426455
01:16:16.640 --> 01:16:18.228
So again two level.

NOTE Confidence: 0.87488645

eb89da1c-4bb6-425d-938f-0e9b1c09cf04
01:16:18.910 --> 01:16:22.496
So both of them are two
levels designed, so the speed

NOTE Confidence: 0.87488645

eee7e43a-9441-4391-bb23-8b27141d14d7
01:16:22.496 --> 01:16:26.408
are the same. The only thing
matters here is the number of

NOTE Confidence: 0.87488645

e86d6ca2-f0d4-4691-87e2-91064713ff64
01:16:26.408 --> 01:16:27.386
gates you need.

NOTE Confidence: 0.914648

cee8c60b-8401-4a9f-a4ba-dfdc8c34e271
01:16:30.450 --> 01:16:31.360
So.

