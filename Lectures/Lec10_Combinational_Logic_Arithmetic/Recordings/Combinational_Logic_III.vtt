WEBVTT

NOTE duration:"01:18:58.4530000"

NOTE language:en-us

NOTE Confidence: 0.63816583

8f7defdc-ff14-4efe-9bad-cb81e8c3d203
00:00:00.000 --> 00:00:01.990
Laser print

NOTE Confidence: 0.90637857

dcb18b38-64ca-48ba-bfab-3191895d8dec
00:00:04.300 --> 00:00:06.240
so yeah.

NOTE Confidence: 0.73923534

cb80b6ae-25bf-4a49-b9f6-7f6345401898
00:00:08.690 --> 00:00:12.568
By the way, uh, we released the.

NOTE Confidence: 0.73923534

37e47691-4363-40ae-9c02-34a58a6fd102
00:00:12.570 --> 00:00:16.448
I hope you have read the announcement.

NOTE Confidence: 0.73923534

5f0f6638-ad21-4cb4-962c-c8dd24b00c06
00:00:16.450 --> 00:00:21.616
We released the midterm marks also.

NOTE Confidence: 0.73923534

bd13dde8-a213-4a3c-ad68-db6f197b4ac3
00:00:21.620 --> 00:00:24.276
 You can see the feedback from the markers

NOTE Confidence: 0.73923534

f639deed-6754-4cc4-8576-435ed28a3302
00:00:24.280 --> 00:00:28.375
why you lose Mark if you lost any mark.

NOTE Confidence: 0.73923534

5131a15e-b777-45cc-ae93-230247c23143
00:00:28.380 --> 00:00:31.560
Oh, thank you, thank you Aria.

NOTE Confidence: 0.73923534

372b495f-1c05-40a7-a2df-3e5bc4cba34a
00:00:31.560 --> 00:00:36.096
And also in the last weeks.

NOTE Confidence: 0.73923534

573727d1-089a-49a2-81d5-06606db6f436
00:00:36.100 --> 00:00:37.429
A lecture assignments.

NOTE Confidence: 0.73923534

c69363c5-98c4-4032-aeb5-b127d89bcb0b
00:00:37.429 --> 00:00:39.644
There were some questions that

NOTE Confidence: 0.73923534

d899311e-a675-4c05-a659-ff0ee652dcd7
00:00:39.644 --> 00:00:41.759
we couldn't cover the topics,

NOTE Confidence: 0.73923534

7362841b-d8a9-4736-a1b1-814b0a1f2ab3
00:00:41.760 --> 00:00:44.310
so for this week lecture assignments

NOTE Confidence: 0.73923534

3c1b9d75-9332-4948-93e7-18f4b9ae0ba0
00:00:44.310 --> 00:00:46.540
that I released last night,

NOTE Confidence: 0.73923534

9200de78-e3d6-4c95-9943-ea110d180d17
00:00:46.540 --> 00:00:49.150
I basically tried to, I mean,

NOTE Confidence: 0.73923534

d1efc18a-b4fb-4c0f-bb61-ae8f41fc159f
00:00:49.150 --> 00:00:52.012
select those questions as the new

NOTE Confidence: 0.73923534

117aae56-4492-4ce0-933a-660f611a385b
00:00:52.012 --> 00:00:54.759
I mean lecture assignments so that

NOTE Confidence: 0.73923534

27d7f03e-c7ae-4663-bcd8-9e2b9e3fa54e
00:00:54.759 --> 00:00:57.412
you can see the there's an overlap,

NOTE Confidence: 0.73923534

708eacb5-31fa-47f8-9534-9edff55ac504
00:00:57.420 --> 00:01:00.458
so you have a chance to answer.

NOTE Confidence: 0.73923534

dbc47f97-b409-4942-b82d-56382886fb5f
00:01:00.460 --> 00:01:03.076
I mean those questions that we

NOTE Confidence: 0.73923534

7c68e00e-c695-40cb-a56f-1a7e1d774812
00:01:03.076 --> 00:01:05.679
couldn't cover the topics last week.

NOTE Confidence: 0.73923534

8b542787-e120-4ace-b093-2d67687bdb25
00:01:05.680 --> 00:01:07.930
What we are going to.

NOTE Confidence: 0.73923534

d476e344-bc42-40b9-bf09-6cc3a9f362ed
00:01:07.930 --> 00:01:10.890
Covered the topics this week,

NOTE Confidence: 0.73923534

97ecbf96-e3b3-4443-b5f8-0085544ed21b
00:01:10.890 --> 00:01:13.090
so I mean, uh,

NOTE Confidence: 0.73923534

36efaa5b-7726-4749-aa9c-90f6cd5e9d15
00:01:13.090 --> 00:01:17.130
please don't be surprised if you see

NOTE Confidence: 0.73923534

a588d28e-4181-47af-b63e-d22297ba0d12
00:01:17.130 --> 00:01:20.850
the same question questions as last

NOTE Confidence: 0.73923534

9d3e4705-d5cc-44a5-9179-6b48251cc575
00:01:20.850 --> 00:01:25.758
week and also release the keys for the.

NOTE Confidence: 0.73923534

948f2e5f-4481-42c7-ad39-e33e504c5bdb
00:01:25.760 --> 00:01:29.340
Lecture assignment of the week.

NOTE Confidence: 0.73923534

88dfd4d3-1e99-4b53-9dd0-cb05fbb0873f
00:01:29.340 --> 00:01:36.150
Six I think yes 6. And, uh.

NOTE Confidence: 0.73923534

fa35ea9f-b553-44d0-882b-b4279b9357c3
00:01:36.150 --> 00:01:37.599
Yes, that man.

NOTE Confidence: 0.73923534

8e598b65-663d-4caa-89f0-e656854217e8
00:01:37.599 --> 00:01:41.820
If you want to review your exam papers.

NOTE Confidence: 0.73923534

b5199e8e-3323-4f49-832f-897d71330393
00:01:41.820 --> 00:01:45.519
You can send me send an email to me.

NOTE Confidence: 0.73923534

955cdc1b-dd38-4435-9282-5b36c64cbc19
00:01:45.520 --> 00:01:47.890
We can schedule a meeting in

NOTE Confidence: 0.73923534

279c5c3f-2c04-47ba-9e14-ad2b21f069db
00:01:47.890 --> 00:01:50.821
the I mean office hour and then

NOTE Confidence: 0.73923534

2e565dce-d81f-40a5-9d19-2767c2a30d39
00:01:50.821 --> 00:01:52.916
we can review your paper.

NOTE Confidence: 0.73923534

67b970bf-f4ad-434a-bf64-37a5f78ffa0d
00:01:52.920 --> 00:01:56.344
Or you can simply just drop by the

NOTE Confidence: 0.73923534

0440c8a3-5e35-4245-b5d3-5e128ef0bb80
00:01:56.344 --> 00:01:59.088
office hour after the class today

NOTE Confidence: 0.73923534

6e33ea68-8edd-40c5-8539-7044d537353f
00:01:59.088 --> 00:02:02.355
also on Thursday so we can review

NOTE Confidence: 0.73923534

b5a1272f-cab1-4a3d-8645-e647980b01f5
00:02:02.355 --> 00:02:05.778
your exam papers if you think that.

NOTE Confidence: 0.73923534

f1fbdaab-2768-4f4e-a86b-c1c33fd9dc7c
00:02:05.780 --> 00:02:08.860
It is an issue with the marks.

NOTE Confidence: 0.73923534

2f0b7bbd-bffb-4113-8e7b-1f73bf12dab8
00:02:08.860 --> 00:02:11.360
So.

NOTE Confidence: 0.73923534

609b7f37-f357-4bf4-937d-fba5a49fbbd7
00:02:11.360 --> 00:02:12.856
I before I start,

NOTE Confidence: 0.73923534

761aae74-c479-4796-93d8-9d9257018897
00:02:12.856 --> 00:02:15.100
I'm ready to take your questions.

NOTE Confidence: 0.73923534

ea416953-8b5a-4dbe-9dfe-fbc89c663576
00:02:15.100 --> 00:02:17.180
If you have any questions

NOTE Confidence: 0.73923534

3d71b1b3-3ce3-4cd4-8ac7-612d01bf17ff
00:02:17.180 --> 00:02:19.260
regarding the last weeks lecture

NOTE Confidence: 0.73923534

e8e3e532-0665-466e-bee9-8fa96b22cb68
00:02:19.339 --> 00:02:21.349
and anything related to the.

NOTE Confidence: 0.73923534

5136b1b4-c6c0-4e5d-89dc-974b17b6ed21
00:02:21.350 --> 00:02:22.300
Of course.

NOTE Confidence: 0.8562223

b6a4ebf9-e9d2-418d-a771-3eb30e0eab08
00:02:26.690 --> 00:02:28.400
I actually it's already there.

NOTE Confidence: 0.8562223

2dc6cb62-aa5a-4cf2-b555-4fced1693466
00:02:28.400 --> 00:02:31.158
I mean, the keys for the midterms

NOTE Confidence: 0.8562223

198a41ea-aded-4bea-becd-2e3131434af7
00:02:31.158 --> 00:02:33.529
 are released two weeks ago. 

NOTE Confidence: 0.8562223

ddabf163-205e-45c5-a3b0-52a0ddcd3e70
00:02:33.530 --> 00:02:36.874
Yes, I mean you just go to the

NOTE Confidence: 0.8562223

8697ee4f-e136-4de9-82b4-527430a9cac1
00:02:36.874 --> 00:02:39.918
same folder as exam and then, uh,

NOTE Confidence: 0.8562223

78a953fa-5828-4701-9410-81222bc3b58a
00:02:39.918 --> 00:02:43.182
just in the bottom list you can see

NOTE Confidence: 0.8562223

500fa65b-c8e5-4ee8-9121-3ed3a907149f
00:02:43.182 --> 00:02:46.506
two files with the key, for instance,

NOTE Confidence: 0.8562223

65ba58b6-7d8c-4c6c-b862-3c38e2a81c4e
00:02:46.506 --> 00:02:49.046
midterm exam, one underline key.

NOTE Confidence: 0.8562223

7f621012-7a3f-4144-90e7-30a843672dfa
00:02:49.050 --> 00:02:51.339
And also midterm exam two underline key.

NOTE Confidence: 0.8562223

b9257bb3-97bf-4b9c-b76e-245df05eb72d
00:02:51.340 --> 00:02:54.994
So these are because in the exam we had.

NOTE Confidence: 0.8562223

aa6fa1d0-e94e-4977-a193-d46d2144d00d
00:02:55.000 --> 00:02:57.010
Two versions of the question sheet,

NOTE Confidence: 0.8562223

56213ca1-7855-4856-9400-e76324df89bc
00:02:57.010 --> 00:02:59.222
so based on whether you received the

NOTE Confidence: 0.8562223

59f4d8ec-8f4c-46fc-aa0a-30c0839c5c1b
00:02:59.222 --> 00:03:01.369
first version or the second version,

NOTE Confidence: 0.8562223

d8006440-00a3-47c5-92f3-9d5467b3aba4
00:03:01.370 --> 00:03:02.706
you have the key.

NOTE Confidence: 0.8562223

6453baf7-ca04-4b42-9035-d25be8ca2f00
00:03:02.706 --> 00:03:04.880
Yeah, it's alright. I mean,

NOTE Confidence: 0.8562223

3313758d-20b0-4726-9ac2-d87de20e52b1
00:03:04.880 --> 00:03:08.659
two weeks ago I will release the ideas.

NOTE Confidence: 0.8562223

bed5679f-160e-4693-84ba-18e42cc24792
00:03:08.660 --> 00:03:09.806
OK, in general,

NOTE Confidence: 0.8562223

b05a6de6-0502-46b0-ba91-8cfd551e81c4
00:03:09.806 --> 00:03:12.098
if the input is invalid and

NOTE Confidence: 0.8562223

f293060e-b4bf-4d73-a022-98bbdfa3fd34
00:03:12.098 --> 00:03:14.430
not applicable truth table.

NOTE Confidence: 0.8562223

d4db7287-36cf-43a2-a52f-7aa4280c069b
00:03:14.430 --> 00:03:16.350
When we are designing decoder,

NOTE Confidence: 0.8562223

458e6ae7-7565-43f8-959d-87e0e9e28448
00:03:16.350 --> 00:03:19.414
can we label those as don't care conditions?

NOTE Confidence: 0.8425001

a9b1b2cf-228e-44cf-948b-323aabbcecf1
00:03:22.570 --> 00:03:23.842
Yes, yes Nick,

NOTE Confidence: 0.8425001

6a9739d7-a14e-43ad-a6ed-79400543de56
00:03:23.842 --> 00:03:26.386
but we haven't covered the decoder,

NOTE Confidence: 0.8425001

326cee1c-a9e1-417a-840c-a1342cc81633
00:03:26.390 --> 00:03:29.281
so we're going to cover the decoders

NOTE Confidence: 0.8425001

0c23ba63-0b2a-4312-aa63-0facef259799
00:03:29.281 --> 00:03:31.898
and encoders this week on Thursday.

NOTE Confidence: 0.8425001

7a900607-ffe0-4ee0-9b7b-25b5b6319ae2
00:03:31.900 --> 00:03:35.275
So for I mean for if you are asking

NOTE Confidence: 0.8425001

3688121b-ffc1-4c72-a8bd-c1f2fd0240d9
00:03:35.275 --> 00:03:38.676
about the questions for the last week,

NOTE Confidence: 0.8425001

479a0299-d1f4-415e-9ee7-c359cd879d28
00:03:38.680 --> 00:03:41.260
you can simply answer the first

NOTE Confidence: 0.8425001

013e972c-1cb4-4639-a6b5-8f7067b707ff
00:03:41.260 --> 00:03:43.874
few questions we're going to cover

NOTE Confidence: 0.8425001

79d12131-5c34-4be9-b180-f7ed4da3fd31
00:03:43.874 --> 00:03:46.310
the decoder and encoder this week,

NOTE Confidence: 0.8425001

36448ca4-aeaa-453b-84fe-046a33666966
00:03:46.310 --> 00:03:49.712
so then you can have a better idea about

NOTE Confidence: 0.8425001

08516575-66a0-4409-822d-d3550c5a3fc2
00:03:49.712 --> 00:03:53.100
the I mean they don't care conditions,

NOTE Confidence: 0.8425001

b8f8cd7e-bab7-4cad-9298-6f5308ee6334
00:03:53.100 --> 00:03:54.351
but generally, yes.

NOTE Confidence: 0.8425001

21c182cf-1345-4a49-9f51-d6e5619a219f
00:03:54.351 --> 00:03:57.270
If the input is not valid input,

NOTE Confidence: 0.8425001

952569ff-472c-498a-9d67-9b6af8687723
00:03:57.270 --> 00:03:59.334
you can assume that there is

NOTE Confidence: 0.8425001

4d654369-7607-4d48-9dc0-52932dac7bad
00:03:59.334 --> 00:04:01.190
a possibility for that input,

NOTE Confidence: 0.8425001

c272c0da-e352-4062-b5da-76cfcf173c77
00:04:01.190 --> 00:04:03.320
but there is no output for

NOTE Confidence: 0.8425001

268c6bf9-0cae-4b2b-b2b0-157cf9ff3ac5
00:04:03.320 --> 00:04:04.385
that invalid input.

NOTE Confidence: 0.8425001

9e16ddb7-2dd3-46c7-8587-f3c7780fb429
00:04:04.390 --> 00:04:06.472
So then you can assume that

NOTE Confidence: 0.8425001

1ab89dee-51c6-4358-83fb-b208ae6a9fcd
00:04:06.472 --> 00:04:08.310
the output is don't care.

NOTE Confidence: 0.90741277

518db341-f2fb-402f-a327-0f880e29433a
00:04:12.000 --> 00:04:13.905
Going to be released so

NOTE Confidence: 0.90741277

60cf713a-0aaf-414c-99a5-ee536bc45637
00:04:13.905 --> 00:04:16.350
we can see where we went.

NOTE Confidence: 0.90741277

c8d00c12-f712-46a5-8bab-b2fd5aaab3b5
00:04:16.350 --> 00:04:18.810
 As I said,  uh, uh, 

NOTE Confidence: 0.90741277

c04420ad-4b02-4274-b7e9-f4f696271b34
00:04:18.810 --> 00:04:20.860
we already released the keys.

NOTE Confidence: 0.90741277

9d09bdb7-ae10-478a-843d-7d2051a763fc
00:04:20.860 --> 00:04:23.320
I mean about two weeks ago,

NOTE Confidence: 0.90741277

a0aefed3-41e6-4927-99a5-0baa8ef59ca0
00:04:23.320 --> 00:04:24.960
just after the exam,

NOTE Confidence: 0.90741277

e646918a-d65a-4246-ab70-c1dcc43ed83b
00:04:24.960 --> 00:04:26.600
I released the key.

NOTE Confidence: 0.90741277

2d11672e-9273-426b-bbf7-626e09bc5e93
00:04:26.600 --> 00:04:29.880
So in order to find the key files,

NOTE Confidence: 0.90741277

cd4841dc-8852-4fac-b597-1f602bd93bb5
00:04:29.880 --> 00:04:32.172
let me let me show you

NOTE Confidence: 0.90741277

840a3fc2-2392-43d5-a952-921763030b55
00:04:32.172 --> 00:04:34.390
where is the key files.

NOTE Confidence: 0.90741277

69208c55-58e4-4a4c-b87a-17a4a0247566
00:04:34.390 --> 00:04:37.670
So if you go to the exam folder.

NOTE Confidence: 0.8682702

50f8daf0-727f-4222-8f52-69fee5f590d0
00:04:39.800 --> 00:04:43.488
Here you see that in the keys is

NOTE Confidence: 0.8682702

7f610984-0120-4831-9a6a-f088800d494e
00:04:43.488 --> 00:04:47.000
here the key and also this one.

NOTE Confidence: 0.8682702

a5a49652-6bd6-49f7-b1a2-c74525477c99
00:04:47.000 --> 00:04:50.168
These are the two keys for the fires.

NOTE Confidence: 0.8682702

5225e501-ecf4-4109-95a0-d0d5eeb8b42d
00:04:50.170 --> 00:04:51.680
Uh, they were already there.

NOTE Confidence: 0.8682702

e2204b71-a5e0-4793-ad51-e20ca1e97081
00:04:51.680 --> 00:04:53.984
I mean one or two weeks ago I

NOTE Confidence: 0.8682702

b5b23368-f968-4929-a55c-94251cab65ce
00:04:53.984 --> 00:04:58.830
offload the keys, yeah? Thank you.

NOTE Confidence: 0.8682702

62d16ceb-49da-4390-9245-e6577a50bb2f
00:04:58.830 --> 00:05:01.560
So I'm going to start the.

NOTE Confidence: 0.62070394

dc9d4b95-d2a9-4b4c-a821-163474ddc62f
00:05:04.260 --> 00:05:07.660
Uh, today's topic actually today,

NOTE Confidence: 0.62070394

0878f052-5da0-408a-940c-e648c7524532
00:05:07.660 --> 00:05:12.810
uh. It's a little bit of.

NOTE Confidence: 0.62070394

df9afd45-1521-4d01-976d-a07102057e03
00:05:12.810 --> 00:05:14.938
He needs to be close for Max.

NOTE Confidence: 0.13348141

28fbd506-b5c7-4a28-ac11-da798f4dd8f0
00:05:17.640 --> 00:05:18.400


NOTE Confidence: 0.78850275

bae152c4-4cf7-43d5-aefe-afbf376e9495
00:05:28.170 --> 00:05:31.314
Code so if decoder we need

NOTE Confidence: 0.78850275

a03e3b7b-a80c-4957-9594-64f5dae0108d
00:05:31.314 --> 00:05:34.240
decoder from excess free to BCD,

NOTE Confidence: 0.78850275

69058486-647c-4d06-b5bd-dfd0cff74108
00:05:34.240 --> 00:05:37.500
we need transformation from.

NOTE Confidence: 0.78850275

28e9fdb5-8be5-48ff-825b-b1d19174b448
00:05:37.500 --> 00:05:41.088
Accessory to BCD.

NOTE Confidence: 0.78850275

892f2523-3ffa-43c6-b9b8-c6fc687897e9
00:05:41.090 --> 00:05:43.178
Yes, yes, actually the input gonna

NOTE Confidence: 0.78850275

8bf1613d-0ea7-4d03-9734-ed9d76190cd7
00:05:43.178 --> 00:05:46.170
be the codes in the exit 3 and the

NOTE Confidence: 0.78850275

1da73a16-82c2-45e1-b9e7-788542c76306
00:05:46.170 --> 00:05:50.210
output gonna be the codes in BCD, yes?

NOTE Confidence: 0.78850275

5787ac01-908a-4add-80ae-26a399f2851b
00:05:50.210 --> 00:05:54.863
Oh oh, in terms of the the the terminology,

NOTE Confidence: 0.78850275

607acbf5-f3d6-4499-bfd9-1758ce801516
00:05:54.870 --> 00:05:58.090
we'll see I mean this with that

NOTE Confidence: 0.78850275

81d5bb23-f1e0-48a6-be6c-985fae89a679
00:05:58.090 --> 00:06:01.608
when we say decoder an encoder,

NOTE Confidence: 0.78850275

6a99cda5-d8d6-4868-9d64-6e3fec1e27e4
00:06:01.610 --> 00:06:05.173
we may refer to another digital units

NOTE Confidence: 0.78850275

69fab165-8b2b-4d87-96ec-8e9483a92184
00:06:05.173 --> 00:06:08.859
for those that we covered last week,

NOTE Confidence: 0.78850275

489fe83d-d741-4069-b061-05138aa008a9
00:06:08.860 --> 00:06:12.479
which was related to the binary codes.

NOTE Confidence: 0.78850275

c3cf9537-8d77-4c32-bc03-3aaefb003bd9
00:06:12.480 --> 00:06:15.786
Usually we say that binary codes

NOTE Confidence: 0.78850275

cf272118-cc81-4fb3-b14e-b3e2396f939b
00:06:15.786 --> 00:06:19.319
or binary coders from one code to.

NOTE Confidence: 0.78850275

ebf47d62-9769-412a-856a-320750f7a63e
00:06:19.320 --> 00:06:20.274
Another code so,

NOTE Confidence: 0.78850275

5e425171-7611-4b91-aad8-10b82015058c
00:06:20.274 --> 00:06:23.069
but this week we are going to introduce

NOTE Confidence: 0.78850275

2a23a70f-2f87-42b8-82df-5dec7968a926
00:06:23.069 --> 00:06:25.529
another decoders and encoders that

NOTE Confidence: 0.78850275

2ff35cec-1486-434f-8d76-ee397caaa5d3
00:06:25.529 --> 00:06:28.017
are totally different from these

NOTE Confidence: 0.78850275

95f04059-8118-444a-a7c3-93a6eb34eae5
00:06:28.017 --> 00:06:30.267
binary coders or binary decoders.

NOTE Confidence: 0.78850275

a217e0ff-9dc9-49c8-9717-a412d316e761
00:06:30.270 --> 00:06:32.993
Usually in the question they say that

NOTE Confidence: 0.78850275

e3d7ab40-d63e-445c-81d7-8037fe399d5f
00:06:32.993 --> 00:06:35.320
binary encoders and binary encoders,

NOTE Confidence: 0.78850275

72ddf6d0-2141-4bf0-b52d-c380dff88082
00:06:35.320 --> 00:06:37.425
just to emphasize that these

NOTE Confidence: 0.78850275

f0172142-3f82-4d17-b18a-2c7cecad6d3f
00:06:37.425 --> 00:06:38.688
are binary codes.

NOTE Confidence: 0.78850275

652a3efe-f2ad-497a-b4bc-1fb9fc38187d
00:06:38.690 --> 00:06:41.420
But this week on Thursday we are

NOTE Confidence: 0.78850275

e5106cf2-abd7-4ea6-9d0a-c8aa16b17aa3
00:06:41.420 --> 00:06:43.564
going to introduce another encoder

NOTE Confidence: 0.78850275

cb3bada6-1e1c-4080-ac5c-c92a93453a98
00:06:43.564 --> 00:06:46.258
and decoders that they are not.

NOTE Confidence: 0.78850275

c4b23833-50e7-4ab4-8b90-11ceba0feb66
00:06:46.260 --> 00:06:49.907
I mean, they're totally different from these.

NOTE Confidence: 0.78850275

357a0865-a7eb-4409-8fba-be184d212aef
00:06:49.910 --> 00:06:51.908
Binary coders, yeah.

NOTE Confidence: 0.8429554

54524b91-765a-4cce-993c-1a708ea86043
00:07:01.960 --> 00:07:03.700
Yes, actually we already put.

NOTE Confidence: 0.8429554

b570d450-cbdd-4a3b-9d62-9de5445afd86
00:07:03.700 --> 00:07:06.115
I mean, you already saw the table,

NOTE Confidence: 0.8429554

68d4a7ad-8cd6-42e6-8c00-02d1b99294d6
00:07:06.120 --> 00:07:07.290
the transformation tables.

NOTE Confidence: 0.8429554

203348cd-9277-4174-815b-cef505ff656c
00:07:07.290 --> 00:07:09.630
So basically usually even if you

NOTE Confidence: 0.8429554

4ba837cd-d6d1-46db-9a37-06698103d33d
00:07:09.630 --> 00:07:11.679
forget about the code in the exam,

NOTE Confidence: 0.8429554

17feff07-b1a5-4e8e-a130-0b62a63258cb
00:07:11.680 --> 00:07:13.744
you can go an open this

NOTE Confidence: 0.8429554

00f8dbaa-843a-4406-ae78-081bad6ae29f
00:07:13.744 --> 00:07:15.840
slide for the codes you see.

NOTE Confidence: 0.8429554

5f7149c3-2418-4b66-9363-80662df148e7
00:07:15.840 --> 00:07:18.269
What are the codes for excess three?

NOTE Confidence: 0.8429554

5785ed88-8051-4c00-8616-7ae2a21cd3c9
00:07:18.270 --> 00:07:20.699
Whether the codes for BCD and etc.

NOTE Confidence: 0.8429554

a499b573-ec4c-4e89-9e95-73ac5a83cde4
00:07:20.700 --> 00:07:22.933
So usually the table is given to

NOTE Confidence: 0.8429554

6a0ff12d-5eab-4a43-8379-01ad9020d776
00:07:22.933 --> 00:07:25.676
you and you know the codes and you

NOTE Confidence: 0.8429554

6933438f-b19f-4213-918b-b13be4f30ce2
00:07:25.676 --> 00:07:27.940
have to just design this circuit

NOTE Confidence: 0.8429554

d12d0a16-0e4b-4e1d-ab91-02d0fe0df16e
00:07:27.940 --> 00:07:30.220
to do the transformation. Yeah.

NOTE Confidence: 0.7217226

3b9f2af8-dd6b-4c8a-8f83-b27891b87a32
00:07:34.100 --> 00:07:37.229
Like tonight we need input exactly and.

NOTE Confidence: 0.7217226

cd8f55a8-850f-4732-a4b3-43d092b05e85
00:07:37.230 --> 00:07:41.500
Yes yes yeah correct yeah.

NOTE Confidence: 0.7217226

160d7f28-ed75-4608-b7dd-867356b1b3dd
00:07:41.500 --> 00:07:45.798
So I mean back to next question, uh?

NOTE Confidence: 0.7217226

188854a7-3669-4742-a414-69e906613174
00:07:45.798 --> 00:07:48.110
Actually, in the Nick,

NOTE Confidence: 0.7217226

a408cb5c-a6ee-4fd0-b0ff-7f740ac5f552
00:07:48.110 --> 00:07:50.080
if you buy the decoder,

NOTE Confidence: 0.7217226

31b6ea32-f8a1-483b-84d0-1380cea65806
00:07:50.080 --> 00:07:52.628
if you mean the binary codes that

NOTE Confidence: 0.7217226

158d0462-4937-4087-9e26-f577eee8fa6b
00:07:52.628 --> 00:07:55.488
the codes from one binary code to

NOTE Confidence: 0.7217226

4c0af923-7046-4030-b21c-d5f82c3a5d61
00:07:55.488 --> 00:07:57.544
another binary code, you're right.

NOTE Confidence: 0.7217226

00cffd93-92cf-47d0-8ca3-d94b2716b011
00:07:57.544 --> 00:07:59.896
When I was answering your question,

NOTE Confidence: 0.7217226

d302afab-1fc3-4312-9aae-e97b949f7877
00:07:59.900 --> 00:08:02.525
I thought that you're asking question about

NOTE Confidence: 0.7217226

50213fe8-182f-441d-a217-666c235bf5ec
00:08:02.525 --> 00:08:05.010
the decoders that we haven't discussed.

NOTE Confidence: 0.7217226

7812b182-c7e8-459d-b164-517aa22bf8eb
00:08:05.010 --> 00:08:07.908
So if you are talking about I

NOTE Confidence: 0.7217226

c42f5cbb-85f2-40aa-962b-39a712f6b4d9
00:08:07.908 --> 00:08:10.360
mean decoding from binary codes.

NOTE Confidence: 0.7217226

c81bb984-532b-430c-aaee-fa591510c7f9
00:08:10.360 --> 00:08:12.985
Francis from Exit 3 to BCD from

NOTE Confidence: 0.7217226

60e84104-ee60-491f-9487-2df84fd8d802
00:08:12.985 --> 00:08:16.416
Aiken to BCD or agent to exit 3

NOTE Confidence: 0.7217226

6fc6b4e5-e32d-46d4-9fb6-0aa9491a3596
00:08:16.416 --> 00:08:18.631
these are called binary decoders.

NOTE Confidence: 0.7217226

32347035-a385-42d8-a901-f08153d64e81
00:08:18.640 --> 00:08:21.052
You have to explicitly say that

NOTE Confidence: 0.7217226

26558c60-05f7-410a-b97f-c3b44f57921e
00:08:21.052 --> 00:08:23.610
binary because as I said later,

NOTE Confidence: 0.7217226

2cf1fc7b-8b7a-4019-99e3-67f260b7416a
00:08:23.610 --> 00:08:26.094
will see another type of decoders

NOTE Confidence: 0.7217226

0629ef67-bb91-44e2-a623-95b965d39ba1
00:08:26.094 --> 00:08:27.750
that are totally different.

NOTE Confidence: 0.8307012

d226d9df-21a1-4ce6-8267-abc935c8de66
00:08:32.680 --> 00:08:35.984
No, that's OK. That was my bad actually.

NOTE Confidence: 0.8307012

5cb3a0eb-f23a-4a4f-ba34-716d8503eb0d
00:08:35.990 --> 00:08:38.742
So let's start. So so far we said

NOTE Confidence: 0.8307012

89280b43-0dde-42d8-9acc-541721a9979a
00:08:38.742 --> 00:08:41.443
that all the digital units can

NOTE Confidence: 0.8307012

5ae11393-bf00-474d-bc59-d233fd55831b
00:08:41.443 --> 00:08:43.853
be divided into two categories,

NOTE Confidence: 0.8307012

dcc399f8-9db5-45a6-8af7-1bfda032a271
00:08:43.860 --> 00:08:44.848
combination, elanne,

NOTE Confidence: 0.8307012

348b2cd0-c889-45ff-bd50-b0781d9cd318
00:08:44.848 --> 00:08:47.318
sequential and the main property

NOTE Confidence: 0.8307012

17a4afb6-2ddd-4019-b882-4333e6e5a0eb
00:08:47.318 --> 00:08:49.958
of the combination logic are those

NOTE Confidence: 0.8307012

911344b2-da2a-4cb1-86bc-8379a9b26d67
00:08:49.958 --> 00:08:52.136
that you provide the input values

NOTE Confidence: 0.8307012

c6158bec-2136-43e1-96d7-9dd98d9e5d94
00:08:52.136 --> 00:08:54.425
and after some delays after passing

NOTE Confidence: 0.8307012

0808c164-b1bb-4c8f-9bee-fd1e33b6b3eb
00:08:54.425 --> 00:08:57.507
some gates you see the output and we

NOTE Confidence: 0.8307012

9d4912ea-e0ac-4f95-b1ca-ee6adbec767a
00:08:57.507 --> 00:09:00.370
said that in this course we assume

NOTE Confidence: 0.8307012

0ba3c568-36d2-4fe9-a29e-fb7526c90b3f
00:09:00.461 --> 00:09:03.017
that the gate delays are zero.

NOTE Confidence: 0.8307012

6c60d851-1b39-4a70-98ed-86d5472977b4
00:09:03.020 --> 00:09:03.788
So basically,

NOTE Confidence: 0.8307012

4402493c-d511-4092-bc87-1494c6c2f3d8
00:09:03.788 --> 00:09:05.708
whenever you provide the inputs,

NOTE Confidence: 0.8307012

a823d461-82f0-46c4-8c9a-2c2a3fa297fb
00:09:05.710 --> 00:09:08.398
you can see the output right away.

NOTE Confidence: 0.8690559

14773518-b6bd-4f9c-9777-ba8383cf65a4
00:09:10.490 --> 00:09:12.578
And this is the main property

NOTE Confidence: 0.8690559

16cd4f98-b863-46a8-bac5-81dcee2fd1e1
00:09:12.578 --> 00:09:13.970
of the combination logic.

NOTE Confidence: 0.8690559

30b01d1b-2c10-4e09-99f5-43af7082c22a
00:09:13.970 --> 00:09:16.904
We said that there is another type of digital

NOTE Confidence: 0.8690559

d68eef8f-aac8-4005-a733-9208d4c6bd35
00:09:16.904 --> 00:09:19.537
units that we call them sequential logic.

NOTE Confidence: 0.8690559

3aa5c0a2-bfd0-445e-8532-baedb3f9d20a
00:09:19.540 --> 00:09:22.411
We haven't discussed it yet and in next week

NOTE Confidence: 0.8690559

45d34b02-57ac-4e15-8bf1-ee1ac8786ab4
00:09:22.411 --> 00:09:25.447
we start to discuss that type of circuits.

NOTE Confidence: 0.8690559

6bf7f2e2-5a42-4bc5-8884-c36e6a6e8bbb
00:09:25.450 --> 00:09:27.026
Basically the main difference

NOTE Confidence: 0.8690559

ebc6be85-2024-4b3c-abcd-8ad2b9d9306f
00:09:27.026 --> 00:09:29.390
is that for the sequential logic

NOTE Confidence: 0.8690559

2b1b4c77-8b06-45df-9096-dbdaec36c2f8
00:09:29.460 --> 00:09:31.364
we can add a loop or feedback.

NOTE Confidence: 0.8690559

6c53946b-31ac-4a16-b3f0-941319639c49
00:09:31.370 --> 00:09:33.874
We can attach one of the outputs to

NOTE Confidence: 0.8690559

c0bb03c7-fdef-43ff-9232-d7acd78ec581
00:09:33.874 --> 00:09:36.587
one of the inputs we haven't seen,

NOTE Confidence: 0.8690559

21d3b8c4-99be-4b18-bfd6-7530f8027b95
00:09:36.590 --> 00:09:38.678
so such a thing so far,

NOTE Confidence: 0.8690559

ed72fc76-36db-40a7-b512-b353ff838b31
00:09:38.680 --> 00:09:41.624
so we leave it to the I mean.

NOTE Confidence: 0.8690559

b3d27ee7-c8c4-4a3f-8f9c-884597b9cdf2
00:09:41.630 --> 00:09:43.271
Next few weeks.

NOTE Confidence: 0.8690559

cb0c4e74-b965-45a2-a6ff-feec87bd9617
00:09:43.271 --> 00:09:45.870
But as long as, uh,

NOTE Confidence: 0.8690559

02c82159-94f8-4f57-81f3-d6ab2a010a43
00:09:45.870 --> 00:09:49.150
we are dealing with in a combination logic,

NOTE Confidence: 0.8690559

e5ec22a6-9577-4ead-83a7-8d4ed23fdeeb
00:09:49.150 --> 00:09:51.286
we provide the input,

NOTE Confidence: 0.8690559

433e72b0-54b5-4ebd-87b1-98f0afd1bbbc
00:09:51.286 --> 00:09:55.423
we design the circuit by SOPPOS or NAND

NOTE Confidence: 0.8690559

e88e0d1b-7942-4adf-ba29-567f9d24d5c7
00:09:55.423 --> 00:09:59.640
only nor only and then we see the outputs.

NOTE Confidence: 0.8690559

a77dd426-f302-488c-a5a5-ad27fe25f2d0
00:09:59.640 --> 00:10:00.041
And.

NOTE Confidence: 0.8690559

4ce068ae-02c4-49ee-8efc-36c23041f81d
00:10:00.041 --> 00:10:02.447
And we said that instead of

NOTE Confidence: 0.8690559

ec1964dc-27dd-409a-9866-75da3173cafb
00:10:02.447 --> 00:10:04.481
designing a general circuits to

NOTE Confidence: 0.8690559

65bc8f88-b95c-4e8c-954a-af13ca2b0176
00:10:04.481 --> 00:10:07.120
do a problem to solve a problem,

NOTE Confidence: 0.8690559

e722d040-418d-4218-bcee-65ca551b0758
00:10:07.120 --> 00:10:09.626
we want to design some circuits that

NOTE Confidence: 0.8690559

f0c5b5eb-0d16-4a0c-ac05-e8279ee14de3
00:10:09.626 --> 00:10:12.570
helps us to build a computer system.

NOTE Confidence: 0.8690559

525498e8-04e9-4eb3-8427-695f944ecf94
00:10:12.570 --> 00:10:14.510
So we start with calculators.

NOTE Confidence: 0.8690559

dfaf2966-24a9-4b8c-9823-49cc1323c269
00:10:14.510 --> 00:10:16.814
We said that for building simple

NOTE Confidence: 0.8690559

7a1c9064-8213-4e4e-bd65-45be2e29d777
00:10:16.814 --> 00:10:19.959
calculators we need to build a binary coders.

NOTE Confidence: 0.8690559

94706c86-467b-4f45-84d2-12bb9353a437
00:10:19.960 --> 00:10:21.196
As we said,

NOTE Confidence: 0.8690559

da0bc726-7f09-4c9e-8717-59645de3da49
00:10:21.196 --> 00:10:24.598
we design some codes and we designed as

NOTE Confidence: 0.8690559

850b7163-6057-439e-ac17-9bb1c235549f
00:10:24.598 --> 00:10:27.601
a sample with design excess three BCD

NOTE Confidence: 0.8690559

5edf0f9d-c897-44bc-a2d4-b4f876a50969
00:10:27.601 --> 00:10:30.868
to excess 3 codes and we said that Y.

NOTE Confidence: 0.8690559

43305b78-ce5f-4884-8280-c4d40905794d
00:10:30.870 --> 00:10:34.265
Those codes are advantageous because

NOTE Confidence: 0.8690559

f09a3581-a5ab-41fc-ba64-d90f4b60213c
00:10:34.265 --> 00:10:38.642
for instance access three or a can

NOTE Confidence: 0.8690559

43dd5e0d-12df-4115-a868-a936d1211b0c
00:10:38.642 --> 00:10:41.708
a day have the nice property of

NOTE Confidence: 0.8690559

1b04c4b9-dc01-40e6-8556-6ff1f1b1d370
00:10:41.708 --> 00:10:45.079
self complementary meaning that.

NOTE Confidence: 0.8690559

5568ccfa-7869-4668-a780-24755a35d61d
00:10:45.080 --> 00:10:47.130
A digit in decimal system.

NOTE Confidence: 0.8690559

f3c155f9-d6c1-4b42-8681-2f4b7f6422f1
00:10:47.130 --> 00:10:50.410
If you do then honest compliment on that.

NOTE Confidence: 0.8690559

df69be18-4757-4274-a62e-ac6fb700bc01
00:10:50.410 --> 00:10:54.183
It is similar to doing the ones

NOTE Confidence: 0.8690559

edf57d54-2f91-4c22-a492-c6c51761eb1f
00:10:54.183 --> 00:10:56.630
compliment in binary system.

NOTE Confidence: 0.8690559

c62500ba-4c28-4155-8960-2e571e160a15
00:10:56.630 --> 00:10:58.920
And then we discuss that.

NOTE Confidence: 0.8690559

05cd9218-f037-467e-a8ff-74f85478d2be
00:10:58.920 --> 00:11:02.105
How can we design A display decoder?

NOTE Confidence: 0.8690559

e7202ed6-e115-41bc-a75b-bec14b152ee5
00:11:02.110 --> 00:11:04.852
So another type of decoders are

NOTE Confidence: 0.8690559

3334bf0e-5974-4fe9-a618-50f626779b97
00:11:04.852 --> 00:11:06.680
the seven segment decoder.

NOTE Confidence: 0.8690559

aac25bb7-c889-4246-bcd8-520e0620533d
00:11:06.680 --> 00:11:09.428
So again, the name is decoder,

NOTE Confidence: 0.8690559

f65e262c-0232-44d1-a896-1cf1c0797329
00:11:09.430 --> 00:11:11.710
but it's totally for displaying

NOTE Confidence: 0.8690559

8e5ca983-c571-4ba5-84a8-884c229e1105
00:11:11.710 --> 00:11:13.534
a digit decimal digit.

NOTE Confidence: 0.8690559

b0ab7878-5367-44c5-9cf9-470a07bf4235
00:11:13.540 --> 00:11:17.284
So now we want to focus on another main

NOTE Confidence: 0.8690559

2d8b5154-c944-47ed-a851-d396470ec02f
00:11:17.284 --> 00:11:21.304
part of a Calculator or a computer system,

NOTE Confidence: 0.8690559

e8e4543b-5d82-4662-93a3-83c574613e6d
00:11:21.310 --> 00:11:23.138
which is about arithmetic

NOTE Confidence: 0.8690559

735dc96d-8f86-4cca-902b-14951964be88
00:11:23.138 --> 00:11:24.509
and logical operations.

NOTE Confidence: 0.8690559

7c4fdbf2-61ad-4da3-be8d-aaea967d4659
00:11:24.510 --> 00:11:26.358
So any computing system.

NOTE Confidence: 0.8690559

0ac0cba0-ad15-4790-8c2a-dce9632a0205
00:11:26.358 --> 00:11:28.206
Need to do arithmetic?

NOTE Confidence: 0.8690559

391e3a15-e452-41a4-b8af-1b376387fb8c
00:11:28.210 --> 00:11:30.568
We already know how to do

NOTE Confidence: 0.8690559

1699bd86-17df-4237-8ed3-afc6af1d4ecd
00:11:30.568 --> 00:11:32.140
arithmetic SYN numbering system.

NOTE Confidence: 0.8690559

5e024772-fc81-470e-8781-54b127013023
00:11:32.140 --> 00:11:34.105
For instance in sign magnitude

NOTE Confidence: 0.8690559

c05d5345-efff-41c8-bad4-495162f9d264
00:11:34.105 --> 00:11:36.070
we have a negative numbers.

NOTE Confidence: 0.8690559

626d47f0-684c-47ee-b20f-da4f6f0a1ba1
00:11:36.070 --> 00:11:38.428
We can do addition, subtraction etc.

NOTE Confidence: 0.8690559

4054c10f-5b61-4b6e-ae66-72baeeac080c
00:11:38.430 --> 00:11:40.950
Also in the twos complement we could

NOTE Confidence: 0.8690559

e33c579f-d982-43e1-973f-edbac9f7d924
00:11:40.950 --> 00:11:43.150
represent negative or positive numbers.

NOTE Confidence: 0.8690559

15e85aae-fa43-4a84-a807-10507f7b2045
00:11:43.150 --> 00:11:45.458
We can do the addition, subtraction.

NOTE Confidence: 0.8690559

fd030330-3631-4c31-9155-6a0f580f839c
00:11:45.458 --> 00:11:47.894
You know the algorithm to do the

NOTE Confidence: 0.8690559

286cdbb6-e38a-449b-bbfd-69ae4bfc9d55
00:11:47.894 --> 00:11:50.220
arithmetic using different numbering systems.

NOTE Confidence: 0.8690559

403aef50-34c3-4b3a-8276-06849b7e5c9d
00:11:50.220 --> 00:11:53.482
Now we want to design the circuits

NOTE Confidence: 0.8690559

356650e9-6f26-4037-8ed5-973d92f91b74
00:11:53.482 --> 00:11:57.018
to do those calculations for us.

NOTE Confidence: 0.8690559

683b7548-f81c-4f75-b660-3793be216638
00:11:57.020 --> 00:12:00.373
So today's focus is about building the

NOTE Confidence: 0.8690559

bc409793-e011-424b-af30-22b1f18624d2
00:12:00.373 --> 00:12:03.358
digital circuit that does the addition,

NOTE Confidence: 0.8690559

5a8dbde5-9714-43aa-bb20-3604b5fcfe74
00:12:03.360 --> 00:12:04.750
unbinding numbers.

NOTE Confidence: 0.8690559

b2933bfd-464f-4338-9d5f-da143d2c3d88
00:12:04.750 --> 00:12:07.530
Or does the subtraction?

NOTE Confidence: 0.8690559

67d037f9-ac75-4229-ad43-58a27a956205
00:12:07.530 --> 00:12:09.555
Or multiplication an etc or

NOTE Confidence: 0.8690559

d6126e2c-9c13-4412-ae4d-c8af68771eb9
00:12:09.555 --> 00:12:11.175
comparing two binary numbers,

NOTE Confidence: 0.8690559

22599c22-d338-4f8e-bdaa-17fa4d9e9918
00:12:11.180 --> 00:12:13.932
we want to see that how can we

NOTE Confidence: 0.8690559

1845e2d2-1ccf-4ee7-aa30-1ccf8ce3ebe6
00:12:13.932 --> 00:12:16.081
build the digital circuits or

NOTE Confidence: 0.8690559

8217bd47-1420-41b6-8e01-d642c201b432
00:12:16.081 --> 00:12:19.273
units for them and then put them.

NOTE Confidence: 0.8690559

a9ca3b9b-468a-40cc-b25b-4e40547318ff
00:12:19.280 --> 00:12:21.710
I mean to our computer system,

NOTE Confidence: 0.8690559

40f342d7-9fb8-405a-aa78-3645d547c0de
00:12:21.710 --> 00:12:25.238
I mean and then gradually make

NOTE Confidence: 0.8690559

949ed797-ce94-4836-98f0-4ac7e8b03382
00:12:25.238 --> 00:12:27.590
our computer system complete.

NOTE Confidence: 0.8690559

f4cdd7f3-85db-4c05-a93b-7db936167e16
00:12:27.590 --> 00:12:29.858
So the first immediate arithmetic which

NOTE Confidence: 0.8690559

f80103eb-f83b-411c-97f5-97c2d838e185
00:12:29.858 --> 00:12:33.120
we need in any computer system such as,

NOTE Confidence: 0.8690559

b76de86c-fe9a-4013-9ba7-7e431a726d88
00:12:33.120 --> 00:12:35.885
I mean this the very simplest one,

NOTE Confidence: 0.8690559

45e4effc-da2e-4441-b7b0-425b388b7d1c
00:12:35.890 --> 00:12:38.578
which is the Calculator up until

NOTE Confidence: 0.8690559

dd1701ee-da25-426a-bfd3-64745a4036ad
00:12:38.578 --> 00:12:40.874
the sophisticated machine such as

NOTE Confidence: 0.8690559

1f7e5297-41e2-4dd3-80bd-b9079e090253
00:12:40.874 --> 00:12:43.009
computer system we need addition.

NOTE Confidence: 0.8690559

afedd50a-6268-4ca0-a352-8b039ce16097
00:12:43.010 --> 00:12:45.834
So we need to build a binary adder,

NOTE Confidence: 0.8690559

ae1df7c2-df13-4e0b-aa8b-35d4f2d96733
00:12:45.840 --> 00:12:48.108
meaning that a given a any number

NOTE Confidence: 0.8690559

4a7690fd-197e-4d07-a6dc-f09990117e1c
00:12:48.108 --> 00:12:49.080
if it transfer

NOTE Confidence: 0.8343827

ff940cff-7c27-4adf-84d9-f0cdab3c3480
00:12:49.154 --> 00:12:51.856
or convert that number to binary system.

NOTE Confidence: 0.8343827

50da0f5c-ed89-4c0c-9089-738738dac2cd
00:12:51.860 --> 00:12:54.684
How can we do addition on binary system?

NOTE Confidence: 0.8343827

cf105f3d-feb7-4289-9f16-845457c9bb11
00:12:54.690 --> 00:12:57.021
We said that all our system we

NOTE Confidence: 0.8343827

d4ec13f6-42c8-430e-b358-92f1f5baade7
00:12:57.021 --> 00:12:59.647
built is based on the binary system.

NOTE Confidence: 0.8067815

6ed9d9b3-02c5-40b9-9e5a-196976cdc0a1
00:13:01.740 --> 00:13:04.326
So this is the design problem

NOTE Confidence: 0.8067815

4d482f57-ce24-4471-ac1d-d84061927200
00:13:04.326 --> 00:13:06.050
with this running circuit,

NOTE Confidence: 0.8067815

da20f2e0-33c5-4815-b154-1ee5b0af7eb1
00:13:06.050 --> 00:13:08.624
very similar to any other design

NOTE Confidence: 0.8067815

f857bb15-5854-43b7-8a01-ae6b280de580
00:13:08.624 --> 00:13:11.694
problems that we so far we solved

NOTE Confidence: 0.8067815

be26051c-c7c0-4b54-87df-eb26c781623d
00:13:11.694 --> 00:13:13.809
or with sketch the circuit.

NOTE Confidence: 0.8067815

ca349a83-1614-4d86-9053-06df613616a8
00:13:13.810 --> 00:13:17.074
So here we said that we want to

NOTE Confidence: 0.8067815

41496153-107d-4fbf-8a14-3d0dd35b4a12
00:13:17.074 --> 00:13:20.089
design A circuit that can or a

NOTE Confidence: 0.8067815

fed7795e-4e39-4039-97e2-0bb6abd64ac0
00:13:20.089 --> 00:13:23.718
that is able to add 2 binary bits.

NOTE Confidence: 0.8067815

edb104ef-9d55-49f9-b422-52ea129a93a9
00:13:23.720 --> 00:13:26.712
So we start with this smallest at Adder

NOTE Confidence: 0.8067815

77dd7b8a-2480-4fd9-8f98-fa331080e5c3
00:13:26.712 --> 00:13:30.700
or a Calculator that does the addition of.

NOTE Confidence: 0.8067815

f3177dbc-3846-4937-9cd0-e872f3d22552
00:13:30.700 --> 00:13:33.689
Only two bits and then we can

NOTE Confidence: 0.8067815

c97f1a19-1962-40ac-97da-38fd14d3d5eb
00:13:33.689 --> 00:13:37.064
extend that to adding two I mean

NOTE Confidence: 0.8067815

b8e9fe98-47cb-4ac7-b7c1-eea5c87e114c
00:13:37.064 --> 00:13:39.549
numbers that have more bits.

NOTE Confidence: 0.8067815

a991b597-c9f7-4e70-97f6-5b4873e9d9e0
00:13:39.550 --> 00:13:44.010
So having 2 bits up.

NOTE Confidence: 0.8067815

2262ccd8-65df-42f7-97e4-49ab513ffa21
00:13:44.010 --> 00:13:45.660
To add with each other,

NOTE Confidence: 0.8067815

69b35204-ec0a-4d09-bfcd-0799791acc1e
00:13:45.660 --> 00:13:48.284
so the first we can call it X,

NOTE Confidence: 0.8067815

f7569871-793a-429c-b39b-e25b2becbd04
00:13:48.290 --> 00:13:50.914
the second bit we can call it Y.

NOTE Confidence: 0.8067815

8d5781c6-f0be-481a-a115-7a747914729c
00:13:50.920 --> 00:13:52.888
So if you add 2 bits,

NOTE Confidence: 0.8067815

f5e6f745-3ed5-47b5-974e-b47e1527f57e
00:13:52.890 --> 00:13:55.530
0 + 0 becomes zero in the sum.

NOTE Confidence: 0.8067815

190c42f9-a57b-4003-aa8d-dca3ff520f7c
00:13:55.530 --> 00:14:00.530
This is 1 output, so we call it S as a Sam.

NOTE Confidence: 0.8067815

d36dc826-fd67-4c6f-8a7a-44a17aa0abe8
00:14:00.530 --> 00:14:06.906
01 becomes 110 becomes one, but 1 + 1.

NOTE Confidence: 0.8067815

6dc10409-98df-4974-9729-4c0238d69429
00:14:06.906 --> 00:14:12.940
In the sun we have 0 but we have a charity,

NOTE Confidence: 0.8067815

7f439b72-78cd-4436-8ea5-2fe28e101807
00:14:12.940 --> 00:14:16.333
so as a result this design needs two outputs,

NOTE Confidence: 0.8067815

d4802b5c-641f-45e3-a93a-a6573618096c
00:14:16.340 --> 00:14:18.608
so the first output is the

NOTE Confidence: 0.8067815

1235586b-05fa-42b7-8042-56472bb623d1
00:14:18.608 --> 00:14:20.120
result of the addition,

NOTE Confidence: 0.8067815

07302cb5-288f-4ee7-82b0-92460463634b
00:14:20.120 --> 00:14:22.010
the second output gonna be

NOTE Confidence: 0.8067815

5b236580-1239-40bf-a7c8-67402fa383fb
00:14:22.010 --> 00:14:23.900
the result of the carry.

NOTE Confidence: 0.8067815

d4e3b479-63ea-47c2-82f1-89641054e010
00:14:23.900 --> 00:14:26.168
Sometimes we don't have any carry,

NOTE Confidence: 0.8067815

8c3e7b04-c457-4352-9ee1-fcf7b8efc59d
00:14:26.170 --> 00:14:28.599
but here we have a carry because

NOTE Confidence: 0.8067815

de3377cb-f3cc-4ee1-b693-abab8e0cb139
00:14:28.599 --> 00:14:32.103
1 + 1 the result is 2/2 as a zero

NOTE Confidence: 0.8067815

bda22106-816f-4224-9654-a014ac798ce2
00:14:32.103 --> 00:14:34.928
in the in the first position and

NOTE Confidence: 0.8067815

f1c15c6b-78da-488a-8d8c-158eb5f6fc37
00:14:34.928 --> 00:14:37.973
then a carry to the next position.

NOTE Confidence: 0.8067815

6eab2735-95ac-42ea-ad5d-c63030af0857
00:14:37.973 --> 00:14:41.214
So you see that designing a binary

NOTE Confidence: 0.8067815

32ba1571-fe7d-49e9-ba22-3533bd1585ad
00:14:41.214 --> 00:14:44.496
adder to add 2 bits is very simple.

NOTE Confidence: 0.8067815

2c25c9f8-a35a-4f54-b7a1-362edf7f8157
00:14:44.500 --> 00:14:46.780
Now we have two output function.

NOTE Confidence: 0.8067815

0f8055aa-3b05-4278-92ef-1acc4969a138
00:14:46.780 --> 00:14:49.476
You write it based on the SOP or

NOTE Confidence: 0.8067815

7d1f62f5-4b9d-41bf-aa2a-bc1b43d382b1
00:14:49.476 --> 00:14:52.847
POS for this simple design there is

NOTE Confidence: 0.8067815

1723f1ba-f664-47c7-a0ce-ebd941cc0e18
00:14:52.847 --> 00:14:55.457
no need for simplification because

NOTE Confidence: 0.8067815

20e851ec-8065-4e36-b782-c1d8b4b83939
00:14:55.550 --> 00:14:58.077
you see that the output for S.

NOTE Confidence: 0.8067815

4e86880e-61ee-4f94-8014-4794abe74b01
00:14:58.080 --> 00:15:03.450
 What is this gate? XY bar or export Y? 

NOTE Confidence: 0.8067815

f6dbefcc-4318-4599-bb74-68fdc2511a4c
00:15:03.450 --> 00:15:05.600
 What is this gate for? 

NOTE Confidence: 0.8067815

333ed8bd-91d6-42e5-b912-536441754938
00:15:05.600 --> 00:15:08.180
S anybody in the chat box?

NOTE Confidence: 0.7881872

1029bfc7-349a-413b-aadc-e942342ec98c
00:15:10.360 --> 00:15:12.782
You have to immediately answer, correct?

NOTE Confidence: 0.7881872

24c9af0e-0ace-4ead-ada4-fcda1b421c73
00:15:12.782 --> 00:15:14.792
Yes, that you know, yes.

NOTE Confidence: 0.7881872

4f0ccc41-da6c-4390-94bd-c2b07260eb94
00:15:14.792 --> 00:15:17.204
So this is the exclusive or.

NOTE Confidence: 0.7881872

7fa679bb-f894-4d08-8517-7022119273b7
00:15:17.210 --> 00:15:20.026
So basically if you add 2 bit it

NOTE Confidence: 0.7881872

e41f1893-2ab4-4738-ad76-b38af1f8e8e1
00:15:20.026 --> 00:15:22.621
is equal to doing the exclusive

NOTE Confidence: 0.7881872

313a79f9-0963-47d0-affb-9d5f643c948a
00:15:22.621 --> 00:15:24.866
or for the first output.

NOTE Confidence: 0.7881872

bd86c8a9-8115-4c2f-8f49-60c8cd6ee5bc
00:15:24.870 --> 00:15:28.086
How about the carry? As you can see,

NOTE Confidence: 0.7881872

530a9bd9-9ca4-4f38-a74e-de43181f5ebe
00:15:28.090 --> 00:15:30.508
Carrie becomes one at this case.

NOTE Confidence: 0.7881872

d3dafe32-22c6-4704-a292-c337c2d69864
00:15:30.510 --> 00:15:33.324
This is the mid term free mitten.

NOTE Confidence: 0.7881872

464ba198-a078-4784-ad86-026fcb50855f
00:15:33.330 --> 00:15:37.418
Free is X&Y, so this is the answer.

NOTE Confidence: 0.7881872

f9490575-bbc0-48c9-ba3c-922aca9148fe
00:15:37.420 --> 00:15:40.590
This is the most simplest

NOTE Confidence: 0.7881872

54db6e12-ae36-444f-97ca-fc686ed9d0e2
00:15:40.590 --> 00:15:44.280
adder that we can build so.

NOTE Confidence: 0.7881872

001b31f6-0ebc-4e7b-acef-0f97baaef356
00:15:44.280 --> 00:15:46.704
X exclusive or with Y is

NOTE Confidence: 0.7881872

c7599a9b-413c-461a-ad41-7cd19e0d17c8
00:15:46.704 --> 00:15:49.770
the sum an X&Y is the carry,

NOTE Confidence: 0.7881872

d927131b-938d-48e3-9740-44823dd0053d
00:15:49.770 --> 00:15:53.138
so this is the design I do just.

NOTE Confidence: 0.8347163

7ad3dad6-34f2-4ceb-8249-4e57fa09ce7a
00:15:56.490 --> 00:15:59.434
Because we just only can add 2 bits,

NOTE Confidence: 0.8347163

545ad10f-13c6-4757-ac55-a18bbf4dc393
00:15:59.440 --> 00:16:02.130
we call this half adder.

NOTE Confidence: 0.8347163

fa6b3c2e-b91f-4faf-a2c0-0183e26a5a9b
00:16:02.130 --> 00:16:03.780
Now we want to see that

NOTE Confidence: 0.8347163

3fd19a52-f9a3-4df6-b908-4931f3b1e6ce
00:16:03.780 --> 00:16:05.829
why we call it half Father.

NOTE Confidence: 0.8347163

baa2d2a8-bcdb-4f59-aba0-054bc7d5543d
00:16:05.830 --> 00:16:08.710
Is there any other dad?

NOTE Confidence: 0.8347163

1d66aa2c-d8c6-4975-be37-df8b996b99ac
00:16:08.710 --> 00:16:10.414
Essence is different from

NOTE Confidence: 0.8347163

03672c87-77ab-4b97-aa01-82cd7243ae01
00:16:10.414 --> 00:16:12.970
this type of other or not,

NOTE Confidence: 0.8347163

4fe97fa3-60a1-43fd-863f-ab2cc339806f
00:16:12.970 --> 00:16:15.652
but The thing is that because

NOTE Confidence: 0.8347163

a53133c1-7a68-40d6-a741-0bd446c88f15
00:16:15.652 --> 00:16:18.927
it is able only to add 2 bits,

NOTE Confidence: 0.8347163

85be766e-8a13-4beb-8c70-c6f547bfc66e
00:16:18.930 --> 00:16:21.060
we call it half other.

NOTE Confidence: 0.8347163

52d80358-2464-4363-b082-6a70c613a6c4
00:16:21.060 --> 00:16:24.759
I just want to show it like this because

NOTE Confidence: 0.8347163

30d6ed63-c34a-48c7-9246-255c217b008f
00:16:24.759 --> 00:16:27.447
Justin 9 degree I mean rotation,

NOTE Confidence: 0.8347163

fb43f9ae-4961-423c-b67c-6314d1a39aa5
00:16:27.450 --> 00:16:30.509
so this way it is very similar

NOTE Confidence: 0.8347163

77b57587-70fe-4f5a-a45e-d389193b83ed
00:16:30.509 --> 00:16:33.419
to the way we add 2 bits.

NOTE Confidence: 0.8347163

6c97f860-8fb7-49bf-9183-7531b0a9d4a4
00:16:33.420 --> 00:16:37.428
So basically. Whenever we want to.

NOTE Confidence: 0.8347163

2d6cfb15-53b5-4273-b408-c168338f8b95
00:16:37.430 --> 00:16:39.078
Add for instance 00.

NOTE Confidence: 0.8347163

b47beb56-ad4f-48ab-a955-fdba6f7dc4d2
00:16:39.078 --> 00:16:44.226
We said at 0 + 0 the output gonna be 00.

NOTE Confidence: 0.8347163

6b385e93-42a3-4693-a95b-f0dfe9faa3cc
00:16:44.230 --> 00:16:46.936
If we add for instance 01,

NOTE Confidence: 0.8347163

87f4b0cf-f3c7-4d8b-acb8-2fa059e8330b
00:16:46.940 --> 00:16:50.104
it becomes as you can see here,

NOTE Confidence: 0.8347163

93275910-6615-46f7-ba44-28d33a20ff4a
00:16:50.110 --> 00:16:53.250
10 exclusive or becomes one.

NOTE Confidence: 0.8347163

ffe7071a-7786-40a3-b1aa-6410ce663778
00:16:53.250 --> 00:16:57.456
And one N 0 becomes 0.

NOTE Confidence: 0.8347163

931801e5-f22d-4cf0-a207-7d39d372c14a
00:16:57.460 --> 00:16:59.950
And so basically you input the

NOTE Confidence: 0.8347163

38a242df-3503-40ea-839d-4f574653abd9
00:16:59.950 --> 00:17:03.290
bits and you see the output result.

NOTE Confidence: 0.8347163

e657ada0-23a6-4dbc-bd0f-3da399bbb99e
00:17:03.290 --> 00:17:06.290
The sum and the carry.

NOTE Confidence: 0.8347163

b34198da-efde-4526-b2d8-9358cbadeb17
00:17:06.290 --> 00:17:09.386
And then we make it a black box,

NOTE Confidence: 0.8347163

3bb8e669-c86f-4fd0-bfee-65b89cbce7b4
00:17:09.390 --> 00:17:11.138
so you design it,

NOTE Confidence: 0.8347163

d4b4de11-d8d1-4c8b-a5fb-a1d6d54f7b66
00:17:11.138 --> 00:17:13.760
you manufactured and now you can

NOTE Confidence: 0.8347163

727e27ce-7bc2-443e-9fdb-5743bda11997
00:17:13.853 --> 00:17:16.653
go to the market and buy a half

NOTE Confidence: 0.8347163

91d5f630-122a-415f-a206-f186e93285f5
00:17:16.653 --> 00:17:19.232
adder in order to add 2 bits

NOTE Confidence: 0.8347163

2b1578c8-dcf5-4d7b-87f2-a2d4efe8bad2
00:17:19.232 --> 00:17:22.018
whenever you have a I mean two

NOTE Confidence: 0.8347163

0ce61b07-e2b7-4e2f-9212-b5b937cf87e4
00:17:22.018 --> 00:17:24.982
input variable as just each one

NOTE Confidence: 0.8347163

c144157e-a9ae-4af9-80e6-a7a0ed2b9b70
00:17:24.982 --> 00:17:29.156
is 1 bit of in the binary system.

NOTE Confidence: 0.8347163

f2d51c9d-a18c-48e4-b427-81dd21ac0e56
00:17:29.160 --> 00:17:32.184
So the next, let's let let's expand this.

NOTE Confidence: 0.8347163

af2e2be7-2904-4fc8-b823-f9d4d88afef8
00:17:32.190 --> 00:17:35.214
Now we want to add 2 binary numbers,

NOTE Confidence: 0.8347163

4d4092a4-e15a-4763-88e2-22c5c2460bcb
00:17:35.220 --> 00:17:37.120
so binary numbers may have

NOTE Confidence: 0.8347163

96c322d2-1467-4b30-8451-441f98e49eec
00:17:37.120 --> 00:17:38.640
more than one bits.

NOTE Confidence: 0.8347163

bb604d7a-b9c9-4b07-8d20-a451132bbabe
00:17:38.640 --> 00:17:39.396
For instance,

NOTE Confidence: 0.8347163

6fe91381-077b-4bd0-813e-d4567aeb7162
00:17:39.396 --> 00:17:42.042
if you want to add a tune,

NOTE Confidence: 0.8347163

97bbf8de-2b3d-49b8-bf17-4489241a2e78
00:17:42.050 --> 00:17:44.318
binary numbers that have two bits.

NOTE Confidence: 0.8347163

5ab5656b-215a-49c1-bc7d-51c369fc39e0
00:17:44.320 --> 00:17:46.588
So we want to see that.

NOTE Confidence: 0.8347163

befff70a-da3a-49b1-ae26-434ffd75facc
00:17:46.590 --> 00:17:49.958
How can we design A added that is

NOTE Confidence: 0.8347163

ff1ead45-71c8-4f2f-8df5-02b5ad147055
00:17:49.958 --> 00:17:54.210
able to add 2 bits of numbers or two

NOTE Confidence: 0.8347163

9731f80a-6ba9-4912-b19c-a030f54bef53
00:17:54.210 --> 00:17:58.508
numbers that have free bits 4 bits or N bits?

NOTE Confidence: 0.8347163

36092589-7803-47eb-ac3c-cc3f588ffd9b
00:17:58.510 --> 00:18:02.083
So this is the next expansion to the circuit,

NOTE Confidence: 0.8347163

22daa458-fd86-40d2-b9f0-553a949d74d6
00:18:02.090 --> 00:18:06.320
so we have we want to add 2 binary

NOTE Confidence: 0.8347163

41b7122e-479f-4078-bf3d-48eab92132bf
00:18:06.320 --> 00:18:10.158
numbers that each of them has 2 bits.

NOTE Confidence: 0.8347163

4ef23b93-c82d-4752-9cfb-cf58d3bdd113
00:18:10.160 --> 00:18:12.806
So again, it is very similar to

NOTE Confidence: 0.8347163

dd3bd691-83db-44e7-99ce-fc47912a805a
00:18:12.806 --> 00:18:15.398
the question in the midterm exam,

NOTE Confidence: 0.8347163

9fad041b-d91f-426d-ba7c-5b4a4fade0ea
00:18:15.400 --> 00:18:18.580
so I mean you have a.

NOTE Confidence: 0.8347163

93c4de79-a424-4c89-b2d9-c09b15e3b675
00:18:18.580 --> 00:18:20.710
One number.

NOTE Confidence: 0.8347163

89585634-4625-4cec-8c61-8e0daa93d357
00:18:20.710 --> 00:18:23.790
2 bits another #2 bits and you have

NOTE Confidence: 0.8347163

20d0fa82-db90-467a-962d-a2042d1838b8
00:18:23.790 --> 00:18:27.305
to add them so if you add 2 numbers.

NOTE Confidence: 0.8347163

1c00be68-f11f-4be4-8a25-b791f05381cb
00:18:27.310 --> 00:18:28.471
Let's back here.

NOTE Confidence: 0.8347163

b5748085-f0df-4081-b280-9eff1d73f7b5
00:18:28.471 --> 00:18:30.406
If you add 2 numbers,

NOTE Confidence: 0.8347163

da4fbb2e-14af-48e1-b3d0-748ac180fe2e
00:18:30.410 --> 00:18:32.780
binary numbers that each one

NOTE Confidence: 0.8347163

b0924dcf-111e-4173-ab5e-69a95d6e3285
00:18:32.780 --> 00:18:35.760
each of them has 2 bits.

NOTE Confidence: 0.8347163

96b55d28-0dd9-4808-8a43-e319f73142bc
00:18:35.760 --> 00:18:39.909
The sum of the first it's gonna be S1.

NOTE Confidence: 0.8347163

0acc17de-f936-4208-b30a-0196d5d98414
00:18:39.910 --> 00:18:42.210
The sum of the 2nd,

NOTE Confidence: 0.8347163

eccc11e9-1dd1-4a7f-ab40-8a24b02d8694
00:18:42.210 --> 00:18:44.520
it's gonna be S 2,

NOTE Confidence: 0.8347163

a7e1bc55-b131-4923-bfcc-a6a0e6a5b21b
00:18:44.520 --> 00:18:47.355
but this one may have X1 plus

NOTE Confidence: 0.8347163

e46e1292-4aac-49b8-ad98-2f6f8d1d5466
00:18:47.355 --> 00:18:50.510
XY1 may have the sum achnacarry.

NOTE Confidence: 0.8347163

d10706a3-9d73-4167-8c7c-5fcc02959a81
00:18:50.510 --> 00:18:53.744
So we call this for instance carry

NOTE Confidence: 0.8347163

7e64dfe3-6c05-4bc7-9a07-431f151f2086
00:18:53.744 --> 00:18:56.927
one and then we add these bits

NOTE Confidence: 0.8347163

124314a8-d692-44f5-b95f-5edcede62ef6
00:18:56.927 --> 00:19:00.649
becomes S2 and may have a last carry.

NOTE Confidence: 0.8347163

db88612d-2596-45d7-9eb7-b1239dd10d0e
00:19:00.650 --> 00:19:03.598
So very normal edition.

NOTE Confidence: 0.8347163

7392147a-225b-4b2f-9462-d56a2ec4661e
00:19:03.600 --> 00:19:06.568
So as you can see in the input,

NOTE Confidence: 0.8347163

96d931d9-017e-465d-a903-53f96655a986
00:19:06.570 --> 00:19:08.425
we're gonna have four binary

NOTE Confidence: 0.8347163

89ce2d03-ff89-46ed-863b-976a74bd0d9e
00:19:08.425 --> 00:19:10.280
variables an in the output,

NOTE Confidence: 0.8347163

aa01fb30-fbf4-481b-9db7-2d6285c899b7
00:19:10.280 --> 00:19:12.877
we're going to have free binary outputs,

NOTE Confidence: 0.8347163

1123e7ae-6de6-4483-96f6-068efcea9dfe
00:19:12.880 --> 00:19:15.877
so S1 and S2 is the first 2 digit

NOTE Confidence: 0.8347163

02ea9328-50a6-4e43-accb-50db07323445
00:19:15.877 --> 00:19:18.814
of the result, and the last carrier.

NOTE Confidence: 0.8347163

50e61290-9fc2-4318-86a3-cdf57f364376
00:19:18.814 --> 00:19:23.230
So imagine for instance, we want to do this.

NOTE Confidence: 0.8347163

68270111-f250-4858-a5f3-39b9b6d9b2b1
00:19:23.230 --> 00:19:30.300
So basically this is equal to 1 one plus 01.

NOTE Confidence: 0.8347163

55018204-f089-4b22-b997-b8f12d13ffc1
00:19:30.300 --> 00:19:35.277
So if you do add this 111 becomes 2A

NOTE Confidence: 0.8347163

fd0dcfdf-fd2f-412f-8029-ce18bac5b5c1
00:19:35.277 --> 00:19:40.450
 carry 1 + 1 + 0 becomes two 0 and a last carry, 

NOTE Confidence: 0.8347163

30879b03-d7b3-4d55-bca8-de6388de0d35
00:19:40.450 --> 00:19:45.098
so the result is a carry 00.

NOTE Confidence: 0.8577511

1e620d2d-3099-4f0f-83d2-bc0aeab7c11d
00:19:45.100 --> 00:19:47.930
And then you have to fill out all the rows

NOTE Confidence: 0.8577511

98195a71-efda-473e-b209-7ebee01a3570
00:19:48.001 --> 00:19:50.969
because in the input we have four variables.

NOTE Confidence: 0.8577511

77b5a6b6-0490-46b3-94ed-ce5a34941029
00:19:50.970 --> 00:19:52.926
We gonna have two to the

NOTE Confidence: 0.8577511

15efdfb4-142f-464b-85c9-627c5ba2e84d
00:19:52.926 --> 00:19:54.854
power of four rows, 16 rows.

NOTE Confidence: 0.8577511

e641d166-d07d-4d4c-a9b0-cc077118c6f4
00:19:54.854 --> 00:19:57.350
You have to fill out all these rows

NOTE Confidence: 0.8577511

182ba7d4-e6e6-4139-868e-2e541945fe40
00:19:57.423 --> 00:20:00.183
and calculate when the S1 becomes 0 or.

NOTE Confidence: 0.8577511

7f36eb66-c91d-4d20-a70f-ef93d700a400
00:20:00.190 --> 00:20:03.179
One when S to become 01 headset,

NOTE Confidence: 0.8577511

ccad3805-299f-4a75-989f-49167aa5a64b
00:20:03.180 --> 00:20:06.744
then you have to design ASOP or PU S4S14

NOTE Confidence: 0.8577511

7d89c802-55bd-4564-bb22-09c0b66e7267
00:20:06.744 --> 00:20:11.244
S 24S3 and then put it in a algebraically

NOTE Confidence: 0.8577511

faedcf8c-2d33-467d-ac88-e4bc4c0dce55
00:20:11.244 --> 00:20:14.706
simplify that or put it in a condo map.

NOTE Confidence: 0.8577511

5dbb1e09-1f81-4e83-8343-e6c0c8a816c5
00:20:14.710 --> 00:20:17.558
So if I want to use the car

NOTE Confidence: 0.8577511

1185e3db-f1a7-46b5-9f58-1f139e798baa
00:20:17.558 --> 00:20:20.259
map to simplify this out,

NOTE Confidence: 0.8577511

12ce66c6-2d24-43f6-b194-0d8b88dfc7f9
00:20:20.260 --> 00:20:25.759
what type of corner map I have to use?

NOTE Confidence: 0.8577511

e18a5caf-4bc7-4cdf-b514-162d26722320
00:20:25.760 --> 00:20:27.530
What's the number of variable

NOTE Confidence: 0.8577511

23445ab3-f297-430b-870c-8dca37b6a199
00:20:27.530 --> 00:20:29.660
in the corner map? Anybody?

NOTE Confidence: 0.8665682

e7d986fd-77be-4a05-ab46-732791c73f77
00:20:32.630 --> 00:20:33.918
Correct, because in the

NOTE Confidence: 0.8665682

c7d778e3-1718-4e98-9828-a276c36f65fe
00:20:33.918 --> 00:20:35.528
input we have four variables,

NOTE Confidence: 0.8665682

d891110c-05e5-4909-8fde-378d2aea27c7
00:20:35.530 --> 00:20:37.462
so we have to create the

NOTE Confidence: 0.8665682

6719b49f-de59-4b8a-bfce-6e4357a8ea7e
00:20:37.462 --> 00:20:38.750
four variable color map.

NOTE Confidence: 0.8665682

2c20e679-5465-40f2-8663-a38be3413ac6
00:20:38.750 --> 00:20:42.985
For instance, we have to do this.

NOTE Confidence: 0.8665682

394b831a-10ce-4cb9-a8cd-6449d770f9a2
00:20:42.990 --> 00:20:44.978
And then put the.

NOTE Confidence: 0.8665682

4322453f-773a-4a26-ad1b-9b7356c8b447
00:20:44.978 --> 00:20:51.029
Form the I put the X1 and X2 here and then a,

NOTE Confidence: 0.8665682

9ba7de79-5c41-4666-b0ef-bcde7f931430
00:20:51.030 --> 00:20:55.125
Y1 and Y2 here and then based

NOTE Confidence: 0.8665682

479d10cc-94dd-4111-80d8-59357eccedaa
00:20:55.125 --> 00:20:58.538
on these midterms I have to

NOTE Confidence: 0.8665682

c0fe0b76-1d79-4533-8c06-9a38885fca38
00:20:58.538 --> 00:21:01.604
how many corner map I need.

NOTE Confidence: 0.8665682

78772e5d-8f4c-4584-90d8-a46c6512fbec
00:21:01.610 --> 00:21:06.018
I need one for S1 and then simplify

NOTE Confidence: 0.8665682

66bc7d70-98d5-4a52-ab26-3a177c576b14
00:21:06.018 --> 00:21:09.998
that 14S214C so free Connor map I

NOTE Confidence: 0.8665682

6637939a-be00-4273-bc65-c7c10b4521ba
00:21:09.998 --> 00:21:13.450
have to create and simplify that.

NOTE Confidence: 0.8665682

c4e6e8a0-3f2f-4bea-9fbf-795d4a199db7
00:21:13.450 --> 00:21:15.907
So and then you design the circuit

NOTE Confidence: 0.8665682

ffc2e2fb-cef9-4522-8216-55c0cbf68bfe
00:21:15.907 --> 00:21:17.990
based on the simplified version

NOTE Confidence: 0.8665682

a73512b9-ea28-4329-b091-9d64fb8740a9
00:21:17.990 --> 00:21:20.846
of the I mean Boolean functions.

NOTE Confidence: 0.8665682

00e9df45-0d12-47bd-b8cc-1b1febbeee9a
00:21:20.850 --> 00:21:22.618
But The thing is,

NOTE Confidence: 0.8665682

4288aa48-a495-47de-bca1-623a7a175e18
00:21:22.618 --> 00:21:26.520
if I extend this to add 2 binary

NOTE Confidence: 0.8665682

c1a5cd47-46d8-4e91-b465-ca5416207989
00:21:26.520 --> 00:21:29.370
numbers that have free bits.

NOTE Confidence: 0.8665682

870a9515-7745-40e2-834b-608118218535
00:21:29.370 --> 00:21:34.540
So then I have to add a column here for X3.

NOTE Confidence: 0.8665682

923b3205-4661-41ab-8ac5-c7c049461b09
00:21:34.540 --> 00:21:37.480
Also another column for Y-3 so

NOTE Confidence: 0.8665682

d9a1e50b-d335-4bc1-b958-c1630408452e
00:21:37.480 --> 00:21:40.500
it becomes six input variables.

NOTE Confidence: 0.8665682

4ca61dae-0cf3-4ae4-8bdd-4d9ad3e9eee4
00:21:40.500 --> 00:21:44.659
2 to the power of 6 rows I have to fill out.

NOTE Confidence: 0.8665682

c7215524-9c43-4fd8-ab09-530ce7c773e5
00:21:44.660 --> 00:21:46.898
And then it becomes a huge.

NOTE Confidence: 0.8665682

f2da0b5f-29d9-4cc6-b2fe-1a249aa82800
00:21:46.900 --> 00:21:49.408
I mean, uh.

NOTE Confidence: 0.8665682

a920bc23-2082-40b1-a5cf-e8451a1f90a3
00:21:49.410 --> 00:21:50.306
Truth table.

NOTE Confidence: 0.8665682

4c195ea2-43e0-4707-91ae-c1dd2080d06e
00:21:50.306 --> 00:21:54.971
If I want to extend it to adding two binary

NOTE Confidence: 0.8665682

c27f5361-80d1-4b3f-aae5-a636e560327a
00:21:54.971 --> 00:21:58.875
numbers that each of them have 4 bits.

NOTE Confidence: 0.8665682

44b3bfd2-71a2-41ce-8597-06c3fece7b31
00:21:58.880 --> 00:22:02.732
So again I have to extend the truth table.

NOTE Confidence: 0.8665682

5d82bfcd-18a4-4e18-8661-c656a53d282a
00:22:02.740 --> 00:22:06.592
So if I want to use the original designs,

NOTE Confidence: 0.8665682

56f44013-9317-4f3c-a1f7-d1b43fffb26d
00:22:06.600 --> 00:22:09.330
it becomes very complicated if the number

NOTE Confidence: 0.8665682

049f16bb-5d84-4ea6-b17b-fd9c1e5b57da
00:22:09.330 --> 00:22:12.610
of bits in each number actually grows.

NOTE Confidence: 0.8665682

8a05ee86-aed6-42b8-8b80-1ed7970c21f0
00:22:12.610 --> 00:22:15.682
So the idea is that instead of just

NOTE Confidence: 0.8665682

67cad2e3-d204-4f50-b92c-f28933b19ab5
00:22:15.682 --> 00:22:18.617
building any circuits from the scratch,

NOTE Confidence: 0.8665682

fe50bae9-a39b-4331-8c53-8f144669f3ad
00:22:18.620 --> 00:22:21.896
let's reuse what we've designed so far.

NOTE Confidence: 0.8665682

99f0f5e1-7822-497c-ba95-50a8a7b60129
00:22:21.900 --> 00:22:25.001
We have a half brother that is

NOTE Confidence: 0.8665682

dad92b44-6c5d-4399-aa8b-e239ac7f7b19
00:22:25.001 --> 00:22:27.179
able to add 2 bits.

NOTE Confidence: 0.8665682

cc77f80d-b3c4-42aa-b410-9d101d91abb7
00:22:27.180 --> 00:22:29.133
So the idea is that now that

NOTE Confidence: 0.8665682

8db47f95-84ea-44ef-b870-11542821014c
00:22:29.133 --> 00:22:31.342
I want to add 2 binary numbers

NOTE Confidence: 0.8665682

e3f45c6a-bc09-4287-b37e-e1ce4d522ed1
00:22:31.342 --> 00:22:33.730
that each of them has 2 bits,

NOTE Confidence: 0.8665682

06748c43-c8ef-46a4-84c8-e409b514d769
00:22:33.730 --> 00:22:36.208
is it possible to use two

NOTE Confidence: 0.8665682

4254663a-b247-47df-ba71-7cf3ed97ef5d
00:22:36.208 --> 00:22:38.620
half adders to add 2 bits?

NOTE Confidence: 0.8665682

d8734e93-6c2a-45d1-81fb-eb4f6af10c48
00:22:38.620 --> 00:22:41.126
So the idea is that reuse whatever

NOTE Confidence: 0.8665682

fc76e7ec-0a14-44e4-80c2-4d004776e21a
00:22:41.126 --> 00:22:44.077
we design so far instead of just

NOTE Confidence: 0.8665682

c4f887ea-3470-4723-91f2-d3dc91a52fe1
00:22:44.077 --> 00:22:46.771
building any circuits from the scratch.

NOTE Confidence: 0.8665682

1c099af5-2345-4606-8382-35eed0bd98d5
00:22:46.780 --> 00:22:49.629
So let's back to the original examine

NOTE Confidence: 0.8665682

76ecd17c-4ef7-426f-bc4a-c965027fca5b
00:22:49.629 --> 00:22:52.488
problem. We want to add 2 numbers.

NOTE Confidence: 0.8665682

dd84e530-fcff-4ab0-945d-413d0fd8d103
00:22:52.490 --> 00:22:54.938
Each of them has 2 bits.

NOTE Confidence: 0.8665682

4234b8b0-2203-4760-83ee-6e14f68e1f4b
00:22:54.940 --> 00:22:58.516
I could say that I can.

NOTE Confidence: 0.8665682

5fc1cbfe-cb93-4b96-95e4-2ef3aebd4379
00:22:58.520 --> 00:23:00.530
For adding these two bits,

NOTE Confidence: 0.8665682

26b9b44c-d06e-4793-99fd-f28198ddcb22
00:23:00.530 --> 00:23:03.800
I can use 1/2 adder.

NOTE Confidence: 0.8665682

f4bbebab-7820-418b-b338-f625b9474ab0
00:23:03.800 --> 00:23:06.789
That is able to add 2 bits.

NOTE Confidence: 0.8665682

8f94fc1d-b860-4ab6-8429-157410d7df23
00:23:06.790 --> 00:23:09.650
Also for this one.

NOTE Confidence: 0.8665682

36c12f3f-5de1-4488-b4b3-587486cf464a
00:23:09.650 --> 00:23:12.038
I can use another half adder.

NOTE Confidence: 0.8665682

1288fd3f-fd16-4072-af24-da5dbaaa08b2
00:23:12.040 --> 00:23:14.716
So I go to the market.

NOTE Confidence: 0.8665682

05e67404-5091-4189-8237-a734f51acf1f
00:23:14.720 --> 00:23:16.950
I buy two half adders,

NOTE Confidence: 0.8665682

fa6b39d8-7537-4336-b93f-e337287ce867
00:23:16.950 --> 00:23:19.135
each one is responsible to

NOTE Confidence: 0.8665682

44c2d07a-e894-4ed6-9c5a-f221c504516d
00:23:19.135 --> 00:23:21.850
do the addition of each bits.

NOTE Confidence: 0.8665682

81bcc9c0-5d10-4cee-96b7-6f203195469b
00:23:21.850 --> 00:23:27.416
So let's do that. So I go to the market.

NOTE Confidence: 0.8665682

eb03b461-68ed-4cc8-989e-b0bd59d9de1e
00:23:27.420 --> 00:23:30.220
I buy two half adders and then

NOTE Confidence: 0.8665682

2c29c1f2-0fb3-45bd-b382-3800537b7371
00:23:30.220 --> 00:23:33.417
I say that X1 plus XY1 and this

NOTE Confidence: 0.8665682

f3bbbc9e-d031-41c3-a197-10e45987d693
00:23:33.417 --> 00:23:36.881
is the sum of them and then X2

NOTE Confidence: 0.8665682

968e67f1-772f-4bae-8e7b-845b0225aeb2
00:23:36.881 --> 00:23:39.803
plus Y2Y2 using the half brother.

NOTE Confidence: 0.8665682

ebea0a75-a3fc-495b-a488-00bb06a36995
00:23:39.810 --> 00:23:44.160
And this is the second sum.

NOTE Confidence: 0.8665682

5b217f86-745a-48ad-9b4b-e68ce9e45fc7
00:23:44.160 --> 00:23:46.296
And this is going to be the carry.

NOTE Confidence: 0.8665682

b5846fa2-7878-4f50-991b-7951a9de8699
00:23:46.300 --> 00:23:49.051
The only thing here is that the

NOTE Confidence: 0.8665682

6dc23eb1-db62-419f-a6d3-65d8d87d180f
00:23:49.051 --> 00:23:50.740
only problem is that.

NOTE Confidence: 0.8665682

59073003-3cca-4679-ae5b-43ee422ab77a
00:23:50.740 --> 00:23:53.578
How should I handle this carry?

NOTE Confidence: 0.8665682

3d32b48c-845d-4d56-9bb6-efac73e87dba
00:23:53.580 --> 00:23:56.898
So let's back to the original problem.

NOTE Confidence: 0.8665682

436fa600-f923-4a3a-8799-501335d8a43f
00:23:56.900 --> 00:23:59.060
If the 1st edition.

NOTE Confidence: 0.8665682

ec31320a-5308-4c18-8342-1a64d5e673df
00:23:59.060 --> 00:24:02.990
S1 and there's a cat equals here,

NOTE Confidence: 0.8665682

97eb35b6-7cc5-4bd9-97c6-528dd042d525
00:24:02.990 --> 00:24:07.390
but the half adder only accepts 2 bits.

NOTE Confidence: 0.8665682

312dfc79-282f-4d94-829c-4b19c716c837
00:24:07.390 --> 00:24:10.729
How can I support the carry from

NOTE Confidence: 0.8665682

04d32d12-de03-49ab-9b03-dc1c98e1a345
00:24:10.729 --> 00:24:13.750
the addition of the first bits?

NOTE Confidence: 0.8665682

f6fbb082-d4a5-43be-abf2-05bdc1dd4bb7
00:24:13.750 --> 00:24:16.266
So in another words,

NOTE Confidence: 0.8665682

7469dc1b-f94b-464c-a752-95ea79b1d9d4
00:24:16.266 --> 00:24:20.940
 if Carry off the first half other. 

NOTE Confidence: 0.8665682

d6f4bc72-16a4-4397-a66c-9b00029ef46d
00:24:20.940 --> 00:24:23.880
How can I handle this situation?

NOTE Confidence: 0.8665682

c9c60095-0364-4776-9e06-d8e22c7bbed4
00:24:23.880 --> 00:24:24.496
For instance,

NOTE Confidence: 0.8665682

b53f5e23-5912-4701-9507-c0fb1fd7634a
00:24:24.496 --> 00:24:26.960
1 + 1 using the first half adder

NOTE Confidence: 0.8304362

771f7adc-15ba-4fa1-9aaf-336a95decdfe
00:24:27.030 --> 00:24:29.285
becomes 2, and now using the second

NOTE Confidence: 0.8304362

9466b41d-b2aa-4285-afa6-e41f961f496e
00:24:29.285 --> 00:24:31.810
half adder, how can I input one because

NOTE Confidence: 0.8304362

d1c0bb1f-8a36-48c3-9af8-a368c1103685
00:24:31.810 --> 00:24:34.058
they have other only accept 2 bits.

NOTE Confidence: 0.9380729

f176b52b-0170-401b-8362-62e6d22b8cda
00:24:37.450 --> 00:24:41.146
So I have to find a way.

NOTE Confidence: 0.9380729

52b4688f-4860-488e-a918-60d057d24aa6
00:24:41.150 --> 00:24:44.468
2 include the carry of the first

NOTE Confidence: 0.9380729

3b5584e4-d2fa-4abb-93cd-3deebd4812a9
00:24:44.468 --> 00:24:48.257
half other to the second half after.

NOTE Confidence: 0.9380729

123f235d-28bb-46f3-9f28-5da71700e4d0
00:24:48.260 --> 00:24:51.484
So basically I have to create some new

NOTE Confidence: 0.9380729

6578affe-2d32-4a5e-be5d-9ac300fd5d90
00:24:51.484 --> 00:24:55.436
input to the second half adder in order to

NOTE Confidence: 0.9380729

fc8e6ef9-5900-46c5-9140-a9d0bb17519e
00:24:55.436 --> 00:24:58.809
include the carry from the previous step.

NOTE Confidence: 0.9380729

1ba5e58e-6cb4-4314-9f22-94896c5b3ed2
00:24:58.810 --> 00:25:03.130
So in order to fix this, you have to say

NOTE Confidence: 0.9380729

5174a1f8-4afb-49e2-bff4-e711c931c72d
00:25:03.130 --> 00:25:07.820
that half Adder with only two inputs are not.

NOTE Confidence: 0.9380729

cb682203-ae15-48c8-a7f4-ad13b0b2500d
00:25:07.820 --> 00:25:11.194
The correct design kind of enough design.

NOTE Confidence: 0.9380729

1527d29f-fa7a-4253-9b4f-10d8b660373a
00:25:11.200 --> 00:25:15.744
Let's design a new circuit that is able

NOTE Confidence: 0.9380729

adb82154-0f3c-4dc0-83d1-070f5986cd8a
00:25:15.744 --> 00:25:20.335
to add 3 bits instead of two bits.

NOTE Confidence: 0.9380729

d8dd5896-0fb0-4e7f-9ea6-d8d6f7cc0af1
00:25:20.340 --> 00:25:23.500
If I could design A circuit that is

NOTE Confidence: 0.9380729

6562c0fc-52d6-45f9-8b01-c1a4c160ea92
00:25:23.500 --> 00:25:26.687
able to add 3 bits for 1/2 other,

NOTE Confidence: 0.9380729

cd84ecfc-55ce-4f9c-9c11-69d8af063d57
00:25:26.690 --> 00:25:29.866
I could say that I have three inputs,

NOTE Confidence: 0.9380729

7e1bbb0c-b13d-40eb-87bd-2c31dd8b6a43
00:25:29.870 --> 00:25:33.038
but I input zero in one of them,

NOTE Confidence: 0.9380729

d8aee936-7cdd-4c26-af2f-bb06be730283
00:25:33.040 --> 00:25:35.428
so it acts like 1/2 adder.

NOTE Confidence: 0.9380729

13b65f9c-5b6f-4bad-8584-b878b0b6e5f5
00:25:35.430 --> 00:25:37.142
If I have another.

NOTE Confidence: 0.9380729

f89d869a-d5c1-42f7-ada0-9c164515a2d1
00:25:37.142 --> 00:25:41.214
Bits I can add it one so it becomes

NOTE Confidence: 0.9380729

779393aa-6d75-4a71-a660-839fe549d2fa
00:25:41.214 --> 00:25:44.933
a other that adds 3 bits. So if I.

NOTE Confidence: 0.9380729

6cd710e0-25eb-47aa-a730-d95bd57441e4
00:25:44.933 --> 00:25:47.110
 Fix the half adder in order to 

NOTE Confidence: 0.9380729

22ebc0a9-2bb3-4496-b39b-b0e4cf933f4d
00:25:47.197 --> 00:25:49.377
support an additional input.

NOTE Confidence: 0.9380729

d4642523-e1bb-42ab-9d08-8f7169eaa8bc
00:25:49.380 --> 00:25:52.760
Then not only it can act like an half adder,

NOTE Confidence: 0.9380729

3d0d1fe6-671c-4287-83ef-3519d1a00a7e
00:25:52.760 --> 00:25:55.793
but also you can act like an half adder,

NOTE Confidence: 0.9380729

74c0fad2-06ed-4d7e-bfee-7e3b27b2ce48
00:25:55.800 --> 00:25:58.560
plus adding one additional bit.

NOTE Confidence: 0.9380729

e6a7b116-eeff-4f00-92b0-2f06dabc2dfb
00:25:58.560 --> 00:26:00.436
So let's do that.

NOTE Confidence: 0.9380729

17102f7a-7e51-42ad-84e4-9668374d3d47
00:26:00.436 --> 00:26:03.250
So we want to do this.

NOTE Confidence: 0.9380729

0570d26d-83b4-42c4-953a-7724109aa83d
00:26:03.250 --> 00:26:06.526
We want to redesign the half other.

NOTE Confidence: 0.9380729

39157b8e-ba64-418e-8d31-45e4cc0d7131
00:26:06.530 --> 00:26:09.176
This time they have other needs

NOTE Confidence: 0.9380729

52769e77-e556-4154-be2d-2cb1a220e2e2
00:26:09.176 --> 00:26:12.160
to add not only X&Y bottles,

NOTE Confidence: 0.9380729

8b8901e9-b324-43de-8e56-1902d849bdb3
00:26:12.160 --> 00:26:14.005
so additional input,

NOTE Confidence: 0.9380729

21862760-6524-4617-96cf-02da0a90507a
00:26:14.005 --> 00:26:19.710
so we want to build another with three bits.

NOTE Confidence: 0.9380729

ae05bfd9-8cc6-4a14-9e05-d8c435ed5f50
00:26:19.710 --> 00:26:21.306
So with three bits,

NOTE Confidence: 0.9380729

bd81341d-0616-41c7-b3d5-8ca61cb86221
00:26:21.306 --> 00:26:24.162
if you try the only possibility for

NOTE Confidence: 0.9380729

44d10051-a1b7-41d9-af91-864e534d80a4
00:26:24.162 --> 00:26:27.154
the output gonna be one output for ASN,

NOTE Confidence: 0.9380729

7a880cd4-4b3d-4892-b96e-5bc92d99dcc3
00:26:27.160 --> 00:26:29.680
one out for the carry.

NOTE Confidence: 0.9380729

45bba61e-bcb7-4244-9c45-07fc5c52eda1
00:26:29.680 --> 00:26:33.316
In the maximum case, or in the worst case,

NOTE Confidence: 0.9380729

d8aaa574-bbe4-4e5b-8032-7716dfba25da
00:26:33.320 --> 00:26:35.744
we're going to have X1Y1 and

NOTE Confidence: 0.9380729

a3969a47-bb15-452c-ad23-b312b247f4e5
00:26:35.744 --> 00:26:37.360
the additional input one,

NOTE Confidence: 0.9380729

b8dc12c8-469c-45c3-af86-152c149f655f
00:26:37.360 --> 00:26:40.987
so the output gonna be one and a carry.

NOTE Confidence: 0.9380729

ea43f949-07f9-4fd1-b37c-1ef755ad5c34
00:26:40.990 --> 00:26:44.185
So this is the worst case or the maximum

NOTE Confidence: 0.9380729

a11c7166-5dab-422b-ac6e-fcbf83c5f96b
00:26:44.185 --> 00:26:47.458
case that happens with adding three bits.

NOTE Confidence: 0.9380729

a8d50d97-29de-44c0-9057-f91dfeb7fbe9
00:26:47.460 --> 00:26:49.072
So let's design this.

NOTE Confidence: 0.9380729

001358bf-d534-4ec6-868f-1bd7257effb6
00:26:49.072 --> 00:26:51.087
When we designed the circuit,

NOTE Confidence: 0.9380729

ad830402-c482-44a0-b4d3-ed40e6081f97
00:26:51.090 --> 00:26:52.706
now we call this.

NOTE Confidence: 0.9380729

e8d59bcb-98e7-4565-b3e4-09147b692de4
00:26:52.706 --> 00:26:54.726
We haven't designed it yet,

NOTE Confidence: 0.9380729

5dc3d373-cc0c-46ab-a6b2-1596592cbac7
00:26:54.730 --> 00:26:57.898
but if we design this circuit that is

NOTE Confidence: 0.9380729

a1940dc9-4fe0-4796-83d9-a02192ceb957
00:26:57.898 --> 00:27:00.987
support that support an additional input.

NOTE Confidence: 0.9380729

1d7b27d1-855a-4b16-920a-92391cdb9fa2
00:27:00.990 --> 00:27:03.538
Then we call it a full adder.

NOTE Confidence: 0.9380729

9d355adf-d174-4f95-aa6c-20186e078149
00:27:03.540 --> 00:27:06.046
Now you see that was the difference

NOTE Confidence: 0.9380729

33584831-3cf6-443f-b878-a246c53b6f20
00:27:06.046 --> 00:27:08.269
within half other than full adder.

NOTE Confidence: 0.9380729

0ebad87f-d3e7-4233-9b65-9e3a31c3f3a4
00:27:08.270 --> 00:27:10.400
The difference is that the full

NOTE Confidence: 0.9380729

b8930e09-715c-4af2-b90e-6565f26f8ee0
00:27:10.400 --> 00:27:12.253
other supports adding with Carrie

NOTE Confidence: 0.9380729

ef422ac2-8734-4a5c-9589-2d324a6e868f
00:27:12.253 --> 00:27:14.455
or well adding with additional bit,

NOTE Confidence: 0.9380729

999eb5e1-4fcc-464d-8ef2-0cca201cda77
00:27:14.460 --> 00:27:17.364
but they have other only accept 2 bits.

NOTE Confidence: 0.9380729

4c13c8bc-36da-4e30-8503-39f6391ecd0a
00:27:17.370 --> 00:27:20.570
There is no additional bit.

NOTE Confidence: 0.9380729

6ee1a9f9-171a-4af4-b267-c6fc386d67f4
00:27:20.570 --> 00:27:22.010
So usually the latter,

NOTE Confidence: 0.9380729

01374665-1965-4618-bff1-cf3994926c45
00:27:22.010 --> 00:27:23.810
I mean the additional input,

NOTE Confidence: 0.9380729

4b3003cf-4150-4d72-b885-416549637cb1
00:27:23.810 --> 00:27:25.610
which usually is a carry.

NOTE Confidence: 0.9380729

bc46afdd-43ca-45e9-8d79-86bc988b1ac0
00:27:25.610 --> 00:27:28.200
We call it a carry from previous

NOTE Confidence: 0.9380729

8ec20a76-af0d-43fe-b003-45103f4108dc
00:27:28.200 --> 00:27:30.688
calculation and we put it in this

NOTE Confidence: 0.9380729

85581ef5-bfb1-49c3-8f1b-d9509a218b8c
00:27:30.688 --> 00:27:32.644
side of the circuit instead of

NOTE Confidence: 0.9380729

a2f3300f-69a2-4d2d-a114-c790216cb5fc
00:27:32.723 --> 00:27:34.608
just putting in this side.

NOTE Confidence: 0.9380729

daad9e20-f4e6-4d70-8ebd-e9cf2afe4c7b
00:27:34.610 --> 00:27:37.116
We don't believe that here we put

NOTE Confidence: 0.9380729

348b1eb0-a31b-45c8-ab9a-aaec770f5ec6
00:27:37.116 --> 00:27:40.061
it here because we want to show that

NOTE Confidence: 0.9380729

abfd3a3a-8191-4a43-9623-5203211071c3
00:27:40.061 --> 00:27:42.472
this is the additional input that

NOTE Confidence: 0.9380729

f81e1aba-f24b-4a2b-83aa-720061154f98
00:27:42.472 --> 00:27:44.636
comes from previous calculation.

NOTE Confidence: 0.9380729

403c3b8d-3153-4959-becf-a1f8f662c161
00:27:44.640 --> 00:27:48.077
Now let's design what is full adder.

NOTE Confidence: 0.9380729

bc12d39d-a1ad-4ecd-9501-6b1348738f0c
00:27:48.080 --> 00:27:50.537
So very similar to our design from

NOTE Confidence: 0.9380729

23a1d419-81a5-4c0c-a4d9-a58c3b209e6c
00:27:50.537 --> 00:27:53.346
this scratch. So how many inputs we have?

NOTE Confidence: 0.9380729

5df86bf6-ec85-4f21-95ab-3678ee1a361f
00:27:53.350 --> 00:27:54.750
We have three inputs,

NOTE Confidence: 0.9380729

672b405b-b489-40a2-9d8a-665af371105e
00:27:54.750 --> 00:27:56.500
how many outputs we have.

NOTE Confidence: 0.9380729

73aac2fe-5bc7-4efa-af0c-8cea342cd9c9
00:27:56.500 --> 00:27:58.524
We have two outputs,

NOTE Confidence: 0.9380729

f3955b61-99a0-4dd7-867e-1f728cc244ac
00:27:58.524 --> 00:28:01.560
so we create the truth table.

NOTE Confidence: 0.9380729

ab87d534-9637-44be-b036-add11b2e293e
00:28:01.560 --> 00:28:04.848
So here is the design we want to

NOTE Confidence: 0.9380729

2589f6b7-e2b4-4c79-944b-04f6e2b728b0
00:28:04.848 --> 00:28:07.930
design an adder with three bits,

NOTE Confidence: 0.9380729

cc0c0533-7e26-4cb5-bac3-81320d0299ac
00:28:07.930 --> 00:28:11.115
two inputs and one additional carry bit.

NOTE Confidence: 0.9380729

faa92a5e-ed58-41e6-bad2-005a3edb6ad4
00:28:11.120 --> 00:28:14.039
So the truth ever going to have

NOTE Confidence: 0.9380729

261ef0bf-08af-4b15-9f68-044de8ced35e
00:28:14.039 --> 00:28:15.290
free binary inputs

NOTE Confidence: 0.83255774

d41b8fa6-225a-4ea6-aaa0-a72be9c7259f
00:28:15.374 --> 00:28:18.422
XY and additional input carry from

NOTE Confidence: 0.83255774

f73bb693-aa0c-4eed-aac5-50b0723f66ed
00:28:18.422 --> 00:28:21.130
previous calculation an as we saw,

NOTE Confidence: 0.83255774

730f361e-42b9-499e-be53-c50e40b2e5c9
00:28:21.130 --> 00:28:23.400
we need only two outputs,

NOTE Confidence: 0.83255774

bc63b7fb-93fc-4eba-8c37-24b8522cf007
00:28:23.400 --> 00:28:25.220
the sum and carry.

NOTE Confidence: 0.83255774

4724f8f4-2475-4f97-b424-65b11558d704
00:28:25.220 --> 00:28:27.950
And then we have three inputs,

NOTE Confidence: 0.83255774

b1eef1b5-3bb2-4795-9e48-95f8ba86514c
00:28:27.950 --> 00:28:32.126
2 to the power of three becomes 8 rose.

NOTE Confidence: 0.83255774

9c4ad145-2ad3-4ca6-8674-521719b52090
00:28:32.130 --> 00:28:34.450
You have to fill out the truth here

NOTE Confidence: 0.83255774

f859a54e-291f-4d70-8255-9d7e99c8ea55
00:28:34.450 --> 00:28:36.745
for eight rows and the left side

NOTE Confidence: 0.83255774

261ae21e-d740-43e2-8adb-2623176d8ba5
00:28:36.745 --> 00:28:38.807
all the possibilities in the right

NOTE Confidence: 0.83255774

27b16140-d4d7-42fc-b574-b58f237d650d
00:28:38.807 --> 00:28:40.907
side you have to calculate them.

NOTE Confidence: 0.83255774

f4c11847-e9b5-4fd5-9349-58e158e9db70
00:28:40.910 --> 00:28:42.210
For instance this one.

NOTE Confidence: 0.8571672

cbf36440-27ac-4e14-9b94-15572167614e
00:28:44.340 --> 00:28:47.396
If I want to add a X which

NOTE Confidence: 0.8571672

118e56b0-51c9-441b-ba1c-71a1d5807605
00:28:47.396 --> 00:28:50.708
is one with Y which is 1 an,

NOTE Confidence: 0.8571672

1c35c7f8-b12d-4492-921d-14b542360c5f
00:28:50.710 --> 00:28:54.210
I have additional input as a carry.

NOTE Confidence: 0.8571672

cff0f0cf-64e0-41b7-aa9a-13f92069f452
00:28:54.210 --> 00:28:56.330
So what is going to be the output?

NOTE Confidence: 0.8571672

4da71d76-d286-4dde-9f1c-d471226a69dc
00:28:56.330 --> 00:28:59.080
So 1 + 1 + 0 becomes two we have

NOTE Confidence: 0.8571672

313f98bb-3c82-4630-9cae-898143e494cd
00:28:59.172 --> 00:29:02.097
zero in the S and we have a carry.

NOTE Confidence: 0.8571672

446ae6ea-82c6-4ec1-8410-d6b1197609f1
00:29:02.100 --> 00:29:05.988
So as is 0 and we have a cab.

NOTE Confidence: 0.8571672

0c90050c-dd1f-40b9-99c2-82f54ec6816e
00:29:05.990 --> 00:29:09.704
In this case, we already saw that, so one.

NOTE Confidence: 0.8571672

4c70bd57-c5e0-4491-ac76-393e1d811a19
00:29:09.704 --> 00:29:12.840
Plus 1 + 1 becomes one in the

NOTE Confidence: 0.8571672

9a0d08bc-14b3-4125-8a1b-cba4f0acbf17
00:29:12.949 --> 00:29:15.595
sum and one in the carry.

NOTE Confidence: 0.6035767

ec40f46e-694c-451f-ad7f-ac08b7dc8137
00:29:25.520 --> 00:29:27.150
So, um.

NOTE Confidence: 0.87770057

0c95bdbc-5fba-49c0-aae9-efbe8ed841de
00:29:29.280 --> 00:29:34.580
Yes, so then we have to design it SOP 4S.

NOTE Confidence: 0.87770057

c4079215-947e-414a-b0cc-fee87815cf19
00:29:34.580 --> 00:29:40.259
You can see that this is the midterm 1248012.

NOTE Confidence: 0.87770057

5cb56daa-8bbf-495f-a288-2faf67077ce6
00:29:40.260 --> 00:29:43.774
Four and then seven, and then for

NOTE Confidence: 0.87770057

4833e50e-0131-4b67-9ac1-181c27b0252c
00:29:43.774 --> 00:29:47.789
the carry we have the meeting free.

NOTE Confidence: 0.87770057

5f5e6bd8-74f5-4608-807b-64e7f713fcbc
00:29:47.790 --> 00:29:51.530
5/6 and seven. So, uh,

NOTE Confidence: 0.87770057

3a2c3df1-7414-45c3-a672-ea1cf8a9fdde
00:29:51.530 --> 00:29:56.098
what type of corner map I can use?

NOTE Confidence: 0.87770057

6aee1eeb-18f2-4bec-8c8e-af866baa7664
00:29:56.100 --> 00:29:59.853
I had a question in the previous edition Sir.

NOTE Confidence: 0.54825455

5cd1bff4-c5f6-414c-ab43-a481f0a17885
00:30:02.330 --> 00:30:07.447
Oh oh oh, in the previous edition.

NOTE Confidence: 0.54825455

9954dc9f-72dc-490f-89b3-f9bddee9a9fb
00:30:07.450 --> 00:30:09.928
I think you mean this one.

NOTE Confidence: 0.83853495

ac11e778-9743-43ce-870f-5d696eec541e
00:30:13.540 --> 00:30:19.074
The Y was zero, not one. So as I said,

NOTE Confidence: 0.83853495

f3bb77e3-c25c-4436-b38d-d0bc77e072e4
00:30:19.074 --> 00:30:23.355
I'll OK, so I I said X is 1,

NOTE Confidence: 0.83853495

3c022b7e-fb82-4e8a-a8d0-a8a8feecbcca
00:30:23.360 --> 00:30:29.210
Y is 0 and we have the carry as one.

NOTE Confidence: 0.83853495

6a23e650-02a7-46ca-b031-c754a7a11886
00:30:29.210 --> 00:30:32.979
So if you do this 1 + 1 + 0 becomes two,

NOTE Confidence: 0.83853495

7e35c3ab-888c-42ad-986a-ec866108c994
00:30:32.980 --> 00:30:36.430
you have zero in the sum and we have a carry.

NOTE Confidence: 0.8911499

e5363de3-c1b5-4bab-8576-41caa5360e37
00:30:38.780 --> 00:30:43.890
And so, as is zero and carries one. Excess.

NOTE Confidence: 0.7119578

70482569-18c1-4298-b2b5-2a0af231b265
00:30:53.920 --> 00:30:55.504
Oh, I see now.

NOTE Confidence: 0.7119578

2726f2e9-fdad-41fe-aca5-0fb09b928339
00:30:55.504 --> 00:30:58.658
Yeah, because I mean, uh, this is X&Y.

NOTE Confidence: 0.7119578

302bfde6-45e7-4862-ad71-0b4d15e1c920
00:30:58.660 --> 00:31:02.656
And then this is the carrier.

NOTE Confidence: 0.7119578

9a8472bd-67a8-4da2-a216-2f4358508c9f
00:31:02.660 --> 00:31:05.110
So very similar to the previous design,

NOTE Confidence: 0.7119578

8dc8b299-efa9-41fe-a4f7-43c6c903cfdf
00:31:05.110 --> 00:31:06.860
so we have three input

NOTE Confidence: 0.7119578

ddb8b811-157a-4c74-b002-74024a42822b
00:31:06.860 --> 00:31:08.610
input in the truth table.

NOTE Confidence: 0.7119578

0aeaf2a9-344a-471a-9a53-4d48d4716870
00:31:08.610 --> 00:31:11.121
So we need a corner map if you want

NOTE Confidence: 0.7119578

2ce83d23-3307-430d-8584-fc5084d3642f
00:31:11.121 --> 00:31:13.678
to use the car map to simplify

NOTE Confidence: 0.7119578

dd0c583c-6252-4c06-86a5-89ad943b3c4d
00:31:13.678 --> 00:31:15.960
 that karnaugh map with three variables, 

NOTE Confidence: 0.7119578

43988c31-ac8f-4b54-acef-7d452555ec06
00:31:15.960 --> 00:31:18.296
so X&Y goes to the column side and

NOTE Confidence: 0.7119578

e91d1057-b5b9-4bc2-9206-9b0322989cd4
00:31:18.296 --> 00:31:20.858
the last the higher significant bits,

NOTE Confidence: 0.7119578

d5281637-012e-4cdc-ba0c-a19698465c03
00:31:20.860 --> 00:31:21.958
which is here,

NOTE Confidence: 0.7119578

99d81f03-541b-4beb-8fca-3ab55add3394
00:31:21.958 --> 00:31:24.154
the Carrie goes to zero side

NOTE Confidence: 0.7119578

224cf75b-69a8-45b7-a1c5-d57ebf3e0834
00:31:24.154 --> 00:31:27.225
and then you put the one for the

NOTE Confidence: 0.7119578

b73b3b99-9868-46fc-b07b-3ead3e32cc31
00:31:27.225 --> 00:31:29.289
midterms that makes these some.

NOTE Confidence: 0.7119578

ff839e86-31a0-4088-8f40-2563dbc472d0
00:31:29.290 --> 00:31:32.206
11 Column afford one output function

NOTE Confidence: 0.7119578

3aa1751f-d35f-4a9e-b7eb-193fe20be312
00:31:32.206 --> 00:31:35.409
which is S another karma for the

NOTE Confidence: 0.7119578

7526dd82-8396-4b1d-a559-117461725016
00:31:35.409 --> 00:31:38.671
carry and then we have to make one

NOTE Confidence: 0.7119578

921a1ae6-8f9c-4290-8362-582a68d98ecb
00:31:38.671 --> 00:31:41.371
for those meetings that they carry

NOTE Confidence: 0.7119578

6d8196bf-c4fb-4e68-94a4-08e3be18bfa2
00:31:41.371 --> 00:31:44.071
one and zero for those midterms.

NOTE Confidence: 0.7119578

2e53d578-9413-4628-90c3-cd85761f5821
00:31:44.071 --> 00:31:46.306
That makes the carry zero.

NOTE Confidence: 0.7119578

2ec49c95-7088-4f5c-8de2-3047384dd652
00:31:46.310 --> 00:31:49.446
And then we have to simplify them.

NOTE Confidence: 0.7119578

08edfb79-439e-4a3b-b159-8eade6e20799
00:31:49.450 --> 00:31:54.706
So let's start with the S the first output.

NOTE Confidence: 0.7119578

ccada25f-6841-41b7-b4f5-fcf80251a206
00:31:54.710 --> 00:31:59.344
So. When we look at the economy map,

NOTE Confidence: 0.7119578

95a88436-9536-4d0f-a4c7-563a486a666c
00:31:59.350 --> 00:32:02.647
we see that the cells that are

NOTE Confidence: 0.7119578

f972279f-3f38-41eb-a075-e7c88c82b6c8
00:32:02.647 --> 00:32:04.060
one or diagonal.

NOTE Confidence: 0.7119578

692866a0-5ba3-4f29-85e9-aa2de65df6ba
00:32:04.060 --> 00:32:06.466
So whenever I said that whenever

NOTE Confidence: 0.7119578

20b053ae-f412-44f0-814c-9c0efb24c8ce
00:32:06.466 --> 00:32:09.338
we have a diagonal in the car map,

NOTE Confidence: 0.7119578

bcd7a01e-9ee0-481f-b375-42ea5951de0a
00:32:09.340 --> 00:32:09.988
it helps.

NOTE Confidence: 0.7119578

da1fc444-f7d6-444e-84c3-d8c3aec8b256
00:32:09.988 --> 00:32:12.580
It kind of hints that there is no

NOTE Confidence: 0.7119578

04f29b8c-4397-40fa-80a8-39fda28a4596
00:32:12.658 --> 00:32:14.824
way to simplify because there is

NOTE Confidence: 0.7119578

53ed2000-08c2-4a90-b2f5-19607e355b62
00:32:14.824 --> 00:32:18.068
no way that you can create a shared

NOTE Confidence: 0.7119578

f2c4c9d3-b435-4e3b-b7f9-bcf32b5dd52a
00:32:18.068 --> 00:32:20.642
region based on the adjustment cells.

NOTE Confidence: 0.7119578

a2e300b5-2e0a-41be-bd99-5b2a2571d8fd
00:32:20.650 --> 00:32:22.530
But I said another thing.

NOTE Confidence: 0.7119578

0e3a23dc-07c9-407f-a1b2-432b0ca4841e
00:32:22.530 --> 00:32:25.218
So whenever you have a diagonal

NOTE Confidence: 0.7119578

ab11eea7-fb81-4f56-a909-b76f0b4f791d
00:32:25.218 --> 00:32:27.955
or main diagonal or the other

NOTE Confidence: 0.7119578

12bd4a3f-2abe-4d49-b4f2-be9f517c8772
00:32:27.955 --> 00:32:30.090
diagonal in the car map.

NOTE Confidence: 0.7119578

f1a6f460-b958-4816-8437-204d6ca83c97
00:32:30.090 --> 00:32:32.956
 What's the gate that the karnaugh

NOTE Confidence: 0.7119578

75d2307c-f2f4-4f03-aeee-00af6e6dfd4d
00:32:32.956 --> 00:32:35.812
map actually tries to say to us?

NOTE Confidence: 0.8270971

c65aa5ff-9273-49fe-b3d8-1d74d374df26
00:32:38.750 --> 00:32:39.752
Correct, Tatiana? Yes.

NOTE Confidence: 0.8270971

80b945af-a3ff-4be9-9dde-08a32f677cfb
00:32:39.752 --> 00:32:42.089
So as I said, whenever you see

NOTE Confidence: 0.8270971

0a1e046d-04c8-4789-90d0-0613858fbd65
00:32:42.089 --> 00:32:44.087
a diagonal in the economy map,

NOTE Confidence: 0.8270971

0ba6beeb-f7fb-4ffc-a729-9c74c362a537
00:32:44.090 --> 00:32:47.650
although it says that there is no way

NOTE Confidence: 0.8270971

d4081276-f395-4819-928c-7341c33438f5
00:32:47.650 --> 00:32:50.627
to simplify that using the I mean.

NOTE Confidence: 0.8270971

03644fde-c662-4a05-84b0-2c7dadfc8784
00:32:50.630 --> 00:32:53.048
For the aesopi for more PS4,

NOTE Confidence: 0.8270971

603a49bf-e32b-4f66-857d-6b10a2bfb3f2
00:32:53.050 --> 00:32:56.353
but it hints or it helps us to kind

NOTE Confidence: 0.8270971

443df424-803e-4452-b2b8-f19dbe4c3020
00:32:56.353 --> 00:32:59.240
of simplify that using the exclusive

NOTE Confidence: 0.8270971

de7a73a0-6b33-4eec-9325-94fb9a11d46a
00:32:59.240 --> 00:33:03.597
or so this is an example of that so.

NOTE Confidence: 0.8270971

bc4542de-d97f-4631-9d56-5e433ef93414
00:33:03.600 --> 00:33:05.766
We cannot create any shared region,

NOTE Confidence: 0.8270971

adf6e35f-4275-4a30-b2cd-7447c0310a23
00:33:05.770 --> 00:33:09.028
so we have to write down the whole midterm.

NOTE Confidence: 0.8270971

c6b82164-f763-4687-962d-3fadc552b483
00:33:09.030 --> 00:33:12.958
So midterm, 1 midterm, 2, four and seven.

NOTE Confidence: 0.8270971

36b2ed37-bf7b-444a-ad35-2142ca5416cd
00:33:12.960 --> 00:33:16.680
And then, but one thing is that here.

NOTE Confidence: 0.8270971

d782db6b-1de4-4468-82b2-301c02ccdd78
00:33:16.680 --> 00:33:21.020
You can extract this variable.

NOTE Confidence: 0.8270971

90a17ee0-212d-4b47-b0a7-3dd1ac70df79
00:33:21.020 --> 00:33:24.009
Also, here you can extract this variable.

NOTE Confidence: 0.8568329

22beceb2-030e-48a8-9fb4-4e72d00347ec
00:33:27.440 --> 00:33:29.918
It becomes this.

NOTE Confidence: 0.8568329

34061a3e-36c2-497d-a1d8-36f0d20b9b74
00:33:29.920 --> 00:33:31.114
Inside the parentheses,

NOTE Confidence: 0.8568329

6bbae686-39b6-4b7a-963e-2a423687f34f
00:33:31.114 --> 00:33:34.880
if you look at the inside the parentheses.

NOTE Confidence: 0.8568329

bb1e65aa-763e-41f0-8295-bb87f02c0d0c
00:33:34.880 --> 00:33:37.690
The first parentheses is the

NOTE Confidence: 0.8568329

db6ef742-7415-4380-9a2f-3d0cde5a65ae
00:33:37.690 --> 00:33:39.938
exclusive or between X&Y.

NOTE Confidence: 0.8568329

59321025-853a-49a0-beb4-a0e2511b3edf
00:33:39.940 --> 00:33:42.695
And the second parentheses is

NOTE Confidence: 0.8568329

e9b9fbcd-e503-4fa5-afd4-a513a09d3d12
00:33:42.695 --> 00:33:45.459
the exclusive, nor between X&Y.

NOTE Confidence: 0.8858707

c78b01ed-232e-4db2-96b5-82f3d1eeffee
00:33:48.310 --> 00:33:50.109
So we can write it so the

NOTE Confidence: 0.8858707

ec8f0974-307c-459c-9473-0dc023f645cf
00:33:50.109 --> 00:33:52.108
first one is the exclusive or,

NOTE Confidence: 0.8858707

ec91d08c-d9f5-4235-8e08-ea28bea57a84
00:33:52.110 --> 00:33:55.610
the second one is the exclusive norm.

NOTE Confidence: 0.8858707

efa887f4-5641-45c8-940a-0b58fdc65ca5
00:33:55.610 --> 00:33:59.266
But we already know that the exclusive or

NOTE Confidence: 0.8858707

a09d492e-7a62-461d-958e-4d22445d0844
00:33:59.266 --> 00:34:02.389
an exclusive nor or not of each other.

NOTE Confidence: 0.8858707

87a34f4b-8bcd-4b7f-9a96-35ddde2ce469
00:34:02.390 --> 00:34:04.934
That was one of the lecture

NOTE Confidence: 0.8858707

408c4291-2ed7-430a-912c-a4847e9484a6
00:34:04.934 --> 00:34:06.630
assignments in previous weeks,

NOTE Confidence: 0.8858707

795c4ffc-e940-47bc-a3c1-fe2c413a6f0a
00:34:06.630 --> 00:34:10.630
so the exclusive or. Not.

NOTE Confidence: 0.8858707

3287ac6e-92fd-4af9-a151-35712d059d33
00:34:10.630 --> 00:34:13.216
If you do, the calculation here

NOTE Confidence: 0.8858707

ce638174-6e63-439a-9e62-5b114800cae3
00:34:13.216 --> 00:34:15.850
becomes exclusive nor and vice versa.

NOTE Confidence: 0.8858707

f80fe0b4-684f-4e88-985f-6149ed5d6d47
00:34:15.850 --> 00:34:18.025
The nut of excessive number

NOTE Confidence: 0.8858707

5f88ecb8-7151-41c0-8d6d-8a604ca0fc6b
00:34:18.025 --> 00:34:19.765
becomes excessive or so.

NOTE Confidence: 0.8858707

1e0cfb1b-bd44-411b-844e-dee364f4ec3c
00:34:19.770 --> 00:34:21.940
Instead of the exclusive nor,

NOTE Confidence: 0.8858707

c5fee83b-3169-462d-858d-5a1792af0538
00:34:21.940 --> 00:34:25.083
I write it down based on the

NOTE Confidence: 0.8858707

cdd2eefc-d865-4487-bc30-62552bc6bb57
00:34:25.083 --> 00:34:27.599
exclusive or followed by the nuts.

NOTE Confidence: 0.8894911

fb061d30-89af-47c9-9f8e-e1d6bafea4f6
00:34:29.610 --> 00:34:32.284
So then you can assume that the

NOTE Confidence: 0.8894911

b88b6d36-34f5-4fc1-8fcc-0ba968fe9da5
00:34:32.284 --> 00:34:34.156
inside the parenthesis is an

NOTE Confidence: 0.8894911

f091e599-1b4d-4774-9bb3-830aaa5d8e11
00:34:34.156 --> 00:34:36.118
Alpha or a new binary variable.

NOTE Confidence: 0.8894911

39110f0f-3e8f-47ea-bc7a-132dfab7cde9
00:34:36.120 --> 00:34:37.912
So this becomes Alpha.

NOTE Confidence: 0.8894911

73d6aab8-5366-466a-8a90-5af2ba1b4ab6
00:34:37.912 --> 00:34:40.600
This becomes Alpha Bar or not,

NOTE Confidence: 0.8894911

36da5c67-7b38-42f6-a6ce-9beb10c99a23
00:34:40.600 --> 00:34:43.060
of the Alpha.

NOTE Confidence: 0.8894911

68852e67-762c-4ecb-b3d9-696d8bd46693
00:34:43.060 --> 00:34:46.548
So then if you look at this expression,

NOTE Confidence: 0.8894911

fe7bade4-2aab-489f-ae0d-819f92265847
00:34:46.550 --> 00:34:49.022
it becomes another exclusive or between

NOTE Confidence: 0.8894911

4e130dc6-9b8c-4d46-a622-b422fd849461
00:34:49.022 --> 00:34:51.340
this variable and this variable.

NOTE Confidence: 0.9330674

e00a4233-1f09-43c4-9cea-890f9a1b2ea1
00:34:53.370 --> 00:34:56.546
So you can write it down as the.

NOTE Confidence: 0.9330674

ab5c99ff-7b17-4862-b514-153298a01757
00:34:56.550 --> 00:34:59.060
Carry exclusive or with Alpha,

NOTE Confidence: 0.9330674

d6143cde-a382-4dae-8075-0bf4e730733b
00:34:59.060 --> 00:35:01.468
but what was Alpha?

NOTE Confidence: 0.9330674

fc6d7c9c-8a36-44b0-96ad-5aab5b13b91b
00:35:01.468 --> 00:35:06.338
The Alpha was X exclusive or Y with Y?

NOTE Confidence: 0.9330674

f13391b7-4b03-4e84-84bc-130b3b6b15ad
00:35:06.340 --> 00:35:08.686
So this is the final result.

NOTE Confidence: 0.9330674

c16e251d-c981-462c-a911-947f2d1fb9cc
00:35:08.690 --> 00:35:12.209
So basically if you want to add 2 bits,

NOTE Confidence: 0.9330674

84f9ba2c-2dd2-470c-981d-a03fc46d0901
00:35:12.210 --> 00:35:14.625
it becomes X exclusive or Y if

NOTE Confidence: 0.9330674

443b691f-2f8b-4888-bf0f-7e7cb436d128
00:35:14.625 --> 00:35:17.462
you want ad free bits it becomes

NOTE Confidence: 0.9330674

a6725081-0f9c-4c13-8bc9-3a0bf91a7ff9
00:35:17.462 --> 00:35:20.030
exclusive or of all the inputs.

NOTE Confidence: 0.9330674

e91a7ca5-977e-4997-8137-1cd9ea202dba
00:35:20.030 --> 00:35:23.540
It can guess that if you have four inputs,

NOTE Confidence: 0.9330674

3ad7bbd8-6dc5-41a4-9233-9cf05f64594a
00:35:23.540 --> 00:35:25.898
4 bits in the inputs and

NOTE Confidence: 0.9330674

b599d298-d3c0-4925-892b-6e8ea15f2483
00:35:25.898 --> 00:35:28.239
you want to some 4 bits,

NOTE Confidence: 0.9330674

7b80e5fb-70ef-4b58-a6ba-16f2c39d1eb7
00:35:28.240 --> 00:35:29.804
it becomes the exclusive

NOTE Confidence: 0.9330674

a3db6f1d-b1ab-4110-906d-7d3221259f16
00:35:29.804 --> 00:35:32.150
or of them all of them.

NOTE Confidence: 0.87933624

64d0f188-c95e-49ea-b55e-659c02f7d578
00:35:34.520 --> 00:35:38.223
So this is the final answer or

NOTE Confidence: 0.87933624

846d8040-54ef-4898-a205-2f9271867609
00:35:38.223 --> 00:35:40.453
final simplified version only

NOTE Confidence: 0.87933624

5bbd9f6c-92db-454a-b908-cdcaf251a531
00:35:40.453 --> 00:35:43.178
using two exclusive or gates.

NOTE Confidence: 0.8647392

6d4ccc81-2a8a-4768-a1cf-ac7d1415a1a8
00:35:45.670 --> 00:35:48.547
And also you can drop the parentheses,

NOTE Confidence: 0.8647392

c178c4d7-fa31-4373-a8cb-4cbf3c8ffb40
00:35:48.550 --> 00:35:50.605
because the exclusive or you

NOTE Confidence: 0.8647392

418caae9-0dee-4e53-9852-084112110365
00:35:50.605 --> 00:35:52.249
know that it's associative,

NOTE Confidence: 0.8647392

4fa0d05b-4795-4fa6-a9dc-c717d6d4d8dc
00:35:52.250 --> 00:35:55.283
but I put it here in a Gray sentence

NOTE Confidence: 0.8647392

cd708c61-1e88-493c-a2da-f6ae4e05909d
00:35:55.283 --> 00:35:58.312
that let's keep them because it hints

NOTE Confidence: 0.8647392

8bbcb557-674c-4d0e-971a-58443bde64a7
00:35:58.312 --> 00:36:01.027
that this means that the exclusive

NOTE Confidence: 0.8647392

af6ee543-c80e-43c6-b5bb-b742e2b6c895
00:36:01.027 --> 00:36:04.128
or of the first original inputs and

NOTE Confidence: 0.8647392

7e074293-b54d-4e17-8988-9655f8d180b6
00:36:04.128 --> 00:36:06.635
then exclusive or with the additional

NOTE Confidence: 0.8647392

283b659b-c3be-45de-a639-47887deaa90a
00:36:06.635 --> 00:36:08.279
input from previous calculation.

NOTE Confidence: 0.8398873

d3d8d9c3-fb46-4a43-bed7-a65f1814c698
00:36:11.020 --> 00:36:13.764
And now let's go to the Carrie.

NOTE Confidence: 0.8398873

ff47d51b-02fa-4a75-8ef1-bba3151b7129
00:36:13.770 --> 00:36:17.309
If you go to the Carrie, we see that.

NOTE Confidence: 0.8398873

4cfd782c-c995-436e-adde-311dbcf6ae5e
00:36:17.309 --> 00:36:20.060
So we can create 3 shared region.

NOTE Confidence: 0.8398873

44fa9021-12aa-4085-86bb-1b8910c4ed5a
00:36:20.060 --> 00:36:22.620
All these are overlapping, so.

NOTE Confidence: 0.8398873

9f0ec47a-49fc-4c81-bbbb-46d7672bb267
00:36:22.620 --> 00:36:25.497
One of them is the this one.

NOTE Confidence: 0.814712

e9f3ae66-9e36-4c71-a639-f9df1563a194
00:36:28.300 --> 00:36:31.150
XY, and as you can see,

NOTE Confidence: 0.814712

b48cbbab-7d02-4070-93c1-95be45c1a14c
00:36:31.150 --> 00:36:35.900
X&Y was the carry when we have only two bits.

NOTE Confidence: 0.814712

146f88e8-4608-42b1-9e8f-72e966fe6540
00:36:35.900 --> 00:36:40.400
But here we have 3 bits, so.

NOTE Confidence: 0.814712

46bfb3ef-7003-485e-a3d5-21b30d8c434b
00:36:40.400 --> 00:36:43.810
This region. And this region,

NOTE Confidence: 0.814712

5f221433-231a-4eb5-819f-e63a134e3d11
00:36:43.810 --> 00:36:47.247
which is equal to these two terms.

NOTE Confidence: 0.814712

920490ca-bdd9-410c-ab2c-4649025b3c63
00:36:47.250 --> 00:36:51.678
So if you look closely to these two terms,

NOTE Confidence: 0.814712

85949a88-2345-477d-9ae6-3d6535a11f9e
00:36:51.680 --> 00:36:54.662
you see that it says that each

NOTE Confidence: 0.814712

d555b3e2-3647-4744-8390-d35c3ffaeed1
00:36:54.662 --> 00:36:58.777
pair of the input must be and with

NOTE Confidence: 0.814712

ecbb0e2b-2f9b-43da-bf3b-e460fe604f62
00:36:58.777 --> 00:37:01.512
each other and then altogether.

NOTE Confidence: 0.814712

5aedcfe3-4a56-4a21-bb94-b2f397bc89d6
00:37:01.520 --> 00:37:04.466
So XYX carry from previous version,

NOTE Confidence: 0.814712

35f58b09-06bd-416f-9156-dc531922575e
00:37:04.470 --> 00:37:06.438
previous calculation anhuai with

NOTE Confidence: 0.814712

de70cc91-b041-406c-94d8-39b4c9057cc0
00:37:06.438 --> 00:37:08.898
Carol from the previous calculation.

NOTE Confidence: 0.814712

45d3f49f-3471-4d6b-a989-dac9e7420fd5
00:37:08.900 --> 00:37:16.660
So you have. See X&Y, each pair of them.

NOTE Confidence: 0.814712

594c84cc-161e-4995-a911-a6ffb6ce1545
00:37:16.660 --> 00:37:23.250
XY and. CX and and then see.

NOTE Confidence: 0.814712

09a3f975-b5a3-40f6-a9be-43b5d5ebfd7a
00:37:23.250 --> 00:37:25.882
Y and so each pair of them and

NOTE Confidence: 0.814712

e1a4a75a-9b3b-4471-afed-8d49f37e0f84
00:37:25.882 --> 00:37:28.177
with each other becomes the

NOTE Confidence: 0.814712

3f8a49eb-e286-40c9-928b-077a911384d8
00:37:28.177 --> 00:37:30.245
carry for the calculation.

NOTE Confidence: 0.814712

cac74ca6-84dc-4c62-aee0-cc2c5d442388
00:37:30.250 --> 00:37:34.140
When you have free bits.

NOTE Confidence: 0.814712

23067d2b-c7f8-4f41-a248-21904b8d3bb5
00:37:34.140 --> 00:37:36.576
And here is the final design.

NOTE Confidence: 0.814712

4a89825b-d2bb-4d94-a759-5eb4f0d237ce
00:37:36.580 --> 00:37:40.225
So if you have 3 bits in the input.

NOTE Confidence: 0.8373926

7173fcc7-ff53-4e5c-aa96-a6ea8e1c876a
00:37:42.480 --> 00:37:44.930
X exclusive or with Y and then

NOTE Confidence: 0.8373926

62e83ced-5827-49db-b624-a706edf7a29a
00:37:44.930 --> 00:37:47.520
exclusive or with the additional bits.

NOTE Confidence: 0.8373926

5717b6c7-4a63-4114-a6ff-49ec443d68df
00:37:47.520 --> 00:37:50.096
The final S and the carry is

NOTE Confidence: 0.8373926

d495bdc3-8339-4d92-b0f5-df8b7186d4e1
00:37:50.096 --> 00:37:52.960
and of each pair of the input.

NOTE Confidence: 0.8373926

8ec75ea3-a9c4-44d3-b125-de5171cf8ab0
00:37:52.960 --> 00:37:56.372
Final or. So like previous half

NOTE Confidence: 0.8373926

3bd6746a-a7db-48dc-860e-92a4c771b8cc
00:37:56.372 --> 00:37:59.146
adder I just rooted them with 90

NOTE Confidence: 0.8373926

fda20918-44cb-4c77-8db0-d17ebb1db8f8
00:37:59.146 --> 00:38:01.680
degree and then this is the design.

NOTE Confidence: 0.8373926

9bea599a-7379-40fe-8872-8087f1312a4c
00:38:01.680 --> 00:38:03.960
So 2 bits in the input,

NOTE Confidence: 0.8373926

85038100-3f4f-4990-a9c9-d2f0a6da4a66
00:38:03.960 --> 00:38:06.613
one additional input as a carry from

NOTE Confidence: 0.8373926

8e9ea47f-fdeb-429e-8dd9-30a8802e8797
00:38:06.613 --> 00:38:09.300
previous step and then the two outputs.

NOTE Confidence: 0.7899439

2ae6786f-8cf8-4510-af1e-84800706a6c4
00:38:11.670 --> 00:38:13.476
And we call this full adder.

NOTE Confidence: 0.7899439

2b6cd093-d298-4fee-a4c9-0d057f524aeb
00:38:13.480 --> 00:38:15.808
So you see that there is a difference

NOTE Confidence: 0.7899439

27e22245-f1bb-41b5-aed0-f063d117256a
00:38:15.808 --> 00:38:19.081
between the half adder, an full adder.

NOTE Confidence: 0.7899439

3485971c-d218-4cbd-97df-aafe5e5bc40c
00:38:19.081 --> 00:38:23.680
They have other only had these two.

NOTE Confidence: 0.7899439

e68013da-eba7-4ffc-8c23-569e02ab42bd
00:38:23.680 --> 00:38:30.640
Gates X exclusive or with Y an X&Y.

NOTE Confidence: 0.7899439

cc0389bc-9c64-4856-8937-3a0747f9b349
00:38:30.640 --> 00:38:33.010
So this is the half adder.

NOTE Confidence: 0.8659722

d1b53abd-5481-4f46-8a66-a0cb516b4b89
00:38:35.210 --> 00:38:37.376
But here we have additional bits.

NOTE Confidence: 0.8659722

3e08dbc0-52c2-4dc7-89d5-a21f58132fe8
00:38:37.380 --> 00:38:39.540
So because of this additional bit,

NOTE Confidence: 0.8659722

0171527f-edf8-4cfc-8b05-6206f6f03978
00:38:39.540 --> 00:38:42.564
we have extra exclusive or and we have

NOTE Confidence: 0.8659722

18a9606b-86e4-49d1-af3b-7ff708ef5e27
00:38:42.564 --> 00:38:44.956
additional 2 and and one final or.

NOTE Confidence: 0.8620031

919ef02f-b3eb-4277-a202-f5e99ba1d9f3
00:38:47.960 --> 00:38:49.976
And now if you go to the market,

NOTE Confidence: 0.8620031

931e1d56-f020-4cd0-9d34-d510ba6edcb5
00:38:49.980 --> 00:38:52.100
you can buy full adder.

NOTE Confidence: 0.8620031

1430b826-3328-4917-aacb-c61a717159d9
00:38:52.100 --> 00:38:55.952
So now we fixed the problem of half Adder.

NOTE Confidence: 0.8620031

6c7d12eb-0b92-4d14-9966-6b7098a7a8ac
00:38:55.960 --> 00:38:59.733
Now we can add 2 bits with

NOTE Confidence: 0.8620031

9bf16d60-0cee-46fd-a76c-dbb83c51a57e
00:38:59.733 --> 00:39:02.760
additional bit from as a carry.

NOTE Confidence: 0.8620031

a8bf2e9a-5552-4768-8627-6a0ab450b78d
00:39:02.760 --> 00:39:05.624
So if I want to add 2 numbers

NOTE Confidence: 0.8620031

f49a14c7-83cb-4cec-8961-794c430fa86b
00:39:05.624 --> 00:39:08.343
that have two bits, each of them,

NOTE Confidence: 0.8620031

ae7b5092-c5b5-4d5d-8513-faccde6a3197
00:39:08.343 --> 00:39:12.138
Now I can assume that I'll go to the market.

NOTE Confidence: 0.8620031

f384d1ee-794a-478b-aff9-d038f7c09972
00:39:12.140 --> 00:39:14.010
I buy one full adder.

NOTE Confidence: 0.8321744

91e70b8e-d69b-4b62-b5b4-7251793b0e0b
00:39:16.130 --> 00:39:18.685
And also I bought another full adder.

NOTE Confidence: 0.8321744

7df76159-bc93-4cdb-a8e4-9f71134c9598
00:39:18.690 --> 00:39:20.748
So I need 2 full adders

NOTE Confidence: 0.8321744

3d3c0377-2784-42ef-a629-cb8e248740c2
00:39:20.748 --> 00:39:22.700
for the first full other.

NOTE Confidence: 0.8321744

30127206-fc2f-4e7c-b1f7-1ebb48ce080e
00:39:22.700 --> 00:39:24.446
I passed 0 for the second

NOTE Confidence: 0.8321744

fd57b22d-fa41-4590-b17f-99fb8ec388a2
00:39:24.446 --> 00:39:26.681
one I passed the carry from

NOTE Confidence: 0.8321744

8ba75e02-5275-401d-8ed3-889fa44dba85
00:39:26.681 --> 00:39:28.178
the previous calculation.

NOTE Confidence: 0.79109955

cef14cea-ab2e-4034-9fd9-7786292b9e8f
00:39:30.790 --> 00:39:32.400
The output of the first

NOTE Confidence: 0.79109955

94c412b1-8d8a-4683-a5b2-876060ab6075
00:39:32.400 --> 00:39:34.010
full adder is this one.

NOTE Confidence: 0.79109955

94dedfd1-39b2-4f12-af94-f2fe10d8b824
00:39:34.010 --> 00:39:36.566
The out of the second full adder is S2

NOTE Confidence: 0.79109955

2232079d-8e47-41e1-b90a-381cbad7d873
00:39:36.566 --> 00:39:39.152
and the final carry which go which is

NOTE Confidence: 0.79109955

5fef6f80-a5a6-4a35-b5f0-af9b7aa3b658
00:39:39.152 --> 00:39:41.740
the output of this second full adder.

NOTE Confidence: 0.79109955

4e33a4f5-3a14-4adc-a2f4-414ef105be72
00:39:41.740 --> 00:39:43.350
And here is the design.

NOTE Confidence: 0.79109955

49cbcb89-88e4-4424-ae9f-9d87c31e0b42
00:39:43.350 --> 00:39:45.822
So I basically stack two full adders and

NOTE Confidence: 0.79109955

00c9d507-b9cc-413a-baef-5ebfdccb2eba
00:39:45.822 --> 00:39:48.816
then I can do the addition of two numbers.

NOTE Confidence: 0.79109955

726d8da8-9c19-4869-8d50-17e1c1c3cca3
00:39:48.820 --> 00:39:52.060
Each of them has 2 bits.

NOTE Confidence: 0.79109955

d0af9d82-3c7b-41aa-b855-b001c04f5578
00:39:52.060 --> 00:39:55.392
XYX one Y1X 2Y2.

NOTE Confidence: 0.79109955

72c78005-07fe-4059-8ad9-884d0e8e3217
00:39:55.392 --> 00:40:00.390
And then the carry from previous.

NOTE Confidence: 0.79109955

ae1dff15-5491-42cd-b4bc-55cd2fd2a642
00:40:00.390 --> 00:40:02.655
Addition goes to the additional

NOTE Confidence: 0.79109955

077a3766-b642-4df7-96fa-efa04c1c7a4b
00:40:02.655 --> 00:40:05.490
input of the second full adder.

NOTE Confidence: 0.79109955

a4434738-6b81-4ffa-be44-1654f16286ba
00:40:05.490 --> 00:40:07.100
The first one doesn't have

NOTE Confidence: 0.79109955

cb4c24d8-d917-4c97-a910-1e3009ebfb62
00:40:07.100 --> 00:40:08.066
any previous calculation,

NOTE Confidence: 0.79109955

d14a1e4f-a309-474f-9c55-c04b79f03120
00:40:08.070 --> 00:40:11.830
so we can assume that this is 0 or for

NOTE Confidence: 0.79109955

94ce4858-d750-4839-be03-b6f7c5680889
00:40:11.931 --> 00:40:15.882
the first one we can use the half adder.

NOTE Confidence: 0.79109955

8f23fe4b-f272-4f88-9305-a93feaa2e3c8
00:40:15.890 --> 00:40:18.130
Either for the first one we can fool

NOTE Confidence: 0.79109955

18f016f7-0571-4189-a77c-a47c73119b40
00:40:18.130 --> 00:40:20.008
other with the input carry zero,

NOTE Confidence: 0.79109955

7743e9fc-51d4-4f5b-b6a3-ededa555e225
00:40:20.010 --> 00:40:22.292
or we can use the half adder

NOTE Confidence: 0.79109955

bbacd20a-5d5b-4dd6-b05d-c18429198023
00:40:22.292 --> 00:40:24.150
only for the first bit.

NOTE Confidence: 0.79109955

7ae29c87-245d-48c6-8dc1-8ec91d3e5a6c
00:40:24.150 --> 00:40:25.138
But for the other,

NOTE Confidence: 0.79109955

fb6ffeb8-f746-4c94-a007-cb80ec54f32e
00:40:25.138 --> 00:40:26.126
all the other bits,

NOTE Confidence: 0.79109955

3f735897-e9af-42a7-91b7-577a187611a5
00:40:26.130 --> 00:40:28.458
we need a Fuller.

NOTE Confidence: 0.79109955

15890251-a0eb-48d7-a9c7-321690028048
00:40:28.460 --> 00:40:31.960
So now if I ask you how can we design

NOTE Confidence: 0.79109955

3a414ac7-aa96-4e3f-9b08-8f253174b8f1
00:40:32.063 --> 00:40:35.753
an adder that is able to add 2 numbers,

NOTE Confidence: 0.79109955

101f79fb-a1e4-4b8d-a83d-7c7846a07ef7
00:40:35.760 --> 00:40:38.790
each number has three bits.

NOTE Confidence: 0.79109955

bb0754a3-1556-4e08-945a-27f35af5e105
00:40:38.790 --> 00:40:40.100
How can you design that?

NOTE Confidence: 0.87755

14b6a53d-4188-4db8-8317-0d1dcd12bc2a
00:40:45.420 --> 00:40:47.964
You design by the truth table or you

NOTE Confidence: 0.87755

a0d4b745-6489-4eb5-a39d-1d3ab382ac33
00:40:47.964 --> 00:40:51.290
go to the market and buy. Full adders

NOTE Confidence: 0.9057832

2df17c10-f31e-46a4-98ab-bf0992c401f3
00:40:55.560 --> 00:40:56.350
anybody?

NOTE Confidence: 0.49998015

7ef42a5f-ee22-4f93-a4c9-570f3f2af43f
00:41:09.060 --> 00:41:12.770
Tatiana says free full adder. Anybody else?

NOTE Confidence: 0.86028266

ad3445be-5acd-4a82-9002-3c99792ad540
00:41:19.340 --> 00:41:21.056
How about others? I mean we

NOTE Confidence: 0.86028266

e68f902b-58b1-4439-a81b-2b87a8439f7f
00:41:21.056 --> 00:41:22.880
have 35 students in the class.

NOTE Confidence: 0.7942339

e74cfa0c-a491-46c6-a0fe-b01f4e00bf48
00:41:35.550 --> 00:41:37.542
My question is this.

NOTE Confidence: 0.7942339

fb1faced-a6d8-4767-8abe-cc38d377bd2d
00:41:37.542 --> 00:41:40.530
Now that using the full adder,

NOTE Confidence: 0.7942339

55c02aa5-2b3a-4031-88ac-89369c1e24bf
00:41:40.530 --> 00:41:47.339
we can add a 3 bits when we had a 2 bits.

NOTE Confidence: 0.7942339

8e126cec-87cb-45ed-8ffe-3d0abbe22c13
00:41:47.340 --> 00:41:49.538
When we have numbers of two bits,

NOTE Confidence: 0.7942339

4ab54609-690d-4076-a570-e52579d54002
00:41:49.540 --> 00:41:51.070
for instance, the first number

NOTE Confidence: 0.7942339

7bb274dd-c0f9-415e-ae72-ed2d3742f746
00:41:51.070 --> 00:41:53.618
is 2 bits and the second #2 bits.

NOTE Confidence: 0.7942339

f38c4315-1be9-4425-9848-c6d29969e477
00:41:53.620 --> 00:41:55.884
We go to the market instead of designing

NOTE Confidence: 0.7942339

03ae9f04-a45c-49ee-91ac-c6504dc58066
00:41:55.884 --> 00:41:58.648
by the truth table and simplify them, etc.

NOTE Confidence: 0.7942339

54dd0d87-9836-498b-8d9c-09a18fc8fdd8
00:41:58.648 --> 00:42:01.969
We design will go to the market and buy 2

NOTE Confidence: 0.7942339

6446520a-7454-4557-a802-c4baa052fe85
00:42:01.969 --> 00:42:04.629
full adders and then do the calculation.

NOTE Confidence: 0.7942339

3af689c1-a699-466a-b5f1-0f166776b6e1
00:42:04.630 --> 00:42:07.894
My question is that if now we have.

NOTE Confidence: 0.7942339

9f293198-fe17-4b98-9a9b-65c525d6db57
00:42:07.900 --> 00:42:10.574
We are going to add 2 numbers.

NOTE Confidence: 0.7942339

f0190774-3564-40b0-86f6-a12c24ca8de1
00:42:10.580 --> 00:42:13.850
Each of them has three bits.

NOTE Confidence: 0.7942339

4b78370b-034a-4511-9e4e-2bfe59c4f945
00:42:13.850 --> 00:42:16.818
Should I design it by the truth table

NOTE Confidence: 0.7942339

ee993cd7-1116-47c4-aa1b-b64adc1f7c29
00:42:16.818 --> 00:42:19.990
and I put for instance the three?

NOTE Confidence: 0.7942339

4863ac10-40b7-4f7b-a801-a3fdc8989975
00:42:19.990 --> 00:42:23.014
Input variables for the X3 input

NOTE Confidence: 0.7942339

3289ccfb-bc7b-4e76-998e-bb2d7246b1e9
00:42:23.014 --> 00:42:26.872
variables for the Y and then three

NOTE Confidence: 0.7942339

49db7003-5887-4221-831c-dfc7a07dec09
00:42:26.872 --> 00:42:29.582
output variables for. Outputs or.

NOTE Confidence: 0.7942339

313cfd72-b543-4fd0-9225-aa6485477bc1
00:42:29.582 --> 00:42:32.949
I can buy full adders and to

NOTE Confidence: 0.7942339

73c7b472-a3e1-437e-ad05-49835483a9d9
00:42:32.949 --> 00:42:35.559
do their calculation.

NOTE Confidence: 0.7942339

bc223bad-60f3-4187-bf8b-25f654c8ecf2
00:42:35.560 --> 00:42:37.390
Which one is the best?

NOTE Confidence: 0.91534126

d88afd25-5d88-4e79-91c5-15f32c961475
00:42:42.340 --> 00:42:46.662
Correct, yes. So basically for any

NOTE Confidence: 0.91534126

1e067ac9-2fc4-4a10-9cdd-3b7a70099fab
00:42:46.662 --> 00:42:49.440
two binary numbers with N bits,

NOTE Confidence: 0.91534126

5d2e4914-b780-445d-aeb6-2b9c52c22901
00:42:49.440 --> 00:42:53.288
I go to the market an odd boy

NOTE Confidence: 0.91534126

618a92fd-fa22-4c4c-98bf-d59d087f5b36
00:42:53.288 --> 00:42:56.484
and full adders. For instance,

NOTE Confidence: 0.91534126

e5b7a9bc-fb75-4640-8a11-97677689f5c3
00:42:56.484 --> 00:43:00.733
here I have adding two binary numbers,

NOTE Confidence: 0.91534126

a09409a0-cedb-42ce-81f0-057d2c05b9cd
00:43:00.740 --> 00:43:06.039
each of them has a four bits.

NOTE Confidence: 0.91534126

6ab92a79-9610-4d83-a878-9b990c7e997f
00:43:06.040 --> 00:43:09.064
So I assume that instead of designed

NOTE Confidence: 0.91534126

a4f1e3aa-3986-49f0-ad4f-0a80292a87f2
00:43:09.064 --> 00:43:11.838
this adder by the truth table,

NOTE Confidence: 0.91534126

39e31689-c0c2-4d50-a00b-db3ff41136d8
00:43:11.840 --> 00:43:15.408
because if I design it by truth table,

NOTE Confidence: 0.91534126

f348086e-4719-489f-ac67-b860e04d4bf9
00:43:15.410 --> 00:43:19.169
how many variables are needed if I

NOTE Confidence: 0.91534126

ceee1a2f-b2f3-4bc0-be12-27db9ef3d5f1
00:43:19.169 --> 00:43:23.088
want to design this by truth table?

NOTE Confidence: 0.91534126

f4cde6ba-cf81-47ef-abaf-6b3d2bf1c917
00:43:23.090 --> 00:43:26.698
So if I design this by truth table.

NOTE Confidence: 0.91534126

62cd6f0c-b914-4862-8da3-dad3016e3a1e
00:43:26.700 --> 00:43:28.780
How many input I need?

NOTE Confidence: 0.91534126

b8ab6431-6ad3-4155-a491-a88cf05e46bc
00:43:28.780 --> 00:43:30.628
And how many app would I need?

NOTE Confidence: 0.86753577

237aa23c-ba35-47f8-bcc9-4d62115728f2
00:43:44.940 --> 00:43:47.613
So I want to design this problem so I

NOTE Confidence: 0.86753577

08915f97-e045-4e2d-8875-6ae54d919c5e
00:43:47.613 --> 00:43:50.246
want to do adding two binary numbers.

NOTE Confidence: 0.86753577

30c6b115-4b0b-4e13-a913-082260221bdc
00:43:50.250 --> 00:43:52.236
Each of them has four bits.

NOTE Confidence: 0.858322986666667

71e867d5-d76e-4d09-8633-2945b88d9e3b
00:43:56.960 --> 00:44:01.055
So. For the inputs I need 4

NOTE Confidence: 0.858322986666667

8aae85b9-87d9-4e13-a4be-61caef3bc583
00:44:01.055 --> 00:44:05.510
bit for the X4 bit for the Y,

NOTE Confidence: 0.858322986666667

8c712663-96ae-43e9-87c1-2cfefddc311c
00:44:05.510 --> 00:44:12.070
so becomes 8 bits also. I need.

NOTE Confidence: 0.858322986666667

69b547bf-9a7a-4cbe-a1ba-f14f04859d62
00:44:12.070 --> 00:44:14.810
4 bits for the carries.

NOTE Confidence: 0.858322986666667

c3caa57a-7bb6-4567-9d79-a473936e8d9d
00:44:14.810 --> 00:44:18.050
So then they come fee by 4 bits in

NOTE Confidence: 0.858322986666667

8aae00e0-c42f-43c9-b93b-2908894a5c56
00:44:18.050 --> 00:44:21.345
the input so it becomes 12 inputs.

NOTE Confidence: 0.858322986666667

e3294a31-3432-4575-9cc0-7866f7140393
00:44:21.350 --> 00:44:23.786
How many rows I'm going to

NOTE Confidence: 0.858322986666667

447e8ba1-5efd-49d9-916f-0d640af73379
00:44:23.786 --> 00:44:26.670
have two to the power of 12.

NOTE Confidence: 0.858322986666667

62ad91b2-9186-49cb-bded-db0ea5c1f7db
00:44:26.670 --> 00:44:28.720
That's a huge truth table.

NOTE Confidence: 0.858322986666667

6ba4a6b5-b37c-4875-961e-dfd77f65f442
00:44:28.720 --> 00:44:30.760
So I mean kind of.

NOTE Confidence: 0.858322986666667

edfe9044-f376-4c13-b724-a47f3091f366
00:44:30.760 --> 00:44:33.310
It's not actually practically possible

NOTE Confidence: 0.858322986666667

9e582fc5-989a-4bab-b14b-9669d928d9ab
00:44:33.310 --> 00:44:36.969
to design this by the truth table.

NOTE Confidence: 0.858322986666667

fac822ba-5f2c-471e-9db6-c9c050402f5a
00:44:36.970 --> 00:44:40.578
So the solution is that basically go to

NOTE Confidence: 0.858322986666667

96152bae-7a61-4051-87de-0862475cddf3
00:44:40.578 --> 00:44:44.375
the market by 4 full adders and Instagram.

NOTE Confidence: 0.858322986666667

69e517e6-e599-4d90-9126-b2068cb73bda
00:44:44.380 --> 00:44:48.076
So the first bit adding the second bit,

NOTE Confidence: 0.858322986666667

b299e94a-828c-48f0-9d71-0a3590866131
00:44:48.080 --> 00:44:50.930
adding the third Pitan 4th fourth

NOTE Confidence: 0.858322986666667

f8fc7440-8154-47dd-824b-1a10d8ec4d06
00:44:50.930 --> 00:44:54.216
bit and then the first bit there

NOTE Confidence: 0.858322986666667

d671c5cb-b1dd-499c-a86e-8f3cd6ad942d
00:44:54.216 --> 00:44:57.212
is no carry for the first bit

NOTE Confidence: 0.858322986666667

62cb5315-ba73-4f7e-abba-63bfcdeda336
00:44:57.308 --> 00:45:00.570
zero and the carrier of the first

NOTE Confidence: 0.858322986666667

da4e5093-37b1-4b6e-b6d4-91c268d60ad0
00:45:00.570 --> 00:45:04.978
full adder goes to the carrier of.

NOTE Confidence: 0.858322986666667

a5a96c36-f6f9-49ae-834b-79b3d2c60fca
00:45:04.980 --> 00:45:05.704
Second, flooder.

NOTE Confidence: 0.858322986666667

17086105-4754-4f09-8821-1a2a98428e4f
00:45:05.704 --> 00:45:07.876
The carrier of the second father

NOTE Confidence: 0.858322986666667

045613a0-037d-483d-83e4-3f212275b1c4
00:45:07.876 --> 00:45:10.249
goes to third full Adder and the

NOTE Confidence: 0.858322986666667

5055121b-1200-4f8e-95ca-a8f68c2af315
00:45:10.249 --> 00:45:12.500
carrier of the third full other goes

NOTE Confidence: 0.858322986666667

7d8761e4-93f3-4c39-9403-ca54b4cd256a
00:45:12.500 --> 00:45:14.884
to 4th letter and the carrier of the

NOTE Confidence: 0.858322986666667

05d34d81-dbf6-4827-81ed-551bdabea51d
00:45:14.890 --> 00:45:16.899
last full adder is the final carry.

NOTE Confidence: 0.75439

0e0c4bb2-713f-419c-b46d-eb3ecca2c78e
00:45:20.610 --> 00:45:23.914
If I need 5 bit adder so I

NOTE Confidence: 0.75439

301f05f6-3fb5-437f-80e2-a097a610499d
00:45:23.914 --> 00:45:26.590
buy another full adder here.

NOTE Confidence: 0.75439

979d7974-c112-4512-ba0d-82475164fa97
00:45:26.590 --> 00:45:29.208
And then I attach the last full

NOTE Confidence: 0.75439

a40d0fb8-e803-468a-9ff2-c3daf6570a87
00:45:29.208 --> 00:45:31.747
carry to the additional input of

NOTE Confidence: 0.75439

b7c8b989-c270-4e17-b9ad-7a06bb5c6985
00:45:31.747 --> 00:45:34.841
the last full adder and then the

NOTE Confidence: 0.75439

5eefe19b-8ace-4739-aaea-cee1cbb0bd2d
00:45:34.932 --> 00:45:38.210
two inputs gonna be X5. Why 5?

NOTE Confidence: 0.76529443

a903394b-01c7-4ed4-abfa-d7372c0b70cd
00:45:40.560 --> 00:45:44.934
So you see that by reusing a full adder,

NOTE Confidence: 0.76529443

c89de87e-6bcf-4277-b286-af6b41b324fb
00:45:44.940 --> 00:45:51.213
I'm able to build a N bit binary adder.

NOTE Confidence: 0.76529443

b85e7a5f-af33-4dba-bdd0-6b1f1c379f9d
00:45:51.220 --> 00:45:55.800
Here we have 4 bits, will be by full full

NOTE Confidence: 0.76529443

89b502d7-5f36-4d0e-be0b-2b306bafe466
00:45:55.800 --> 00:46:00.180
address or we have a four bit adder.

NOTE Confidence: 0.76529443

83e1c4ca-cfc4-455a-8922-95e80f10226c
00:46:00.180 --> 00:46:06.660
And always the first carry. Is 0.

NOTE Confidence: 0.76529443

d2d35350-a480-41d5-ad93-62d6efcf2d79
00:46:06.660 --> 00:46:08.976
Because there is no previous calculation.

NOTE Confidence: 0.8682967

78046d0d-0fe2-4318-b936-84fdda69e036
00:46:11.680 --> 00:46:15.056
And actually, if you go to the market,

NOTE Confidence: 0.8682967

36423e45-3330-477c-b477-2c895264880c
00:46:15.060 --> 00:46:18.245
this is the sketch or this is

NOTE Confidence: 0.8682967

474459a0-ce6b-431d-b8b5-a1cba0732a00
00:46:18.245 --> 00:46:22.120
the I mean specification or the.

NOTE Confidence: 0.8682967

0a53cd4c-f4c6-4c8a-a035-c1840e531324
00:46:22.120 --> 00:46:26.823
The fact sheet of the, uh, a chip.

NOTE Confidence: 0.8682967

e4c4b80b-5057-4999-bd3d-657d2e89cedd
00:46:26.823 --> 00:46:29.949
And you can buy for instance

NOTE Confidence: 0.8682967

b53d1aa3-083c-407a-9ab6-e438d6e0db41
00:46:29.949 --> 00:46:32.900
if 4 bit binary adder.

NOTE Confidence: 0.8682967

747660b6-fc20-4ee7-9c47-a1a8cea22879
00:46:32.900 --> 00:46:35.055
46 dollar 6 something dollar

NOTE Confidence: 0.8682967

d8a2294e-9739-46fb-8a1a-8e1ef54b3294
00:46:35.055 --> 00:46:37.710
from eBay and then you can

NOTE Confidence: 0.8682967

7247630d-2a60-4c61-8aa6-3a3810232620
00:46:37.710 --> 00:46:40.608
attach it to your circuit and do

NOTE Confidence: 0.8682967

3534a658-3dd0-4adf-b828-af3a1daae4d7
00:46:40.608 --> 00:46:42.788
the addition with four bits.

NOTE Confidence: 0.8787999

2d75c344-0377-4834-b24c-1a2e3dbee0ee
00:46:47.650 --> 00:46:49.270
This is a famous chip.

NOTE Confidence: 0.8787999

e98fca33-bc69-44f7-9c57-ff6a24ba4bf9
00:46:49.270 --> 00:46:51.178
This is the number of the

NOTE Confidence: 0.8787999

aebc260d-331b-482f-b273-7d30b3429709
00:46:51.178 --> 00:46:52.830
chip that you can buy.

NOTE Confidence: 0.8787999

efae060b-438a-4cf1-98c4-363387f76ca4
00:46:52.830 --> 00:46:57.267
One thing here is that it says fast carry.

NOTE Confidence: 0.8787999

b897c21b-4aee-4613-b7fd-8d5fca5ea369
00:46:57.270 --> 00:47:00.060
I just want to give it as a hint,

NOTE Confidence: 0.8787999

91fbde96-7bec-44b9-8c4f-cb20632240de
00:47:00.060 --> 00:47:01.920
but I won't cover it here.

NOTE Confidence: 0.8787999

8ca726fc-bb84-4348-9d90-15ec370fba67
00:47:01.920 --> 00:47:05.020
Maybe I mean if you have time I will come.

NOTE Confidence: 0.8787999

82c158cf-9aa7-4c1b-8e19-45797ca5ad9f
00:47:05.020 --> 00:47:06.496
I will cover it.

NOTE Confidence: 0.8787999

27b7b740-7207-41f4-97c2-030408f52091
00:47:06.496 --> 00:47:09.625
The thing is that if you look at

NOTE Confidence: 0.8787999

2046b2b4-944e-4677-8f16-d031360244b0
00:47:09.625 --> 00:47:12.495
it closely to the four bit adder.

NOTE Confidence: 0.8787999

9fbadae1-964a-409b-8011-9e92bd5bcb4a
00:47:12.500 --> 00:47:14.992
Each full adder must be done first

NOTE Confidence: 0.8787999

bbd613e2-db96-40b0-a4c1-698eaafb9aad
00:47:14.992 --> 00:47:17.609
in order to generate the carry.

NOTE Confidence: 0.8787999

7d143503-5e32-4c60-8a17-720a429b6459
00:47:17.610 --> 00:47:19.570
This is the cherry one.

NOTE Confidence: 0.8787999

bf00d7e9-7912-44fd-9d72-8b49b71fc886
00:47:19.570 --> 00:47:21.873
As you can see here and then

NOTE Confidence: 0.8787999

2ce8f437-622b-429d-a089-53251f281510
00:47:21.873 --> 00:47:24.637
give it to the second full adder

NOTE Confidence: 0.8787999

af1e5958-c7a1-4b88-b139-2489b1f52382
00:47:24.637 --> 00:47:27.169
and then this should be done

NOTE Confidence: 0.8787999

59de47d0-2fd1-4caf-aa88-b0731bd4bc79
00:47:27.256 --> 00:47:29.788
in order to generate the next.

NOTE Confidence: 0.8787999

48ffe95d-d74d-49c7-a27e-99f9567740b4
00:47:29.790 --> 00:47:31.113
 Carry And etc. 

NOTE Confidence: 0.8787999

af46b0e7-3798-4a4b-a475-e5a80ec15488
00:47:31.113 --> 00:47:34.710
So how many times or how many time

NOTE Confidence: 0.8787999

c18944ce-7bd9-4908-980b-2b9789a5411b
00:47:34.710 --> 00:47:37.998
period or time is spot I have to

NOTE Confidence: 0.8787999

61004458-8fb4-41b1-9884-0a53524f3978
00:47:37.998 --> 00:47:41.160
wait until I see the last carry.

NOTE Confidence: 0.8787999

c7d00d9c-dffe-496d-8988-fe88d494c3e4
00:47:41.160 --> 00:47:44.226
So if you can them so first

NOTE Confidence: 0.8787999

2a0f3b3c-8f53-4cf9-8f75-6529018122a3
00:47:44.226 --> 00:47:45.920
calculations second calculation 3rd,

NOTE Confidence: 0.8787999

1a91746c-b5af-459f-8cae-fc8b944f766b
00:47:45.920 --> 00:47:47.632
and then fourth calculation.

NOTE Confidence: 0.8787999

4d5830a7-31cc-4915-ac50-309b1dac3b87
00:47:47.632 --> 00:47:51.576
So I have to wait for 4th four time

NOTE Confidence: 0.8787999

177ae465-c598-4c68-8264-1ada9dbb0653
00:47:51.576 --> 00:47:54.144
interval to see the last carry.

NOTE Confidence: 0.8787999

99e6b5fd-e93d-489b-9e92-b42d7445340b
00:47:54.150 --> 00:47:58.830
Then I'm sure that the result is stable.

NOTE Confidence: 0.8787999

32fbb841-6197-46c5-9535-c9fc07db050b
00:47:58.830 --> 00:48:00.640
Without seeing the last Carrie,

NOTE Confidence: 0.8787999

52913716-6676-466f-87b4-1d3c72b2a705
00:48:00.640 --> 00:48:03.536
I have to still see what is S4,

NOTE Confidence: 0.8787999

5774d1cc-bc89-48d7-a0bd-c2cba48ba2c9
00:48:03.540 --> 00:48:05.706
what is the X3 and etc.

NOTE Confidence: 0.8787999

632b295a-074e-400f-933d-9ee080388386
00:48:05.710 --> 00:48:07.992
So if these full others are is

NOTE Confidence: 0.8787999

7176dbcd-c9c8-46c5-bfd8-b4f17843b687
00:48:07.992 --> 00:48:10.529
slow I have to wait a lot of

NOTE Confidence: 0.8787999

f40b9c43-295b-4b93-83e7-bae987a0b573
00:48:10.529 --> 00:48:12.592
time to see the final results

NOTE Confidence: 0.8787999

67ddf5d5-5d64-451d-ac43-9abc0077a949
00:48:12.592 --> 00:48:15.117
as the correct reliable result.

NOTE Confidence: 0.8787999

e0fa286b-5e2d-4ea7-97c7-e61cb0844042
00:48:15.120 --> 00:48:17.106
But if these are fast as

NOTE Confidence: 0.8787999

fdb0465a-f530-46b1-ae19-091d728218c5
00:48:17.106 --> 00:48:19.100
we said in this course,

NOTE Confidence: 0.8787999

83df66a0-3650-403e-b50c-d1d809975de4
00:48:19.100 --> 00:48:22.358
 we assume that there is no delay zero delay

NOTE Confidence: 0.8787999

6d41d5bd-b61c-4508-9621-7fb9c2c064c0
00:48:22.360 --> 00:48:25.636
So when we provide the inputs to the full

NOTE Confidence: 0.8787999

3c49773a-4c19-4a93-a3c8-8f08771a61fa
00:48:25.636 --> 00:48:28.509
adders I can see right away the output.

NOTE Confidence: 0.8787999

d1b73bb6-e2f8-4492-be96-ea980c5c5846
00:48:28.510 --> 00:48:29.866
But in in reality.

NOTE Confidence: 0.8787999

70fb5e66-d188-49cb-bb04-03cf6fa2bb6a
00:48:29.866 --> 00:48:32.370
There is a delay for each gate.

NOTE Confidence: 0.8787999

cd28224b-e37d-45c7-b075-0d29b34500dd
00:48:32.370 --> 00:48:33.273
As a result,

NOTE Confidence: 0.8787999

37246880-0da2-488a-b2aa-78dfe629afa1
00:48:33.273 --> 00:48:35.380
I have to wait up until these

NOTE Confidence: 0.8787999

a53c8910-bc78-4910-a61a-be02a1a760c1
00:48:35.457 --> 00:48:37.563
carry generated and then give it

NOTE Confidence: 0.8787999

685d4e14-c866-4d9e-be5f-9452eccfa128
00:48:37.563 --> 00:48:39.980
to the next full other an etc.

NOTE Confidence: 0.8787999

ddabe469-933c-4d8e-930f-a220d4c498d3
00:48:39.980 --> 00:48:42.480
Up until the last carrier.

NOTE Confidence: 0.8787999

94992e0e-ff4a-4444-a62f-ad65a690d8fb
00:48:42.480 --> 00:48:45.504
If I have N bit full adder,

NOTE Confidence: 0.8787999

d904f53c-6f60-4935-80a6-c94476265443
00:48:45.510 --> 00:48:48.750
I have waited for end times in order

NOTE Confidence: 0.8787999

7a12c322-7f49-4169-8802-b1ceeb03d1f2
00:48:48.750 --> 00:48:52.143
to give the full address to generate

NOTE Confidence: 0.8787999

e84ea29b-c104-4609-92e8-439d28670de1
00:48:52.143 --> 00:48:55.164
the carries and then give give

NOTE Confidence: 0.8787999

59c6f322-eabb-4dfa-b973-deea1acb6252
00:48:55.164 --> 00:48:58.223
the carry to the next full other.

NOTE Confidence: 0.8787999

f8482aa2-f980-47fb-8692-5ad3782158e9
00:48:58.230 --> 00:49:02.108
And finally, we see the final result.

NOTE Confidence: 0.8787999

979091d3-ac91-4de4-b148-2f23c3e96172
00:49:02.110 --> 00:49:04.637
That's why they say that fast carry.

NOTE Confidence: 0.84367156

d8ff9dd5-196d-43e6-a6d5-449fa7354af3
00:49:08.490 --> 00:49:11.406
So far we said that we have N bit

NOTE Confidence: 0.84367156

c2a16825-a891-4f2f-a1f0-ad74646d360a
00:49:11.406 --> 00:49:14.187
adder but we haven't discussed that

NOTE Confidence: 0.84367156

0a129fc5-e8d1-4b90-a30b-9d4a37a5645e
00:49:14.187 --> 00:49:17.390
these numbers are signed or unsigned.

NOTE Confidence: 0.84367156

9ff4c68b-24bc-47c0-a57c-941f7ae365c2
00:49:17.390 --> 00:49:19.945
I leave it for you to think

NOTE Confidence: 0.84367156

2d99816b-39eb-4f2d-8666-e06a83e8c830
00:49:19.945 --> 00:49:22.030
about that at home that.

NOTE Confidence: 0.84367156

7966ac6a-7d3b-4ec9-b136-daeb7e58a019
00:49:22.030 --> 00:49:24.844
Does it matter that we think about

NOTE Confidence: 0.84367156

7d91ad11-156b-47c2-bfee-d412cc21b39b
00:49:24.844 --> 00:49:27.832
whether the given number are signed or

NOTE Confidence: 0.84367156

78da6b4a-8c99-4f10-b7b0-0f0dd44cb825
00:49:27.832 --> 00:49:30.930
unsigned when we are designing the other?

NOTE Confidence: 0.84367156

2e0ccc66-5e01-4f34-a1d5-34209106801c
00:49:30.930 --> 00:49:34.298
Think about that, and the answer is no,

NOTE Confidence: 0.84367156

398e888f-55c4-416c-9df3-def839f721b5
00:49:34.300 --> 00:49:35.428
it doesn't matter,

NOTE Confidence: 0.84367156

c3ba700b-2247-4665-8984-7aebf2140543
00:49:35.428 --> 00:49:38.060
because sign and unsigned numbers in binary

NOTE Confidence: 0.84367156

15f7bb2d-ff8a-4a1e-80a6-13de312f04ef
00:49:38.122 --> 00:49:40.607
systems are basically the interpretation,

NOTE Confidence: 0.84367156

48d1a104-529a-47b7-ac21-a6643957ea3b
00:49:40.610 --> 00:49:42.238
not the actual bits.

NOTE Confidence: 0.84367156

b50415c8-1631-470f-a4ab-70bbc60fddd0
00:49:42.238 --> 00:49:44.273
So for the binary addition

NOTE Confidence: 0.84367156

da4a1362-7032-498b-9e80-1dfd7855e7fe
00:49:44.273 --> 00:49:46.088
they just do addition.

NOTE Confidence: 0.84367156

7a28d162-9550-4986-bf93-d11e50fd9064
00:49:46.090 --> 00:49:48.406
They don't have an interpretation of

NOTE Confidence: 0.84367156

52f6f53b-cdb8-494f-97b1-a59d634031a8
00:49:48.406 --> 00:49:51.558
the numbers as a positive or negative.

NOTE Confidence: 0.84367156

07b1bd74-46dd-4503-a8c4-bd232e8abee9
00:49:51.560 --> 00:49:54.283
This Is Us that we put another

NOTE Confidence: 0.84367156

d3873b26-1519-4dc0-a780-93e40be2073b
00:49:54.283 --> 00:49:56.190
convention on the numbers,

NOTE Confidence: 0.84367156

bb852a87-ede9-42ac-91bb-cca73283bcad
00:49:56.190 --> 00:50:00.852
but you can think about that and you can.

NOTE Confidence: 0.84367156

728f6291-d19d-4d96-adf5-0b90fb14d579
00:50:00.860 --> 00:50:02.735
Try adding two unsigned numbers

NOTE Confidence: 0.84367156

dea0b4bd-acd6-4e40-9822-42e8d8104e6e
00:50:02.735 --> 00:50:04.610
or sign numbers with this

NOTE Confidence: 0.84367156

e97281f9-09db-4288-aa09-56131e2f8784
00:50:04.684 --> 00:50:06.529
design and see what happens.

NOTE Confidence: 0.8555177

772d5a43-eaf6-45fc-8c9f-13277a9e976c
00:50:09.920 --> 00:50:12.878
The next unit after the addition

NOTE Confidence: 0.8555177

b636edd7-06e4-479b-86ac-15a77fc48f1d
00:50:12.878 --> 00:50:15.340
is very trivial, the subtraction.

NOTE Confidence: 0.80745906

6dd7d570-802b-4e68-b43c-fd4b08792fe2
00:50:19.270 --> 00:50:21.495
All back with your questions

NOTE Confidence: 0.80745906

e9404c43-b364-49f5-b7bf-5319dea73a2a
00:50:21.495 --> 00:50:23.275
or keep your questions.

NOTE Confidence: 0.80745906

cfc6a35c-234b-4ac6-80b2-f56794678bde
00:50:23.280 --> 00:50:26.136
I mean in the queue I'll be back

NOTE Confidence: 0.80745906

6995922c-fee5-4e90-844a-b144a91a1e7f
00:50:26.136 --> 00:50:28.640
with your questions questions,

NOTE Confidence: 0.80745906

986e3854-b7b2-4298-9cc2-80716c89ef33
00:50:28.640 --> 00:50:31.755
yeah when I'm done with this subtracted.

NOTE Confidence: 0.80745906

8551b12e-e341-4c37-a683-2d50571a8f4c
00:50:31.760 --> 00:50:34.436
So now let's move to the

NOTE Confidence: 0.80745906

a69ccf4f-1a1c-497e-8252-7ed9508a71a6
00:50:34.436 --> 00:50:36.220
subtracter after the addition.

NOTE Confidence: 0.90913755

ebdd2cba-fc29-45e5-aa28-5eed2e4a1d5d
00:50:38.300 --> 00:50:42.132
We already know how we can do this

NOTE Confidence: 0.90913755

d1efce4c-6299-4f24-82d6-dfd9f6ba27e5
00:50:42.132 --> 00:50:46.030
subtraction in binary system in an easy way.

NOTE Confidence: 0.90913755

b1450bc5-7b06-4961-b563-d0a9fc4845b1
00:50:46.030 --> 00:50:48.070
When we have the subtraction,

NOTE Confidence: 0.90913755

c8279da7-2d4c-425f-bc1f-26b42a7d1edf
00:50:48.070 --> 00:50:50.408
we said that there is a possibility

NOTE Confidence: 0.90913755

d87266a5-9e1f-4d98-8a73-15d3628eb6ba
00:50:50.408 --> 00:50:52.774
that we have in negative numbers

NOTE Confidence: 0.90913755

c5724f81-23bf-4f95-81a6-10ecbacd8e87
00:50:52.774 --> 00:50:54.929
and we introduced two systems

NOTE Confidence: 0.90913755

1d9d2cdf-be0c-40b7-96e0-125d77bfada5
00:50:54.929 --> 00:50:57.049
to represent negative numbers,

NOTE Confidence: 0.90913755

9d721724-c8b5-4e04-a17e-da340c2c8956
00:50:57.050 --> 00:50:59.090
sign magnitude and twos compliment,

NOTE Confidence: 0.90913755

42afd26d-0e09-4a0b-b79e-1d844cec9b3f
00:50:59.090 --> 00:51:01.624
and we said that I believe that

NOTE Confidence: 0.90913755

69778213-e212-4b37-adb6-c0dbc0fad354
00:51:01.624 --> 00:51:03.979
because of the lab assignment,

NOTE Confidence: 0.90913755

908dbb97-4cf8-4e59-913f-7e415cc3a42e
00:51:03.980 --> 00:51:06.644
you know that the sign magnitude is a

NOTE Confidence: 0.90913755

448a59e5-f7e6-4849-b022-5d79e7224006
00:51:06.644 --> 00:51:09.263
little bit hard to do this calculation

NOTE Confidence: 0.90913755

51fbf3c2-5c9c-4b7a-8821-52ab28b68e66
00:51:09.263 --> 00:51:12.213
and twos complement is the most easiest

NOTE Confidence: 0.90913755

7c86dacb-110c-43b6-96ce-7a5b1bef345b
00:51:12.213 --> 00:51:15.213
assistant that can do the calculation

NOTE Confidence: 0.90913755

8b0e9f8b-9529-4c4c-9ea2-a7bbcae15042
00:51:15.213 --> 00:51:16.606
representing negative numbers.

NOTE Confidence: 0.90913755

1e3f4cd0-fbac-4767-b004-ae50d97494d8
00:51:16.606 --> 00:51:20.080
So now I'm going to use the we want

NOTE Confidence: 0.90913755

a0e786b2-789e-4dea-9cc9-980029e5d546
00:51:20.172 --> 00:51:23.070
to build or design is subtracter,

NOTE Confidence: 0.90913755

888345dc-d439-4b61-970c-cfce6052a371
00:51:23.070 --> 00:51:25.450
so we have the option to choose

NOTE Confidence: 0.90913755

0fd9b70f-f6b6-428c-8166-dd34e73b5bab
00:51:25.450 --> 00:51:27.730
sign magnitude or Two's complement.

NOTE Confidence: 0.90913755

98089026-8820-4265-ac4f-6dbd01f6d0cd
00:51:27.730 --> 00:51:30.460
So we go with the easiest one.

NOTE Confidence: 0.90913755

029d3732-54f4-4a24-8656-2fc53c838966
00:51:30.460 --> 00:51:31.752
So the two complement.

NOTE Confidence: 0.90913755

ece88515-e390-4544-8da9-196f4978807e
00:51:31.752 --> 00:51:34.196
So we want to design A circuit

NOTE Confidence: 0.90913755

8544c442-b8d3-45d6-af50-70f7d6261d40
00:51:34.196 --> 00:51:36.782
that does the subtraction in twos

NOTE Confidence: 0.90913755

68c9f2f2-8ef5-48c8-a84c-d81f2e2c66a6
00:51:36.782 --> 00:51:39.744
complement and now you see the nice

NOTE Confidence: 0.90913755

c4684414-9da7-4ca0-b1f1-6f578bac125f
00:51:39.744 --> 00:51:41.739
property of the Two's complement,

NOTE Confidence: 0.90913755

ab4156fb-4dcb-4f66-a15f-99c3ed3ed10a
00:51:41.740 --> 00:51:44.323
not only you already saw the how

NOTE Confidence: 0.90913755

0d64e9f6-4705-4121-8b4d-a1013d30a516
00:51:44.323 --> 00:51:47.666
easy it is to do the calculation in.

NOTE Confidence: 0.90913755

a26502ab-ee00-4323-bb78-161b892dfaba
00:51:47.670 --> 00:51:50.610
Whose compliment now you see that?

NOTE Confidence: 0.90913755

7d180676-648e-4748-85e6-0d69c84beab3
00:51:50.610 --> 00:51:54.058
It is also very easy to design the

NOTE Confidence: 0.90913755

b9b34f79-2af3-4843-8765-1cfaa57a80cf
00:51:54.058 --> 00:51:57.038
actual circuit to do this subtraction.

NOTE Confidence: 0.90913755

4e6c2345-c8ae-41f5-becb-a7421c21b2d2
00:51:57.040 --> 00:52:00.082
So we already knew that subtraction

NOTE Confidence: 0.90913755

521aa34d-e501-49a4-9be1-9055e553b01a
00:52:00.082 --> 00:52:01.603
in Two's complement.

NOTE Confidence: 0.90913755

4d639d5a-004d-4fcc-b9fd-f3001d07d429
00:52:01.610 --> 00:52:05.578
Is basically if you have two numbers X&Y,

NOTE Confidence: 0.90913755

0a9a3b2d-a361-4081-9c89-04cb2c074dfe
00:52:05.580 --> 00:52:07.560
each has N bits.

NOTE Confidence: 0.90913755

d30f8ad4-8a32-40f2-8de4-365e6fd7c57e
00:52:07.560 --> 00:52:10.534
For instance, the first 112 N,

NOTE Confidence: 0.90913755

238923ef-cd26-4070-8286-f27186ccfc8b
00:52:10.534 --> 00:52:16.648
the second one is this, so X -- Y.

NOTE Confidence: 0.90913755

5e49eb04-415b-40c1-acd7-d37202fa8e71
00:52:16.650 --> 00:52:19.398
It is equal to addition with

NOTE Confidence: 0.90913755

d7d2e6d7-d8f5-4313-ad2f-c4c1f03eeae9
00:52:19.398 --> 00:52:20.314
Two's complement,

NOTE Confidence: 0.90913755

fff1a725-cd70-4f39-92d6-bce04e71fb43
00:52:20.320 --> 00:52:24.064
so X -- y is equal to X plus

NOTE Confidence: 0.90913755

f83f9838-c529-4786-abfc-07b3023e8274
00:52:24.064 --> 00:52:27.470
the Two's complement of Y.

NOTE Confidence: 0.90913755

02f9b077-1d8a-484a-a614-802cae65cd94
00:52:27.470 --> 00:52:29.066
Already know that.

NOTE Confidence: 0.90913755

1d3ca7cd-4034-4dbc-ad78-3fa98ade36ef
00:52:29.066 --> 00:52:32.790
And the Two's complement of a binary

NOTE Confidence: 0.90913755

e128e17d-2ce8-4b77-982d-c72bccde9440
00:52:32.895 --> 00:52:36.033
number is equal to 1's complement

NOTE Confidence: 0.90913755

e0d7e228-fc15-4594-8e9e-3f48476ad9f1
00:52:36.033 --> 00:52:39.580
of the binary number plus one unit.

NOTE Confidence: 0.90913755

142799ba-594d-4fa5-a14a-daaa37a68b09
00:52:39.580 --> 00:52:42.510
Again, this is the lab, I mean two or three.

NOTE Confidence: 0.90913755

1aa91a45-ad3c-49ab-84e3-7ef39f7d6c3d
00:52:42.510 --> 00:52:46.017
You already knew how to do that.

NOTE Confidence: 0.90913755

5a9464d1-0214-49a8-97ce-be92c9906628
00:52:46.020 --> 00:52:49.030
And the one's complement of a binary

NOTE Confidence: 0.90913755

dcd5c4ab-8c61-435b-b2f3-e19bb9e437cd
00:52:49.030 --> 00:52:52.319
number is basically is the nut of each digit.

NOTE Confidence: 0.90913755

ef101004-a698-48f5-906a-34712e5b36b2
00:52:52.320 --> 00:52:55.659
So you can simply do the not.

NOTE Confidence: 0.90913755

270b5960-487d-4b3b-bfd2-fc014277acc9
00:52:55.660 --> 00:53:00.208
Bitwise on each digit of Y.

NOTE Confidence: 0.90913755

4372230b-b3dc-43c0-ba00-f16a5cc6dab6
00:53:00.210 --> 00:53:02.970
And then add 1 unit.

NOTE Confidence: 0.90913755

1db81d07-04c7-4d0a-9d0d-8e59ff61b79d
00:53:02.970 --> 00:53:06.050
So you see that in Two's complement there

NOTE Confidence: 0.90913755

8b598b2c-11b0-4152-a2a3-2cf087c4b664
00:53:06.050 --> 00:53:09.846
is no need for additional digital circuit.

NOTE Confidence: 0.90913755

7f2f2516-9d08-4366-8277-cf4ef252147d
00:53:09.850 --> 00:53:14.674
It is possible to reuse the other because

NOTE Confidence: 0.90913755

03874da7-cf7b-488d-81ba-a552a2d0e766
00:53:14.674 --> 00:53:17.790
the subtraction becomes addition.

NOTE Confidence: 0.90913755

38cde9d3-35b7-4802-b382-95086698b684
00:53:17.790 --> 00:53:21.428
So basically, the X -- Y is equal

NOTE Confidence: 0.90913755

7fee5aca-516b-4ba9-bb5c-322a9e9edbf9
00:53:21.428 --> 00:53:25.700
to X + y bitwise not plus one unit,

NOTE Confidence: 0.90913755

a8dd30d3-e0e3-4820-9011-7cd0899a95f4
00:53:25.700 --> 00:53:29.316
and this one unit could be the first

NOTE Confidence: 0.90913755

ce53d8a0-b887-478a-994d-b9b758339219
00:53:29.316 --> 00:53:33.600
carry that we already assumed that this is 0.

NOTE Confidence: 0.90913755

85cff440-dbff-4f72-a414-96896fe217fa
00:53:33.600 --> 00:53:38.442
Now we make it 1 in order to add

NOTE Confidence: 0.90913755

bd2f91ae-e685-4a17-93d4-95a0bd09068e
00:53:38.442 --> 00:53:41.599
with another bit of 1.

NOTE Confidence: 0.90913755

a84c5176-3e90-4128-85e5-1e5ac40dbe53
00:53:41.600 --> 00:53:46.380
And this is the reuse of the four bit adder,

NOTE Confidence: 0.90913755

f94b9e76-1e9d-4fc1-b315-b6dc8ec188ff
00:53:46.380 --> 00:53:49.614
but this time because we input

NOTE Confidence: 0.90913755

a76ecbf8-c253-455a-9eb8-696b296307d3
00:53:49.614 --> 00:53:52.580
one in the input carry.

NOTE Confidence: 0.90913755

56e91654-7f2a-4dc6-ae4a-2ffb6638b5fe
00:53:52.580 --> 00:53:55.973
And also we input the nut of the Y,

NOTE Confidence: 0.90913755

c8945a7f-aa59-45ac-bf8b-9699229bc15c
00:53:55.980 --> 00:54:00.093
so the not of the Y becomes ones complement.

NOTE Confidence: 0.90913755

97259cb9-c579-4b19-88d3-d067d3334ce0
00:54:00.100 --> 00:54:03.616
This is XX.

NOTE Confidence: 0.90913755

63a40856-377f-4cc1-a3b9-a30d8201b7bc
00:54:03.616 --> 00:54:06.455
Plus one's complement plus

NOTE Confidence: 0.90913755

90f9515b-632b-4b28-a640-ba0fc7fee29e
00:54:06.455 --> 00:54:09.775
one which is X -- Y.

NOTE Confidence: 0.90913755

75532957-06d9-46ca-8760-0f8d6f053ea9
00:54:09.775 --> 00:54:13.045
Based on the Two's complement system.

NOTE Confidence: 0.90913755

332312e6-d2e1-41d2-87f2-faf13c38dff9
00:54:13.050 --> 00:54:16.434
So if we input the nut of the Y

NOTE Confidence: 0.90913755

799ed3c0-b013-4a9e-a333-1d2ebf425f80
00:54:16.434 --> 00:54:20.139
and then make the input carry one,

NOTE Confidence: 0.90913755

94b6aaf5-833f-418e-a8ec-29e7729bd222
00:54:20.140 --> 00:54:23.280
we are doing X.

NOTE Confidence: 0.90913755

b41dbf31-ed0e-4dca-946d-d1e33bb994aa
00:54:23.280 --> 00:54:27.205
Plus one's complement of Y.

NOTE Confidence: 0.90913755

eb8e00c0-667e-4eed-b3ec-d9e2c5ab15cd
00:54:27.210 --> 00:54:31.921
Plus one unit which is equal to X -- Y.

NOTE Confidence: 0.90913755

0337bf08-ddab-4a7a-b34c-9b85236942ed
00:54:31.921 --> 00:54:34.747
So this addition acts like subtraction.

NOTE Confidence: 0.92415905

af76fce1-dbb5-4d17-b61e-ff1c779f9bc7
00:54:37.780 --> 00:54:41.236
So whenever the input is 0.

NOTE Confidence: 0.92415905

720e6d9f-0208-492f-bc1e-07d7ba7722a0
00:54:41.240 --> 00:54:43.080
And the second, uh,

NOTE Confidence: 0.92415905

1a269a6a-f743-43d3-848d-f6dcfbf48b57
00:54:43.080 --> 00:54:45.468
input, the Y is itself.

NOTE Confidence: 0.92415905

1549ad85-79c7-4ee4-927c-ff26bf782fd4
00:54:45.468 --> 00:54:49.039
It means that X + y + 0.

NOTE Confidence: 0.92415905

1b64fcf4-959a-4046-ae1e-0d2474e71407
00:54:49.040 --> 00:54:51.340
So this is the addition.

NOTE Confidence: 0.80480665

0dafcb79-84af-4bd0-842b-2ba30a5a1764
00:54:54.100 --> 00:54:58.146
Whenever we input one an instead of,

NOTE Confidence: 0.80480665

e9b5ab9c-c209-4bf8-bb21-9517738d807b
00:54:58.150 --> 00:55:01.040
why we input Y bar,

NOTE Confidence: 0.80480665

efb06029-d9d9-4f6a-9c13-04ef1661d38b
00:55:01.040 --> 00:55:04.740
it acts like subtraction.

NOTE Confidence: 0.80480665

6c6a002e-5ca7-405d-ad0f-e2ee4414e4d4
00:55:04.740 --> 00:55:05.892
So isn't it nice?

NOTE Confidence: 0.80480665

db72320c-1e98-4da8-8892-961757ee8243
00:55:05.892 --> 00:55:07.910
I mean, you have just one adder,

NOTE Confidence: 0.80480665

e1cc8ba3-7c0d-4f09-b50e-a77ec46cf758
00:55:07.910 --> 00:55:10.854
you go to the market and you buy.

NOTE Confidence: 0.80480665

dfbc0432-cb82-440b-9784-ed1dcbdb02ba
00:55:10.860 --> 00:55:13.408
Just 4 bit other and not only

NOTE Confidence: 0.80480665

6ac75448-74c4-4916-b933-f92ac500e4f9
00:55:13.408 --> 00:55:15.780
you can do the addition,

NOTE Confidence: 0.80480665

d101e0ef-5545-4eb7-b703-c14df2b677ac
00:55:15.780 --> 00:55:17.830
you can do the subtraction,

NOTE Confidence: 0.80480665

3c2a5a0c-f238-4943-ae69-588330b8afd9
00:55:17.830 --> 00:55:20.255
but just providing the proper

NOTE Confidence: 0.80480665

0d313819-8ff7-409c-a876-113535caf8fc
00:55:20.255 --> 00:55:22.680
value in the input carry.

NOTE Confidence: 0.80480665

a4f682b3-8cd5-46fa-ad22-c5e0c8cfc571
00:55:22.680 --> 00:55:24.978
Anne not of this second number.

NOTE Confidence: 0.8844597

8d48b19d-dba6-4db2-9b60-3f5b3e509a46
00:55:29.730 --> 00:55:32.546
One thing is that what is the gate

NOTE Confidence: 0.8844597

9a504a78-2899-4d90-b1d9-6c7ab8ae32cb
00:55:32.546 --> 00:55:35.454
that if you can see here if the

NOTE Confidence: 0.8844597

9b88167f-733b-46ce-9312-9e0c631dc17f
00:55:35.454 --> 00:55:38.130
input of the carry is 0 addition?

NOTE Confidence: 0.8844597

01382c2e-d13f-4be3-96c3-59244746fa3c
00:55:38.130 --> 00:55:42.750
If it is one subtraction with not.

NOTE Confidence: 0.8844597

e340d4b7-d963-4069-82c6-144f09b9a0c1
00:55:42.750 --> 00:55:46.890
So again 0 addition.

NOTE Confidence: 0.8844597

be3413c0-4d02-4f9d-aadb-c1ff89def01d
00:55:46.890 --> 00:55:49.120
X&Y is the actual bits

NOTE Confidence: 0.8844597

50052c31-6173-490e-8ff9-593a604a29e2
00:55:49.120 --> 00:55:51.350
when it is 1 subtraction,

NOTE Confidence: 0.8844597

23ccaf45-72bc-4040-8f14-efc46d9a54f2
00:55:51.350 --> 00:55:55.529
Y becomes not of the origonal bit.

NOTE Confidence: 0.8844597

cae73c58-6a16-4c46-ab84-b02df0357288
00:55:55.530 --> 00:55:58.338
So what gates acts like this?

NOTE Confidence: 0.86316264

ea19744b-b9cd-4db0-849b-3831b56e0661
00:56:00.590 --> 00:56:03.596
What gate I can put here that if I

NOTE Confidence: 0.86316264

026ea253-06c9-4eb4-8051-52a304ad089c
00:56:03.596 --> 00:56:07.008
do the gates on the input with zero?

NOTE Confidence: 0.86316264

89a23d33-ca87-4f08-92fa-25f74726b521
00:56:07.010 --> 00:56:08.370
It has no effect,

NOTE Confidence: 0.86316264

8ce41e8a-96db-497f-90d4-6025ef2176d7
00:56:08.370 --> 00:56:11.290
but if I do that gate with one,

NOTE Confidence: 0.86316264

927b3fe8-a45c-4800-8d37-30b3a638b72b
00:56:11.290 --> 00:56:14.890
it makes it not. Why I need this?

NOTE Confidence: 0.86316264

a3fab7b2-11a8-4bb4-b73b-6d21a78465d3
00:56:14.890 --> 00:56:17.459
Because I can put that gate here.

NOTE Confidence: 0.86316264

62554d85-06a2-484f-a178-0d921372fe23
00:56:17.460 --> 00:56:20.024
If the input is 0, no effect.

NOTE Confidence: 0.86316264

dc43440e-1929-4796-92da-6811c4fe56ce
00:56:20.024 --> 00:56:21.859
If the input is 1,

NOTE Confidence: 0.86316264

558f6416-04db-4ef3-b244-15607de01961
00:56:21.860 --> 00:56:24.056
not only makes the carry one,

NOTE Confidence: 0.86316264

2d42bf59-cb61-4370-a157-dfa97c31e0de
00:56:24.060 --> 00:56:25.900
but also it wants to.

NOTE Confidence: 0.86316264

a533fc13-fcbf-4e69-a9da-c95cf452289d
00:56:25.900 --> 00:56:31.220
I want to make the input of the why not?

NOTE Confidence: 0.86316264

dac59750-175c-45cb-a4a2-02e0d5b1f170
00:56:31.220 --> 00:56:32.606
What would be the gate here?

NOTE Confidence: 0.7031361

7b44993f-6f6c-4a9f-a553-92bec43f2423
00:56:38.730 --> 00:56:43.370
So if you put NAND so Nat is and not.

NOTE Confidence: 0.7031361

5bdea387-7d43-4dfc-82b9-1431a94fe255
00:56:43.370 --> 00:56:47.912
So if I put a. And and zero,

NOTE Confidence: 0.7031361

319580ac-7ebe-46d6-bbdc-c7a16bc9e0cb
00:56:47.912 --> 00:56:51.370
so A-90 is equal to A and

NOTE Confidence: 0.7031361

fc10a248-933c-44e5-8b84-8ed192a4231e
00:56:51.497 --> 00:56:54.787
zero followed by the nuts.

NOTE Confidence: 0.7031361

dd7e2f71-4a53-48e4-bcd0-429422ab6264
00:56:54.790 --> 00:56:58.340
So if I put this if a is zero 0

NOTE Confidence: 0.7031361

02239a60-229a-4a1a-a91f-0e0ebdf66d13
00:56:58.454 --> 00:57:01.838
+ 0 and 0 is zero followed by

NOTE Confidence: 0.7031361

87d49621-7ea7-4515-ab36-548f474a6336
00:57:01.838 --> 00:57:05.484
the not becomes one. But a is 0.

NOTE Confidence: 0.7031361

439bb5d5-1073-40af-b5c5-ef4205bacd1b
00:57:05.484 --> 00:57:08.342
So I cannot use that NAND is not

NOTE Confidence: 0.7031361

2483ff04-ca48-4f4e-b8b6-e82dc6da33e4
00:57:08.342 --> 00:57:11.177
correct because if you put NAND here

NOTE Confidence: 0.7031361

c68d9817-fffa-42d2-a058-22d6a4ae0019
00:57:11.177 --> 00:57:14.586
an A is 0 the output gonna be a bar.

NOTE Confidence: 0.77582663

058c4136-fad1-4050-aad8-ac671b981cb5
00:57:17.390 --> 00:57:20.346
Any other gates? Actually,

NOTE Confidence: 0.77582663

2f7f6c17-c655-4c58-8a06-e18b10410173
00:57:20.346 --> 00:57:23.538
that was the question in the meter.

NOTE Confidence: 0.77582663

0ac1f6a8-8e42-404e-ab63-304d7ad5725e
00:57:23.540 --> 00:57:26.781
I need the gate that the identity

NOTE Confidence: 0.77582663

17e3700e-1c9d-4376-90f0-7eee34c1b2d9
00:57:26.781 --> 00:57:29.558
bits for that gate is zero.

NOTE Confidence: 0.77582663

99dc9192-24cf-40e1-9e1a-76675ae3b311
00:57:29.560 --> 00:57:32.794
What gate has the identity element 0?

NOTE Confidence: 0.8753877

b6a8cdfd-74ba-4a07-9657-8515cff4b18d
00:57:41.150 --> 00:57:45.390
Correct or so if I put all anything?

NOTE Confidence: 0.8753877

aa0af783-a9d8-4103-80da-ae08874c9b9e
00:57:45.390 --> 00:57:49.660
Or with zero is itself.

NOTE Confidence: 0.8753877

2ed8c132-4bea-4c85-872a-9ba9193f221d
00:57:49.660 --> 00:57:51.530
So one option is or,

NOTE Confidence: 0.8753877

512b63ef-1be2-4c7a-9484-f19967a595e7
00:57:51.530 --> 00:57:54.414
but The thing is that I want

NOTE Confidence: 0.8753877

80c75af2-c49d-4d91-b044-9c57d17bdced
00:57:54.414 --> 00:57:56.993
that get to do this behavior

NOTE Confidence: 0.8753877

9c432156-cf10-4050-8c82-0c92a4d1b8dc
00:57:56.993 --> 00:58:00.190
as well if I want to do a.

NOTE Confidence: 0.8753877

e514a696-aa9d-4aca-856a-5d891a3b74f5
00:58:00.190 --> 00:58:03.494
Or one I want to output a bar,

NOTE Confidence: 0.8753877

09b88337-71a3-4566-b96d-b7958ab24de2
00:58:03.500 --> 00:58:06.398
but if you or anything is 1,

NOTE Confidence: 0.8753877

bbe8b00b-2e02-4244-af71-45f884cae0b0
00:58:06.400 --> 00:58:11.289
the output gonna be 1. Not a bar.

NOTE Confidence: 0.8753877

982bff8d-fca3-448e-8189-f174c8c251dc
00:58:11.290 --> 00:58:13.180
So all is correct as long as

NOTE Confidence: 0.8753877

bda6f984-d4b4-4e32-906b-ddd299216600
00:58:13.180 --> 00:58:15.049
you have the first equation.

NOTE Confidence: 0.8753877

0bf1eb20-d86c-4370-8b54-1697cfad6648
00:58:15.050 --> 00:58:17.458
But what is the gate that not only

NOTE Confidence: 0.8753877

0ce6eefd-5018-4414-a3d4-b6f0a0e82c74
00:58:17.458 --> 00:58:20.046
acts like this but also act like this?

NOTE Confidence: 0.8587636

0317f06b-8ab2-4f10-9406-fee7a53431b7
00:58:25.520 --> 00:58:28.700
So the answer is exclusive or

NOTE Confidence: 0.8587636

357ac1cb-0012-4540-94de-a40ca24129ef
00:58:28.700 --> 00:58:32.296
actually the exclusive or is one of

NOTE Confidence: 0.8587636

110ea60c-b18b-4766-8252-6bd5d5cf91e1
00:58:32.296 --> 00:58:35.056
the most famous and common gates.

NOTE Confidence: 0.8587636

360363bc-73a8-4dda-8e1a-093eb6014c19
00:58:35.060 --> 00:58:38.636
That helps us in many I mean circuits,

NOTE Confidence: 0.8587636

2e73456d-26c2-43ab-8566-5f98d61d2cd5
00:58:38.640 --> 00:58:40.432
so any binary numbers,

NOTE Confidence: 0.8587636

30d75c42-03fd-46b5-9a7e-9024ba8348f0
00:58:40.432 --> 00:58:42.672
exclusive or with zero itself.

NOTE Confidence: 0.8587636

82acac48-6587-4648-8858-53033edcdb04
00:58:42.680 --> 00:58:45.356
So that was the midterm exam,

NOTE Confidence: 0.8587636

3a6181d5-43e7-47f9-9ce6-9d41ce83d31e
00:58:45.360 --> 00:58:49.392
so the identity element of exclusive or is 0.

NOTE Confidence: 0.86429363

a2a78b72-feef-43a6-9cf4-03b466ff486e
00:58:51.620 --> 00:58:53.385
And also the identity element

NOTE Confidence: 0.86429363

525283de-0b47-4f01-942d-15355e3c804c
00:58:53.385 --> 00:58:55.962
of the exclusive. Nor is 1.

NOTE Confidence: 0.86429363

ebb221bd-5453-458b-b3b7-4ac3fd048fa6
00:58:55.962 --> 00:58:58.482
However, if you exclusive or

NOTE Confidence: 0.86429363

8115134a-1dec-4b52-ad63-b36e105b74e2
00:58:58.482 --> 00:59:01.249
any binary number with one,

NOTE Confidence: 0.86429363

6edf7547-c93f-4234-8013-a553c1543050
00:59:01.250 --> 00:59:03.720
it applies light and not.

NOTE Confidence: 0.8892917

b5b071c1-3d9e-42ad-a102-ee2dd5c0a006
00:59:06.240 --> 00:59:09.985
So now I can use this circuit.

NOTE Confidence: 0.8892917

b6f47c23-6e2e-4092-af2a-88157b9edfb5
00:59:09.990 --> 00:59:13.380
I can design this circuit.

NOTE Confidence: 0.8892917

19ac072e-c7e6-4d84-bb0d-68bb8adecd42
00:59:13.380 --> 00:59:17.565
I could say that I renamed the input carry,

NOTE Confidence: 0.8892917

f3c08801-c14e-44f9-b65f-6e7b809b3bc9
00:59:17.570 --> 00:59:20.366
attach it to the input M.

NOTE Confidence: 0.8892917

95bbc377-2aa2-4de9-ad25-ac81528553ea
00:59:20.370 --> 00:59:25.030
If M is 0, the circuit acts like an adder.

NOTE Confidence: 0.8892917

7296c40d-4753-4435-be47-96d265b67cd9
00:59:25.030 --> 00:59:29.026
Why? Because M is 00 goes here and then

NOTE Confidence: 0.8892917

199e8ba0-c51a-4b6f-8a90-41e7d2370e95
00:59:29.026 --> 00:59:34.258
here zero goes here, here, here and here.

NOTE Confidence: 0.8892917

546f202e-e5e0-43df-822d-96a8a21401b0
00:59:34.260 --> 00:59:37.404
An anything exclusive or with zero is itself,

NOTE Confidence: 0.8892917

c01d405e-5df5-410d-a6df-98619ce75026
00:59:37.410 --> 00:59:39.713
so at the end I'm going to

NOTE Confidence: 0.8892917

fab47760-0b1b-4ec1-8190-adea9d872d0d
00:59:39.713 --> 00:59:42.530
have a Y4 without any change.

NOTE Confidence: 0.8892917

45a94030-fc91-494f-8641-6c22993552fd
00:59:42.530 --> 00:59:44.500
Why 3 without any change?

NOTE Confidence: 0.8892917

51575f82-22db-4b50-b0e1-8a97ba7c91ba
00:59:44.500 --> 00:59:46.470
Why 2 without any change?

NOTE Confidence: 0.8892917

fc6cfc81-0459-4744-967d-1d6e79b5266a
00:59:46.470 --> 00:59:48.440
Why one without any change?

NOTE Confidence: 0.8892917

b9d89945-6e91-4c81-9694-cb7fce45c835
00:59:48.440 --> 00:59:52.380
So if M is zero, it acts like an adder,

NOTE Confidence: 0.8892917

9cd431ed-626b-42a8-aec1-90462834fd73
00:59:52.380 --> 00:59:56.106
so I'm adding X + Y.

NOTE Confidence: 0.8892917

2f116a77-c1a6-4c71-b263-6ac7a6afcf22
00:59:56.110 --> 01:00:00.076
However, if I make the M1.

NOTE Confidence: 0.8892917

1aebd7ed-b13e-46a7-a84a-505fe5f0cf95
01:00:00.080 --> 01:00:00.940
This.

NOTE Confidence: 0.8892917

fc177f8e-cc1a-4c8e-b72e-79b9a184bef8
01:00:00.940 --> 01:00:02.660
Becomes one.

NOTE Confidence: 0.8892917

3d819322-6580-4259-9958-86dbc39b304f
01:00:02.660 --> 01:00:04.188
And one goes here.

NOTE Confidence: 0.88065755

b7f45e55-cd62-488d-95e5-36354300512d
01:00:09.660 --> 01:00:11.432
On anything exclusive or

NOTE Confidence: 0.88065755

aa3dd16a-09a7-427d-8d25-b620659f2b73
01:00:11.432 --> 01:00:13.647
with one makes it not.

NOTE Confidence: 0.85191894

786f4e71-94c5-4a1c-ac5e-7b829536fcc1
01:00:16.590 --> 01:00:20.950
And now I am adding X. Plus one.

NOTE Confidence: 0.51739615

ba983c5d-adf3-43f2-a097-3ed8c32a5dd3
01:00:23.490 --> 01:00:30.040
Plus ybar. Which is X -- Y,

NOTE Confidence: 0.51739615

94c8a344-577d-4144-9ab2-fa107f407088
01:00:30.040 --> 01:00:34.420
so it acts like a SBTRKT.

NOTE Confidence: 0.51739615

6c4151ae-ffc3-457a-9965-4ebf6c17e8eb
01:00:34.420 --> 01:00:36.766
So I go to the market.

NOTE Confidence: 0.51739615

d8a1b1c1-c4fe-4ff4-bc05-b3557a47db83
01:00:36.770 --> 01:00:40.298
I buy an adder and then buy this wiring.

NOTE Confidence: 0.51739615

53c57593-b526-4d61-a574-728b623b1954
01:00:40.300 --> 01:00:42.646
I make it added an subtracter.

NOTE Confidence: 0.85556054

fb986ecb-6383-4fd7-adf1-d32b358fb50a
01:00:45.200 --> 01:00:47.230
In the books or in other design,

NOTE Confidence: 0.85556054

3ab834da-e8d6-47ee-948e-980d38bf8d64
01:00:47.230 --> 01:00:48.970
usually they show it like this,

NOTE Confidence: 0.85556054

3cbcb8f0-df65-49e6-b265-5e67ca5bd9c6
01:00:48.970 --> 01:00:51.350
so this is the chip that you

NOTE Confidence: 0.85556054

2acc618e-1526-434a-bc6e-74f20d327b9a
01:00:51.350 --> 01:00:53.769
buy at the end with other.

NOTE Confidence: 0.85556054

0877bae7-a840-43ec-a41e-7fc1d3bb2c26
01:00:53.770 --> 01:00:56.826
This is the input for the second number.

NOTE Confidence: 0.85556054

72a120ec-3f47-4690-99ae-f845b61fa69c
01:00:56.830 --> 01:00:59.894
This is the input for the first number,

NOTE Confidence: 0.85556054

52465ca7-bd1e-40f4-a7d1-b6c7968da5cb
01:00:59.900 --> 01:01:02.198
and this is the control wire.

NOTE Confidence: 0.85556054

76e7a417-d06c-4416-8d73-6c785843f721
01:01:02.200 --> 01:01:03.728
If you input zero,

NOTE Confidence: 0.85556054

cfac462a-2ada-4d37-8d3a-f430a56dc0bb
01:01:03.728 --> 01:01:05.638
it acts like an adder.

NOTE Confidence: 0.85556054

b5f418a3-7aa7-4721-a498-b1e18612ca3a
01:01:05.640 --> 01:01:07.172
If you input one,

NOTE Confidence: 0.85556054

797f700f-b1e7-4847-922d-69f737dd994c
01:01:07.172 --> 01:01:09.087
it acts like a subtractor.

NOTE Confidence: 0.91280985

cafacc2e-0851-405a-b9be-0f2ca53a35ef
01:01:13.290 --> 01:01:17.880
So. You can see that by

NOTE Confidence: 0.91280985

662a8949-a3d1-4364-a3f3-083205abcc3e
01:01:17.880 --> 01:01:19.512
using the Two's complements,

NOTE Confidence: 0.91280985

aef2c85d-43f7-4cdb-85fe-59945820a3fa
01:01:19.520 --> 01:01:22.376
not only the calculation is very easy,

NOTE Confidence: 0.91280985

582ca218-6f8f-47d2-ac29-83b5b6bfbae3
01:01:22.380 --> 01:01:25.250
but also the design is very easy.

NOTE Confidence: 0.91280985

06c13cc7-3b37-4629-866e-a164759200af
01:01:25.250 --> 01:01:28.708
We reuse the adder for the subtraction.

NOTE Confidence: 0.91280985

7749638b-faa5-4483-aa48-d1051a72c797
01:01:28.710 --> 01:01:31.860
We already saw that in in the

NOTE Confidence: 0.91280985

021bd674-74bc-48eb-a22f-769650076472
01:01:31.860 --> 01:01:33.779
twos compliment anything goes

NOTE Confidence: 0.91280985

da3fbb34-e8e4-44d9-adf6-5a20edcc96ed
01:01:33.779 --> 01:01:36.209
like becomes like an addition.

NOTE Confidence: 0.91280985

6e18d2ec-6db7-48d9-be47-0429236fb61c
01:01:36.210 --> 01:01:38.814
So, but the only thing you have

NOTE Confidence: 0.91280985

eabeeaf6-2064-4e01-bd1c-ee25b3acd9ee
01:01:38.814 --> 01:01:41.477
to be careful and we haven't

NOTE Confidence: 0.91280985

eebe65a4-367e-4799-ac16-d94915384098
01:01:41.477 --> 01:01:43.417
discussed is the overflow.

NOTE Confidence: 0.91280985

1b6c7398-6328-4386-b8f3-a4651ef970e0
01:01:43.420 --> 01:01:46.804
We already saw that when we do calculation,

NOTE Confidence: 0.91280985

61d80cb6-7281-4245-b7b1-6ce68eb20aa6
01:01:46.810 --> 01:01:49.348
there is a chance for overflow.

NOTE Confidence: 0.91280985

38c28db0-fe54-474f-9fa4-66224d06bd57
01:01:49.350 --> 01:01:52.750
We already know how to capture the overflow,

NOTE Confidence: 0.91280985

331801f0-938b-4de3-b022-6c11dc487bc8
01:01:52.750 --> 01:01:55.782
but when we are in the Two's complement

NOTE Confidence: 0.91280985

19873185-b3ed-4ebe-9563-7d0bac8b401e
01:01:55.782 --> 01:01:57.829
system scientist complement system.

NOTE Confidence: 0.91280985

53de876e-b32c-4619-8074-ee009d12952b
01:01:57.830 --> 01:01:59.955
So when an overflow happens

NOTE Confidence: 0.91280985

cd4ef2c5-6d99-4626-ad94-e6352d0cec75
01:01:59.955 --> 01:02:01.650
in Two's complement, anybody?

NOTE Confidence: 0.7279715

772f3c6d-4ca8-4504-9394-d13d0a81982c
01:02:15.630 --> 01:02:16.978
When an overflow happens.

NOTE Confidence: 0.8884698

22aa8aed-0b2e-4027-8bc6-b6f880311f2e
01:02:22.770 --> 01:02:25.360
Yes, this is 1 case as Son

NOTE Confidence: 0.8884698

cd9c233a-3dbe-4d52-a58d-d52c123e9307
01:02:25.360 --> 01:02:27.330
is correct about one case.

NOTE Confidence: 0.8884698

2484cfaf-e374-43d7-aa03-b9fe8cae2bba
01:02:27.330 --> 01:02:29.178
So if I have two positive

NOTE Confidence: 0.8884698

8044674f-5acc-443a-8480-b57e5bd89273
01:02:29.178 --> 01:02:31.429
numbers and I do the addition

NOTE Confidence: 0.8884698

f4341ba5-a7d7-4da4-87ca-13e2c3c93307
01:02:31.429 --> 01:02:33.784
and the result becomes negative.

NOTE Confidence: 0.8884698

bccad2e0-09db-4445-84e7-f503ab0abaf3
01:02:33.790 --> 01:02:37.520
This is 1 case or.

NOTE Confidence: 0.8884698

73fe5542-1748-494c-bed2-a68791ada662
01:02:37.520 --> 01:02:39.650
If I have two negative numbers,

NOTE Confidence: 0.8884698

3e49d2ce-0c31-4c61-b341-183abd9d00e5
01:02:39.650 --> 01:02:41.070
Philip is correct, yes,

NOTE Confidence: 0.8884698

98150a52-ff10-41e6-8138-e5bcb1eb8439
01:02:41.070 --> 01:02:42.845
this is the second case.

NOTE Confidence: 0.8884698

66985657-b946-4e88-aceb-33a04276bb83
01:02:42.850 --> 01:02:45.640
If I have two negative numbers.

NOTE Confidence: 0.8884698

1882d1db-ff72-4f29-9745-e919f922bbb8
01:02:45.640 --> 01:02:47.860
And the result become positive.

NOTE Confidence: 0.8884698

5c871d1b-b6e3-46b8-8b15-bdc6c0564442
01:02:47.860 --> 01:02:50.070
This is the second case,

NOTE Confidence: 0.8884698

b7b74214-7f39-4773-8b9f-8ee8954b73b9
01:02:50.070 --> 01:02:52.728
so these are the cases that

NOTE Confidence: 0.8884698

a8e2bff4-ffed-49cf-8eb9-8a527eced0db
01:02:52.728 --> 01:02:54.057
an overflow happens.

NOTE Confidence: 0.8884698

50fee9d7-a4c0-43e1-954e-c95087586be0
01:02:54.060 --> 01:02:57.372
So now I have to design or add a

NOTE Confidence: 0.8884698

a6d52932-a800-4643-a51c-949f278c00ff
01:02:57.372 --> 01:03:00.914
circuit that captures the overflow after

NOTE Confidence: 0.8884698

8db55f3d-daca-44a2-ae7d-31bc62f6a2d3
01:03:00.914 --> 01:03:03.994
doing the addition or subtraction.

NOTE Confidence: 0.8884698

17bd574a-a59d-4c27-ba89-a25a9c2da04e
01:03:04.000 --> 01:03:06.569
So I have to basically extend this

NOTE Confidence: 0.8884698

c8719a64-6861-48b7-b153-c1dd296a0212
01:03:06.569 --> 01:03:08.670
design to capture the overflow.

NOTE Confidence: 0.86016417

0b8d0bff-7776-468c-b559-8556e5768215
01:03:11.150 --> 01:03:15.245
So one way is again go from this scratch

NOTE Confidence: 0.86016417

8eb33036-9cf1-4234-95a0-fe6f0c1c2c31
01:03:15.245 --> 01:03:19.228
and build it in from the truth table.

NOTE Confidence: 0.86016417

872cbdd8-8dc6-4fe1-b449-a7c4aefda6bc
01:03:19.230 --> 01:03:21.446
So imagine we have a 2 bit other.

NOTE Confidence: 0.86016417

109b956f-8e13-4522-a06c-782cc8659ad7
01:03:21.450 --> 01:03:23.658
I have all the bits in the input,

NOTE Confidence: 0.86016417

712db0a9-8af6-48fe-b3de-63fbf011ae08
01:03:23.660 --> 01:03:26.153
so these are the bits for the first number.

NOTE Confidence: 0.86016417

2da5eca0-e524-4ba3-a502-adcbe345523d
01:03:26.160 --> 01:03:27.840
These are the bits for the

NOTE Confidence: 0.86016417

45dddc7e-45a3-4e83-940e-305c45f3a990
01:03:27.840 --> 01:03:29.480
second number and plus a carry.

NOTE Confidence: 0.86016417

cd5af9a5-6dd2-4f08-ba05-d8868495db3b
01:03:29.480 --> 01:03:31.757
And then I have to check all of them

NOTE Confidence: 0.86016417

b964a637-368e-4aa8-b3ac-135aefe0923e
01:03:31.757 --> 01:03:33.629
whether the overflow happens or no.

NOTE Confidence: 0.86016417

2be34f3a-0049-4a6a-a3fe-3cb674db4225
01:03:33.630 --> 01:03:37.950
Based on this rule, make it 1 or 0.

NOTE Confidence: 0.86016417

85a47afa-3e40-40e8-bba4-9eaabbecb35d
01:03:37.950 --> 01:03:41.040
If I extend it to the three bit adder again,

NOTE Confidence: 0.86016417

21c81ba9-4ff4-4808-bf62-1f5a2789a8f7
01:03:41.040 --> 01:03:42.888
these are the inputs an etc.

NOTE Confidence: 0.86016417

0d225b01-ebe1-4af0-916d-fecdf17ff69e
01:03:42.890 --> 01:03:44.750
So based on the truth table,

NOTE Confidence: 0.86016417

d7966c69-04fe-413d-9483-e5e29e43dc49
01:03:44.750 --> 01:03:47.756
it becomes a huge truth table if you increase

NOTE Confidence: 0.86016417

111e8a7e-6873-414d-a74e-e33871830747
01:03:47.756 --> 01:03:50.678
the number of bits in the binary numbers.

NOTE Confidence: 0.86016417

157408db-6148-4fdd-96a8-45f38c45f65d
01:03:50.680 --> 01:03:54.250
So this is not a good way to design A

NOTE Confidence: 0.86016417

88604661-6d73-4392-992c-65b1a56f5fd9
01:03:54.350 --> 01:03:57.730
function that detects the overflow.

NOTE Confidence: 0.86016417

4e58e358-b9db-42ef-bfd7-5aab0aa2286f
01:03:57.730 --> 01:04:01.104
As we said, we already know that.

NOTE Confidence: 0.86016417

df6de979-4dc2-4c22-9a7f-d6824614f45e
01:04:01.110 --> 01:04:04.394
Festival in Two's complement.

NOTE Confidence: 0.86016417

95c700e3-68b8-45df-bce7-4ad07fa5dd08
01:04:04.394 --> 01:04:07.678
Any arithmetic becomes edition.

NOTE Confidence: 0.86016417

e2a83495-6d3d-4813-a70d-8198e44429fa
01:04:07.680 --> 01:04:09.288
Addition is addition, subtraction

NOTE Confidence: 0.86016417

e0be5a13-890a-423f-94cd-4a10d61f4ba8
01:04:09.288 --> 01:04:11.298
becomes addition with two scammers,

NOTE Confidence: 0.86016417

6ace2f12-18bb-4e6d-acee-c508a30814ad
01:04:11.300 --> 01:04:13.468
so anything becomes edition.

NOTE Confidence: 0.86016417

70f7bd1b-634e-4724-9ce4-f8de974adafc
01:04:13.468 --> 01:04:15.636
This is first case.

NOTE Confidence: 0.86016417

342a3797-486c-4a2f-b7fe-4d21ce5029ee
01:04:15.640 --> 01:04:16.374
Second case,

NOTE Confidence: 0.86016417

cdab9b8b-8dd6-43ab-b8c9-26a9d9706297
01:04:16.374 --> 01:04:18.576
the overflow happens in addition case,

NOTE Confidence: 0.86016417

aef9a6cf-a3e4-4326-9fb9-aec985aba7d6
01:04:18.580 --> 01:04:19.828
so we don't have.

NOTE Confidence: 0.86016417

9e9066a9-1f02-4208-b3d0-c4da5e53acdc
01:04:19.828 --> 01:04:21.700
We don't have to be careful

NOTE Confidence: 0.86016417

34b7dc02-6567-4cf7-bee6-85891a13fd6a
01:04:21.773 --> 01:04:23.369
about this subtraction,

NOTE Confidence: 0.86016417

149505bf-0f09-4b1e-a82b-0ad59f45aa6b
01:04:23.370 --> 01:04:24.938
because subtraction becomes addition,

NOTE Confidence: 0.86016417

5c3a98f9-0a14-4b28-bff7-87fcc4a6afac
01:04:24.938 --> 01:04:27.676
so the only case we have to

NOTE Confidence: 0.86016417

98f4497d-0b45-4c1c-8f5b-a41f2aab4be9
01:04:27.676 --> 01:04:29.256
care about is the addition.

NOTE Confidence: 0.86016417

7fef9f3d-fd99-4662-b884-85af6d1e1243
01:04:29.260 --> 01:04:31.954
What are the cases addition of

NOTE Confidence: 0.86016417

43d85ddc-47be-483e-814e-3c7861f7b227
01:04:31.954 --> 01:04:33.750
positive numbers becomes negative?

NOTE Confidence: 0.86016417

c6053eda-019b-4a46-80f9-a6238f314ac6
01:04:33.750 --> 01:04:35.928
Addition of negative numbers become positive,

NOTE Confidence: 0.86016417

c4b4ffd6-31ce-4fe2-9006-2c9ce1630c89
01:04:35.930 --> 01:04:37.148
so this is.

NOTE Confidence: 0.86016417

8ac755a6-ed03-4cbb-acdd-84fcc5cd5d95
01:04:37.148 --> 01:04:39.584
These are the only cases that

NOTE Confidence: 0.86016417

968b2c34-6de8-415c-9c98-dd6903c02d78
01:04:39.584 --> 01:04:41.809
makes creates an overflow.

NOTE Confidence: 0.86016417

5792dbac-de25-4fde-833e-14341d5b1659
01:04:41.810 --> 01:04:44.066
But the third property is very

NOTE Confidence: 0.86016417

3e616045-ccc3-4fe0-848e-ded4608bdc13
01:04:44.066 --> 01:04:46.522
important and you already saw this

NOTE Confidence: 0.86016417

28eedd20-0249-430d-a4b8-e340cf041cd1
01:04:46.522 --> 01:04:48.727
property in your lecture assignments.

NOTE Confidence: 0.86016417

cf697ec4-4f32-4649-8216-08c86ea69b98
01:04:48.730 --> 01:04:53.474
In binary system, only in the binary systems.

NOTE Confidence: 0.86016417

ab2e1095-578e-47c5-9d30-0fe218f601c5
01:04:53.480 --> 01:04:56.280
The last bits acts like a sign

NOTE Confidence: 0.86016417

da3a3e2e-5f84-4b6c-a9d3-83376ec12358
01:04:56.280 --> 01:04:59.050
bit in the sign magnitude.

NOTE Confidence: 0.86016417

5955b8aa-6232-4302-93dc-a9f4791997f8
01:04:59.050 --> 01:05:02.538
This is The only exception for the binary

NOTE Confidence: 0.86016417

84dd19c9-106d-41ea-869b-4b1d869af331
01:05:02.538 --> 01:05:05.805
system WHI is that we already checked

NOTE Confidence: 0.86016417

15d2faf5-8869-456f-9a16-ebce90c39758
01:05:05.805 --> 01:05:08.790
that in the Two's complement system.

NOTE Confidence: 0.86016417

b602a129-f525-4b19-9ede-1dfd0a93465c
01:05:08.790 --> 01:05:11.110
If you have N bits,

NOTE Confidence: 0.86016417

246d227d-3fec-4d76-a683-79c9f0be2e9e
01:05:11.110 --> 01:05:14.358
the first range of numbers are positive.

NOTE Confidence: 0.86016417

8f35f31b-6b48-4802-94a7-b7c22667e8dd
01:05:14.360 --> 01:05:18.064
The second range of the numbers are negative.

NOTE Confidence: 0.86016417

ba752517-02c5-4a9b-926a-ea7546ad6d90
01:05:18.070 --> 01:05:20.206
This is our interpretation.

NOTE Confidence: 0.86016417

9af80f5e-6782-4d11-be00-8db6ae39f536
01:05:20.206 --> 01:05:24.837
For instance in base 10 this is the I mean.

NOTE Confidence: 0.86016417

49e58dce-b747-44ed-9f1c-c052e97a2e2e
01:05:24.840 --> 01:05:26.184
The middle range,

NOTE Confidence: 0.86016417

d1ac2538-edae-4e56-ad39-07ea935a249e
01:05:26.184 --> 01:05:29.320
any number equal or lower than this

NOTE Confidence: 0.86016417

727f803f-3917-4ce7-85e9-bc2988dc4d8a
01:05:29.411 --> 01:05:31.947
number is considered positive.

NOTE Confidence: 0.86016417

6d71800d-b14a-4a92-a291-302faf90b2bd
01:05:31.950 --> 01:05:34.490
Any number greater than this

NOTE Confidence: 0.86016417

ee2a4a6d-fabe-489c-93b3-2ee50831a5d9
01:05:34.490 --> 01:05:36.014
number becomes negative.

NOTE Confidence: 0.86016417

2a09899c-dfd6-4dce-8d17-e46a963f4ceb
01:05:36.020 --> 01:05:36.546
However,

NOTE Confidence: 0.86016417

37c2411b-095d-41fe-9978-56bee2a6bf09
01:05:36.546 --> 01:05:39.702
the noise property of the binary

NOTE Confidence: 0.86016417

95409b32-822a-4f3e-883e-d156d1099b16
01:05:39.702 --> 01:05:43.637
system is that this first half is this.

NOTE Confidence: 0.86016417

ff8be72d-9d13-45c4-a50b-b331f16946ec
01:05:43.640 --> 01:05:46.180
When we have N bits,

NOTE Confidence: 0.86016417

098cb223-d8c4-4408-b004-26ffa32b8ded
01:05:46.180 --> 01:05:50.380
and if you check the last bit.

NOTE Confidence: 0.86016417

636c36ad-468f-4784-afd7-a03eaf82900e
01:05:50.380 --> 01:05:53.495
It is very similar to the sign

NOTE Confidence: 0.86016417

efb4fac3-c84c-422b-9492-812cc2bb6d64
01:05:53.495 --> 01:05:57.009
bit in the sign magnet system.

NOTE Confidence: 0.86016417

5eb374fd-4ff1-4ede-a5d1-9a66591d36bb
01:05:57.010 --> 01:06:00.565
So if the number is lower than this number,

NOTE Confidence: 0.86016417

2dbce02d-47a9-456e-8cd9-8a5faff099cd
01:06:00.570 --> 01:06:02.940
it is positive. In another word.

NOTE Confidence: 0.86016417

476bef65-2332-43c4-9ca0-6b7243cf46b2
01:06:02.940 --> 01:06:07.439
If this bit is zero, it is positive.

NOTE Confidence: 0.86016417

7d5911b5-8733-4863-b872-bed00982574e
01:06:07.440 --> 01:06:10.368
If the number is greater than that number,

NOTE Confidence: 0.86016417

90682b79-653c-4328-b6f3-c898eb274e14
01:06:10.370 --> 01:06:12.925
which becomes one unit after that number,

NOTE Confidence: 0.86016417

262df6f4-55a6-48b7-a85c-9aaba9e8fb90
01:06:12.930 --> 01:06:15.669
which becomes this?

NOTE Confidence: 0.86016417

a0c94364-2cb3-42a0-98c3-b7596da487be
01:06:15.670 --> 01:06:18.064
Equal or greater than this number becomes

NOTE Confidence: 0.86016417

a21a942b-3479-499a-9491-342fc15c9ccb
01:06:18.064 --> 01:06:21.218
negative, and if you look at this.

NOTE Confidence: 0.86016417

019fbdd7-1481-484b-923e-49154bdb8f92
01:06:21.220 --> 01:06:22.066
A number.

NOTE Confidence: 0.86016417

4a713935-e77d-48af-a7d3-43097577f8a8
01:06:22.066 --> 01:06:25.027
The first bit is 1 and all

NOTE Confidence: 0.86016417

e162e553-a401-445a-a929-3c861652b486
01:06:25.027 --> 01:06:28.196
the other numbers may be one.

NOTE Confidence: 0.86016417

9f0f31cb-08a7-4cfe-8c9e-48e7365f5155
01:06:28.200 --> 01:06:31.070
I mean greater than zero and etc.

NOTE Confidence: 0.86016417

16dbf876-b4c9-47dc-bf96-4892f02f4528
01:06:31.070 --> 01:06:34.241
So this bits shows that the number

NOTE Confidence: 0.86016417

ab8646ae-7995-4c61-b14b-6e876cbb10fd
01:06:34.241 --> 01:06:36.523
becomes negative in bonuses and

NOTE Confidence: 0.86016417

664c1fae-8b6c-449e-847d-4ea807c25186
01:06:36.523 --> 01:06:39.456
this is the only case in binary

NOTE Confidence: 0.86016417

b3e78a2a-8bf4-4c42-a9f2-69a5fe931fa3
01:06:39.456 --> 01:06:41.808
system influences in base 10.

NOTE Confidence: 0.86016417

26f6c501-503b-4f62-93dd-a550e9aa3524
01:06:41.810 --> 01:06:46.574
This is the number in the

NOTE Confidence: 0.86016417

21587d12-9b72-4bb5-a701-18b3d6796d77
01:06:46.574 --> 01:06:48.956
highest significant position.

NOTE Confidence: 0.86016417

bbf780f2-41a2-42ec-9821-13cc14cdaac7
01:06:48.960 --> 01:06:50.752
So this nice property,

NOTE Confidence: 0.86016417

0a20e142-01c3-46df-9270-6e8b20d1c342
01:06:50.752 --> 01:06:52.096
our binary system,

NOTE Confidence: 0.8142136

8c82a7c9-1cf1-457c-a129-b3c5a5ea36ec
01:06:52.100 --> 01:06:55.117
that the last bits in the Two's

NOTE Confidence: 0.8142136

7a210b0b-37d2-4a3c-a42c-39720b2cd79a
01:06:55.117 --> 01:06:57.489
complement acts like not similar?

NOTE Confidence: 0.8142136

6b6188f9-3a70-47b8-b607-1e71b920f001
01:06:57.490 --> 01:07:00.493
Not the same but similar or like

NOTE Confidence: 0.8142136

a83f25c0-5500-42e8-986a-5bf500ce68f7
01:07:00.493 --> 01:07:03.253
did sign magnitude helps us to

NOTE Confidence: 0.8142136

6072ad1c-782b-45e8-ab47-458b04fcee66
01:07:03.253 --> 01:07:05.563
detect the overflow much easily.

NOTE Confidence: 0.8142136

5e003fc6-1e58-41eb-beef-f6d46555238b
01:07:05.570 --> 01:07:11.090
So let's see how can we do that.

NOTE Confidence: 0.8142136

40df012b-df8f-4180-8642-22ca0af11f23
01:07:11.090 --> 01:07:15.395
So imagine we have this

NOTE Confidence: 0.8142136

0e01ab00-7929-40e4-8139-c16bb330c590
01:07:15.395 --> 01:07:18.839
addition in Two's complement.

NOTE Confidence: 0.8142136

b2a4c717-0440-42b0-a1ae-02db3456130d
01:07:18.840 --> 01:07:21.210
So this addition is either

NOTE Confidence: 0.8142136

34af2546-1ec9-4f94-93b3-279dc0063e0d
01:07:21.210 --> 01:07:22.158
originally addition,

NOTE Confidence: 0.8142136

2e66af5d-4d7e-4cb3-867e-889f42bcf3cd
01:07:22.160 --> 01:07:25.706
so at the first we wanted to add 2

NOTE Confidence: 0.8142136

a41f1471-f4eb-4460-8bb9-15b89af729bf
01:07:25.706 --> 01:07:29.750
numbers or it was subtraction and we did

NOTE Confidence: 0.8142136

3518a723-f05f-43d1-9965-311b4fc43342
01:07:29.750 --> 01:07:33.058
the Two's complements with the addition.

NOTE Confidence: 0.8142136

0c492c6b-07b8-47a6-9fb1-1a237b323423
01:07:33.060 --> 01:07:35.898
And finally this becomes the addition.

NOTE Confidence: 0.8142136

948c6ce8-baa8-4cdb-924f-e58ce424b992
01:07:35.900 --> 01:07:37.855
So either originally was addition

NOTE Confidence: 0.8142136

4bf6e5a2-bfba-4ec9-9de2-8d9386eb764f
01:07:37.855 --> 01:07:40.446
or after we make it addition

NOTE Confidence: 0.8142136

3356e952-8f7b-4d72-9023-cf494626fa32
01:07:40.446 --> 01:07:43.236
with the Two's complement which

NOTE Confidence: 0.8142136

08adf73b-9966-45e9-8b54-13535483153d
01:07:43.236 --> 01:07:44.910
was originally subtraction,

NOTE Confidence: 0.8142136

11f3a868-82e3-4900-b648-9fd252dbc83b
01:07:44.910 --> 01:07:50.270
but we made it addition with his compliment.

NOTE Confidence: 0.8142136

0e2acc2a-dbba-42e9-ac0b-700e643da0a2
01:07:50.270 --> 01:07:53.000
And this is the Two's complement

NOTE Confidence: 0.8142136

04fff48b-abd2-4926-9315-5bbc25a0e637
01:07:53.000 --> 01:07:54.820
of the original number.

NOTE Confidence: 0.8142136

a50f4c74-0f2d-4612-ad1e-404f98b387f0
01:07:54.820 --> 01:07:58.468
In any case, it becomes addition.

NOTE Confidence: 0.8142136

8654ebfd-187a-4080-94c4-14719d93355d
01:07:58.470 --> 01:08:00.180
Now we have to be careful

NOTE Confidence: 0.8142136

f7c61025-8c09-4448-b280-6fa0ae3f1609
01:08:00.180 --> 01:08:01.035
about this overflow.

NOTE Confidence: 0.84473246

db70d981-f435-4533-b892-0142c35b8da9
01:08:04.110 --> 01:08:07.337
So the only case that all flow

NOTE Confidence: 0.84473246

9bce6db2-9df4-4daa-a06e-55165c1dc762
01:08:07.337 --> 01:08:11.439
happens is that this is 1 case that

NOTE Confidence: 0.84473246

a69e1ab1-3088-4a19-9474-261c82847d1b
01:08:11.439 --> 01:08:14.049
overflow happens this 2 numbers.

NOTE Confidence: 0.84473246

3f5379c2-de4d-4c46-87eb-38dba19a9858
01:08:14.050 --> 01:08:16.960
Are positive why these are positive?

NOTE Confidence: 0.84473246

fa7fb087-31c2-4a29-9f64-0aa3844910b3
01:08:16.960 --> 01:08:19.390
Because in Two's complement system,

NOTE Confidence: 0.84473246

f6483ee6-408d-4ad7-88c9-979429abca63
01:08:19.390 --> 01:08:22.330
in binary system the higher

NOTE Confidence: 0.84473246

e8bb692a-7ad7-4ad3-8f5f-0fe8ca0b1b31
01:08:22.330 --> 01:08:26.340
significant bit acts like a sign bit.

NOTE Confidence: 0.84473246

7cd68e64-385c-426b-bbab-5d6d850fcabe
01:08:26.340 --> 01:08:28.296
These are zero. As a result,

NOTE Confidence: 0.84473246

21a51e33-acde-4437-a22c-babb1e6607c8
01:08:28.300 --> 01:08:30.561
these this number is lower than the

NOTE Confidence: 0.84473246

26966821-b830-4657-bd22-04333ae4636f
01:08:30.561 --> 01:08:32.549
first range within the first range,

NOTE Confidence: 0.84473246

845b382b-5791-4b16-b1d5-aa34626e32d9
01:08:32.550 --> 01:08:34.404
so it is positive this number

NOTE Confidence: 0.84473246

39eceb72-6000-4389-a0b7-f5cd26becc43
01:08:34.404 --> 01:08:36.479
is also within the first range.

NOTE Confidence: 0.84473246

1015dc52-6d0c-4f21-a9b5-f11bed53ca12
01:08:36.480 --> 01:08:38.067
This is positive.

NOTE Confidence: 0.84473246

6856ec2d-0e3c-49ce-9717-7b5d6ca56b20
01:08:38.067 --> 01:08:41.241
However, if I see this last

NOTE Confidence: 0.84473246

1ddad41c-8047-45e4-90e7-e7ed9daded5d
01:08:41.241 --> 01:08:44.580
bit of or the S4 becomes one.

NOTE Confidence: 0.84473246

d89d5282-c82d-4a29-9445-778d68b10b66
01:08:44.580 --> 01:08:47.934
It means that this number lies

NOTE Confidence: 0.84473246

ac83d531-c80f-4759-a54a-47253b142ad3
01:08:47.934 --> 01:08:51.400
within this second range of numbers.

NOTE Confidence: 0.84473246

d579f6cf-fbd4-4f8d-baf9-940313207d47
01:08:51.400 --> 01:08:53.926
As a result, this is negative.

NOTE Confidence: 0.84473246

78311009-6c4f-4e5c-ba46-5d2574534374
01:08:53.930 --> 01:08:56.762
Addition of two positive

NOTE Confidence: 0.84473246

73f908c5-d598-4fe0-b7f7-acaa32bc4bb8
01:08:56.762 --> 01:08:58.886
numbers becomes negative.

NOTE Confidence: 0.84473246

10138c32-4c92-4c40-bef5-a091d23eb35b
01:08:58.890 --> 01:09:01.640
So this is an overflow.

NOTE Confidence: 0.84473246

9eaaf78a-e2dd-4820-b65f-df73389be4d1
01:09:01.640 --> 01:09:05.978
But let's see when this happens.

NOTE Confidence: 0.84473246

3f8b6a3c-584e-4d96-82da-4ae1249f3555
01:09:05.980 --> 01:09:08.908
We have 0 here. We have 0 here.

NOTE Confidence: 0.84473246

c972c971-8e48-4778-a089-1d020f2fcbc1
01:09:08.910 --> 01:09:12.487
How can 0 + 0 becomes one?

NOTE Confidence: 0.84473246

6a6eb8ba-bb47-4a41-905f-7be95ca1430e
01:09:12.490 --> 01:09:15.507
The only possibility is that we have

NOTE Confidence: 0.84473246

dd9105f6-2dbf-4e6c-bd05-6268417f289a
01:09:15.507 --> 01:09:18.451
a carry from this calculation that

NOTE Confidence: 0.84473246

add761cf-aa86-4d46-8404-b087e1e71f4f
01:09:18.451 --> 01:09:22.084
goes here and this carry becomes one.

NOTE Confidence: 0.84473246

7ac59a71-34c8-4031-ac1c-985f5740aaa6
01:09:22.090 --> 01:09:25.910
This is the only case.

NOTE Confidence: 0.84473246

a9d0cde8-6726-4aba-8e7a-f438cd148f6a
01:09:25.910 --> 01:09:29.630
That makes 2 positive numbers

NOTE Confidence: 0.84473246

fd7084dd-8a5e-4ba1-9295-ebc60d191630
01:09:29.630 --> 01:09:31.118
becomes negative.

NOTE Confidence: 0.84473246

d5415e98-4928-41af-b58b-a80b420f37b7
01:09:31.120 --> 01:09:32.870
So if you do that,

NOTE Confidence: 0.84473246

7d2bba12-bc6c-4c0c-8df4-c8b3eb000850
01:09:32.870 --> 01:09:36.188
if we assume that such case happens.

NOTE Confidence: 0.84473246

d994cc25-0bf0-4a82-982e-9cd8174d93cf
01:09:36.190 --> 01:09:37.806
So it becomes 100,

NOTE Confidence: 0.84473246

13a4a3ef-6693-4ba8-86bf-e3c3a2960f1a
01:09:37.806 --> 01:09:40.230
which makes it one and the

NOTE Confidence: 0.84473246

8460e3c1-a2c1-4725-bfa4-11b5ced2e875
01:09:40.324 --> 01:09:43.108
carry the last Kelly becomes 0.

NOTE Confidence: 0.84473246

90c92c22-72dc-4261-a7fe-ac9fa6fb907f
01:09:43.110 --> 01:09:45.830
So this is the only case in the.

NOTE Confidence: 0.84473246

ff5f2226-0605-4b39-a9cf-50dfa1ec4575
01:09:45.830 --> 01:09:48.336
This is the case that happens when

NOTE Confidence: 0.84473246

49076cee-d1ba-4816-84bd-0f84283e66e7
01:09:48.336 --> 01:09:50.890
we do addition of two positive

NOTE Confidence: 0.84473246

f59da15d-f416-449e-9baa-f97feaf54134
01:09:50.890 --> 01:09:52.766
numbers and becomes negative.

NOTE Confidence: 0.84473246

29dea2ff-4d8a-4b3d-b800-11c001866e4f
01:09:52.770 --> 01:09:53.994
When it happens,

NOTE Confidence: 0.84473246

12eb40e2-fca5-4be6-86f2-185eab595bb7
01:09:53.994 --> 01:09:56.850
it happens when we have a carry

NOTE Confidence: 0.84473246

4ce902cb-4ee3-4621-9293-cee52619b25a
01:09:56.938 --> 01:09:59.490
from the previous calculation.

NOTE Confidence: 0.84473246

96def9b3-b8e3-4f07-923b-3d0c2bf9c05a
01:09:59.490 --> 01:10:00.390
Because one.

NOTE Confidence: 0.84473246

e25bcff2-e2ba-49fb-a609-4a6bcf05877a
01:10:00.390 --> 01:10:03.540
And then the output carry becomes there.

NOTE Confidence: 0.9442837

72c8eabe-9619-4b39-bb27-d245d9e174a9
01:10:07.420 --> 01:10:10.498
So what is the other possibilities?

NOTE Confidence: 0.9442837

f8e4c5dd-b915-41aa-a55e-b7adf170ba5f
01:10:10.500 --> 01:10:13.909
We do the addition of a negative

NOTE Confidence: 0.9442837

91441cff-ba46-4b68-ae31-362d82fb9e08
01:10:13.909 --> 01:10:16.110
number Anna positive number.

NOTE Confidence: 0.9442837

2a7a5d81-61fe-4802-aeb9-83e89a64472c
01:10:16.110 --> 01:10:18.870
Again, this edition might be

NOTE Confidence: 0.9442837

9ae20635-efe4-40d7-aabc-9f60357766e0
01:10:18.870 --> 01:10:22.426
after applying the two scamp after

NOTE Confidence: 0.9442837

f770c14f-751c-4145-8191-778a21511dfa
01:10:22.426 --> 01:10:25.896
converting the Subtraction 2 edition.

NOTE Confidence: 0.9442837

f6dc1545-63d3-4bc1-948e-2628fc3afd96
01:10:25.900 --> 01:10:27.420
So this is the negative.

NOTE Confidence: 0.9442837

85f0a967-22bf-455c-b610-897820982353
01:10:27.420 --> 01:10:29.900
This is the positive.

NOTE Confidence: 0.9442837

4c7b9897-d0dd-41aa-a35f-bef8298da005
01:10:29.900 --> 01:10:33.155
Never overflow happens whenever we

NOTE Confidence: 0.9442837

fe75d08e-481e-4f70-accc-f1ca6cb9fc47
01:10:33.155 --> 01:10:37.020
have two numbers of different size.

NOTE Confidence: 0.9442837

f1d69861-8e8d-4d01-8e85-ab34e0e0f170
01:10:37.020 --> 01:10:39.252
So you can try any possibilities

NOTE Confidence: 0.9442837

323256ae-5630-4ffd-9c2d-a491226cc90e
01:10:39.252 --> 01:10:41.341
for these two numbers and you

NOTE Confidence: 0.9442837

450e04ab-79f3-4ccd-a2bc-cf47522b91f5
01:10:41.341 --> 01:10:43.437
can see that as I put it here.

NOTE Confidence: 0.9442837

79cb8e7b-aad4-4c29-924e-39d2fe3d567b
01:10:43.440 --> 01:10:47.108
If you don't believe it, you can try.

NOTE Confidence: 0.9442837

b3244521-77f0-4304-9039-f1828c52b763
01:10:47.110 --> 01:10:50.410
Never an overflow happens in this

NOTE Confidence: 0.9442837

5b457a00-2e2f-4afd-b5e0-272709e7fa27
01:10:50.410 --> 01:10:54.670
case even I don't know the the sign.

NOTE Confidence: 0.9442837

9405ae57-cecb-47cd-af80-281fcaeb8d51
01:10:54.670 --> 01:10:56.158
Always the sign.

NOTE Confidence: 0.9442837

cacd5fa1-86bf-45f6-aa79-0134572b0f7e
01:10:56.158 --> 01:10:58.638
Bits for the result gonna

NOTE Confidence: 0.9442837

b6d87ecb-fa0e-48a5-a683-b5b38abb621d
01:10:58.638 --> 01:11:01.488
be in the correct form.

NOTE Confidence: 0.9442837

0e16f5ae-3665-43ec-bae3-ac948fbc3b19
01:11:01.490 --> 01:11:03.667
I leave it to you to try

NOTE Confidence: 0.9442837

a9ef6825-fcc7-477e-a485-754ff10a2ecb
01:11:03.667 --> 01:11:04.600
all the possibilities.

NOTE Confidence: 0.9442837

0fb22e5b-b267-4ddb-9c32-381ed8802ba2
01:11:04.600 --> 01:11:05.836
Also, for this case,

NOTE Confidence: 0.9442837

21c350dd-203a-4ce0-be31-2f7f296cac38
01:11:05.836 --> 01:11:07.072
again a positive number

NOTE Confidence: 0.9442837

bd9fc1cb-8966-4d39-a06f-6a148746c8ae
01:11:07.072 --> 01:11:08.749
and a negative number,

NOTE Confidence: 0.9442837

57c30408-4180-43a2-adfb-c91b5b8f8c8b
01:11:08.750 --> 01:11:10.826
then the sign of the input

NOTE Confidence: 0.9442837

fd52b4df-42e4-4339-a8a5-55153bb0538a
01:11:10.826 --> 01:11:11.864
numbers are different.

NOTE Confidence: 0.9442837

84ef8feb-00ea-4e43-8aff-617669166012
01:11:11.870 --> 01:11:12.929
As a result,

NOTE Confidence: 0.9442837

a0b512c2-b1bf-4b97-a89e-ceb255161a97
01:11:12.929 --> 01:11:15.047
always the sign of the result

NOTE Confidence: 0.9442837

836a6cc7-68c4-4f2f-98d0-f1c07620407b
01:11:15.047 --> 01:11:17.397
going to be in the correct form,

NOTE Confidence: 0.9442837

6dbb0d06-c2b8-43d9-bbff-2ce1d6835467
01:11:17.400 --> 01:11:19.130
and this is another beauty

NOTE Confidence: 0.9442837

62cd0194-b3a7-490f-a44b-5192e46d483d
01:11:19.130 --> 01:11:20.514
of the Two's complement.

NOTE Confidence: 0.8950288

9e835f21-e8c7-4fda-952e-c1ec7b8e32ce
01:11:23.990 --> 01:11:27.294
But another case of all flow happens

NOTE Confidence: 0.8950288

0a08ad58-af64-488c-89b4-7e35f4830240
01:11:27.294 --> 01:11:30.829
when we have two negative numbers.

NOTE Confidence: 0.8950288

31b77599-78ff-4809-aa5a-30b829c24c39
01:11:30.830 --> 01:11:34.130
And the result is positive.

NOTE Confidence: 0.8950288

bb81d4ac-02ff-4f72-869e-a3662d28804b
01:11:34.130 --> 01:11:39.978
When this happens. When? The carry is 0.

NOTE Confidence: 0.871486

4c36b773-629b-424f-b44c-30ea9577099a
01:16:30.120 --> 01:16:32.920
Hello guys I'm back.

NOTE Confidence: 0.871486

1f55d127-885a-4e1b-9687-fc77c8b3137b
01:16:32.920 --> 01:16:37.690
I think my Internet went down so.

NOTE Confidence: 0.871486

38619086-df94-4bd2-b430-5fa163e442e6
01:16:37.690 --> 01:16:40.276
I am so sorry about that.

NOTE Confidence: 0.8847613

f4757426-2b86-4bdc-8e78-18240b8f7f49
01:16:43.740 --> 01:16:46.260
So we are done for today.

NOTE Confidence: 0.906

378d8a7b-2035-433d-883b-c6ff3b746ee1
01:17:41.220 --> 01:17:45.091
I have to leave this session I

NOTE Confidence: 0.906

5ba59ef1-516a-4ccf-92fa-9e2bdf2edc78
01:17:45.091 --> 01:17:47.498
think. So then I can be back.

NOTE Confidence: 0.89901835

95da0d27-5789-4e25-a362-a5ddbce90015
01:18:47.060 --> 01:18:50.398
Oh, now I'm back. I don't know why

NOTE Confidence: 0.89901835

7d2fa21f-dde6-411c-9f1e-37342fa7e3e0
01:18:50.398 --> 01:18:51.658
my Internet actually went down.

NOTE Confidence: 0.5585225

0dd7ee73-6bb7-4ab7-9435-87d0822b429d
01:18:55.190 --> 01:18:58.448
let me stop my recording?

