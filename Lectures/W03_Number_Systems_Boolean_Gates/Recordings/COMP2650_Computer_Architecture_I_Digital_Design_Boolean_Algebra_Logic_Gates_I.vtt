WEBVTT

NOTE duration:"01:23:37.1760000"

NOTE language:en-us

NOTE Confidence: 0.8579577

2d8f2bb8-8154-47c3-91f7-f31db7d300cc
00:00:05.890 --> 00:00:07.000
Nicholas.

NOTE Confidence: 0.16939509

4f25c348-c6b5-4cd4-b0d6-43d14e087dc7
00:00:08.420 --> 00:00:09.550
Samiksha

NOTE Confidence: 0.9137409

6a2d3878-7ce1-44dd-bb57-d95c3ce1bfd9
00:00:11.030 --> 00:00:12.030
other students.

NOTE Confidence: 0.92667073

92c4f070-ae83-4a1b-8279-d568c9dc0342
00:00:15.140 --> 00:00:17.340
I need you just to send me a

NOTE Confidence: 0.6924767

7eb7033e-dc00-459b-96f3-45f315e145eb
00:00:17.340 --> 00:00:20.388
feedback, I mean.
Sen Ron Dennis.

NOTE Confidence: 0.62617743

dd742bc5-89dc-4c74-babb-4bd7cbe2b4ab
00:00:24.470 --> 00:00:26.840
Jason Alicea Cool.

NOTE Confidence: 0.9403422

40d62cd2-9634-4649-8443-a9ac6e4d5452
00:00:28.290 --> 00:00:29.230
So.

NOTE Confidence: 0.2829715

bde0fb23-3b5c-41f9-9319-463a77a2e88a
00:00:32.170 --> 00:00:32.980
Uh.

NOTE Confidence: 0.91327965

2b51741e-3eb7-48d8-9f61-e2b4f1391d28
00:00:34.210 --> 00:00:38.158
Let's start with the I mean
quick review or quick recap of

NOTE Confidence: 0.91327965

63578860-358c-43c5-a9a7-9284ecf60a97
00:00:38.158 --> 00:00:40.790
what we said. I mean in the last

NOTE Confidence: 0.79816705

69066eae-a6d0-4523-8eb4-5d1d53a9d925
00:00:40.790 --> 00:00:45.682
session on Monday. Um, generally
we started with the numbering

NOTE Confidence: 0.79816705

a48522c7-cbee-4406-9145-e4d8817adf52
00:00:45.682 --> 00:00:50.258
system that there is there no
negative numbers. We had only

NOTE Confidence: 0.79816705

285924e9-6cef-485c-bd41-d9f65b7ae4ef
00:00:50.258 --> 00:00:52.338
integer part and a fraction

NOTE Confidence: 0.8536641

e199c97a-0a11-48ec-9e0e-00b9a09c7a60
00:00:52.338 --> 00:00:57.750
part. And we could do, I mean
normal arithmetic, such as

NOTE Confidence: 0.8536641

ceeefc6e-cbec-4901-b12a-8a293e5a1e59
00:00:57.750 --> 00:01:02.160
subtraction or addition. The
only exception was that when we

NOTE Confidence: 0.8536641

dd68367b-fcc6-4e83-b722-8d708f857b3e
00:01:02.160 --> 00:01:07.452
did subtraction, it might end up
with the last borrow and again

NOTE Confidence: 0.8536641

8e707b56-fe7f-4316-ba43-599b8e37ebed
00:01:07.452 --> 00:01:12.744
in order to have a correct
answer, we have to apply the

NOTE Confidence: 0.8536641

6ab78c96-f85a-4145-8370-a3a3fde78a18
00:01:12.744 --> 00:01:17.595
last borrow. I mean doing another
subtraction from the that higher

NOTE Confidence: 0.8969739

9b7e5639-f8e0-4076-864b-865d70154a75
00:01:17.595 --> 00:01:22.659
number. So then the result
becomes negative and the correct

NOTE Confidence: 0.8969739

8050feae-2924-4d9b-828a-1ac8e0d9959b
00:01:22.659 --> 00:01:24.914
result actually ends after the

NOTE Confidence: 0.8837136

4a19aa2e-3ab5-4ad9-a573-90b19c132efa
00:01:24.914 --> 00:01:29.949
second subtraction. Then you
said that we wanted to have a

NOTE Confidence: 0.8837136

4f39d94e-a972-497c-a70f-93deee51d44a
00:01:29.949 --> 00:01:33.198
numbering system with negative
numbers. So we introduce sign

NOTE Confidence: 0.8837136

ecc553fe-b38c-44e4-a0e8-f971b187a384
00:01:33.198 --> 00:01:36.447
magnitude system which we
allocate the highest position as

NOTE Confidence: 0.8837136

96d436cc-2692-4f96-b45f-d16de8701d58
00:01:36.447 --> 00:01:40.779
a sign. So the highest position
loses its value. It just shows

NOTE Confidence: 0.8837136

751046f9-034d-4902-937f-0a091258d1bc
00:01:40.779 --> 00:01:45.833
the sign if it is zero in means
that the number is positive, it

NOTE Confidence: 0.8837136

2c6ca7a5-1fbc-4319-9173-15a93e482e45
00:01:45.833 --> 00:01:50.887
is non zero. It means that that
the number is negative and if we

NOTE Confidence: 0.8837136

9c6b341c-140b-424e-b880-35f5464796c4
00:01:50.887 --> 00:01:55.580
are in base 10, for instance, we
could use any non zero values,

NOTE Confidence: 0.8837136

9a1635b1-e061-4aa0-a5d0-33918ba2d55c
00:01:55.580 --> 00:01:56.663
for instance 1238.

NOTE Confidence: 0.86504704

5fd4f8b7-a4b3-4772-b2d7-19a85145ab8f
00:01:56.970 --> 00:01:59.256
As as indication of the negative

NOTE Confidence: 0.83646095

6dbe986f-e42d-4c04-b657-487c1e1583a3
00:01:59.256 --> 00:02:03.790
number. And you said that in
sign magnitude we have the

NOTE Confidence: 0.83646095

fca0f299-fce4-40a7-a1a8-f62aac1069f1
00:02:03.790 --> 00:02:05.570
normal. I mean, uh, arithmetic.

NOTE Confidence: 0.9035022

fdb75998-2f87-491b-907b-3a8f21739465
00:02:06.160 --> 00:02:10.948
But the only difference is that
we have to 1st determine the.

NOTE Confidence: 0.81805676

3056ca28-7cab-494c-abe3-17d16b6e8dca
00:02:12.710 --> 00:02:14.730
Sign of the result.

NOTE Confidence: 0.86377615

24398e4b-182b-4bdc-a477-396142d44fc5
00:02:15.450 --> 00:02:21.624
So based on the fact that we are
adding two positive number or to

NOTE Confidence: 0.86377615

377a987b-5c01-493b-b860-480192e174c7
00:02:21.624 --> 00:02:26.475
negative number the I mean the
sign would be positive or

NOTE Confidence: 0.86377615

1e4f975d-e42c-426f-bb7a-6b4e85fc310d
00:02:26.475 --> 00:02:28.239
negative or let me.

NOTE Confidence: 0.7171423

366efeba-3e84-4151-8c56-10059d469de6
00:02:29.040 --> 00:02:32.840
Make my.laser
my laser point, yes.

NOTE Confidence: 0.8763811

7cf0374c-d1c9-402a-9b42-028fbb67b549
00:02:34.240 --> 00:02:38.020
And if we are doing addition a
positive number with a negative

NOTE Confidence: 0.8763811

cf28c91e-b10b-41a8-8e36-e4592289341d
00:02:38.020 --> 00:02:42.430
number, we said that we have to
wait until at the end of the

NOTE Confidence: 0.8763811

8868c5f5-048a-4449-9870-2c902bf68f3c
00:02:42.430 --> 00:02:46.210
result. If the result has a
borrow, it means that the first

NOTE Confidence: 0.8763811

50769b00-8396-488f-936b-7ffa955058c0
00:02:46.210 --> 00:02:49.360
number is smaller than the
second number. The result is

NOTE Confidence: 0.8763811

ae589fc0-2610-49f9-8f71-915baf023d8b
00:02:49.360 --> 00:02:54.085
negative. We put one here or any
non 0 value here and then we do

NOTE Confidence: 0.8763811

16146d89-432a-44d7-b1a4-f2cbd7e4ddc6
00:02:54.085 --> 00:02:56.290
another subtraction without
borrowing without higher number.

NOTE Confidence: 0.8749317

3aa3628b-242a-433d-a1c1-b481a144fad4
00:02:56.900 --> 00:03:01.399
For the subtraction, the easiest
one is this. I mean, subtracting

NOTE Confidence: 0.8749317

bbdfb600-8c92-494e-83dc-64adf754121b
00:03:01.399 --> 00:03:05.080
a negative number from a
positive number, so subtraction

NOTE Confidence: 0.8749317

6fbe7cd3-a6d7-4bb2-96a4-e48340a6f99a
00:03:05.080 --> 00:03:09.170
of a negative number becomes
positive, so the result is

NOTE Confidence: 0.8749317

48dcd149-7d13-44c5-88d7-9ff5c3f5e0bd
00:03:09.170 --> 00:03:11.215
positive and we do normal

NOTE Confidence: 0.85925406

d9a253d9-7a70-4353-8c99-ba119443fb1d
00:03:11.215 --> 00:03:15.523
addition. But the exceptions are
when we are subtracting a

NOTE Confidence: 0.85925406

61b48249-42d5-4918-9d1c-ca19fcfc4c86
00:03:15.523 --> 00:03:19.193
positive number and a negative 2
positive numbers and two

NOTE Confidence: 0.85925406

0fe47c11-832f-423f-9a59-60c666fa45ce
00:03:19.193 --> 00:03:23.597
negative numbers. So again we
have to wait until to see that

NOTE Confidence: 0.85925406

9facf783-6ec0-4a3c-b85d-1fbfb7b27265
00:03:23.597 --> 00:03:27.634
the first number is smaller or
lower. For positive numbers, if

NOTE Confidence: 0.85925406

7566ea4f-e92a-4e54-970e-22182f28f94b
00:03:27.634 --> 00:03:32.038
you do the subtraction, if the
first number is lower than the

NOTE Confidence: 0.85925406

0e166da8-e8e6-45c8-9f80-2d201adfe592
00:03:32.038 --> 00:03:36.075
second number, the result is
negative. It it produced a last

NOTE Confidence: 0.85925406

50e4a6c1-278c-4eb4-8e1f-7ba9e2c1fa52
00:03:36.075 --> 00:03:40.112
borrow, so we have to do another
subtraction with that higher

NOTE Confidence: 0.85925406

420a4f0d-ec57-48c3-a681-b8dc7d6bdc37
00:03:40.112 --> 00:03:42.314
number to have a correct result.

NOTE Confidence: 0.84245956

33a9cde0-dacd-47a5-bb54-1d0ed8d19c0e
00:03:43.540 --> 00:03:48.028
And for the subtracting two
negative numbers, because

NOTE Confidence: 0.84245956

10aff2d6-9214-48ab-ab96-6c74865e75b3
00:03:48.028 --> 00:03:53.077
subtracting a negative number
becomes positive, so it means

NOTE Confidence: 0.84245956

8d5ae38a-115d-4dc2-a1b6-df99393c2819
00:03:53.077 --> 00:03:56.443
that minus X a negative number

NOTE Confidence: 0.8560225

36e330ab-c8f4-4acd-a5c1-4f72113bd06a
00:03:56.443 --> 00:04:00.222
here plus. Subtracting a
negative number becomes a

NOTE Confidence: 0.8560225

8b8117e5-b55d-40c4-a131-13a1bb49abbe
00:04:00.222 --> 00:04:02.998
positive number plus a
positive number, which means

NOTE Confidence: 0.8560225

5ef0a893-6ce6-4e46-b3c7-e5a2321f9131
00:04:02.998 --> 00:04:07.509
that a y - X here and again
it may introduce a last

NOTE Confidence: 0.8560225

31fcae1f-df94-40de-a23e-b852c3dd9ecd
00:04:07.509 --> 00:04:11.673
borrow and then you have to
apply the bottle and based on

NOTE Confidence: 0.8560225

b07bcbc2-d896-489c-932e-8ecfd3ba77e8
00:04:11.673 --> 00:04:14.449
the borrow you have to
determine these signs.

NOTE Confidence: 0.8776185

aacfe186-6362-47fc-a0bf-df003d111eba
00:04:15.770 --> 00:04:22.439
So we did some practices and
reset that there is a chance for

NOTE Confidence: 0.8776185

e13d3546-309e-4488-aca2-4c050a7b0145
00:04:22.439 --> 00:04:27.569
overflowing sign magnitude and
it happens when you do the

NOTE Confidence: 0.8162162

c6d58411-86c8-451e-9e35-0134eb42ac9b
00:04:27.569 --> 00:04:32.510
addition. And the addition
actually creates a carry last

NOTE Confidence: 0.8162162

acd4e4a5-8135-4bf9-9336-cd7b910d3583
00:04:32.510 --> 00:04:35.120
Carrion that Carry goes to this

NOTE Confidence: 0.85841614

52dcc921-8cf1-4a46-b908-f2fbe270520a
00:04:35.120 --> 00:04:40.600
sign position. But as I said,
the sign doesn't have any value.

NOTE Confidence: 0.85841614

e20bf6d6-27f4-4c82-bffb-d6acffa9fd2d
00:04:40.600 --> 00:04:45.376
If you put the Carry resulted
from the addition to the sign, it

NOTE Confidence: 0.85841614

4a080f07-6862-4797-aa97-a7f594ba91d1
00:04:45.376 --> 00:04:50.152
may change the sign of the
number. If it is positive, it

NOTE Confidence: 0.85841614

0787116c-33d5-4b32-8920-d7b15d333d85
00:04:50.152 --> 00:04:55.326
make the Carry make it, I mean
negative, or if there's a Carry

NOTE Confidence: 0.85841614

c71ebee5-d4f3-49a5-a3f4-47940d16c203
00:04:55.326 --> 00:05:01.296
goes to the sign position. If it
is negative, 1 + 1 becomes 0, so

NOTE Confidence: 0.85841614

85b07d60-3060-4699-9245-007fd84013e6
00:05:01.296 --> 00:05:04.480
it changes the sign from
negative to positive.

NOTE Confidence: 0.8388628

513c6fe1-b088-433a-92be-10526db6cac7
00:05:05.160 --> 00:05:10.092
Or in this case, if you, I mean
again, another carry produces

NOTE Confidence: 0.8388628

5704dd6b-6b28-4b9a-a18a-f55e3aeae22f
00:05:10.092 --> 00:05:16.257
from this addition. It makes it
a, 1 + 0 one, so make it a

NOTE Confidence: 0.8388628

0dee8964-3c8f-4b17-abb4-5ee7d9fb151b
00:05:16.257 --> 00:05:19.956
positive number negative number,
so overflow in signed magnitude

NOTE Confidence: 0.8388628

43438ea9-62af-4220-baea-8b16d8dd1994
00:05:19.956 --> 00:05:24.477
happens when you are doing
addition and there is a last

NOTE Confidence: 0.8388628

3a777b94-7958-4fb3-92fd-8e75e80edabe
00:05:24.477 --> 00:05:28.176
Carry and that carry goes to sign
position and change the sign.

NOTE Confidence: 0.9130685

5bab7769-31e6-44bf-a5b4-d1807c9f6ffb
00:05:29.660 --> 00:05:33.116
We did a little bit practice
there and then. You said that.

NOTE Confidence: 0.8311123

3570edd0-d450-4a0f-af6f-41e9030674cd
00:05:33.710 --> 00:05:38.350
Uh, because uh, sign magnitude
waste, a lot of possibilities

NOTE Confidence: 0.8311123

f780cbfb-9d77-4c0e-80cb-11c3e1908870
00:05:38.350 --> 00:05:43.454
for numbers of We want to
improve the system and the

NOTE Confidence: 0.8311123

99299a0b-d9c7-4f79-a2aa-7b2dd3882fe4
00:05:43.454 --> 00:05:48.094
improved system was signed
compliment in order to make a

NOTE Confidence: 0.8311123

a11b8120-be73-4e75-8b82-4ba8ec9a570b
00:05:48.094 --> 00:05:51.806
sign compliment numbering system
having positive and negative

NOTE Confidence: 0.8311123

7d26273b-1357-421c-b310-1876c5ab5faa
00:05:51.806 --> 00:05:55.982
number without any waste. We
introduced diminished radix after

NOTE Confidence: 0.8311123

6e7b2129-da87-493e-b62d-71e277d8800a
00:05:55.982 --> 00:05:57.838
diminished radix we introduced.

NOTE Confidence: 0.8430983

1351a96c-086a-4b3c-b3f9-dc05b387ffde
00:05:59.420 --> 00:05:59.770
The.

NOTE Confidence: 0.74095607

6f35d683-c712-4464-afc3-c0a6bf32cbd7
00:06:01.120 --> 00:06:04.298
Radix complement radix
complements were basically based

NOTE Confidence: 0.74095607

96e5cb6d-833e-4e01-b444-b0164a78c7ec
00:06:04.298 --> 00:06:08.838
based on the diminished radix,
meaning that you applied. It

NOTE Confidence: 0.74095607

9d277ac0-216c-4506-a32c-32e36a3824e2
00:06:08.838 --> 00:06:11.108
diminished radix and then plus

NOTE Confidence: 0.853758

a97b856d-e768-45f6-a5b3-92f39c42defd
00:06:11.108 --> 00:06:16.830
one. So, uh, whenever you're
asked to do a radix complement

NOTE Confidence: 0.853758

1e776175-5743-484c-a44f-01d1c261a119
00:06:16.830 --> 00:06:21.868
r's compliment. You can do this
calculation directly r to the

NOTE Confidence: 0.853758

18d80b82-28c2-415a-995e-265fde9a9b41
00:06:21.868 --> 00:06:27.822
power of N minus n, or you can
do the diminish complements plus

NOTE Confidence: 0.83522946

563675b4-e6bf-4d3d-8d60-dda918b61540
00:06:27.822 --> 00:06:33.611
one. Usually in practice this is
small. I mean easier because the

NOTE Confidence: 0.83522946

8e9d31ef-a0a8-48c2-843c-3b0b377250cd
00:06:33.611 --> 00:06:36.899
diminished radix  means that
subtracting each digit from the

NOTE Confidence: 0.83522946

7e2b9589-8ab6-44a6-a244-43109f2d55b9
00:06:36.899 --> 00:06:41.420
largest digit and then when you
end with the diminished radix

NOTE Confidence: 0.83522946

24b68ff1-395c-4e98-a16a-b8ecdea5af8e
00:06:41.420 --> 00:06:43.886
complement, you just add 1 unit.

NOTE Confidence: 0.778324

6725b906-071c-472b-8a13-305376e60db2
00:06:44.650 --> 00:06:49.966
So we did practice in base 2 IN
base two diminished radix is

NOTE Confidence: 0.778324

be39ae80-72ce-4ef7-a2e3-b372cd249772
00:06:49.966 --> 00:06:53.953
ones complement, which means
that just negate or invert.

NOTE Confidence: 0.84973454

73b28f98-8b76-4a39-8036-65abb70172a2
00:06:56.210 --> 00:07:01.085
Inversion, you have to just apply
not or invert each digit if it

NOTE Confidence: 0.84973454

32cc08e3-0fea-420b-b18e-526c711f3c2f
00:07:01.085 --> 00:07:06.335
is zero, it becomes one. If it
is 101, it becomes zero and then

NOTE Confidence: 0.84973454

ea4a4bb8-10a0-4b14-bab4-0bb57b8cf0e2
00:07:06.335 --> 00:07:08.960
at the end you add 1 unit.

NOTE Confidence: 0.8108479

6be7d7f7-46af-4bb9-bd86-17b4ce0ff42b
00:07:10.330 --> 00:07:15.489
So in we practice on the
other basis base 4 IN base

NOTE Confidence: 0.8108479

596cab8d-2c3d-4196-8c08-1f982d1d79ec
00:07:15.489 --> 00:07:20.179
for it means that you apply
the diminished radix, freeze

NOTE Confidence: 0.8108479

dd82b0f8-a9ad-4ecf-bdcd-e55b0a108707
00:07:20.179 --> 00:07:24.400
complements or each digit
minus three, and then you

NOTE Confidence: 0.8108479

0ed59c54-ecc3-4934-a3db-298993ad26f5
00:07:24.400 --> 00:07:26.276
just add 1 unit.

NOTE Confidence: 0.8124579

bf8fc8b9-201e-43e4-9703-b80d0940b0bb
00:07:28.590 --> 00:07:33.350
In the base 10, and we practice an
in total I mean in general r's

NOTE Confidence: 0.8124579

0e41976a-73cd-4fca-817d-910943583376
00:07:33.350 --> 00:07:36.750
complement of this are means that
diminish radix r minus ones

NOTE Confidence: 0.8124579

9fbf0da9-a790-4847-b2cd-6cbaf7b39a34
00:07:36.750 --> 00:07:37.770
complement plus one.

NOTE Confidence: 0.82048583

0069b7c8-b309-4271-b868-e326cefeeeac
00:07:38.980 --> 00:07:45.688
And then you said that we can
use the radix complements as as

NOTE Confidence: 0.82048583

74ddf3b9-bb5b-4052-b87f-7c266851657e
00:07:45.688 --> 00:07:50.332
a way to represent negative
numbers without wasting any

NOTE Confidence: 0.8612444

93f15d41-33ed-4e7d-9d37-ad2279cd2169
00:07:50.332 --> 00:07:56.070
positions. So we said that we
can give up some positive

NOTE Confidence: 0.8612444

1e089919-5b12-441f-83ad-4882378508ff
00:07:56.070 --> 00:07:59.066
numbers for negative
compliment of that number.

NOTE Confidence: 0.8612444

3a25ba76-2570-4004-aed6-a8b6f7dd7eba
00:07:59.066 --> 00:08:04.630
For instance, we can give up 9
for the 10s complement of nine,

NOTE Confidence: 0.8612444

ae8f2df4-8ebb-40cc-ae70-6e15f79184be
00:08:04.630 --> 00:08:11.050
which is 1 and make it negative.
So minus one we can give up 8

NOTE Confidence: 0.8612444

3c821679-3d80-4b6c-8d47-e5148c27f8d6
00:08:11.050 --> 00:08:15.330
for its negative complements 10's
complement, so it becomes minus

NOTE Confidence: 0.8612444

b55d45f9-81ed-4f68-8404-d150b4d74500
00:08:15.330 --> 00:08:20.466
two and etc. So this way without
wasting any possibility for a

NOTE Confidence: 0.8612444

b563c7db-e567-448c-9af6-82d8c4737abd
00:08:20.466 --> 00:08:22.606
number, we can have both.

NOTE Confidence: 0.85326385

1a1b5c2e-8492-412e-b436-ec73a99cf166
00:08:22.820 --> 00:08:24.908
Positive and negative numbers.

NOTE Confidence: 0.7554978

ba98a376-1c31-4ffc-9101-76c7f00c9d6c
00:08:26.910 --> 00:08:31.746
but the thing is. For
instance, if you are in base 10.

NOTE Confidence: 0.78103805

2828bcc2-d7ba-4284-9154-044da1ed6aed
00:08:33.110 --> 00:08:38.450
If we are given in the, uh,
signed ten's complements

NOTE Confidence: 0.78103805

ff59dd80-73bb-45f8-b5d5-aacd1b11c77d
00:08:38.450 --> 00:08:43.256
numbering system, all the
negative numbers are also is

NOTE Confidence: 0.78103805

d1189aa2-dc58-4576-b5e4-8b2b7399f027
00:08:43.256 --> 00:08:49.130
still in the positive. I mean
figures or in a positive

NOTE Confidence: 0.78103805

a76789bf-1526-40f3-b9b7-17b056eb436c
00:08:49.130 --> 00:08:53.936
illustration. But we interpret
them as negative numbers, so.

NOTE Confidence: 0.680416

5f7f72e6-58e8-4679-8f0a-c456dd8165dc
00:08:54.590 --> 00:08:58.802
We did practice inside a 10s
complement base 10.

NOTE Confidence: 0.90154594

a51280a2-f216-4790-9cc6-4d1f1a4f70c9
00:08:59.440 --> 00:09:01.308
So just one hint.

NOTE Confidence: 0.8988348

0f088716-ae06-4889-8cd2-f878bfca7322
00:09:01.920 --> 00:09:05.671
In the questions or in when
you're buying a computer system,

NOTE Confidence: 0.8988348

c48d302a-169b-401c-b5de-7b460dd06200
00:09:05.671 --> 00:09:10.104
or etc. First, you might say
that the system is base 10. It

NOTE Confidence: 0.8988348

dbc6294d-0a82-40d9-b5f4-31e8d36ddecf
00:09:10.104 --> 00:09:13.514
means that it only has positive
numbers in base 10.

NOTE Confidence: 0.83280087

e26be7a5-c3be-49f9-ae88-838c2be0b22e
00:09:14.350 --> 00:09:18.718
But you might, uh, it might have
more specifiers if you might

NOTE Confidence: 0.83280087

6907b4f0-5e76-4839-b985-c45df59437e4
00:09:18.718 --> 00:09:22.722
ask. For instance, it says sign
magnitude base 10 it means

NOTE Confidence: 0.83280087

05d0d04e-bb1c-4411-a93a-a55be1183b83
00:09:22.722 --> 00:09:26.726
that it has negative number, but
in in sign magnitude system.

NOTE Confidence: 0.839568

ebdf752d-af90-430b-95b3-a9bc6ec536ff
00:09:27.280 --> 00:09:33.235
But the I mean so far the best
system we have is for instance. If

NOTE Confidence: 0.839568

b7d813ef-b3d8-4d46-bc30-d90866b07d8c
00:09:33.235 --> 00:09:37.602
you're in base 10, it is signed
10's, complement base 10

NOTE Confidence: 0.839568

33335f94-63bb-4df8-925b-a1341f39d3c2
00:09:37.602 --> 00:09:41.572
meaning that we have negative
and positive numbers and the

NOTE Confidence: 0.839568

a8a07b11-4c6b-4502-a99f-426deb4cd095
00:09:41.572 --> 00:09:44.748
negative numbers are represented
as the ten's compliment.

NOTE Confidence: 0.9408695

65fd417a-ff19-400e-a3b8-22df26ad5a99
00:09:46.670 --> 00:09:47.370
So.

NOTE Confidence: 0.8693913

bfdfa15e-26b7-40a9-88e7-ae0604bbb143
00:09:48.770 --> 00:09:53.698
I said, I mean when we have a
base 10 and in order to

NOTE Confidence: 0.8693913

ae80268c-d659-4e1f-be29-ecac8f20d2f8
00:09:53.698 --> 00:09:56.866
represent negative numbers in an
10's complemented we just

NOTE Confidence: 0.8693913

71d2cb6a-de69-4c22-8f24-01c3ce07674a
00:09:56.866 --> 00:10:00.034
have the range of the numbers
the first half.

NOTE Confidence: 0.90560454

8474c55c-514d-4794-99c1-9ee91cbc074d
00:10:00.200 --> 00:10:03.240
Are the positive numbers. We
don't do anything.

NOTE Confidence: 0.9445428

66be97a0-4e81-450b-afde-9cf96e716bcd
00:10:03.850 --> 00:10:05.378
But the second half.

NOTE Confidence: 0.87861466

0d435de7-05d9-4f56-8d6a-a77291691d72
00:10:07.070 --> 00:10:10.601
Are negative and we have to
in order to interpret them,

NOTE Confidence: 0.87861466

eaff43f4-39d6-494c-9af8-625315e420ef
00:10:10.601 --> 00:10:14.132
you have to apply the ten's
compliment to find to find

NOTE Confidence: 0.87861466

6d868389-ef49-4388-809d-218f02d481d9
00:10:14.132 --> 00:10:17.021
the negative numbers and put
the negative sign here.

NOTE Confidence: 0.873581

6cae7054-a02b-403f-854d-9fc891a6347f
00:10:18.310 --> 00:10:23.472
Uh, so. And base 10 and given
first and seven position. We

NOTE Confidence: 0.873581

8f60fea0-3a73-49ca-8016-5bc6d4b39d3c
00:10:23.472 --> 00:10:27.996
said that this is the maximum
number divided by two so if the

NOTE Confidence: 0.873581

69c707ce-cad7-4b2e-b8fe-a2c38ba6b0e8
00:10:27.996 --> 00:10:32.172
number is between zero and this
number. It means that the number

NOTE Confidence: 0.873581

e6858f55-40d0-47ac-af19-8ad62f54b10d
00:10:32.172 --> 00:10:36.696
is positive and if it is more
than this number up until the

NOTE Confidence: 0.873581

791b9cc1-dd37-49ef-831c-ba609c9b1331
00:10:36.696 --> 00:10:38.436
maximum number that's a negative

NOTE Confidence: 0.8624517

f7b2d757-a242-4442-9974-18a898afb64f
00:10:38.436 --> 00:10:43.486
number. This is an example. We
said that if you are given 7

NOTE Confidence: 0.8624517

850fec2d-5711-4bf8-8995-eeae4822f868
00:10:43.486 --> 00:10:45.887
position, the maximum number
gonna be this.

NOTE Confidence: 0.87090504

fd7149ff-fdf6-457f-a968-ac8f45ca0a96
00:10:46.540 --> 00:10:50.368
Divided by two, this is the
maximum number divided by two,

NOTE Confidence: 0.87090504

032e1736-f927-44d0-8f3c-cf1f4a454072
00:10:50.368 --> 00:10:53.848
becomes this and because this
given number is greater than

NOTE Confidence: 0.87090504

fe246863-0d4f-4479-9921-53458d6e8088
00:10:53.848 --> 00:10:55.588
this, the number is negative.

NOTE Confidence: 0.8842962

bef33fbd-b911-4f00-974a-46bd4900716c
00:10:56.470 --> 00:11:00.771
And in order to interpret it
into a correct negative number,

NOTE Confidence: 0.8842962

3c0b7c2d-6dfe-4f83-8629-91e9b4353622
00:11:00.771 --> 00:11:05.463
we have to apply 10s complement.
So although we showed the number

NOTE Confidence: 0.8842962

19031565-d688-46f7-a069-832e9adc9e3a
00:11:05.463 --> 00:11:09.764
by positive number, but in fact
this is interpreted as negative

NOTE Confidence: 0.8842962

a8d095a6-d0eb-4332-9284-925077f4cdd1
00:11:09.764 --> 00:11:12.110
number and this is the negative

NOTE Confidence: 0.822758

38cb6679-3f4e-4542-8c7f-cc64beb27f60
00:11:12.110 --> 00:11:17.593
number. Your reverse, if we are
given a negative number and we

NOTE Confidence: 0.822758

b898ddf1-7657-4179-a189-26d4ce974280
00:11:17.593 --> 00:11:22.189
wanted to represent it in a
ten'ss complements base 10 so we

NOTE Confidence: 0.822758

0c65ebee-a32c-4f40-830c-4453fda8475b
00:11:22.189 --> 00:11:26.785
have to represent because this
is negative, we have to show it

NOTE Confidence: 0.822758

0ff640eb-0a9b-4ce4-854b-58649d922881
00:11:26.785 --> 00:11:31.381
as a positive. So we have to
figure out what's the positive

NOTE Confidence: 0.822758

17b2f834-19ee-4ea7-96de-e8cb4893c698
00:11:31.381 --> 00:11:35.211
complement of this and the
positive compliment. Just apply the

NOTE Confidence: 0.822758

622e862b-d7a2-4bb0-8734-07c714720564
00:11:35.211 --> 00:11:39.041
ten's complement on that which
is. Which means that just

NOTE Confidence: 0.822758

63841f05-239d-4990-8c5f-43b73958089e
00:11:39.041 --> 00:11:42.488
applying nons compliment plus
one, an applying nine's compliment

NOTE Confidence: 0.822758

401b343b-7cb4-473c-9803-aa58536dd1ba
00:11:42.488 --> 00:11:44.020
is that just subtract.

NOTE Confidence: 0.90498495

ac7fca37-63d4-47f2-a90e-3ee94df9182e
00:11:44.090 --> 00:11:49.745
Each digit from the largest
digit 9 + 1. This is the number

NOTE Confidence: 0.90498495

14b78743-dde9-41ef-92ac-3bcf514b373d
00:11:49.745 --> 00:11:54.965
we have to put in the positions
to be interpreted as the

NOTE Confidence: 0.90498495

a2c5c251-ec6a-4a40-9d16-655454c8f0e6
00:11:54.965 --> 00:11:56.270
negative 3,000,000 something.

NOTE Confidence: 0.87261623

5021816d-2297-4ef1-a5d9-71c469bc29c0
00:11:58.660 --> 00:12:03.149
So. We did another
example in base 16.

NOTE Confidence: 0.7911929

9dc5a802-d938-48cd-9541-7cf76c2f3ef5
00:12:04.420 --> 00:12:10.348
And in general, we said that,
uh, in r's compliment base r

NOTE Confidence: 0.7911929

6b3a1f49-f130-43f6-8253-a14eae74614d
00:12:10.348 --> 00:12:14.794
we have negative numbers, but
the negative numbers are

NOTE Confidence: 0.7911929

a1779cdd-3d9d-4052-97cb-cf09baf98ce2
00:12:14.794 --> 00:12:16.770
represented as positive numbers.

NOTE Confidence: 0.7619952

8f8fd0b9-1380-4d7a-8c63-264ac543a0f8
00:12:18.290 --> 00:12:20.210
But I find r's compliment.

NOTE Confidence: 0.19050542

02104433-5468-4575-a51b-4172b444b489
00:12:22.630 --> 00:12:23.300
Uh.

NOTE Confidence: 0.7344066

05540b95-542f-4da7-a3dd-9dbe2d12d3f5
00:12:24.780 --> 00:12:28.952
As let me there, I mean we said
that in general, if you are in base

NOTE Confidence: 0.87161475

ae061a6e-c7b2-4278-bebc-9504884f3498
00:12:28.952 --> 00:12:34.935
R. So the first half gonna be
from zero to r to the power of N -

NOTE Confidence: 0.87161475

2b2ad90f-e91b-4f4d-b024-f9b555506b80
00:12:34.935 --> 00:12:40.231
1 / 2, and we said that if you
are in base two it this number

NOTE Confidence: 0.87161475

0eea6d11-4108-444f-9484-b2e3ed49c0c1
00:12:40.231 --> 00:12:44.534
becomes this number. The first
is zero and the other is 1. If

NOTE Confidence: 0.87161475

ed3564e1-bf46-42dd-aa19-5b184c04712b
00:12:44.534 --> 00:12:48.837
we are in base four it becomes
1, three in other positions and,

NOTE Confidence: 0.83999705

abd07a03-836d-4502-a850-b4519b492d0a
00:12:48.837 --> 00:12:54.637
etc. But in this slides last
session, I said that let me

NOTE Confidence: 0.83999705

8adba015-8356-4959-a2bc-a4bc6d06b79c
00:12:54.637 --> 00:12:56.305
bring this slide here.

NOTE Confidence: 0.87901336

16ac0c78-b9ed-4173-a2d8-26d6fadf398c
00:12:58.270 --> 00:13:03.444
This is the slot for the last
session. I put a formula here

NOTE Confidence: 0.87901336

843af544-2bf3-4ff2-a601-625291415c25
00:13:03.444 --> 00:13:07.424
which basically says that in
any base r numbering system

NOTE Confidence: 0.87901336

34531ce4-283f-4345-ad78-a0cb2a9ba19f
00:13:07.424 --> 00:13:12.598
or to the power of N - 1 / 2
becomes this number.

NOTE Confidence: 0.9156725

d5c1bbcd-105c-4475-8db7-d72adb5679da
00:13:14.000 --> 00:13:19.120
And this number is not always
right, so anybody can.

NOTE Confidence: 0.8730247

e4736e50-9963-48f3-996c-239ee43e092d
00:13:20.640 --> 00:13:26.520
Say why this formulation or
why this number is not

NOTE Confidence: 0.8730247

24ec1b5e-04b2-4b0f-9d8a-b083d781e978
00:13:26.520 --> 00:13:28.284
writing all bases?

NOTE Confidence: 0.81588155

ebdb3d6f-4bb4-4819-9a2e-727e20e4d50b
00:13:39.210 --> 00:13:43.794
Have you ever applied? I mean,
uh, for base, for instance 3.

NOTE Confidence: 0.92070836

aab25dcf-80a0-4987-919e-98279149c324
00:13:52.400 --> 00:13:54.206
I'm waiting for your
answer the students.

NOTE Confidence: 0.93024385

12500e5f-f5cb-40f8-a3d7-2ec5a043e23e
00:13:59.410 --> 00:14:01.330
So let me share my.

NOTE Confidence: 0.9424698

3fb38f6a-6013-4197-bde6-df67aa6259b8
00:14:02.780 --> 00:14:04.400
My camera.

NOTE Confidence: 0.81883675

116faeff-15cb-4414-bca3-37f208e906d1
00:14:10.530 --> 00:14:16.003
So I was designing the lecture
for this week and I put some

NOTE Confidence: 0.81883675

4e378265-bbb1-47bb-be8a-7845d09e6ed8
00:14:16.003 --> 00:14:19.792
questions regarding the I mean
sign Mag sign complement

NOTE Confidence: 0.9084654

06adca36-dbb5-49da-9d08-20e3ac152b5d
00:14:19.792 --> 00:14:22.140
negative numbers. And.

NOTE Confidence: 0.82376134

312490b5-b319-49a7-83d8-578ba79cf447
00:14:23.950 --> 00:14:29.266
in base 2 the maximum if we are
given for instance two positions

NOTE Confidence: 0.82376134

a4b46a19-b01e-47ab-a3bc-fcada75cf2a0
00:14:29.266 --> 00:14:30.595
or three position.

NOTE Confidence: 0.8395846

47133a9f-ee31-4c0a-b7a5-e17e3a746cd1
00:14:32.320 --> 00:14:34.162
for instance, you are given n is

NOTE Confidence: 0.89171576

73e1c546-7f76-48b2-bb8c-dd21de15d3b4
00:14:34.162 --> 00:14:40.842
equal to 3. The maximum number
gonna be 2 to the power of 3 -

NOTE Confidence: 0.89171576

fe693ffa-2134-4a2f-9e60-b70647a4bcd2
00:14:40.842 --> 00:14:45.714
1, which is basically means that
putting the largest digit in all

NOTE Confidence: 0.89171576

45a08a8f-ec7d-4178-af99-d2dfe09982d5
00:14:45.714 --> 00:14:47.338
the positions so 111.

NOTE Confidence: 0.86462057

5d8a559e-3262-4267-884f-c8fce67094a5
00:14:48.660 --> 00:14:50.229
Divided by two.

NOTE Confidence: 0.8868084

26b6319d-01d0-4bdc-8c87-64d5b367671c
00:14:52.400 --> 00:14:58.532
So which is basically means
this. I mean 8 - 1, seven 7 /

NOTE Confidence: 0.8868084

8704f8f5-0f5e-4200-a0d6-79b8823f802a
00:14:58.532 --> 00:15:04.664
2 which is equal to. As you can
see in this formula it becomes.

NOTE Confidence: 0.8712133

4df80e10-e09b-43f7-be00-e2040e67695d
00:15:05.420 --> 00:15:07.870
Seven by two in the
decimal system.

NOTE Confidence: 0.6968696

8eba0d61-34d8-4a13-9c10-31afc65f8fbd
00:15:12.220 --> 00:15:13.549
Becomes a three.

NOTE Confidence: 0.8616411

3605b151-3161-4194-87d5-433f673fb750
00:15:14.960 --> 00:15:21.880
So three in by
three positions becomes 011.

NOTE Confidence: 0.862672

333b1d2d-75c4-424d-af9a-ea94e12d1722
00:15:23.580 --> 00:15:28.390
So it works perfect for bases
that the bases are.

NOTE Confidence: 0.8911991

4ba75f70-9494-4a1b-92ec-bc9f9670f6c1
00:15:30.300 --> 00:15:30.930
Even.

NOTE Confidence: 0.868812

bed2b210-b033-46fa-9f5a-d2af969ebce6
00:15:32.180 --> 00:15:35.816
Because if the base if the.

NOTE Confidence: 0.72013843

49252db5-f145-494d-b06e-18a28131228e
00:15:38.170 --> 00:15:45.298
Base are, even when things r and
R, is even is that 2

NOTE Confidence: 0.72013843

768126b9-0d1a-4baf-a5ad-1d94017d2e9b
00:15:45.298 --> 00:15:47.674
multiplied by some numbers.

NOTE Confidence: 0.7961058

ae996ccf-4ab5-413a-b1b0-34fe9b309867
00:15:48.700 --> 00:15:54.046
r minus one becomes odd and
because of that.

NOTE Confidence: 0.88800585

b4d286e4-7157-4085-80fe-19dc6045e086
00:15:55.440 --> 00:15:59.780
You you gonna end up with such
a? I mean a number I mean.

NOTE Confidence: 0.87734544

b7103d48-a3be-44f2-adf1-320b4f62adb3
00:16:00.680 --> 00:16:03.336
Let me put it in the General 4.

NOTE Confidence: 0.9351588

d2479999-111d-4722-9bdf-0925e50e566d
00:16:04.210 --> 00:16:05.308
If you are.

NOTE Confidence: 0.7906759

f3c9744a-fc95-48d6-891b-a2969b9d7948
00:16:06.050 --> 00:16:07.400
In base R.

NOTE Confidence: 0.77565336

6940e656-2fc2-4c31-9120-e368b589035d
00:16:11.370 --> 00:16:15.930
The largest digits gonna the
largest number gonna be r

NOTE Confidence: 0.77565336

d862c63c-a6e7-4284-a7d1-03bd769c0957
00:16:15.930 --> 00:16:21.858
minus one r minus one up until
the last digit of the last

NOTE Confidence: 0.77565336

def53633-a714-4986-8569-50cfef7ef0f5
00:16:21.858 --> 00:16:23.682
position r minus one.

NOTE Confidence: 0.8509955

7d44027d-d893-4520-addb-8b5d5ac81a0c
00:16:25.320 --> 00:16:28.356
So if you divide this .2.

NOTE Confidence: 0.9239432

3ac83115-9c09-4939-9ac4-7678bda90fd1
00:16:29.020 --> 00:16:29.899
This is the.

NOTE Confidence: 0.85066605

b62fcf43-611c-45f4-984f-e2da6aa844bd
00:16:31.880 --> 00:16:33.080
Largest digit.

NOTE Confidence: 0.86110574

265d3aa1-005a-4405-956f-88e36112d573
00:16:34.720 --> 00:16:36.100
Largest number.

NOTE Confidence: 0.88354456

88b4b646-f884-4e6f-b766-cc2be505ca5f
00:16:40.020 --> 00:16:45.597
It depends whether r minus one
can be divided by two, or no

NOTE Confidence: 0.88354456

0ed5096b-be74-4405-bd90-b449aec61791
00:16:45.597 --> 00:16:52.032
if it can be divided by two. It
means that this is a number kind

NOTE Confidence: 0.88354456

480f7eb1-e873-4f50-a08f-9eded26e1ea5
00:16:52.032 --> 00:16:55.893
of two multiplied by another. I
mean integer #2Q.

NOTE Confidence: 0.7830115

5b4cbaa1-fa85-4728-94c9-dee4c7d0c437
00:16:57.370 --> 00:17:04.510
If you do a division, so two
Q as a even number divided by

NOTE Confidence: 0.7830115

6a8574b9-e41b-4151-bdd3-7678f666c58f
00:17:04.510 --> 00:17:09.100
two produces no remainder. So
basically it becomes q.

NOTE Confidence: 0.8846074

07281d9c-1b5a-4a8c-9f9c-010c99c184ae
00:17:10.100 --> 00:17:14.876
And then comes here, there is no
remainder and then the next

NOTE Confidence: 0.8846074

70661e91-3e5c-49c0-b54a-2392b2857143
00:17:14.876 --> 00:17:19.254
digit r minus one. And again
because this is a number.

NOTE Confidence: 0.7953814

afdaa24b-bd1d-4090-bf7f-90a215fceef8
00:17:20.910 --> 00:17:26.331
This is a even number you can
easily divide it by two without

NOTE Confidence: 0.7953814

bc879997-00e9-49a6-8302-241f573b8b9c
00:17:26.331 --> 00:17:32.169
any remainder. So it becomes Q
and etc. So it ends up with Q.

NOTE Confidence: 0.85985297

1867c14d-5aab-42ba-923d-ce0d1d48b8b1
00:17:32.940 --> 00:17:37.750
Here, so let's do a practice.
If, for instance we are in base.

NOTE Confidence: 0.9161869

957c5df2-7793-4bfd-89da-5608770b75bc
00:17:39.890 --> 00:17:40.680
5.

NOTE Confidence: 0.8507297

0d37aacd-d72d-443c-87e0-ebe72ea42555
00:17:42.780 --> 00:17:49.500
The largest digits gonna be
444 up until the last

NOTE Confidence: 0.8905652

368817be-cd82-44ff-aee0-c7fa9311f8ea
00:17:49.500 --> 00:17:52.535
digit. And if you divide this

NOTE Confidence: 0.79543537

ee9b3df4-a533-41c7-b8ae-bbfe05bc0544
00:17:52.535 --> 00:17:56.490
number. In base five by two.

NOTE Confidence: 0.8366627

e023b604-c990-45d5-b7d8-f58aab32a33e
00:17:57.830 --> 00:18:02.278
It becomes to two up
until this number.

NOTE Confidence: 0.9087792

d8786a54-654f-43ef-9d2d-7b50dd4557b5
00:18:06.180 --> 00:18:10.280
So this is the largest digit for
the first half.

NOTE Confidence: 0.9078097

bc179eac-5f14-42ab-8825-3da415728057
00:18:10.980 --> 00:18:13.896
And this is the maximum
number in base 5.

NOTE Confidence: 0.937839

65537bec-8c26-4e9b-a015-e98687e22831
00:18:16.620 --> 00:18:19.850
However. If you are given.

NOTE Confidence: 0.7401514

1d259e00-24cd-406d-b086-6a9f5e4b1845
00:18:21.990 --> 00:18:23.020
A base.

NOTE Confidence: 0.78739226

2059db9e-b87f-4790-b120-9957cc2c9141
00:18:29.350 --> 00:18:34.970
Or which r minus one
is not even it's odd.

NOTE Confidence: 0.78739226

5498b160-5ea3-4159-ab6e-69cfccfeca1a
00:18:34.970 --> 00:18:37.218
For instance in base.

NOTE Confidence: 0.10560428

7465fd35-3a14-40bb-ab58-2c7fc702a4c1
00:18:39.940 --> 00:18:40.730
Uh.

NOTE Confidence: 0.829135

a19cc1fc-b9d1-4abb-af04-e6361f6258e6
00:18:42.060 --> 00:18:49.760
Four R - 1 the largest digit
gonna be 333 up until the last

NOTE Confidence: 0.86520475

2d50343b-488b-4979-93ed-d4baf0519071
00:18:49.760 --> 00:18:56.249
position three. So r minus one
is is an odd number, so you

NOTE Confidence: 0.86520475

32f72e13-eede-477b-b5f2-a429acfab50b
00:18:56.249 --> 00:19:00.439
cannot easily divide by two. It
produces a remainder one.

NOTE Confidence: 0.92662543

b0bdfd2a-f30d-4198-95e7-c42b3db627c9
00:19:01.070 --> 00:19:03.086
So this is kind of true.

NOTE Confidence: 0.92099994

e6fc390e-a22d-469e-8b33-16a72728d081
00:19:04.780 --> 00:19:08.400
Q. Plus the number.

NOTE Confidence: 0.8431207

b1049d16-d3d2-4ca8-bcba-2762e7b48cfb
00:19:10.660 --> 00:19:15.160
When you divide this number by
two, it produces Q.

NOTE Confidence: 0.88298446

55fa3c91-3db7-49a7-b08d-bcea3bcd91e3
00:19:18.920 --> 00:19:24.068
And the remainder one, and then
the next number comes down. It

NOTE Confidence: 0.88298446

befbb218-4219-4a0d-a2c7-8dc6a6ce279c
00:19:24.068 --> 00:19:25.784
becomes or minus one.

NOTE Confidence: 0.8575507

870c4dea-a590-4aa1-afb7-713d58d099e6
00:19:26.490 --> 00:19:32.622
So if you are in base r this
has the significance of our so

NOTE Confidence: 0.8575507

33be1ac6-412c-487e-a06d-11973f51a45a
00:19:32.622 --> 00:19:39.192
it becomes r plus r minus one,
so it becomes two R - 1. Now

NOTE Confidence: 0.8575507

9080692c-acd0-433d-a6c4-7737cfad050c
00:19:39.192 --> 00:19:44.448
this is the new number that you
have to divide by two.

NOTE Confidence: 0.89787906

5f79fd4a-93c4-4abb-8008-53ff976df9cc
00:19:45.760 --> 00:19:48.022
So you cannot Simply put R

NOTE Confidence: 0.8358035

0b7b0e0f-e8a0-4e37-9a1e-fe43ef6e63eb
00:19:48.022 --> 00:19:52.000
Because. If you put r count
through r which is greater

NOTE Confidence: 0.8358035

9fecad6f-db14-42cd-9447-6f65e02396a0
00:19:52.000 --> 00:19:53.505
than two R - 1.

NOTE Confidence: 0.8908599

31afd3cd-0746-4ada-8071-c2413d357af3
00:19:54.340 --> 00:20:00.060
So you have to put a number or
minus one here so it.

NOTE Confidence: 0.6897576

dc1a74c8-4487-4c95-88d1-f7591899b58e
00:20:00.210 --> 00:20:00.710
becomes.

NOTE Confidence: 0.8602741

b0648474-1202-4f1c-a0e8-de66b2c85e97
00:20:01.740 --> 00:20:06.564
Two r minus two, and now you
can do the subtraction, so

NOTE Confidence: 0.8602741

497bcb30-5197-406e-bd12-98f86d3f99cb
00:20:06.564 --> 00:20:10.986
produces another remainder. So
that's why you end up with r

NOTE Confidence: 0.8602741

a9eaca5a-8228-4f66-89b4-0f07c8c2dad4
00:20:10.986 --> 00:20:16.212
minus one in other numbers, but
the first one gonna be r minus

NOTE Confidence: 0.8602741

3c1872bf-db30-475d-be8d-c9d1ceb23179
00:20:16.212 --> 00:20:17.418
1 / 2.

NOTE Confidence: 0.93920594

f4ff143d-e817-43b4-bc9d-b82b3e9965a3
00:20:18.700 --> 00:20:19.480
So.

NOTE Confidence: 0.8606979

3ab78f25-bc66-4610-b00c-0c27159eedbc
00:20:21.430 --> 00:20:23.146
Let me back to the slides.

NOTE Confidence: 0.8529104

083ab9c8-4595-443c-8526-3480cf736224
00:20:37.610 --> 00:20:44.084
So this formulation Here is not
going to be true for the bases

NOTE Confidence: 0.8529104

e95e8135-a66d-4750-86c0-60c2d48a3174
00:20:44.084 --> 00:20:50.060
that are odd, because odd minus
one become even an even number

NOTE Confidence: 0.8529104

f69e3425-3cbb-423c-ad02-9f4692b456d8
00:20:50.060 --> 00:20:52.550
divided by two produces no

NOTE Confidence: 0.85828876

8e94445a-f944-4e45-a8ab-e57d2ff37187
00:20:52.550 --> 00:20:57.625
remainder. So be careful about
that, but it is true for these

NOTE Confidence: 0.85828876

4b0e6ff7-f66c-420a-80b4-6a21a88cf7a6
00:20:57.625 --> 00:21:01.175
bases. So in the lecture
assignment for today, which is

NOTE Confidence: 0.85828876

3d3469c9-4ac1-459b-8c76-217eeec9ed47
00:21:01.175 --> 00:21:03.305
going to be released today, the.

NOTE Confidence: 0.726608

a43f5763-a64e-4233-8f5a-aa505b1dabc3
00:21:04.790 --> 00:21:08.340
there are some practices for odd bases.

NOTE Confidence: 0.8918009

b25d3361-00b1-40c5-ad32-605e52671cfa
00:21:09.330 --> 00:21:11.070
So let's back to the slide.

NOTE Confidence: 0.8859323

ad55aadb-a23f-4783-a62b-7fa32b8fe244
00:21:15.370 --> 00:21:19.465
So then he said that I mean
this second half of the range

NOTE Confidence: 0.8859323

de0719a6-8292-4c70-8004-80459eaf1070
00:21:19.465 --> 00:21:22.615
of numbers, although they are
showing positive number, but we

NOTE Confidence: 0.8859323

f87a255e-40e6-4f0e-9bef-5cd862580d45
00:21:22.615 --> 00:21:25.765
have to interpret it as a
negative numbers. And whenever

NOTE Confidence: 0.8859323

4dcb99d8-ac22-4afb-b53d-7ef7d479a364
00:21:25.765 --> 00:21:29.545
you want to see that the given
number is a positive or

NOTE Confidence: 0.8859323

ae9ef085-248b-4b24-a938-9b8491161291
00:21:29.545 --> 00:21:33.640
negative, we have to find the
first half an if it is less

NOTE Confidence: 0.8859323

2c5fb91a-8d39-498d-bbbe-ee42c3b8973c
00:21:33.640 --> 00:21:37.105
than the first half, it means
that that's a positive number,

NOTE Confidence: 0.8859323

b8bd4e0f-9227-4175-9eef-49575b7bab8c
00:21:37.105 --> 00:21:41.200
and if it is more than the
first half, it is a negative

NOTE Confidence: 0.8859323

39547b3f-cfa5-4703-8a8d-4134867dbede
00:21:41.200 --> 00:21:44.980
number and we have to apply the
radix complement to figure out

NOTE Confidence: 0.8859323

a43479a4-3e96-4bd7-bc1e-a5ed02c6c3d8
00:21:44.980 --> 00:21:46.240
what's the negative number.

NOTE Confidence: 0.8745801

50f553a2-5dc7-4de2-a2f0-136e11bfd9f3
00:21:47.870 --> 00:21:52.440
So now we wanted to do the
arithmetic in signed

NOTE Confidence: 0.9250911

ccabe0bc-2a2d-4ffb-a18a-60c5b47c3b89
00:21:52.440 --> 00:21:54.920
complement system. So.

NOTE Confidence: 0.8841633

a4b1cb9b-5687-48dc-8eec-76dab8424f1f
00:21:56.380 --> 00:22:00.712
Guys, I'm I'm. I'm seeing you
are putting some questions I I

NOTE Confidence: 0.8841633

abfd5125-a606-4cf7-b045-8c1872ec6a09
00:22:00.712 --> 00:22:05.766
will. I will give I mean amount
of I mean after this topic I

NOTE Confidence: 0.8841633

edb127d2-6897-473b-aa52-6b3c542e3b5b
00:22:05.766 --> 00:22:09.376
will answer your questions and
Sean can moderate the questions

NOTE Confidence: 0.8841633

df0eac90-67de-40e4-b840-d07168670105
00:22:09.376 --> 00:22:14.069
so please put your questions in
the chat box and I will answer

NOTE Confidence: 0.8841633

29fb16af-5246-4666-bf0c-6cc16f116c29
00:22:14.069 --> 00:22:15.152
all of them.

NOTE Confidence: 0.895877

fde310ce-558b-4154-a376-819a15330ce8
00:22:16.250 --> 00:22:19.085
Thank you so the next topic is

NOTE Confidence: 0.8075379

c9e85414-71a2-4961-99b4-40657143dbe5
00:22:19.085 --> 00:22:24.816
this. Uh, we wanted to
do arithmetic addition or

NOTE Confidence: 0.8075379

acd248a9-eb7e-4ba3-8489-8b3524dbc400
00:22:24.816 --> 00:22:29.232
subtraction signed complements,
numbering system. The beauty of

NOTE Confidence: 0.8075379

ceec9599-df8a-405c-8a87-ea162a990db4
00:22:29.232 --> 00:22:34.752
signed compliment is that when
you do addition or subtraction,

NOTE Confidence: 0.8075379

49445a69-8f3a-4821-bbcc-29724b3d288d
00:22:34.752 --> 00:22:41.376
there is no other special cases
for the addition. You simply add

NOTE Confidence: 0.87958264

a5679a1a-8d85-4b49-b67a-2fa79a84ed32
00:22:41.376 --> 00:22:45.920
2 numbers. You don't pay
attention that the numbers are

NOTE Confidence: 0.87958264

73ccfe77-14d1-4cd1-9bc0-00fddac9a47b
00:22:45.920 --> 00:22:49.470
negative or positive. You just
simply do the addition. Normal

NOTE Confidence: 0.87958264

5c9e3972-6a6c-484d-9df2-8189ee42a8ac
00:22:49.470 --> 00:22:53.375
addition as we did in the first
system without integer numbers.

NOTE Confidence: 0.849479

aa260fcb-fefc-4113-9fd0-f954e43b49f9
00:22:54.990 --> 00:22:56.388
For the subtraction.

NOTE Confidence: 0.8157295

fb21c65f-9cfc-492b-ac2b-57763efdfc44
00:22:57.180 --> 00:23:02.880
Uh, because subtracting a
positive number, making a number

NOTE Confidence: 0.8157295

1966d08e-d665-4448-ba17-e88cb5551b86
00:23:02.880 --> 00:23:08.010
in a signed system complement
system, all the numbers are

NOTE Confidence: 0.8386199

3684bedf-8858-422d-98a2-aeac02ad2b1a
00:23:08.010 --> 00:23:12.136
showing positive. Although we
interpret some numbers negative,

NOTE Confidence: 0.8386199

4554d4fe-990a-459c-9858-7006db4832d6
00:23:12.136 --> 00:23:17.349
but all of them are at least. I
mean when we represented digit,

NOTE Confidence: 0.8386199

34b62f38-702c-4a97-9be3-93a3ca146395
00:23:17.349 --> 00:23:20.557
they're all positive, so
subtracting from a positive

NOTE Confidence: 0.8386199

cef5c2fd-d3a0-4398-aa09-cfb0d50b5ee2
00:23:20.557 --> 00:23:25.369
number, at least in in figures,
makes it negative. So in the

NOTE Confidence: 0.8386199

794880da-1e3e-40b0-bdd9-24bc33ed9e90
00:23:25.369 --> 00:23:29.780
sign complement system, in order
to make in negative number, we

NOTE Confidence: 0.8386199

6e727169-3344-45f8-981f-e6184881fbbc
00:23:29.780 --> 00:23:33.790
have to simply apply the r's
compliment on that number.

NOTE Confidence: 0.896721

d26a05aa-ab87-4c7f-ab29-d5a60b7077b8
00:23:34.420 --> 00:23:38.996
So basically when you do a
subtraction of two given number,

NOTE Confidence: 0.896721

ebb61701-7e96-4313-aa7f-fabbea0f9569
00:23:38.996 --> 00:23:43.156
whether they are positive or
negative, you just simply do

NOTE Confidence: 0.896721

521360c1-6e9f-4486-b45a-ca1e9fd23d29
00:23:43.156 --> 00:23:47.732
another addition. But this time
you have to convert the second

NOTE Confidence: 0.896721

1c736027-e808-4710-ad7c-72fe513c04b6
00:23:47.732 --> 00:23:49.396
number to r's compliments.

NOTE Confidence: 0.8280048

017518e4-a9e4-449b-89bf-9d098ef32439
00:23:50.240 --> 00:23:54.452
So and then, if the these two
summation produce a last carry,

NOTE Confidence: 0.8280048

5bfd6f5d-4ee7-4671-82b9-774b6920a9d5
00:23:54.452 --> 00:23:55.856
just simply ignore that.

NOTE Confidence: 0.87465674

d3fd2e42-5632-4b4d-840f-1eb9f4e939cf
00:23:56.670 --> 00:24:00.027
This is a very beautiful,
very simple and actually

NOTE Confidence: 0.87465674

f3ba6f39-c55b-4292-a831-a99ba9592c0e
00:24:00.027 --> 00:24:03.757
works awesome without waste
of any position for the sign

NOTE Confidence: 0.87465674

4847674b-78e6-4855-a9e9-0503cda321e6
00:24:03.757 --> 00:24:05.249
system for the sign.

NOTE Confidence: 0.76914877

1f9939db-e0c6-42f5-ac95-7008fddab948
00:24:06.630 --> 00:24:08.838
As I mean symbol.

NOTE Confidence: 0.8561807

db934ad6-6327-44be-bb51-1acdd3b98624
00:24:12.500 --> 00:24:16.801
So again, we don't. If we
wanted to build a computer

NOTE Confidence: 0.8561807

b8a78fb8-d3b7-4411-b876-9dd7e267503a
00:24:16.801 --> 00:24:19.929
system to do the arithmetic
in sign compliment numbering

NOTE Confidence: 0.8561807

79dbc451-a490-436e-b68e-fa65917f2c24
00:24:19.929 --> 00:24:24.621
system, there is no need to
build 2 units one unit for

NOTE Confidence: 0.8561807

aef5588b-858d-4248-a26a-33bcb9cda8ae
00:24:24.621 --> 00:24:28.140
addition, one unit for
subtraction. We only need one

NOTE Confidence: 0.8561807

bd5ff004-dcea-45b8-beab-001f3b55919e
00:24:28.140 --> 00:24:28.531
unit.

NOTE Confidence: 0.84032005

9ff4bbd8-24cc-4f81-b20c-33b4ecf82dc1
00:24:29.670 --> 00:24:36.105
To do the addition and then we
have to build a unit to do the

NOTE Confidence: 0.84032005

47c3d0c6-2647-4a82-afe0-ac47aed6157f
00:24:36.105 --> 00:24:40.824
R's compliment. So just all the
arithmetic reduces to 1 action

NOTE Confidence: 0.84032005

5cf72444-be42-4528-8da0-cf26d33a55b3
00:24:40.824 --> 00:24:42.111
which is addition.

NOTE Confidence: 0.9376154

97ab764c-da4c-4675-a122-b7ff5897f6e9
00:24:43.260 --> 00:24:44.529
So let's practice.

NOTE Confidence: 0.8947681

c04e65f7-dddc-43f3-bf0b-954921c8b15c
00:24:45.120 --> 00:24:46.962
Imagine you are given these two,

NOTE Confidence: 0.29182857

29b48a0b-20b5-4f62-887f-f418abf2798e
00:24:46.962 --> 00:24:49.470
I mean numbers. Uh.

NOTE Confidence: 0.8882159

5f826c4d-25cf-416a-8c5b-7a97a8c39eb4
00:24:50.530 --> 00:24:54.346
For just our hint, I just
wanted to know that the first

NOTE Confidence: 0.8882159

0aa02b0e-8925-4348-b807-774c4536abb9
00:24:54.346 --> 00:24:57.526
number is a negative or
positive. This is not necessary

NOTE Confidence: 0.8882159

bd2b6961-67df-4c6b-96d3-9ce92dcdcb72
00:24:57.526 --> 00:25:01.342
for this calculation, but just
for hint we see that we are

NOTE Confidence: 0.8882159

c214f74c-e2f7-47e5-97d6-c1b150027541
00:25:01.342 --> 00:25:04.522
given how many positions six
position. So the first half

NOTE Confidence: 0.8882159

e8600e79-9510-4475-8c13-db99b49560e9
00:25:04.522 --> 00:25:09.928
going to be 2 to the power of 6
- 1 / 2, which is this number.

NOTE Confidence: 0.8798611

5db8f6c5-fabd-4fa7-88ef-cb6798d7ac84
00:25:10.980 --> 00:25:15.179
So because as using the formula
for us, it becomes zero in the

NOTE Confidence: 0.8798611

e08fdf4c-a84f-4f9f-bc40-cc66a610f40f
00:25:15.179 --> 00:25:17.117
first position and one in other

NOTE Confidence: 0.9030962

f6ecdb11-f8c3-42a0-b761-6f3897e4b2c5
00:25:17.117 --> 00:25:21.370
positions. And this number is
greater than this number, so the

NOTE Confidence: 0.9030962

c5d53770-0183-41ac-877f-058eb8c55b04
00:25:21.370 --> 00:25:24.846
number is negative. So in order
to figure out what's the

NOTE Confidence: 0.9030962

c3f85ae6-5e80-47ad-9c3b-721243390b2d
00:25:24.846 --> 00:25:28.006
negative number, this is the
negative number, which is equal

NOTE Confidence: 0.9030962

e8266c1a-efa4-44f2-8202-a11af98a75b4
00:25:28.006 --> 00:25:29.902
to minus 21 in base 10.

NOTE Confidence: 0.89695376

e53df882-4cea-47ee-bf18-3abcc2d03e92
00:25:31.420 --> 00:25:37.140
The second number we are given
this number, so we have to do

NOTE Confidence: 0.89695376

09302997-4cfc-4af3-97c2-73efa0570ca7
00:25:37.140 --> 00:25:43.300
the padding to adjust the size
of the numbers. So we add a 0

NOTE Confidence: 0.89695376

f747553a-ac2c-424e-835d-b08e1bd7cdb3
00:25:43.300 --> 00:25:46.380
here just to make it equal size.

NOTE Confidence: 0.8878263

59e8a663-0494-498f-a6e8-94fdaef6f772
00:25:47.240 --> 00:25:51.893
And then do the. Let's figure
out what's this number. This

NOTE Confidence: 0.8878263

84ff3671-5eba-4ebd-acec-1f77dd6c3ad2
00:25:51.893 --> 00:25:56.969
number is lower than the Max
the first half, so it's a

NOTE Confidence: 0.8878263

8dc3cc50-cf6a-4006-bcdd-a95160fd0efb
00:25:56.969 --> 00:25:57.815
positive number.

NOTE Confidence: 0.83826685

8382c8c0-5133-4d6c-bdf8-547f2cc47162
00:25:59.070 --> 00:26:04.556
And then again, these are for
just for our hint. We can start

NOTE Confidence: 0.83826685

e0e4214b-9b0c-4498-9179-3087a42efc0c
00:26:04.556 --> 00:26:08.776
the summation from the very
beginning. So we do this

NOTE Confidence: 0.83826685

72a0fbf1-5b5a-4ee3-a715-f2a69d2bcb72
00:26:08.776 --> 00:26:14.262
summation 1 + 0 one 1120 here
carry here and then zero here

NOTE Confidence: 0.83826685

27259eeb-577a-4400-b58e-46f5bcf67cb3
00:26:14.262 --> 00:26:18.904
carry 111 becomes three so one
here and carry on etc.

NOTE Confidence: 0.899896

ba59545b-87ed-4bde-a701-ea4f5cae2ae1
00:26:19.640 --> 00:26:23.050
So the result is just normal
addition of two numbers.

NOTE Confidence: 0.6705536

aeaad76d-5e2d-4545-99dc-54afdbc72667
00:26:24.650 --> 00:26:26.090
And then, uh.

NOTE Confidence: 0.90070146

6730329f-93f7-4584-b309-fbda8e4ef962
00:26:27.130 --> 00:26:31.134
In order to interpret whether we
have a true result, you have to

NOTE Confidence: 0.90070146

34b307ae-1975-4d68-adfa-f3c8a9ba8370
00:26:31.134 --> 00:26:34.830
see that this number is greater
or lower than the first half.

NOTE Confidence: 0.90673095

f85b917c-2562-40cb-80e2-f946e05e842f
00:26:35.550 --> 00:26:40.009
So we see that this number is
greater than this number, so in

NOTE Confidence: 0.90673095

ed530ef3-2b45-4d1e-b399-381811480aaa
00:26:40.009 --> 00:26:43.782
order to figure out what's the
correct negative number, we have

NOTE Confidence: 0.90673095

7dac32b1-ff6e-4674-aef5-635dd3926717
00:26:43.782 --> 00:26:47.212
to apply the Two's complement,
which is this number. So

NOTE Confidence: 0.90673095

ae9a9585-bc2f-4c5f-b0cc-2cedd90e7e48
00:26:47.212 --> 00:26:50.985
basically we show this, but in
fact this number is negative,

NOTE Confidence: 0.90673095

f0ef4d37-b564-4407-9243-791628f60a75
00:26:50.985 --> 00:26:54.758
and this is the true negative,
which is minus 7, so.

NOTE Confidence: 0.8777779

1e94eeba-249c-49c8-876f-7336ef6a6d9d
00:26:55.770 --> 00:26:59.784
Minus 21 + 14 becomes minus
seven I believe.

NOTE Confidence: 0.8772176

1413a742-50e1-403c-9058-0b8068a4480b
00:27:02.930 --> 00:27:07.902
For the subtraction, as I said,
Subtraction must be converted to

NOTE Confidence: 0.8772176

8d25e15e-afaa-4544-a5c4-353cecef1e46
00:27:07.902 --> 00:27:13.778
addition, so the first number as
we already saw it was minus 21.

NOTE Confidence: 0.8710467

aa8b3f57-1065-4e9f-921b-f5631a9fdda0
00:27:14.450 --> 00:27:19.507
And the second number is +8 by
padding, and when we do the

NOTE Confidence: 0.8710467

c759c08c-35cf-4c8f-96c0-e1f0382fbb19
00:27:19.507 --> 00:27:23.397
Subtraction subtracting from a
number, it makes next in second

NOTE Confidence: 0.8710467

94b2f51c-7416-4b3c-9bd1-9259d2070365
00:27:23.397 --> 00:27:28.065
number negative. So we have to
make plus 8 as a negative.

NOTE Confidence: 0.9224121

a5f6361b-6d12-44c7-8859-fe02dc43befe
00:27:28.800 --> 00:27:32.704
If this number by any
chance was negative?

NOTE Confidence: 0.8626432

20cb5402-74ac-422b-b6b6-f098c9e9de2d
00:27:34.400 --> 00:27:37.658
Subtraction from a negative
number makes it positive, so

NOTE Confidence: 0.8626432

3aead0cb-90de-4305-ad73-bcf4f564a389
00:27:37.658 --> 00:27:42.364
again you have to apply the twos
compliment. We are in base two

NOTE Confidence: 0.8626432

7168503a-dd2a-4c08-abf9-abfce42b39ef
00:27:42.364 --> 00:27:45.984
so regardless of whether the
second number is positive or

NOTE Confidence: 0.8626432

02164ffa-272c-4c02-af13-0ea0c26e3432
00:27:45.984 --> 00:27:49.604
negative, we always apply twos
compliment on the second number

NOTE Confidence: 0.8626432

62992d4d-29ca-404a-a7ed-ae84d9f5295d
00:27:49.604 --> 00:27:51.414
when we are doing subtraction.

NOTE Confidence: 0.67011535

3ea298fb-b8a6-493f-b7fe-1a484c6bfba2
00:27:52.010 --> 00:27:55.587
And by doing this, we make this

NOTE Confidence: 0.7980294

a8d53496-53af-4e52-8013-8782950b2bc8
00:27:55.587 --> 00:28:00.969
subtraction, uh? Into addition,
so in order to hear these are

NOTE Confidence: 0.7980294

f66badfa-758a-452a-b4e1-3e400e3fe872
00:28:00.969 --> 00:28:05.380
the step. What's the negative
eight? You have to apply twos

NOTE Confidence: 0.7980294

02184910-8f68-41d2-a29e-cb0f090f3cd7
00:28:05.380 --> 00:28:09.390
complements. The twos compliment
on the this number becomes this.

NOTE Confidence: 0.7980294

45716d4e-ebfd-4b07-adc0-31a1ab215114
00:28:09.390 --> 00:28:13.400
So once compliment plus one
one's complement, just invert or

NOTE Confidence: 0.7980294

48a85b06-58c8-4bf5-a624-bdd50c1bbd40
00:28:13.400 --> 00:28:16.207
not each digit plus one which is

NOTE Confidence: 0.8424502

86128b22-d029-4b28-9ee7-eb4ef8ea9c88
00:28:16.207 --> 00:28:22.280
this now? So after applying the
two's compliment in base two for

NOTE Confidence: 0.8424502

1032df79-6f46-48da-a667-20cac41e3da9
00:28:22.280 --> 00:28:27.219
the second number, the operation
becomes sum and then we do

NOTE Confidence: 0.8424502

88e19683-222f-47a3-a5a9-033241b3ade8
00:28:27.219 --> 00:28:28.566
normal summation so.

NOTE Confidence: 0.9251767

6794ef7c-eb29-4cdd-8cd7-1fe480c4b75b
00:28:29.160 --> 00:28:35.529
1 + 0 one one plus
010001 plus one becomes 2.

NOTE Confidence: 0.26424044

cf66e2af-6cc7-4238-b345-d01712936d99
00:28:36.260 --> 00:28:37.120
Uh.

NOTE Confidence: 0.86361974

a5f282aa-d4be-4a3b-bc3e-45484c2ff103
00:28:39.920 --> 00:28:46.475
There is an error here. I leave
yes it becomes 2 here must be 0

NOTE Confidence: 0.86361974

e4d98041-8695-4677-a48a-85aaa7ad5878
00:28:46.475 --> 00:28:53.030
and then goes carry here and
then 1120 and carry 1 + 1 + 1

NOTE Confidence: 0.86361974

3e094408-48a7-4626-9d54-17b60cb25a86
00:28:53.030 --> 00:28:55.652
become three so one and carry.

NOTE Confidence: 0.90558434

99e236e3-3e7b-464b-b3b1-4c2fd16fd687
00:28:56.960 --> 00:29:01.342
And then if you have a carry, we
just ignore that and then we

NOTE Confidence: 0.90558434

a1c8ec6e-726b-4b5f-9c95-b219f28dfb74
00:29:01.342 --> 00:29:05.098
have to interpret this. So I
make it through here, but this

NOTE Confidence: 0.90558434

e79e331f-4159-4980-bab8-0f5a231be8f5
00:29:05.098 --> 00:29:06.350
one must be 0.

NOTE Confidence: 0.7291618

19c7584a-be8d-45b9-bf11-e3b6d4dc8162
00:29:07.030 --> 00:29:08.178
So this is, uh.

NOTE Confidence: 0.9112008

871333e1-b5be-45ab-aea2-b370adcd20a4
00:29:08.870 --> 00:29:12.734
So we're done, that's it. So
let's see whether the result is

NOTE Confidence: 0.9112008

386383a7-e72d-4908-b7b2-9b218b549f49
00:29:12.734 --> 00:29:16.598
correct or not. So we have to
see whether this number is

NOTE Confidence: 0.9112008

2ce8b758-1aa1-4ae5-9ba7-caa556cefdd4
00:29:16.598 --> 00:29:19.818
greater than the first half. You
see that this number.

NOTE Confidence: 0.8369756

80d37d56-7475-45ce-a05d-a681f19c0211
00:29:20.520 --> 00:29:24.040
Have a one in the highest
position so it's larger than

NOTE Confidence: 0.8369756

73ffd6a1-840c-4fac-a441-21df43c0b31d
00:29:24.040 --> 00:29:28.200
this number and this is in fact
in negative number and this is

NOTE Confidence: 0.8369756

6793e4bc-8757-47ee-9fc7-49a8dec72325
00:29:28.200 --> 00:29:30.760
the true negative. After
applying the two's compliment.

NOTE Confidence: 0.90754485

be064ca3-8c32-405a-a1fb-6d72644dde55
00:29:31.540 --> 00:29:36.765
And you see that this is
gonna be this number. This

NOTE Confidence: 0.90754485

6e60073e-0a9b-4dcf-aee4-51515efd0496
00:29:36.765 --> 00:29:38.190
number is 21.

NOTE Confidence: 0.88169575

c29c7150-27b2-440c-8c3b-024cbe0a65f9
00:29:39.460 --> 00:29:43.431
And because it's greater than
the first half is negative, so

NOTE Confidence: 0.88169575

674c53a3-374d-4dbf-9d4d-96aad5a254df
00:29:43.431 --> 00:29:44.514
minus 29 so.

NOTE Confidence: 0.8803002

e206e4e0-6b9f-46a7-8b61-d076bb5b9e30
00:29:45.130 --> 00:29:48.892
Without doing anything under
result, the number is negative

NOTE Confidence: 0.8803002

eb45a1b1-77b5-40ca-80cd-5822a500569e
00:29:48.892 --> 00:29:53.072
and the negative in the East End
is minus 29.

NOTE Confidence: 0.6552044

673e28fc-b1b9-425f-af50-9a32693d175f
00:29:55.530 --> 00:29:59.405
Inside a radix complements there

NOTE Confidence: 0.8694499

70c113b7-5e05-408c-a7b8-5ef6746f102b
00:29:59.405 --> 00:30:02.040
might. In some cases that we

NOTE Confidence: 0.8735393

ba07cd62-86e0-43f4-bb13-1514f5c400fe
00:30:02.040 --> 00:30:06.060
have overflow. But the
cases for overflow for

NOTE Confidence: 0.8735393

6c6bf74a-85cc-428c-9758-9288d5e9bfa8
00:30:06.060 --> 00:30:09.245
complement system is
totally different from the

NOTE Confidence: 0.8735393

84c2a431-35b7-4c23-a63a-6bfe308cd7ed
00:30:09.245 --> 00:30:12.885
sign magnitude in sign
magnitude. If the last

NOTE Confidence: 0.8735393

6cff7b6b-531e-48f1-ab2f-84510ccce138
00:30:12.885 --> 00:30:16.980
Carry goes to the sign
position, because we have

NOTE Confidence: 0.8735393

5eead49c-8fe6-4c8d-9739-e5598b274a45
00:30:16.980 --> 00:30:20.620
signed position, so
that's an overflow, but in.

NOTE Confidence: 0.68055165

294f058b-d20d-4239-9ee5-64e91e27544e
00:30:22.160 --> 00:30:24.929
Compliment a systems.

NOTE Confidence: 0.8151419

4609c958-8d20-421a-b628-bb414480345d
00:30:25.530 --> 00:30:29.738
The Rs compliment already
complement systems. The overflow

NOTE Confidence: 0.8151419

ac36e63a-48fc-40c0-ad99-b80672c1d099
00:30:29.738 --> 00:30:36.050
is not cannot be determined up
until the end of the calculation

NOTE Confidence: 0.8151419

d3213058-c144-4bf3-a729-7bd11e201f66
00:30:36.050 --> 00:30:38.680
where we have the result.

NOTE Confidence: 0.9059112

d44cd3cf-b773-4b23-a9c8-cdba8213cad1
00:30:39.570 --> 00:30:43.820
You have to check whether
the Addition result of two negative

NOTE Confidence: 0.9059112

7042e6c2-8cf5-44f1-b35f-626c529f33cf
00:30:43.820 --> 00:30:45.095
numbers becomes positive.

NOTE Confidence: 0.86673075

a99d6429-16cd-4a72-8427-09a5fda0010f
00:30:46.310 --> 00:30:51.710
Then then that's a That's a
overflow. Or if you are applying

NOTE Confidence: 0.86673075

1885743d-df5a-49d7-8eb0-b6b6190dc9e9
00:30:51.710 --> 00:30:56.660
2 positive numbers and the
result is going to be negative

NOTE Confidence: 0.86673075

d54e7af1-583c-482e-a182-135682e8fd1c
00:30:56.660 --> 00:30:59.360
is negative. So this is another

NOTE Confidence: 0.77555275

74413153-20ee-49e3-8911-458480d60ad1
00:30:59.360 --> 00:31:05.350
factor overflow. So in signed
complements numbering system.

NOTE Confidence: 0.8660671

b29e07ba-b1d0-43e8-a017-ba5a67167cd2
00:31:06.010 --> 00:31:10.573
Uh, there is no hint for you to
figure out the overflow happens

NOTE Confidence: 0.8660671

73117ad3-97fa-4d89-bada-8ce4981094a2
00:31:10.573 --> 00:31:14.785
or not. Even if you have the
last carry, you just simply

NOTE Confidence: 0.8660671

dd96f6ad-7c46-48f1-bf97-55d574076832
00:31:14.785 --> 00:31:18.997
ignore the last carry. You have
to check your number if the

NOTE Confidence: 0.8660671

794fafa8-8942-428a-a542-40448b0efb3a
00:31:18.997 --> 00:31:23.209
number is within the, the result
is within the first half. That's

NOTE Confidence: 0.8660671

4f1d04c8-aa60-4acd-a996-d62038dee980
00:31:23.209 --> 00:31:27.772
a positive and then you have to
check the first. This first and

NOTE Confidence: 0.8660671

b0357d13-c541-4f3a-b9bc-1f99fc1505c7
00:31:27.772 --> 00:31:31.633
second number when you do the
calculation. If the result is

NOTE Confidence: 0.8660671

f5dfab50-9f8d-4d0a-81f6-ceb4e1985cf6
00:31:31.633 --> 00:31:35.845
positive but the first 2 number
is negative, this is an instance

NOTE Confidence: 0.89370096

3af2e534-d2a5-4a01-bcbf-64a976369a16
00:31:35.845 --> 00:31:41.406
of overflow. Or if the result is
negative, but the first 2 number

NOTE Confidence: 0.89370096

a228f9f2-4d66-4d22-a2e3-88b80e700a05
00:31:41.406 --> 00:31:44.574
is positive, is another another
instance of overflow.

NOTE Confidence: 0.7342004

3b23da88-3ec2-42da-b587-a81166a9d344
00:31:45.160 --> 00:31:49.100
So let's have a look at
in an overflow instance.

NOTE Confidence: 0.8476313

3efeaac7-e55e-4513-bb02-046fb8ed5949
00:31:50.740 --> 00:31:54.980
Once again, if you're given
the first number exactly the

NOTE Confidence: 0.8476313

f5d1a0e7-63e4-403f-91af-5a58048251fc
00:31:54.980 --> 00:31:58.796
same as previous example,
which is minus 21 because

NOTE Confidence: 0.8476313

5250e7ca-e5ee-4204-b067-d5bbc7da34e4
00:31:58.796 --> 00:32:00.492
it's greater than 01111.

NOTE Confidence: 0.82933134

573521fa-884d-4a67-961b-89007a0a5c67
00:32:01.680 --> 00:32:05.770
Uh, the second number is
positive because it's lower than

NOTE Confidence: 0.82933134

a243e113-8280-485d-a78e-32c030fb6c3f
00:32:05.770 --> 00:32:08.633
the that's first half in base 2.

NOTE Confidence: 0.8693289

d7233117-08cf-4a2c-a7e3-3980eb10049f
00:32:10.570 --> 00:32:14.519
So we are giving a subtraction
task, so for the subtraction

NOTE Confidence: 0.8693289

4a22cf8c-0e07-4430-be67-dcaebca4961e
00:32:14.519 --> 00:32:18.827
you have to make it at
addition. So in order to do

NOTE Confidence: 0.8693289

397c6464-04c8-46b6-9771-89ceddbdd1fa
00:32:18.827 --> 00:32:22.776
that we have to apply two's
compliment on the second number

NOTE Confidence: 0.8693289

4d7f1501-ed8f-4466-831d-c24539102b3a
00:32:22.776 --> 00:32:27.802
or in another word you have to
make 14 negative. To do that we

NOTE Confidence: 0.8693289

ae0b7b92-95ce-48b3-9ee0-a0ca7d5b09c2
00:32:27.802 --> 00:32:31.751
have to just simply apply the
two's compliment on the second

NOTE Confidence: 0.8693289

fe9a9ec5-228e-4f84-a160-c8e25ba8c636
00:32:31.751 --> 00:32:35.700
number and this is the negative
number. So basically we change

NOTE Confidence: 0.8693289

b6e73a2f-77cb-4609-8fac-08b40a150507
00:32:35.700 --> 00:32:38.213
the second number to this new
number.

NOTE Confidence: 0.8429737

a3ee575d-ddeb-46d4-8767-acc37d56aa57
00:32:40.050 --> 00:32:45.731
In order to make the positive 14
two negative 14 an changed in

NOTE Confidence: 0.8429737

0d82c933-7512-4adc-8620-a9d431dc8ed4
00:32:45.731 --> 00:32:50.538
Subtraction to addition, and
then you're good to go with this

NOTE Confidence: 0.8429737

88f87b6a-093a-4fba-96bd-6e59c8ace022
00:32:50.538 --> 00:32:55.345
summation. So after doing summation
1 + 0 because 1110.

NOTE Confidence: 0.82448477

8270dacc-bb26-4036-a5e2-b3cc8e8a23cd
00:32:56.100 --> 00:32:59.752
It becomes two, so it becomes
remainder 0 and a, Carry And,

NOTE Confidence: 0.82448477

078512e0-93b2-453e-8bb9-4d96a43f6b8f
00:32:59.752 --> 00:33:04.068
etc. And the last you can see
that there is a last Carry,

NOTE Confidence: 0.82448477

fe366347-de56-49e9-8979-b0c355ea3ab3
00:33:04.068 --> 00:33:07.720
Carry. We just simply ignore
that. And here is the result.

NOTE Confidence: 0.90047807

efe04362-ae83-4199-a5c2-6569a656dde1
00:33:07.720 --> 00:33:13.096
That's it. So now we have to see
an overflow happens or not. So

NOTE Confidence: 0.90047807

6f1c3c32-2cc0-4912-9a5c-d88d69e95582
00:33:13.096 --> 00:33:16.759
we have to figure out the result
is positive or negative.

NOTE Confidence: 0.9138781

2a20ca4d-1d2e-4eef-b869-686d23b7f75c
00:33:17.950 --> 00:33:22.175
This number is lower than the
first half, so they are not. The

NOTE Confidence: 0.93665195

fd1b26f6-720d-41cf-a299-7b7fd893f564
00:33:22.175 --> 00:33:27.299
result is positive. So we are
given two negative numbers.

NOTE Confidence: 0.90783364

e48e52e0-4c16-4751-8b40-bc50cca2637d
00:33:28.030 --> 00:33:32.038
But the last result is positive,
so this is an instance of

NOTE Confidence: 0.867506

36ce35fc-cd37-4d2c-a24b-8c128c1a47de
00:33:32.038 --> 00:33:35.843
overflow. When we overflow
happens, we said that do not

NOTE Confidence: 0.867506

45d26334-739b-4822-b9bd-10742d9c51c4
00:33:35.843 --> 00:33:39.647
look at the result. The result
doesn't have any meaning and we

NOTE Confidence: 0.867506

e2b1fb4e-41b6-4b41-b9be-484466359763
00:33:39.647 --> 00:33:41.549
have an instance of overflow.

NOTE Confidence: 0.81124675

1f9c3e71-625e-473d-beb7-05ea80d9531e
00:33:43.610 --> 00:33:48.180
So again, an act of overflow
happens in signed complement

NOTE Confidence: 0.81124675

ca39b0ac-a7fc-478c-ad82-59a98ecbd1ae
00:33:48.180 --> 00:33:52.750
system whenever you do the
addition an after the applying

NOTE Confidence: 0.90258616

74ee77eb-b615-4330-814f-3b3864e31098
00:33:52.750 --> 00:33:57.684
the addition. Is sign of the
result is different from the

NOTE Confidence: 0.90258616

f11eaf56-456b-4c0e-aca9-da353b9c0fe1
00:33:57.684 --> 00:33:59.940
sign of the first 2 numbers?

NOTE Confidence: 0.31378362

36c680c1-96c4-4a87-adad-63fde08dc960
00:34:04.350 --> 00:34:05.000
Ah.

NOTE Confidence: 0.86395615

0624e6c5-af4c-48e8-b3cf-c12bb1e18582
00:34:06.120 --> 00:34:10.800
Actually we are done with the
sign complement numbering

NOTE Confidence: 0.86395615

20056286-ba40-4ea4-8163-e5d775b2f324
00:34:10.800 --> 00:34:16.000
system, so I'm ready for your
questions if there's any.

NOTE Confidence: 0.8215355

c08ec696-083c-461a-9324-033f09a3bd3d
00:34:20.780 --> 00:34:24.060
Sean, if there's any question
there was an earlier one.

NOTE Confidence: 0.8198523

7d04be98-2f05-4214-94dd-054efac02d61
00:34:25.980 --> 00:34:28.833
Long should the lecture assignments
take us to complete?

NOTE Confidence: 0.91977113

e03ee7db-fe0d-48e8-9b17-47498773aa80
00:34:30.620 --> 00:34:31.360
One week

NOTE Confidence: 0.86686337

4536e8dc-8b55-41d6-8548-23902be6577d
00:34:33.040 --> 00:34:36.334
I can. I'll answer your
question regarding the lab

NOTE Confidence: 0.86686337

11ecac39-261a-42b4-8f43-86a484e26d17
00:34:36.334 --> 00:34:39.628
assignment or lecture
assignments. I mean in the end

NOTE Confidence: 0.86686337

368501a1-5ab7-4099-924e-a4a575896226
00:34:39.628 --> 00:34:42.922
of today's lecture. So if
there's any question regarding

NOTE Confidence: 0.86686337

40226160-9045-44c9-9ba3-3359bd768a51
00:34:42.922 --> 00:34:45.118
the topics in the current
lecture.

NOTE Confidence: 0.8057236

ebc4747c-aeb5-4c77-a7a0-8b0a9716f990
00:34:46.550 --> 00:34:49.980
I I don't see any questions OK?

NOTE Confidence: 0.88554776

064441ce-c141-4608-9735-fbdb8eaee256
00:34:51.590 --> 00:34:57.180
I will go to go one, so
let's go to the next topic.

NOTE Confidence: 0.88554776

a262147b-835b-49ce-8b94-085b25c74819
00:34:57.180 --> 00:34:58.900
In the first chapter.

NOTE Confidence: 0.88936925

b7b2c4a7-6974-4eae-b879-12c0b53ba965
00:35:00.820 --> 00:35:05.200
We are we have a another topic
called Binary Code.

NOTE Confidence: 0.8886079

7bf59cbf-f1a5-4827-909b-9eda331973e0
00:35:05.880 --> 00:35:12.450
We want to cover it today or we
can. We will cover this when we

NOTE Confidence: 0.8886079

94bf5ed7-d9b7-44c6-9860-45810e169da9
00:35:12.450 --> 00:35:17.268
in the later lectures when we
are building a computer system

NOTE Confidence: 0.8886079

19568077-cbc7-4bee-a02f-85be03c2240d
00:35:17.268 --> 00:35:22.962
and then you can see how binary
codes are helpful. But we're not

NOTE Confidence: 0.8886079

6a5c4873-34a7-4de5-8b17-10665f5b528e
00:35:22.962 --> 00:35:26.028
going to cover it today and we

NOTE Confidence: 0.752426

6474fd35-106e-400d-9131-202100364359
00:35:26.028 --> 00:35:29.070
are. Done with the first
chapter.

NOTE Confidence: 0.9274396

e7c0474e-baa9-4929-ace8-96f76ee252a2
00:35:32.040 --> 00:35:32.720
So.

NOTE Confidence: 0.90658087

4945dc44-b3b9-4c22-a5d3-fa937c2c162b
00:35:34.090 --> 00:35:39.872
We can go to the second chapter
and started a new topic, so let

NOTE Confidence: 0.90658087

32b0898c-06ad-491e-b5ba-84b117965aa8
00:35:39.872 --> 00:35:41.524
me open my slides.

NOTE Confidence: 0.8747469

ad0e0e20-db79-4f1f-8a04-20bf08d2d1f6
00:35:49.110 --> 00:35:54.076
One more thing, actually I I
fixed this in the PDF file for

NOTE Confidence: 0.8747469

be7a7c97-285d-4862-a73c-da3867aaff6c
00:35:54.076 --> 00:35:59.042
the slides in the last lecture
an I'll post it today in the

NOTE Confidence: 0.9371805

f83785c6-8512-4be7-b8e4-6de1b8152246
00:35:59.042 --> 00:36:02.366
blackboard. So let me go to the.

NOTE Confidence: 0.9151398

7b321d46-05d2-470f-9016-7abcb701c5da
00:36:04.670 --> 00:36:06.490
Second presentation.

NOTE Confidence: 0.89217913

7b4a7b81-edb3-4eb8-8928-b8682b7b9172
00:36:21.270 --> 00:36:21.930
So.

NOTE Confidence: 0.8917992

8f9b2d8a-8a50-42b2-af01-bce9a8a093b3
00:36:24.880 --> 00:36:29.339
This is the new chapter an now
the actual work in this course

NOTE Confidence: 0.3743074

3cd11424-a8a8-48bb-a3f6-5f6ab0e6d98a
00:36:29.339 --> 00:36:31.590
actually start. Oh

NOTE Confidence: 0.81769484

0947f541-20eb-4edc-81d2-5713f42226a6
00:36:33.740 --> 00:36:39.097
within the first chapter we said
that a human individual within

NOTE Confidence: 0.81769484

116ad4ce-dbb4-442b-8959-583a1dd880f7
00:36:39.097 --> 00:36:43.967
the history wanted to analyze or
process informations which were

NOTE Confidence: 0.81769484

74d09d6e-f4b2-4417-8f23-b7031e9d9ceb
00:36:43.967 --> 00:36:46.402
basically continuous in the real

NOTE Confidence: 0.89850473

b8a5b42d-a99f-4a63-bfd1-4ac350c9c0a2
00:36:46.402 --> 00:36:52.743
world. So they already build
some system that can represent

NOTE Confidence: 0.89850473

a2c19c69-256e-493d-b215-232b6f292b0d
00:36:52.743 --> 00:36:55.428
or show the continuous entities

NOTE Confidence: 0.7818533

1db7cc36-00ed-42a5-ba2a-50b2ca2ce536
00:36:55.428 --> 00:37:00.591
or quantities. And those
systems are called a analog

NOTE Confidence: 0.7818533

019be615-ec22-4f90-bba8-3ae09872dbb4
00:37:00.591 --> 00:37:04.535
systems, so any system
working with the continuous

NOTE Confidence: 0.7818533

e8800e43-9786-4dda-8f6d-35aea1530434
00:37:04.535 --> 00:37:06.014
entities called Analog.

NOTE Confidence: 0.64144164

0f188513-fd37-4c61-b4ad-25aeeadef2f1
00:37:07.080 --> 00:37:09.330
Uh, for instance.

NOTE Confidence: 0.85703135

5cd487d6-e51c-4946-89f2-6df0a33812b1
00:37:11.880 --> 00:37:16.188
Uh, in a radio station, when is
speaker talks to a microphone?

NOTE Confidence: 0.86791366

a33d4631-31d1-4335-b8c3-d7a8b42cb2ff
00:37:16.780 --> 00:37:21.620
In the old I mean, uh systems,
basically, behind the microphone

NOTE Confidence: 0.86791366

dc1b4001-7e95-4de9-82f7-66117a70ccc1
00:37:21.620 --> 00:37:27.340
there were a I mean power source
or voltage, and based on the

NOTE Confidence: 0.86791366

d505691f-55b3-4af3-ae11-d1f092afbf78
00:37:27.340 --> 00:37:33.060
volume of the speaker when her
when she was talking or he was

NOTE Confidence: 0.86791366

13f5775f-2c6b-4772-b361-6766912667bb
00:37:33.060 --> 00:37:37.460
talking to the microphone it
changes the voltage. I mean

NOTE Confidence: 0.86791366

b7d941e0-88f6-4a5d-8612-521c35aef630
00:37:37.460 --> 00:37:39.220
Digree but continuously within

NOTE Confidence: 0.8450958

ab46da2f-5bf3-40ea-917f-f754047c971f
00:37:39.220 --> 00:37:43.040
the time. And then,
uh, it converted.

NOTE Confidence: 0.85121655

4e754dfd-3fea-4038-aba8-c3e433870bb0
00:37:44.560 --> 00:37:49.972
This converted to the waves and
then in the receiver you receive

NOTE Confidence: 0.85121655

ab3f0da3-674d-43fd-a646-6e5187dcbf76
00:37:49.972 --> 00:37:53.129
the waves and then
restructuring. Reconstruct the

NOTE Confidence: 0.85121655

e06fd390-c11b-4cc9-a5e9-b42d8c710753
00:37:53.129 --> 00:37:58.541
voltage in a continuous way
within the time in order to hear

NOTE Confidence: 0.85121655

397c372c-8bd6-4993-bbcb-834a990382b4
00:37:58.541 --> 00:38:01.247
whatever I mean it's talkin the

NOTE Confidence: 0.8677739

c376a473-96a8-4491-b34e-9b321f3b521c
00:38:01.247 --> 00:38:07.677
radio station. So I might I'm
not sure you remember those

NOTE Confidence: 0.8677739

89a5a66a-f86a-489a-92f1-007017d95757
00:38:07.677 --> 00:38:10.342
systems, but I mean in.

NOTE Confidence: 0.8386946

d05b6c39-c190-4491-b7d2-0acf1f62452f
00:38:11.550 --> 00:38:18.498
A 1950s or 1940s or even
I mean very recently. All these

NOTE Confidence: 0.8386946

b794bfe7-26ed-4045-8943-c0baea653f3f
00:38:18.498 --> 00:38:24.288
systems were analyzed based on
the processing or showing the

NOTE Confidence: 0.8386946

ae61b370-b33e-4c4a-bbfb-1701582a65f5
00:38:24.288 --> 00:38:31.236
continuous way of the I mean
entities or quantities. But as I

NOTE Confidence: 0.8386946

def605b6-ff40-4580-8ba0-d65991e9c374
00:38:31.236 --> 00:38:34.710
said, in order to process a

NOTE Confidence: 0.87504834

0423470f-d20a-48ca-b533-b2c0707f1712
00:38:34.710 --> 00:38:40.506
continuous entity. In order to
analyze and process it and do

NOTE Confidence: 0.87504834

d69655af-65bc-48e7-ae96-0f9a52c1f7b9
00:38:40.506 --> 00:38:44.946
calculation with them, we need
to break the continuous entity

NOTE Confidence: 0.87504834

47a9943b-6b39-4c0f-a91c-c7fdc4909d29
00:38:44.946 --> 00:38:50.274
into discrete units and then we
have to represent them by some

NOTE Confidence: 0.87504834

dcea7efc-ec4c-4dfc-9b02-f024724dcb82
00:38:50.274 --> 00:38:55.158
symbols or digits. And you said
that the discrete systems or

NOTE Confidence: 0.87504834

f75b2410-6540-47b0-ac3c-a9fc2052c114
00:38:55.158 --> 00:38:56.490
digital system actually.

NOTE Confidence: 0.51212806

1439cfe6-e7c8-409c-95d2-c38de827f48b
00:38:58.050 --> 00:39:00.330
Ah, were built.

NOTE Confidence: 0.91315264

1943ef3a-4497-4978-a215-beb3114847f8
00:39:01.110 --> 00:39:07.353
So. Today's topic is about how
can we build a digital system.

NOTE Confidence: 0.91315264

508f1c0b-82e9-42f5-bd6b-2f2e99e2ae31
00:39:07.353 --> 00:39:10.897
In order to do the
calculations with our

NOTE Confidence: 0.91315264

c27de0cf-d8c0-43fe-9eeb-95aed8a6c2e2
00:39:10.897 --> 00:39:13.555
numbering system in the first
chapter.

NOTE Confidence: 0.8922872

2f28b097-804e-475f-919a-2f57cb458f0d
00:39:14.820 --> 00:39:17.466
For instance, if you are
representing the most distance

NOTE Confidence: 0.8922872

5d2d1e80-5d2a-4b6f-804d-6b93a0926379
00:39:17.466 --> 00:39:20.700
to the sun in order to
represent the distance and do

NOTE Confidence: 0.8922872

38b86c9c-bf2b-4b63-bafb-dd44ffe2538c
00:39:20.700 --> 00:39:23.640
some calculation on the
distances, so we need to build

NOTE Confidence: 0.8922872

f2ff932f-45e2-43d6-ba88-e2fd75b15ae4
00:39:23.640 --> 00:39:27.462
a machine to do for us instead
of just doing on the paper.

NOTE Confidence: 0.915957

f91ea91a-c72c-46a5-b96a-ae3668fbcdfd
00:39:30.240 --> 00:39:37.310
So the first source of energy in
order to plug into our system to

NOTE Confidence: 0.915957

7842b541-bf73-4579-8fe1-f593597157d6
00:39:37.310 --> 00:39:38.825
work is electricity.

NOTE Confidence: 0.8741864

90160abc-1c66-4b54-8767-f13a885eac30
00:39:39.490 --> 00:39:44.385
And the theory is coming from
the numbering system we covered

NOTE Confidence: 0.8741864

917fd20f-cc93-4570-b085-ed7419bfc393
00:39:44.385 --> 00:39:49.725
in the first chapter. So now we
have power source which is

NOTE Confidence: 0.8741864

02f8a414-f275-43bf-9661-ede89d75769c
00:39:49.725 --> 00:39:54.175
electricity and we have Theory
numbering system. We want to

NOTE Confidence: 0.8741864

f235c78f-82ab-458e-b9a0-76c56a72b782
00:39:54.175 --> 00:39:55.955
build a digital system.

NOTE Confidence: 0.9305859

cd71c3bc-ac0d-4b63-a5f4-68faf4224bfe
00:39:57.740 --> 00:39:59.804
So the first question is this

NOTE Confidence: 0.8780453

dbcfa020-3794-4732-9d69-bc6b8ad74651
00:39:59.804 --> 00:40:01.814
what? This is we have to pick

NOTE Confidence: 0.8094744

927ca35d-c564-42f3-8dc8-ea9d47944f4f
00:40:01.814 --> 00:40:06.387
from the numbering system. This
one base two under system base,

NOTE Confidence: 0.8094744

fb3a8390-be05-46bc-ab24-380fe7d38ad9
00:40:06.387 --> 00:40:09.996
one base 10 decimal system base.
Two binary system.

NOTE Confidence: 0.83173954

06e86330-7888-40a9-8c3f-9e238dca66c1
00:40:10.800 --> 00:40:15.454
So what would be your answer to
this question when you wanted to

NOTE Confidence: 0.83173954

d2eec87f-56ea-48e2-94be-79e74451e9ee
00:40:15.454 --> 00:40:19.750
build a digital system? What
would be your choice of a base

NOTE Confidence: 0.83173954

718509bc-1127-4a7e-ae12-1b8aa60b7a41
00:40:19.750 --> 00:40:21.182
for the numbering system?

NOTE Confidence: 0.6818369

a0dc523f-1df8-432d-a945-cf2cbcf626d1
00:40:23.040 --> 00:40:25.100
Simran says that base 2.

NOTE Confidence: 0.7335368

ccd09c20-0cc0-4c9b-8849-1b149d901163
00:40:26.790 --> 00:40:29.646
But base two is kind of A.

NOTE Confidence: 0.8193746

d574be86-dcc5-4021-bd3d-02fe8880d4c3
00:40:30.400 --> 00:40:36.252
Unfamiliar for human beings,
you know, uh, if you are given

NOTE Confidence: 0.8193746

33c94456-1bad-41c7-856b-84319e539409
00:40:36.252 --> 00:40:41.040
a binary digit, for instance,
011020111 series of binary

NOTE Confidence: 0.8193746

c68b8a21-8f5a-4644-8929-3dcbad82ded4
00:40:41.040 --> 00:40:47.424
digits are. That was not the
base that you were taught in

NOTE Confidence: 0.8193746

3fca9a40-ea63-4473-8962-3a2afc002692
00:40:47.424 --> 00:40:49.020
the high school.

NOTE Confidence: 0.9451186

d0cade15-c735-486d-af3f-55f6fd43837f
00:40:51.070 --> 00:40:51.910
So.

NOTE Confidence: 0.6575026

795537c1-24ff-4f73-a336-efdbd62c064d
00:40:53.660 --> 00:40:56.312
At the first, Taylor says that

NOTE Confidence: 0.865805

9ec8ef49-b6f0-45df-a39e-8e0f77e53698
00:40:56.312 --> 00:41:01.848
bastan. As we see with the as
we saw before, I mean within the

NOTE Confidence: 0.865805

97c745ca-3dc7-4609-85ea-0573af02867b
00:41:01.848 --> 00:41:05.654
history the the most common
basis where based 10 and we

NOTE Confidence: 0.865805

7169460c-0ef2-444e-8d18-715d2b707ae4
00:41:05.654 --> 00:41:09.114
already know how to do
calculation in base 10 when

NOTE Confidence: 0.865805

f3841f28-3a8c-40b1-92c2-242b5b278a5a
00:41:09.114 --> 00:41:13.612
whenever we wanted to convert to
a new system you said that let's

NOTE Confidence: 0.865805

454a3cfd-98cc-47f1-a1f7-8fe1481a7180
00:41:13.612 --> 00:41:18.110
look at the algorithm base 10
and get the idea from that. So

NOTE Confidence: 0.865805

a5679a53-949c-46a7-8388-6a2e17274c3f
00:41:18.110 --> 00:41:22.608
base 10 is much more easier for
us to understand because of our

NOTE Confidence: 0.865805

06ecac10-ad86-4352-99f1-c1a334a02830
00:41:22.608 --> 00:41:26.068
background or because of the
history of human individuals. To

NOTE Confidence: 0.865805

8600b27d-1459-4a2b-b6e9-db8bcafcbeff
00:41:26.068 --> 00:41:28.836
develop this system. So the
first I mean.

NOTE Confidence: 0.7835854

bfb6c869-3b47-4aa4-bb9d-e5514adf783a
00:41:29.090 --> 00:41:30.926
A choice would be base 10.

NOTE Confidence: 0.87068343

20925598-61d8-441d-bdc0-9ff097a95165
00:41:32.110 --> 00:41:35.672
We'll see why we cannot build
or why we do not build the

NOTE Confidence: 0.87068343

743bd334-1e58-4ef5-80ca-e6ce2d1b19f4
00:41:35.672 --> 00:41:39.234
system based on base 10, but
the first choice of us would be

NOTE Confidence: 0.87068343

d626650a-3e05-468f-8a9d-30ddf46d7c94
00:41:39.234 --> 00:41:42.248
based on because you know how
to do calculation base ten.

NOTE Confidence: 0.87330955

d7c54d23-83df-4ddb-87ed-bff9b08d675d
00:41:43.750 --> 00:41:48.538
So in order to build a system
based on the electricity power,

NOTE Confidence: 0.87330955

28fdcc63-7d26-4bfc-a6c3-f1dd98552b37
00:41:48.538 --> 00:41:52.528
so we could say that the
electric power can be

NOTE Confidence: 0.87330955

b8295831-46e0-4941-8f44-d6752b80465d
00:41:52.528 --> 00:41:56.917
represented as the voltage and
then we can discretasize or

NOTE Confidence: 0.87330955

a9b202fc-a7cd-4506-926f-c0e19b8e5c53
00:41:56.917 --> 00:42:01.306
break the continuous entity the
voltage into discrete units as i

NOTE Confidence: 0.8784474

b02a698f-8732-4e23-8e9d-99c4eabf7513
00:42:01.306 --> 00:42:07.753
did here. So in order to split
this into base-10, we need 10

NOTE Confidence: 0.8784474

a225c370-b10f-4c94-bddc-85973d5cc23e
00:42:07.753 --> 00:42:12.836
units; we could say that is the
voltage is between zero and one.

NOTE Confidence: 0.8784474

9cbcc37b-e667-42e8-bb1c-4c67639cdf60
00:42:12.836 --> 00:42:18.701
We say that this is unit zero.
If it is between one and lower

NOTE Confidence: 0.8784474

b251f512-3812-41ec-831b-6ec63eddd6f6
00:42:18.701 --> 00:42:24.566
than two, it is unit 1 and up
until here, if the voltage is

NOTE Confidence: 0.8784474

5c73ebb8-c499-4ce4-b49c-977744f2556a
00:42:24.566 --> 00:42:29.258
changing between 9 and less
than 10, it means that we are

NOTE Confidence: 0.8784474

41097292-1c50-4e22-9daa-f9890f474efd
00:42:29.258 --> 00:42:33.168
showing the unit 9. So we can
easily

NOTE Confidence: 0.83732593

3c2881db-a29b-492a-ac65-3138d7f62050
00:42:33.250 --> 00:42:39.201
Show different digits in base
ten by units of voltage

NOTE Confidence: 0.83732593

1b6eb323-b4e3-4732-a565-6c1d2121c0d8
00:42:39.201 --> 00:42:41.365
within a specific range.

NOTE Confidence: 0.81407934

dc97cd4d-7bbf-4b39-93f9-e3d1b997eea9
00:42:42.070 --> 00:42:43.822
Another continuous entity is

NOTE Confidence: 0.9191727

39584cdf-7dfd-439a-855f-d0ff8615b033
00:42:43.822 --> 00:42:46.590
time. So let me just.

NOTE Confidence: 0.88560176

5f81700b-33ef-4b59-8eb6-4c1ee9da5723
00:42:48.520 --> 00:42:49.879
Make my mouse.

NOTE Confidence: 0.58047295

3f7487ec-2dd8-4d09-8d08-f39ee85986fe
00:42:51.550 --> 00:42:55.330
A laser point, yeah.

NOTE Confidence: 0.87488776

0ea16ed5-d899-4abd-aec5-a56022bfed90
00:42:57.210 --> 00:43:01.770
Another entity is time, so this is a

NOTE Confidence: 0.87488776

f574e42b-6c15-460d-a6e9-cae22c54ad09
00:43:01.770 --> 00:43:05.950
continuous entity. You have to
break it into discrete units so.

NOTE Confidence: 0.8819558

f3496f8b-0d86-44d2-82d0-5ff8be248e23
00:43:06.550 --> 00:43:10.126
If the time is, for instance
weekly, we can break it into

NOTE Confidence: 0.8819558

c76dfa44-d807-4d7f-ae01-892232e606db
00:43:10.126 --> 00:43:14.894
daily if it is day, we can break
it into hours. If it is hours,

NOTE Confidence: 0.8819558

76d0c0f0-be47-489d-b262-17395039fe62
00:43:14.894 --> 00:43:18.768
we can break it into minutes and
etc. So just for this example,

NOTE Confidence: 0.8819558

95467b92-4609-46b8-90e3-4cd05b0d9105
00:43:18.768 --> 00:43:22.940
we could say that the first time
unit is within the unit 0 and

NOTE Confidence: 0.8819558

65f8f4bf-ecbd-440d-80db-357654eaa660
00:43:22.940 --> 00:43:26.814
lower than one. It could be for
instance if the time is lower

NOTE Confidence: 0.8819558

10eefd54-3d52-479e-ae54-6c1d657c9f43
00:43:26.814 --> 00:43:30.390
than this first second, it
means that we are in the first

NOTE Confidence: 0.8819558

69eca350-9b5e-4ad3-ae54-9ef5535ca346
00:43:30.390 --> 00:43:34.562
time slot in the zero or in the
first second if it is between

NOTE Confidence: 0.8819558

fbe5f784-0c77-49f2-a98d-dc3accbfbec7
00:43:34.562 --> 00:43:38.436
one and lower than two seconds,
it means that we are in the

NOTE Confidence: 0.8626481

1700824f-46ae-4424-b027-bdb7c9d6af3f
00:43:38.436 --> 00:43:40.950
2nd second

NOTE Confidence: 0.89036196

86cf4647-eeba-4423-a49d-e106d9f3c8b6
00:43:40.950 --> 00:43:45.755
actually. 3 seconds, and, etc. So
this could be interpreted as

NOTE Confidence: 0.89036196

18d405aa-5f38-4a90-b737-b58be6c488e8
00:43:45.755 --> 00:43:48.185
each one as the one second.

NOTE Confidence: 0.8494806

fa036a37-25e7-4c59-b86d-786b16c3ecd4
00:43:49.440 --> 00:43:53.910
So putting these two discrete
units together, we have this

NOTE Confidence: 0.910588

71e61f9c-b78e-4712-a4ef-30dd2928c8d8
00:43:53.910 --> 00:43:56.864
figure so. We are building each

NOTE Confidence: 0.9042778

f1c95321-5f51-4b7a-a69d-6c7d3305cae6
00:43:56.864 --> 00:44:01.019
unit. At each time interval, or
at each time slot.

NOTE Confidence: 0.7959006

f7c4318b-5551-42a6-9541-9f860925e9f7
00:44:02.380 --> 00:44:03.688
For instance,

NOTE Confidence: 0.905862

58ec6727-8f83-46b2-8d60-3a7de4d367ab
00:44:04.250 --> 00:44:08.834
If you are going to see what
number this system is actually

NOTE Confidence: 0.905862

4b12498b-ac4c-44fa-af7b-a243bc3be562
00:44:08.834 --> 00:44:13.036
representing you could say
that within this time for

NOTE Confidence: 0.905862

b736599d-b273-4a50-b141-54efbdf0e6b9
00:44:13.036 --> 00:44:16.092
instance, in this example, within
this time slot,

NOTE Confidence: 0.88348824

10e4c692-1222-48d8-8cbc-ef3a32ee5643
00:44:16.740 --> 00:44:19.760
The voltage is changing
between 2 and

NOTE Confidence: 0.88348824

9e30098c-a5cf-426e-975f-c503665e3daa
00:44:19.760 --> 00:44:23.082
lower than three, so we could
say that the system is

NOTE Confidence: 0.88348824

aa2e0f3f-8a0b-47ff-9502-8d1fef602047
00:44:23.082 --> 00:44:24.290
representing the number 2.

NOTE Confidence: 0.88836575

837abc45-5cd5-46ae-b396-e445eb4c3de4
00:44:26.150 --> 00:44:29.032
How about this one? For
instance, in this time slot we

NOTE Confidence: 0.88836575

b294cf94-e1ca-4dff-8a39-8a40cc88a88a
00:44:29.032 --> 00:44:30.604
could say that within this time

NOTE Confidence: 0.8884589

90d77983-3f63-41f7-a2c9-fbc61056da53
00:44:30.604 --> 00:44:35.286
interval, the voltage is
changing between 9 and lower

NOTE Confidence: 0.8884589

fcd482ef-440b-4363-9334-5bd139ea23e8
00:44:35.286 --> 00:44:40.710
than 10, we say that the system
is representing 9, so basically

NOTE Confidence: 0.8884589

a7ad251a-fc25-4e89-9ae3-274f6d1704d0
00:44:40.710 --> 00:44:44.778
by controlling the changes of
voltage within the time

NOTE Confidence: 0.8884589

a2210fa7-92af-40de-b551-111ef19e6433
00:44:44.778 --> 00:44:49.298
interval, we can represent
digits. So this is our first

NOTE Confidence: 0.8408284

8263d754-81e1-4a17-a301-e5c66b406d00
00:44:49.298 --> 00:44:54.849
computer system. We can build to
represent digits in unit base

NOTE Confidence: 0.90747947

fb447803-a3e3-41b8-a5f8-2efb1753ea21
00:44:54.849 --> 00:45:00.320
ten. But the problem is that
because of the environment noise

NOTE Confidence: 0.90747947

e2c1533f-316e-4537-bb6e-688913582b67
00:45:00.320 --> 00:45:04.790
or because of the limitation in
building engineering, we see

NOTE Confidence: 0.90747947

b3fe9393-a73d-4940-83f3-a54c9403a20d
00:45:04.790 --> 00:45:10.601
that if we are going to increase
the voltage from zero to another

NOTE Confidence: 0.90747947

e99b7f4f-ead7-4eba-8e0a-347772ba8605
00:45:10.601 --> 00:45:15.518
unit, for instance 9, in order
to represent the number 9.

NOTE Confidence: 0.87784183

79e441d9-92c5-40d4-83b4-a59e62dfd731
00:45:17.070 --> 00:45:22.360
It takes time. And it passes through
different units and based on this

NOTE Confidence: 0.87784183

27db25c6-cc0c-4e0b-ade4-61a0806dd6e8
00:45:22.360 --> 00:45:26.060
because the voltage is passing
different units, we cannot be

NOTE Confidence: 0.87784183

433545b3-b7e2-4904-8487-bf332b9d64c6
00:45:26.060 --> 00:45:30.500
sure that what is going to be
this number. This number is going

NOTE Confidence: 0.87784183

5b9516d0-ee5c-44ad-a14f-6450b1a41797
00:45:30.500 --> 00:45:34.940
to be ambiguous. The second one
is the same. For instance, in

NOTE Confidence: 0.87784183

f9ac94d3-7c90-4cac-82f3-172012b434e7
00:45:34.940 --> 00:45:38.640
this time slot, the voltage changes
from different units from 8

NOTE Confidence: 0.87784183

e69f51cb-057e-412b-a929-d2bc63dd2f79
00:45:38.640 --> 00:45:44.190
to 7 and to 6. So we are
not sure this number is going to be

NOTE Confidence: 0.87784183

f57a8a11-38b5-4ca2-b983-dd61a1d9c8b8
00:45:44.190 --> 00:45:45.670
7, eight or six.

NOTE Confidence: 0.811742

59c174f3-63b9-4f98-addf-eab5e999b52c
00:45:46.890 --> 00:45:52.084
So you see that there because of
the noise or because of the I

NOTE Confidence: 0.811742

9af07634-7bfa-4f09-95eb-3fb1c466cb62
00:45:52.084 --> 00:45:55.052
mean delay in producing
different voltages in our

NOTE Confidence: 0.8613105

d91a3b2f-d3a6-4679-9f5c-67533be519cc
00:45:55.052 --> 00:45:58.789
system, lots of time
slots are ambiguous,

NOTE Confidence: 0.8613105

808db903-061f-4b81-8c4f-fa672d6b70e9
00:45:58.789 --> 00:46:00.724
So what would be your

NOTE Confidence: 0.74504524

448eaad9-32f0-42ec-b510-e5db9239c575
00:46:03.340 --> 00:46:10.100
solution to solve this problem
in order to reduce these

NOTE Confidence: 0.74504524

657fecb9-79ce-4e73-ae74-3b94e83fb173
00:46:10.100 --> 00:46:12.700
ambiguous cells or values?

NOTE Confidence: 0.93523186

825dd4bf-1e6c-4cf3-b9e1-dd49b2e0370f
00:46:13.960 --> 00:46:15.180
So what would be your?

NOTE Confidence: 0.21761292

2499b1db-de2e-449c-ac18-fa0a2b4ed026
00:46:16.100 --> 00:46:16.900
Uh.

NOTE Confidence: 0.88048047

310d232b-5d4e-4bab-aaf9-b7688cba3f9d
00:46:18.080 --> 00:46:23.312
Solution if you wanna have a
more reliable system to reduce

NOTE Confidence: 0.88048047

d26e853b-6921-429b-82e5-a97c2b6d1259
00:46:23.312 --> 00:46:24.620
these ambiguous cells.

NOTE Confidence: 0.8337748

c2704334-0dcb-467a-9bee-a80e04b41f0e
00:46:25.890 --> 00:46:31.380
The first solution would be
tackling the problem by

NOTE Confidence: 0.7826924

3b375ecd-74df-410b-999a-4cb5b7349b27
00:46:31.380 --> 00:46:34.938
granularity. Granularity means
the size of each unit.

NOTE Confidence: 0.89347

47c7f27d-4807-47e8-bb04-80784942efec
00:46:36.360 --> 00:46:41.417
Starting with the time, we
could say that we can reduce the

NOTE Confidence: 0.89347

a13a7393-1ff9-4ad3-a2fd-04c6e55150c2
00:46:41.417 --> 00:46:46.085
granularity of time slots to a
smaller units and this way we

NOTE Confidence: 0.89347

d593cb38-bc04-43fd-9a08-e262af96a66a
00:46:46.085 --> 00:46:51.531
say that we give a little chance
to the voltage to change a lot

NOTE Confidence: 0.89347

845d79c3-605e-4c24-8c31-afe2cef39ea6
00:46:51.531 --> 00:46:52.698
within one unit.

NOTE Confidence: 0.876173

89202746-63fd-4323-84fd-d63fb07246ac
00:46:53.510 --> 00:46:58.788
For instance, here for this cell
we give a very little chance the

NOTE Confidence: 0.876173

895035ee-771e-4146-8b20-8322dc78473c
00:46:58.788 --> 00:47:04.472
voltage to change a lot and only
limited to the unit 6. So this

NOTE Confidence: 0.876173

dde35f6e-5933-4e9d-b3b2-bab0b832b378
00:47:04.472 --> 00:47:08.938
way you're trying to
reduce the number of ambiguous

NOTE Confidence: 0.85075146

30d8f1ed-e1d3-40f4-95bb-148b2f1fab30
00:47:08.938 --> 00:47:14.260
cells. For instance, for this
one, for this cell, because we

NOTE Confidence: 0.85075146

47727491-f4e3-48f7-b6d1-00266c607f6b
00:47:14.260 --> 00:47:19.486
we make the time slot
the smaller, the voltage has a

NOTE Confidence: 0.85075146

5065cbbf-a358-44c1-a516-1baec4ac207a
00:47:19.486 --> 00:47:24.712
lower chance to change a lot and
be constrained to

NOTE Confidence: 0.85075146

e04a9fdd-19d4-48e0-aa1e-569886556666
00:47:24.712 --> 00:47:29.134
just one unit. So then we can
represent it as three.

NOTE Confidence: 0.87316984

3c366a42-54ba-4b89-a308-229829662ac4
00:47:29.750 --> 00:47:35.380
This is 1 solution, so just
having smaller time units.

NOTE Confidence: 0.8307819

33cf807a-e7c4-47e9-95cd-73a9b848ad9e
00:47:36.790 --> 00:47:39.910
So from the high
granularity to low granularity

NOTE Confidence: 0.8307819

1196c411-c962-4886-a21d-289f9051ccf9
00:47:39.910 --> 00:47:41.470
relative with the time.

NOTE Confidence: 0.906466

e134e3e7-9d0e-4207-9cc7-dd1ee12c9fbe
00:47:42.760 --> 00:47:44.680
Another solution would be this.

NOTE Confidence: 0.87856936

1bf90166-6d88-44f2-a06c-0313ea08340f
00:47:45.490 --> 00:47:47.786
Increasing the granularity of

NOTE Confidence: 0.8659515

860f7237-0f4d-4470-910b-23d52167bbdc
00:47:47.786 --> 00:47:52.999
voltage. So by increasing the
granularity of voltage we are

NOTE Confidence: 0.8659515

6b2ac5b1-f71d-4754-af42-576a7066b860
00:47:52.999 --> 00:47:57.109
kind of allowing voltage to
change, but within one unit.

NOTE Confidence: 0.89388907

7d3a97c6-dc97-48f8-ae3d-f1275bef1d0e
00:47:57.780 --> 00:48:00.604
Look at this example within
these time slots.

NOTE Confidence: 0.89142835

ff1662f6-c9cf-458d-b22d-f05c9e1725c6
00:48:01.610 --> 00:48:06.494
Within these time slots you see
that although the voltages is

NOTE Confidence: 0.89142835

91558103-b214-442a-949a-16f29eae7534
00:48:06.494 --> 00:48:10.490
changing. But because we
increase the units of the

NOTE Confidence: 0.8572191

f42811a8-e580-453f-b9c4-eda7f335fe04
00:48:10.490 --> 00:48:16.008
voltage. Uh, we can interpret
one number from changing within

NOTE Confidence: 0.88414466

4b4409af-e383-4d10-8691-dc6c748c8572
00:48:16.008 --> 00:48:21.695
this unit. Also from here you
see that because we are increasing

NOTE Confidence: 0.88414466

45fabb1e-ded8-4d40-9a20-04cdd8621a91
00:48:21.695 --> 00:48:26.370
this unit to change the voltage from
this amount to this amount,

NOTE Confidence: 0.88414466

f0aa6216-3308-47f1-899d-6459154dd7a6
00:48:26.370 --> 00:48:28.920
actually can be limited to one

NOTE Confidence: 0.802613

4b95fdc0-3ac0-486d-ba87-eae8cc0c0f52
00:48:29.670 --> 00:48:34.441
unit, and we can represent them
as the first unit or 0.

NOTE Confidence: 0.86034656

d877c661-c2d2-4545-b3fd-ea0dad5d9c22
00:48:36.020 --> 00:48:41.047
So you see that the smaller

NOTE Confidence: 0.86034656

8194cce9-25fb-42fb-a769-afff9fb6e126
00:48:41.047 --> 00:48:46.074
size of time slot and bigger
size of voltage actually helps

NOTE Confidence: 0.86034656

adbe1f73-59df-4abb-8125-280b2216f327
00:48:46.074 --> 00:48:48.816
us to have less ambiguous
cells.

NOTE Confidence: 0.86320716

ed214540-4ddf-4ed6-b668-d7632e937db9
00:48:49.970 --> 00:48:56.410
But the problem is
that if we increase the voltage

NOTE Confidence: 0.86320716

46f05413-970e-4956-b683-2ee3403c7670
00:48:56.410 --> 00:49:01.470
uunits, we are kind of
reducing the base number from

NOTE Confidence: 0.86320716

f18f667c-2849-4d2e-a5b2-3bce5414dc24
00:49:01.470 --> 00:49:07.910
base-10. How many units we have
here, 4 units. 0123. So we are

NOTE Confidence: 0.86320716

81fb8ca4-9615-475f-bd06-dcb620f06fa7
00:49:07.910 --> 00:49:11.130
moving from base-10 to base-4.

NOTE Confidence: 0.8923714

8d9f3da2-5a93-46a7-ae03-5a1b4af1c024
00:49:12.500 --> 00:49:16.383
We know from the numbering
system theory that if we reduce

NOTE Confidence: 0.8923714

152e5dba-24f1-4a55-aedc-25566f319bbb
00:49:16.383 --> 00:49:20.619
the base number, we are reducing
the range of numbers.

NOTE Confidence: 0.8923714

c2a33bde-ef2a-479a-a5e1-ec4e8953914b
00:49:20.619 --> 00:49:24.502
So the maximum number. For
instance, if we are given two

NOTE Confidence: 0.8923714

a89907f6-2444-455c-9685-28181280b999
00:49:24.502 --> 00:49:29.091
positions for base five, it's much
lower than if you are given the

NOTE Confidence: 0.8923714

54fdbb2a-9c6b-4c80-bcfc-30aceb67bbe0
00:49:29.091 --> 00:49:30.856
same positions in base-10.

NOTE Confidence: 0.87499714

fac204c0-04b4-40fc-a355-54e51e15effa
00:49:31.860 --> 00:49:36.369
But the advantage is
that we have less, I

NOTE Confidence: 0.87499714

7adcf1cb-354a-41ae-8a28-c12f557e296f
00:49:36.369 --> 00:49:37.872
mean ambiguous cells.

NOTE Confidence: 0.9031833

93f41bcf-14bf-47b5-8c0b-94f72624dbdf
00:49:39.290 --> 00:49:44.774
In the extreme case, we could
split the voltage into 2 units.

NOTE Confidence: 0.8601992

222b310f-5f9c-40df-8d5e-b8eea5714ea9
00:49:45.770 --> 00:49:52.454
So then we can damp or we
can address the changes of

NOTE Confidence: 0.8601992

9520cc53-5f76-4217-8419-64d118fb529e
00:49:52.454 --> 00:49:58.024
voltage within the time and
then have we have much more less

NOTE Confidence: 0.8601992

7a878344-1a4e-432a-95c1-7fbfdeab4b5e
00:49:58.024 --> 00:49:59.138
ambiguous cells.

NOTE Confidence: 0.9137475

41b93219-10ae-4cc9-b36c-321b2c58e2d8
00:50:01.120 --> 00:50:06.666
So. You can see that from zero
to 1 and then from one to

NOTE Confidence: 0.9137475

44f308a2-c89d-48d7-bc49-f431bc56ae49
00:50:06.666 --> 00:50:08.276
Infinity can be interpreted as

NOTE Confidence: 0.8243482

6e6dd557-697a-4557-80c0-730eea1e5e98
00:50:08.276 --> 00:50:13.653
one. So, look at these
time slots, from this point to

NOTE Confidence: 0.8243482

cc0ee760-21db-46a9-a7c7-19b41ac97bfc
00:50:13.653 --> 00:50:17.683
this point, all the changes of
the voltage are gonna be

NOTE Confidence: 0.8243482

f9e6aeec-7edc-4e5e-866c-952301fa2628
00:50:17.683 --> 00:50:18.892
interpreted as one.

NOTE Confidence: 0.91163236

1995e216-8a6b-4b62-b0e7-d199bb40feae
00:50:20.630 --> 00:50:23.618
And for this one, all
these changes from this

NOTE Confidence: 0.91163236

55e7379f-64f9-47f4-8a67-b1f36934a7c4
00:50:23.618 --> 00:50:26.606
point to this point can
be interpreted as zero.

NOTE Confidence: 0.9178655

3edbc93b-a7cd-4f93-a0df-f7af9b40c1d3
00:50:27.850 --> 00:50:31.390
So. You see that there's a trade

NOTE Confidence: 0.86014724

7aa1585e-0ce9-4265-b89e-94da49fc22ca
00:50:31.390 --> 00:50:37.927
off. You have a higher basis for
base-10 or base 16, but it

NOTE Confidence: 0.86014724

6a54efa7-f49b-4e51-8c51-1658f16f5abb
00:50:37.927 --> 00:50:41.788
this introduces a lot of
ambiguous cells or values

NOTE Confidence: 0.86014724

94f3e258-95df-4163-9b11-9cefc647f1b3
00:50:41.788 --> 00:50:46.507
because the voltage is changing
a lot and minor changes may

NOTE Confidence: 0.86014724

f922d658-c987-4f27-bb96-689e610143e8
00:50:46.507 --> 00:50:48.223
change the unit number.

NOTE Confidence: 0.8959324

1e5f10d7-ed5b-44e7-9b4c-765b01cd7739
00:50:49.400 --> 00:50:52.820
Uh, but instead you can
represent a wider range

NOTE Confidence: 0.8959324

88871568-cd90-454a-970c-b8bdf68e2c45
00:50:52.820 --> 00:50:56.620
of numbers in theory,
but in practice, there are

NOTE Confidence: 0.8959324

61f5fb53-fd16-4e7f-99a4-7b087cd64eeb
00:50:56.620 --> 00:50:58.140
lots of ambiguous cells.

NOTE Confidence: 0.8458895

81aba183-297e-4173-976c-ef55cc02e7a3
00:50:59.510 --> 00:51:04.251
When you decrease the base
number to base-2, in theory

NOTE Confidence: 0.8458895

af35d70a-ab9b-4288-8ebe-39e1d969a587
00:51:04.251 --> 00:51:06.406
the maximum number is very

NOTE Confidence: 0.8042264

e60663eb-89f6-4a54-9576-3b18db833cc1
00:51:06.406 --> 00:51:11.397
limited. But in practice,
you have much more less

NOTE Confidence: 0.8042264

cefbd0e8-06a3-4720-ae57-e0d3ae6b0fc3
00:51:11.397 --> 00:51:13.169
ambiguous cells.

NOTE Confidence: 0.9004555

cba5d65b-52d6-48e9-b52a-07589523d291
00:51:14.470 --> 00:51:20.080
And this is the reason that in
practice, when the engineers

NOTE Confidence: 0.9004555

ae9e3121-5700-46b5-a043-2031009b9a9f
00:51:20.080 --> 00:51:24.670
want to build a computing
machine or digital system,

NOTE Confidence: 0.9004555

fe06bdd0-dbb0-445c-a9b9-34fb6c23ddc4
00:51:24.670 --> 00:51:30.280
they prefer to work with base
two, because it has more

NOTE Confidence: 0.9004555

707f50a2-e90b-4ab8-a099-7931cc3af1b4
00:51:30.280 --> 00:51:34.870
reliability, or because it is
more robust to noise.

NOTE Confidence: 0.88296086

895a48bb-d2ee-473d-b21b-f853eeeacc8b
00:51:36.660 --> 00:51:40.940
That's the only reason for
having computer system in base

NOTE Confidence: 0.88296086

665bae5d-7fb9-46dd-aeae-dc998a38d303
00:51:40.940 --> 00:51:45.220
two. If the engineers could
build a reliable system based on

NOTE Confidence: 0.88296086

95051f49-10f0-4264-ad63-eb8f12e51e35
00:51:45.220 --> 00:51:50.356
base-10, we would have
computer machines based on base

NOTE Confidence: 0.88296086

f32a39b0-5e54-4317-a9c1-87e90d92c045
00:51:50.356 --> 00:51:51.640
10, the decimal system.

NOTE Confidence: 0.90178716

10467597-12f4-42e1-b76c-19895d7ce1c6
00:51:52.440 --> 00:51:56.620
So the only limitation as I said
is hardware or engineering

NOTE Confidence: 0.90178716

c8ff937a-ee94-4c54-b51e-c1a62b3a49de
00:51:56.620 --> 00:52:01.180
problems. There is no problem
with the theory as we did cover

NOTE Confidence: 0.90178716

bcd23ebc-e736-4e01-a2e4-605af5983645
00:52:01.180 --> 00:52:02.700
in the first chapter.

NOTE Confidence: 0.90312797

171405dc-3841-47c4-9019-0143c22cda56
00:52:04.870 --> 00:52:08.346
So this is the problem of
Engineers, not the problem of

NOTE Confidence: 0.90312797

af9dbc0f-bc75-4d01-8af4-4d0af368b943
00:52:08.346 --> 00:52:08.978
computer scientists.

NOTE Confidence: 0.88614064

0a890868-3c77-441b-b80c-a19fba6784cf
00:52:11.420 --> 00:52:16.055
Indeed, in history the first
computing machine was built

NOTE Confidence: 0.88614064

dee26374-4ff3-4bd9-93f2-275603abc0b7
00:52:16.055 --> 00:52:17.600
based on wood.

NOTE Confidence: 0.85883147

80f5bf41-484a-4300-a311-ed2fe2f9f832
00:52:18.930 --> 00:52:23.540
The power was not
electricity, it was just

NOTE Confidence: 0.85883147

fc6e0bf0-5bfb-4ce2-a66c-3f2d746a8060
00:52:23.540 --> 00:52:28.150
mechanical computing machine
by wood and it was based on the

NOTE Confidence: 0.85883147

d52f57a1-2d97-4462-8ef7-cc9233e934c4
00:52:28.150 --> 00:52:32.760
ternary system or a system
which has three symbols: minus

NOTE Confidence: 0.85883147

c3038b0e-0e08-4c8a-9542-28be872fbe58
00:52:32.760 --> 00:52:34.604
1, zero and one.

NOTE Confidence: 0.8503935

67577b18-9b9d-4781-a9d0-2f00f192b4fc
00:52:35.770 --> 00:52:40.474
In 1840 by Thomas Fowler. You
can see more history about

NOTE Confidence: 0.8503935

d73034ae-2504-438a-aaaf-8cb1faa86f18
00:52:40.474 --> 00:52:44.002
computer systems
with digital systems in these

NOTE Confidence: 0.8177614

d3bce58d-5e2e-4f6f-a321-65977c0ad3c5
00:52:44.002 --> 00:52:47.170
links. Especially about
the ternary computers.

NOTE Confidence: 0.8590152

54621128-0f4d-467a-b5df-296cae1cebd5
00:52:48.660 --> 00:52:52.020
In fact, I mean at first, the
ternary computers were much more

NOTE Confidence: 0.8590152

cab892d8-cb4b-41fd-9e2f-bd1295ddb8c9
00:52:52.020 --> 00:52:53.140
better than the binary

NOTE Confidence: 0.8845007

23bbb203-5ef4-42bd-8c2e-e79d12afbd2b
00:52:53.140 --> 00:52:57.167
computers. But later, because as
I said, the reliability,

NOTE Confidence: 0.8845007

c0cc7ffc-bb1e-4a00-8763-094301e3533a
00:52:57.167 --> 00:53:00.344
they decided to build machines
only for base-2.

NOTE Confidence: 0.89759505

58294dac-ea93-4c29-92ea-39eefc927a3b
00:53:03.280 --> 00:53:05.645
You might hear about decimal

NOTE Confidence: 0.8272221

1f2c88c1-022f-4878-846f-1426bbcb737d
00:53:05.645 --> 00:53:11.728
computers. Uh, for instance, IBM
in the late 20th century in 19

NOTE Confidence: 0.8272221

4ac16599-513e-4d04-a63a-5af23ee8e389
00:53:11.728 --> 00:53:15.760
something, they built computer
systems and they called them

NOTE Confidence: 0.8272221

3eeaa56e-fb12-4b05-b5fd-369fe949f819
00:53:15.760 --> 00:53:20.240
decimal computers. In fact they
are not decimal computers. It's

NOTE Confidence: 0.8272221

68e0d46b-bb7a-4f08-ad58-14da17370d82
00:53:20.240 --> 00:53:25.616
a kind of misnomer for them.
They are not working in base-

NOTE Confidence: 0.87256086

9371c48f-0984-47fc-958c-1fbbc52bd89f
00:53:25.616 --> 00:53:30.517
10. Uh, they are accepted the
input from the user and they

NOTE Confidence: 0.87256086

431ba978-5af9-48a3-8548-cb358cdd6103
00:53:30.517 --> 00:53:35.722
printed the output to the user
based on the base-10, so the user

NOTE Confidence: 0.87256086

5bfabc8e-327c-4358-aac2-245c33695107
00:53:35.722 --> 00:53:39.539
can think that these are the
computer that do the calculation

NOTE Confidence: 0.87256086

4552dd28-082e-48a2-a927-94a2338b89fe
00:53:39.539 --> 00:53:43.356
on base-10, but internally, the
hardware is working based on

NOTE Confidence: 0.87256086

bfadca3d-63a4-46fa-8b8a-b5a0731903cf
00:53:43.356 --> 00:53:44.397
base-2, binary.

NOTE Confidence: 0.87311447

dddef7b6-fe4a-4592-85cf-92afe58bddfa
00:53:45.240 --> 00:53:50.024
Uh, based on the binary codes,
as I said in the first chapter,

NOTE Confidence: 0.87311447

49c3cf63-5ac4-4d08-81df-7e77a716fd0a
00:53:50.024 --> 00:53:55.176
we just move on from that, so
will cover them later and we see

NOTE Confidence: 0.87311447

dfd1074c-ed9e-4605-9c92-43e76c7abed4
00:53:55.176 --> 00:53:59.592
that the binary codes are a way
to represent the decimal system.

NOTE Confidence: 0.87311447

7626efed-f163-446c-a59f-dc2cf300125e
00:53:59.592 --> 00:54:04.008
But if you heard that we have a
decimal system computers and

NOTE Confidence: 0.87311447

7fc0d5c9-c686-48f1-b8bb-3d525ad8a317
00:54:04.008 --> 00:54:07.688
the computers are working on
base-10, that's not correct.

NOTE Confidence: 0.83065253

1382b1af-3dce-4c44-877c-1c3003e6b3dc
00:54:08.310 --> 00:54:12.540
The decimal computers, this
is a misnomer so they are kind of

NOTE Confidence: 0.83065253

64c28958-0ef5-426d-af09-bd7069192b60
00:54:12.540 --> 00:54:16.770
called decimal computer, but
in fact they are not working

NOTE Confidence: 0.83065253

25a0e08e-6857-4706-8726-31b6d77b0c2f
00:54:16.770 --> 00:54:18.462
based on base-10.

NOTE Confidence: 0.9168332

524f0a26-4835-4f07-ab7f-5c3cf5d0e6f7
00:54:20.650 --> 00:54:22.108
That's why I made it grey.

NOTE Confidence: 0.9085626

308f6688-29e9-43cb-b749-1419b3f153ad
00:54:23.340 --> 00:54:28.614
Another important reason for
choosing the base-2 for

NOTE Confidence: 0.9085626

e0fbbd82-d841-4d39-bd4b-3223b1f80d7c
00:54:28.614 --> 00:54:34.474
building a number system is
coming from philosophy or logic

NOTE Confidence: 0.85574615

5e84f0c9-c4a7-42cf-bb63-aee6095217c4
00:54:34.474 --> 00:54:39.570
or mathematics. In the
first chapter, we see how

NOTE Confidence: 0.85574615

4c2b3111-a39e-43ec-81ac-6973530f4028
00:54:39.570 --> 00:54:40.542
mathematics can produce

NOTE Confidence: 0.8388875

ccb6ec0d-138e-48d4-9e0f-7d8689c6027f
00:54:40.542 --> 00:54:44.747
different numbering systems. But
another reason comes from the

NOTE Confidence: 0.8388875

92727d2a-2869-4137-8ddb-dae99c5a397f
00:54:44.747 --> 00:54:49.199
I mean logicians or philosophers
based on the true value of true

NOTE Confidence: 0.9017797

e6211681-d503-4942-81ce-89d03d368750
00:54:49.199 --> 00:54:53.309
and false. There is a long
history behind this. Whenever we

NOTE Confidence: 0.9017797

248deabb-4ef0-4283-8f4b-b994cdf6e333
00:54:53.309 --> 00:54:57.092
put in a statement, we want to
say whether this statement is

NOTE Confidence: 0.9017797

8c968286-106d-445a-a810-1424a8f809b8
00:54:57.092 --> 00:54:58.838
correct or wrong. So again, 2

NOTE Confidence: 0.94305146

20412e45-f671-4ae6-98a2-4dce5f1c6642
00:54:58.838 --> 00:55:00.550
values. So.

NOTE Confidence: 0.8232572

c2e40859-f6f4-4f79-b4bc-27547e0771e7
00:55:01.680 --> 00:55:06.250
George Boole was among the first

NOTE Confidence: 0.8232572

1bfa426d-adb4-437c-b604-a7cc8ec0383c
00:55:06.250 --> 00:55:10.363
mathematicians and philosophers
that say that whenever you put

NOTE Confidence: 0.8232572

6bfd081e-817c-4930-8bcb-b8259b63c39c
00:55:10.363 --> 00:55:16.304
an argument in a text, you have
to verify this argument is true

NOTE Confidence: 0.8232572

a0f8b00e-97e1-44f7-9cc0-b7e388f43a9d
00:55:16.304 --> 00:55:20.417
or false, and this book, The
Laws of Thought.

NOTE Confidence: 0.8637826

11c5c634-04e4-4f32-9309-2435e4d7076d
00:55:21.830 --> 00:55:24.478
He introduced Boolean Algebra.

NOTE Confidence: 0.7748178

8d8f3590-5656-4e04-85d8-19ec0ff5197b
00:55:25.270 --> 00:55:30.080
An algebra which works based on
two values of true and false.

NOTE Confidence: 0.8577044

bbcb2bcd-0a6a-484a-bc36-8c51e704a008
00:55:30.890 --> 00:55:37.897
So from a deep history of
Boolean Algebra and from the

NOTE Confidence: 0.8577044

e257e299-102e-494c-90b2-ecd3a4de19f9
00:55:37.897 --> 00:55:42.356
engineering perspective of
reliability, we make the

NOTE Confidence: 0.8577044

866ae3ce-87d4-46e2-83ea-e5133927ce24
00:55:42.356 --> 00:55:45.541
computer system based on
binaries.

NOTE Confidence: 0.8133043

c525e7b9-8776-41f0-ae11-4ef5bfe3dc36
00:55:48.050 --> 00:55:53.030
Ah, this was the time that these
two actually joined each

NOTE Confidence: 0.8133043

58a6aec6-1b5c-499b-85d4-427a6eef708e
00:55:53.030 --> 00:55:55.105
other to make a computer

NOTE Confidence: 0.8198395

499f551a-4a66-49ab-ba44-7bf44b565c43
00:55:55.105 --> 00:56:00.464
systems. Claude Shannon, this
guy is the I mean, one of the

NOTE Confidence: 0.8198395

0a28254e-77b3-4a5c-8836-0031c311dbdd
00:56:00.464 --> 00:56:03.280
biggest founders in computer
history or computer science.

NOTE Confidence: 0.8731172

52c82750-3fd2-44a3-96eb-059a9b5ffccd
00:56:04.860 --> 00:56:09.810
He was a mathematician, so he
already knew the Boolean Algebra

NOTE Confidence: 0.8731172

af0326aa-5ea4-437a-aabe-c13b75057101
00:56:09.810 --> 00:56:15.255
and also he was an electrical
engineer. So he already knew how

NOTE Confidence: 0.8731172

6c392ade-0de3-4741-b065-69179e79a3cc
00:56:15.255 --> 00:56:20.205
to discreticize a Continuous
entity based on voltage, and

NOTE Confidence: 0.8731172

208125a2-ba96-46cf-b752-98eef6dbf663
00:56:20.205 --> 00:56:25.650
electricity power and he joined
these two disciplines to make a

NOTE Confidence: 0.8731172

774e5073-27b7-47a3-bf04-e55ffb54870d
00:56:25.650 --> 00:56:30.105
computer system work or do
calculations based on binary

NOTE Confidence: 0.8731172

ba0ca77a-7423-4b44-a033-04d3c13d644a
00:56:30.105 --> 00:56:35.055
system, and he in the master
thesis. That's brilliant.

NOTE Confidence: 0.8808429

0a91aa10-84be-4faa-851f-6ec90d5622e8
00:56:35.510 --> 00:56:39.094
In his master studies, he
proposed switching algebra,

NOTE Confidence: 0.8808429

ec1f5cb0-9731-4e53-8655-9f1a8a434788
00:56:39.094 --> 00:56:43.126
which which is basically using
the Boolean Algebra in

NOTE Confidence: 0.8808429

29febfff-ee17-4cb3-a03c-b10ee78231cb
00:56:43.126 --> 00:56:48.054
philosophy or in mathematics, for
doing calculation in a base-2

NOTE Confidence: 0.8808429

8f04ed0e-a725-43f3-9135-229613465715
00:56:48.054 --> 00:56:52.086
numbering system which is called
switching algebra, and that's

NOTE Confidence: 0.8808429

7ed0e817-eb61-4363-b6a0-e9068339175b
00:56:52.086 --> 00:56:58.358
what we are going to cover today
and in the next lectures. So we are

NOTE Confidence: 0.8808429

addb4e03-fd6e-4ce7-8cd4-88a736f266e6
00:56:58.358 --> 00:57:03.286
trying to
build a computer system working

NOTE Confidence: 0.8808429

1374aee9-24c5-460a-abd7-414579220945
00:57:03.286 --> 00:57:08.214
based on base-2 and having the
deep knowledge of the logicians

NOTE Confidence: 0.86500967

960eac37-4847-4bf0-a06d-0b8596b1d68b
00:57:08.214 --> 00:57:09.820
and mathematicians

NOTE Confidence: 0.85104245

eb0d460f-2952-41cc-9a64-e4b1c9fa504b
00:57:09.820 --> 00:57:16.124
from True and False theories,
and the numbering system.

NOTE Confidence: 0.9167354

23380c69-b1f9-4710-9b04-93b7c7a004f7
00:57:18.950 --> 00:57:21.540
So let's just start and build a

NOTE Confidence: 0.8673704

715286d1-7413-40e6-869f-683123d4b34b
00:57:21.540 --> 00:57:24.168
binary system. Or binary
computer.

NOTE Confidence: 0.9127663

675a06db-abd8-4b21-b282-52bb56808296
00:57:25.890 --> 00:57:29.634
As we said, I mean in our
example, we could

NOTE Confidence: 0.9127663

eafd11c9-00e2-4783-9d1b-149b7fadbc54
00:57:29.634 --> 00:57:31.074
say that we can limit

NOTE Confidence: 0.899802

4f13fb5b-8582-44b8-a7f1-fa31b3efc1cc
00:57:31.680 --> 00:57:37.213
the range of change of
voltage, for instance here from

NOTE Confidence: 0.899802

238c9c61-b8b2-4a27-a196-b7f5cdf499dd
00:57:37.213 --> 00:57:43.249
0 V to +0.8 V, and we interpret
this as the unit 0.

NOTE Confidence: 0.8980128

18d50b1c-8202-4ee3-9b46-2d01fa1e9523
00:57:44.500 --> 00:57:49.092
And then if it is changed from
0.8 to two, he said

NOTE Confidence: 0.8980128

1cffe2af-d1bb-4495-869c-9c75d2eb9193
00:57:49.092 --> 00:57:53.684
that this is a transition period
from a unit 0 to another unit 1.

NOTE Confidence: 0.8980128

22937151-540f-4d28-9e1e-a5dfd354b8ec
00:57:53.684 --> 00:57:57.948
So as long as the voltage is
within this range, we say that

NOTE Confidence: 0.8980128

d4d2b5e4-3eee-4b7e-8877-5f970a8b3c72
00:57:57.948 --> 00:58:01.228
you cannot
interpret this unit into any

NOTE Confidence: 0.90911657

9696ca08-b89d-4e76-ad1f-e38147891c37
00:58:01.228 --> 00:58:05.881
unit or digits. And then if the
voltage is changing between 2

NOTE Confidence: 0.90911657

94b96955-2e0e-4b3a-b605-bd5b4a459d9f
00:58:05.881 --> 00:58:07.915
and 5, we can interpret this

NOTE Confidence: 0.89057016

ff610130-529c-499c-b4f1-f0bae7f6679a
00:58:07.915 --> 00:58:12.754
as one. So this area,
deterministic area, is just for

NOTE Confidence: 0.89057016

c64e326d-0014-463d-9390-693c9b22e955
00:58:12.754 --> 00:58:16.784
engineering purpose because when
we build an electric

NOTE Confidence: 0.89057016

0de4c6ed-01a7-4f51-8270-f7d6891e758d
00:58:16.784 --> 00:58:21.620
circuit, this is not perfect so
the there are some time to

NOTE Confidence: 0.89057016

6bccd569-5262-45b3-9733-15fb2b2f71ec
00:58:21.620 --> 00:58:26.053
increase from this voltage to
this voltage. So this is for

NOTE Confidence: 0.89057016

96dcecec-9a55-4a83-9ea3-c22b2fdf3d8a
00:58:26.053 --> 00:58:30.083
that because of the limitation
of the engineering products, and

NOTE Confidence: 0.89057016

e428d272-ccfa-45f4-b941-146f0c24754a
00:58:30.083 --> 00:58:32.098
this is called positive logic.

NOTE Confidence: 0.89353967

d2d84b40-cdaf-46d3-b28b-31ba0db9f161
00:58:32.820 --> 00:58:37.474
So when you have high voltage,
it is one. When you have low

NOTE Confidence: 0.89353967

cc81ce25-af1f-43db-a6a8-0e6f3e1f2bb1
00:58:37.474 --> 00:58:38.906
voltage it is 0.

NOTE Confidence: 0.9364304

50981ca3-d7a5-4edd-bf62-1a07a02f42cd
00:58:42.070 --> 00:58:42.720
So.

NOTE Confidence: 0.8892052

3cb6ff0c-d515-466d-baf2-6c9f9cfc2fc0
00:58:43.770 --> 00:58:48.150
Again, back to our original
system working based on

NOTE Confidence: 0.8892052

03701097-f40b-44a1-9ff7-820b30848f87
00:58:48.150 --> 00:58:52.968
electricity and voltage. So in
order to just manipulate

NOTE Confidence: 0.8892052

f5237f2d-923d-42e9-88e1-bbf15fa30cff
00:58:52.968 --> 00:58:55.158
changing the voltage within the

NOTE Confidence: 0.8943686

2e89a0c6-0a2a-4d20-a436-ddfe30712978
00:58:55.158 --> 00:59:00.640
time. You could say that if the
voltage is very low, we can

NOTE Confidence: 0.8943686

90c4ae68-6b74-4074-acd3-ed7f9a084e07
00:59:00.640 --> 00:59:06.115
interpret it as zero, and but if
it goes more than two to five we

NOTE Confidence: 0.8943686

5071f1f1-1564-4ebb-b08c-47eef8642c86
00:59:06.115 --> 00:59:07.940
could interpret it as one.

NOTE Confidence: 0.887977

46102a7d-1a2f-4faa-8ae8-2e9cbf4e4600
00:59:08.800 --> 00:59:13.840
You can see here that because of
the huge unit of voltage for one

NOTE Confidence: 0.887977

8294e299-2a44-4bef-9ffa-bd4407fe5991
00:59:13.840 --> 00:59:17.440
from two to five, even though the
voltage changes slightly, we still

NOTE Confidence: 0.887977

d03047b8-40e7-4740-bbda-572ed8973d35
00:59:17.440 --> 00:59:21.400
can represent or
interpret it as the unit 1.

NOTE Confidence: 0.8850256

8910fc0a-049b-49b9-aefe-780fa2fb573a
00:59:22.680 --> 00:59:26.332
Also here, if there is a
slightly change for the low

NOTE Confidence: 0.8850256

55c3a291-23ec-4bb1-bd94-a3699c6ebf0b
00:59:26.332 --> 00:59:28.988
voltage, still we can
interpret it as zero.

NOTE Confidence: 0.9056936

ea7af939-33f3-4f61-a0a9-ef41d2f317b5
00:59:30.650 --> 00:59:34.526
In another world, basically, if
you have very low voltage or no

NOTE Confidence: 0.9056936

309b3c09-f7f6-40b4-8d6a-1e59c045b2da
00:59:34.526 --> 00:59:38.725
voltage, it is the default value
which is zero, and if you wanted

NOTE Confidence: 0.9056936

d3af4514-120f-4271-8812-98fbb19a57d0
00:59:38.725 --> 00:59:42.924
to represent it by one, we have
to increase the voltage to a

NOTE Confidence: 0.9056936

93ed2605-e49c-47cc-b39c-92f5f8ddfb5e
00:59:42.924 --> 00:59:44.216
value more than two.

NOTE Confidence: 0.8326184

9f4cd02b-a32a-407b-bc1f-c89b5e560b77
00:59:45.920 --> 00:59:49.817
Sometimes noise happens, and this is

NOTE Confidence: 0.8326184

21150a90-6e62-4ca3-a4b0-dc48d93bb86b
00:59:49.817 --> 00:59:55.446
because when we build a system,
we put it in an environment, for

NOTE Confidence: 0.8326184

022b4fd4-4881-456a-872e-dfd3b76d5675
00:59:55.446 --> 01:00:00.642
instance, due to bad weather or
due to an impact of another

NOTE Confidence: 0.8326184

88406d88-7dc5-417c-ae42-ad09ca415e50
01:00:00.642 --> 01:00:05.405
system to our system, suddenly
the voltage may go up. For

NOTE Confidence: 0.8326184

3ba2e7a9-17c1-4a3c-8c13-f0b71652ff41
01:00:05.405 --> 01:00:08.869
instance, you might experience
this in labs.

NOTE Confidence: 0.8346599

9389a1ac-e3a9-4c57-95bf-8dc5247e9a68
01:00:09.450 --> 01:00:14.718
For instance, if you approach or
put a magnetic thing

NOTE Confidence: 0.8346599

fa106cbd-3c5f-443c-9bbf-371e5661078f
01:00:14.718 --> 01:00:20.425
toward a circuit. You
can change the current of the

NOTE Confidence: 0.8346599

91cdc74f-5a7a-407e-a266-420eda174c63
01:00:20.425 --> 01:00:24.376
circuit, because as you know
from physics, magnetic field

NOTE Confidence: 0.8346599

943e01f1-5145-41a7-8060-ec6f89fd68d6
01:00:24.376 --> 01:00:28.766
actually produces
current. So for instance

NOTE Confidence: 0.8346599

257a9ef2-4fe4-44c7-b534-3587b7aac091
01:00:28.766 --> 01:00:33.156
if in the environment, a
magnetic thing

NOTE Confidence: 0.8346599

b38b1859-567f-4137-8d3c-f778365a7a26
01:00:33.156 --> 01:00:38.424
approaches our system. it
may increase the voltage so

NOTE Confidence: 0.8346599

02765404-8c06-430d-8485-4fda9a799615
01:00:38.424 --> 01:00:41.058
noise happen, so that's why I

NOTE Confidence: 0.88714164

b1613145-44ef-448f-9094-8929127a48f8
01:00:41.058 --> 01:00:46.426
mean. If noise happens, we can
not determine what is the number

NOTE Confidence: 0.88714164

4e108679-3672-4055-a2cd-8ffc2988c58a
01:00:46.426 --> 01:00:48.556
for that period of time.

NOTE Confidence: 0.8057349

4ececc47-1477-4589-bcc6-1318d28d70d0
01:00:50.030 --> 01:00:54.210
But, if noise happens
here, we can damp that,

NOTE Confidence: 0.8057349

5b2e54d8-0f84-4855-a11b-e1a1e881f183
01:00:54.210 --> 01:00:56.300
or we can adjust that.

NOTE Confidence: 0.8890105

e359a43b-1084-4803-87ef-e4fcba81701e
01:00:57.640 --> 01:01:01.408
So this is the positive logic
that we are going to use to build the

NOTE Confidence: 0.8890105

7811305b-78aa-497c-84cc-0d369eab8796
01:01:01.408 --> 01:01:04.234
binary system by changing the
voltage within these ranges.

NOTE Confidence: 0.855925

7b887256-f445-4ab9-a93e-55f1cb055d5b
01:01:05.510 --> 01:01:10.514
And this is the I mean, uh,
circuits. So just putting a

NOTE Confidence: 0.855925

80b20dde-9b44-48bd-b99c-ee401c0fe24f
01:01:10.514 --> 01:01:15.101
battery of plus five voltage
here and the register here on the

NOTE Confidence: 0.77232516

fb4a5052-2aee-47a6-bba6-8ecae473f0fa
01:01:15.101 --> 01:01:17.120
ground, and the switch.

NOTE Confidence: 0.88540334

d34c940d-22fb-4db2-96e9-bc03d0dd495f
01:01:17.770 --> 01:01:22.324
If the switch is connected, the
voltages becomes 0, so we

NOTE Confidence: 0.88540334

938ea725-b9a1-4f0b-af2f-2f2cb57eaf00
01:01:22.324 --> 01:01:27.292
interpret it as zero. If we open
the switch, the higher voltage

NOTE Confidence: 0.88540334

b4015025-6770-452c-b4b7-a7e14a4441f3
01:01:27.292 --> 01:01:32.260
goes out, so we can interpret it
as high voltage or one.

NOTE Confidence: 0.8913862

54a4ccaa-4bd5-4663-b96f-e779421d7452
01:01:34.110 --> 01:01:37.494
So just by building this
circuit, we can represent

NOTE Confidence: 0.8913862

a7a5c139-5fde-4f48-b815-68c561920845
01:01:37.494 --> 01:01:38.622
zero and one.

NOTE Confidence: 0.89377123

b410c50d-baf7-4ff7-8f53-46fb75bf2293
01:01:41.320 --> 01:01:45.402
We can have negative logic just
because it depends on our

NOTE Confidence: 0.89377123

32ae4aa2-6d8a-4657-b962-37ddf5703263
01:01:45.402 --> 01:01:49.484
interpretation. We can say that
if you have a low voltage we can

NOTE Confidence: 0.89377123

10e817f2-cf23-475e-b95a-434b910387be
01:01:49.484 --> 01:01:51.682
interpret it as one, and if you have

NOTE Confidence: 0.8598031

95f12ede-d33c-4db3-b46c-41d9a5fe8214
01:01:51.850 --> 01:01:54.244
a high voltage, we can
interpret it at 0.

NOTE Confidence: 0.8673106

da830039-e2e2-4783-9e81-f40ed1824a98
01:01:54.930 --> 01:01:59.286
So this is called negative logic
and it's kind of just

NOTE Confidence: 0.8673106

f6dcfd7e-9d9a-4350-adf8-fe4cc4f75964
01:01:59.286 --> 01:02:02.916
inverting the previous system.
So whenever we see low voltage,

NOTE Confidence: 0.8673106

e5a3961c-8d02-470d-a190-533422ba8553
01:02:02.916 --> 01:02:07.635
we can interpret it as one. If
you have high low voltage, we

NOTE Confidence: 0.8673106

36c031fe-4d32-4c92-8853-60453b627256
01:02:07.635 --> 01:02:12.354
represent zero. We can see that
in such a system, we don't need

NOTE Confidence: 0.8673106

15498a14-054c-488d-b865-bbfcb6aedcfa
01:02:12.354 --> 01:02:16.710
to do anything as long as we
need to represent one because

NOTE Confidence: 0.8673106

84637b77-8069-4d81-b1a3-e81b616bbdc8
01:02:16.710 --> 01:02:20.703
low voltages ground. Whenever we
wanted to produce zero, we have

NOTE Confidence: 0.8673106

468f1f57-5e7c-49b4-9d3c-dd0990ce4cb1
01:02:20.703 --> 01:02:25.059
to increase the voltage to a
value more than two, so this

NOTE Confidence: 0.8738891

d9969a01-5369-4041-8d5c-6d9a121b53ff
01:02:25.059 --> 01:02:28.798
way, in this system, we have to
produce zeros. In the positive

NOTE Confidence: 0.8738891

622bb378-9d35-45ea-a970-6af89b413bd0
01:02:28.798 --> 01:02:30.586
logic, we have to produce ones.

NOTE Confidence: 0.84106916

0d199989-76d1-4228-a6a9-f1ea015aa6eb
01:02:32.250 --> 01:02:36.474
And this is the I mean, uh,
circuits for producing zero and

NOTE Confidence: 0.86098665

123f7bed-e2f8-4f30-ac0e-d3bd6869007f
01:02:36.474 --> 01:02:40.492
one. Again, it's kind of
inverting the previous system.

NOTE Confidence: 0.84360033

8c25ad7a-b894-452c-94bd-944d4a1dbb92
01:02:41.810 --> 01:02:48.110
But for our course, and even
most of these binary

NOTE Confidence: 0.84360033

f63b8667-3b24-4460-84e5-d2d72e21a215
01:02:48.110 --> 01:02:52.160
computers or digital systems are
based on positive logic.

NOTE Confidence: 0.9054376

f586c42d-6d22-421b-b3ff-bd6103f8e918
01:02:52.750 --> 01:02:55.438
So for our course we picked the

NOTE Confidence: 0.81709355

f13ac62c-4624-403b-88ea-bb18d547ab15
01:02:55.438 --> 01:03:01.420
positive logic. So high voltage
is 1, low voltage is zero, and

NOTE Confidence: 0.81709355

fe303182-f618-4e32-baa1-22e7925017aa
01:03:01.420 --> 01:03:03.535
we pick the bottom-up

NOTE Confidence: 0.8858542

7ee2e77c-4fd6-4fb4-bc0b-c512eb92b125
01:03:03.535 --> 01:03:08.940
approach. What we mean by this
is that we wanna instead of just

NOTE Confidence: 0.8858542

bfde6b56-068f-4de5-8e10-e9b65ddb93d3
01:03:08.940 --> 01:03:13.620
zooming inside the chip, we want
to zoom back. So we want to

NOTE Confidence: 0.8858542

b62eddca-c39a-44cb-ada9-7d4cf9448cc6
01:03:13.620 --> 01:03:17.220
build the smallest unit of
binary units of a binary computer,

NOTE Confidence: 0.8858542

9be4b832-5cf8-4039-b3ee-4f13af653d3d
01:03:17.220 --> 01:03:21.900
for instance, how we can do the
inversion? For instance, 0 to one

NOTE Confidence: 0.8858542

ad567c10-f1be-4641-a81f-b1526aec5b86
01:03:21.900 --> 01:03:26.580
or one to zero, and then build
the larger units based on these

NOTE Confidence: 0.8858542

6459cb0a-9cc9-4873-8ec5-f4b8ce9edf16
01:03:26.580 --> 01:03:30.900
smaller units. So this is called
bottom-up approach and then at

NOTE Confidence: 0.8858542

e27cef83-a7b3-4e5f-a3ea-1d684d3c3706
01:03:30.900 --> 01:03:35.220
the end of this course we're
going to build a unit that

NOTE Confidence: 0.86700356

4924f594-66c6-49e1-b281-f30b4dfa03cd
01:03:35.360 --> 01:03:39.826
acts like CPU in
computer systems. In the next

NOTE Confidence: 0.86700356

7841aba2-9f9f-4d51-9e2a-6715e6df56c8
01:03:39.826 --> 01:03:44.698
course, which is
Computer Architecture 2, you are going

NOTE Confidence: 0.86700356

b7056fba-6d9c-47fb-85b1-fb0eefb804ff
01:03:44.698 --> 01:03:49.570
to build another larger
binary system tht not only have CPU

NOTE Confidence: 0.86700356

602bdd0f-50d8-42bc-9709-c3f8fac029ee
01:03:49.570 --> 01:03:54.848
but also have memory, IO and
etc. So this is called bottom-up

NOTE Confidence: 0.86700356

68089499-c5d5-4e63-899b-efd395d6dd88
01:03:54.848 --> 01:03:58.502
approach from the smallest units
to the larger units.

NOTE Confidence: 0.91824734

53cfec2b-534d-45be-923d-b9c604c0392f
01:04:00.750 --> 01:04:01.410
And.

NOTE Confidence: 0.9295613

2633ec86-2364-424a-8285-2e25a87dbe6e
01:04:02.640 --> 01:04:04.480
One thing is that.

NOTE Confidence: 0.9059014

e45d85aa-c8b9-4cf7-b262-fbde53bf1ffd
01:04:05.080 --> 01:04:08.968
You might say that so we are
going to build a computer.

NOTE Confidence: 0.8611865

16a447ca-ab4c-4142-baf8-9e2a44788c06
01:04:09.680 --> 01:04:14.516
And before building a computer,
before going to the lab and then

NOTE Confidence: 0.8611865

c7ed670e-7d6e-4256-9fa6-6e84a7f36049
01:04:14.516 --> 01:04:18.546
wiring and using the
electricity power, we have to

NOTE Confidence: 0.8611865

06df3129-1383-47b5-af29-86549f2231ea
01:04:18.546 --> 01:04:23.382
1st design our computer in paper
and see whether the

NOTE Confidence: 0.8611865

228bb2ab-b97a-405b-8399-69e27755f08f
01:04:23.382 --> 01:04:27.815
design is working properly or not.
And then we go to the

NOTE Confidence: 0.8611865

2ac1f118-2656-4665-a5c1-c1ce55fca5a4
01:04:27.815 --> 01:04:31.442
manufacturing company and said
that let's build the computer system

NOTE Confidence: 0.8611865

85dc93c0-646e-4516-9c98-49edb7c1359d
01:04:31.442 --> 01:04:33.054
based on my circuit.

NOTE Confidence: 0.87379014

990c6755-ea8c-454b-a907-2d28acfd6cb3
01:04:34.090 --> 01:04:40.899
And so design is before
developing or building a system.

NOTE Confidence: 0.7811935

70cf127e-ae59-4122-b50b-4d35a94bab7e
01:04:41.620 --> 01:04:47.920
And the Design Phase is very
important because if you can

NOTE Confidence: 0.7811935

294976c3-614c-49d1-96d4-bc87a1659d88
01:04:47.920 --> 01:04:49.810
design a system,

NOTE Confidence: 0.8471535

f1f4b422-b4b9-4dc8-a0ff-1315dab21613
01:04:50.460 --> 01:04:55.452
doing the same tasks, or 
calculating the same

NOTE Confidence: 0.8471535

45ec8fec-2bf4-4db3-baec-63dcc2e509d5
01:04:55.452 --> 01:05:00.028
algorithm but with a smaller
number of units, it is much more

NOTE Confidence: 0.8471535

c147f505-f5a7-4b27-ad8a-521f00ed64b6
01:05:00.028 --> 01:05:04.604
cheaper and it saves a lot of
costs in manufacturing process.

NOTE Confidence: 0.9041673

2f76fa07-4812-4134-be18-f9c23dbf32c0
01:05:05.430 --> 01:05:10.149
So and the fact is in Binary
Computers, a lot of methods in

NOTE Confidence: 0.9041673

7b986fe2-b43d-4a07-bdc3-a45a7d12e8ed
01:05:10.149 --> 01:05:14.142
mathematics can help us to
reduce the number of units, which

NOTE Confidence: 0.9041673

40401153-f6fa-4979-b72d-6cd5f3d8ed07
01:05:14.142 --> 01:05:15.594
comes from Boolean Algebra.

NOTE Confidence: 0.9036002

b06340b9-d2dc-4b25-81ad-515ba890bdf6
01:05:16.690 --> 01:05:21.898
So this is the task of computer
scientists or the discipline of

NOTE Confidence: 0.9036002

a01f414d-362a-4f1a-964b-0fb0f4aeba3e
01:05:21.898 --> 01:05:25.804
computer science: to design
computers with smaller units

NOTE Confidence: 0.9036002

55adbdcc-c807-4e37-994e-95f5d868c919
01:05:25.804 --> 01:05:29.710
or simple units, but
accomplishing the same task with

NOTE Confidence: 0.9036002

2c262f14-7315-4afe-9831-bfcde114bff4
01:05:29.710 --> 01:05:34.918
the same power. And then we give
this to electrical engineers or

NOTE Confidence: 0.9036002

f472257f-abb1-4fdd-b8a1-ba218d1a77fb
01:05:34.918 --> 01:05:37.088
computer engineers to build our

NOTE Confidence: 0.86105597

67bf903c-7b78-4361-b6ee-623ac9c2d18f
01:05:37.088 --> 01:05:43.162
design. So in this course, and
even in the next course, we are

NOTE Confidence: 0.86105597

de7f62ac-238c-47c8-b940-8cb8e853a3c2
01:05:43.162 --> 01:05:48.566
not going to build the computer,
so we never go and build the

NOTE Confidence: 0.86105597

67d3b58c-58b0-4e40-a40c-d99491abc9fb
01:05:48.566 --> 01:05:52.812
digital circuit and
then put some wiring, put some

NOTE Confidence: 0.86105597

516dc7c2-a9da-443d-a709-27c69942a8f5
01:05:52.812 --> 01:05:57.058
registers, put some deodes,
etc. So these are all tasks of

NOTE Confidence: 0.86105597

98595c33-4122-470e-bbc8-29a4bff289a6
01:05:57.058 --> 01:05:58.216
electrical and computer

NOTE Confidence: 0.84490824

956bc3d1-b15d-4f29-8a14-2bdbf6234e83
01:05:58.216 --> 01:06:02.518
engineers. In computer
science, we just wanted to

NOTE Confidence: 0.84490824

b6d9fbe8-d3fd-46ca-ba6c-d5a608a41934
01:06:02.518 --> 01:06:05.626
design efficient, simple
computers, but

NOTE Confidence: 0.84490824

2ab3acaf-0fc9-4bc8-9c73-e3c5d7493446
01:06:05.626 --> 01:06:09.622
prooving that this is an
equivalence computer

NOTE Confidence: 0.84490824

dc9d1fe5-b4fd-4ae0-ab35-d8c6b32e0808
01:06:09.622 --> 01:06:14.950
system that can do the
same task but with a smaller

NOTE Confidence: 0.84490824

67b9befd-02eb-43ad-b22d-5eebe181dc50
01:06:14.950 --> 01:06:16.282
or simple units.

NOTE Confidence: 0.8608553

d0b00ab1-338f-42e5-98a4-b7273d199307
01:06:17.600 --> 01:06:22.020
So we design binary computers
in this course and the next

NOTE Confidence: 0.8608553

556777c6-9141-47df-b98f-1bab59759cc4
01:06:22.020 --> 01:06:25.998
course, and we give the
building task to engineers.

NOTE Confidence: 0.8665116

491e9b22-502a-4fee-bb6c-1f502cdf5894
01:06:28.290 --> 01:06:32.838
So the first step in designing
binary system from a bottom up

NOTE Confidence: 0.8665116

a6ed0b3d-86e9-4623-afab-8b55e0638097
01:06:32.838 --> 01:06:34.733
approach is designing the gates.

NOTE Confidence: 0.89073294

7508acd8-555a-4d72-adda-4bf1f9fb24a3
01:06:35.570 --> 01:06:39.305
And because we are using
the mathematical logic when

NOTE Confidence: 0.89073294

071e5c8d-13e9-44a5-8ad3-5eab7cfd2841
01:06:39.305 --> 01:06:43.040
we are designing the gates,
it's called logic gates.

NOTE Confidence: 0.9111239

6f6cbc68-9eb4-4182-a316-252bfe699b56
01:06:44.390 --> 01:06:48.075
So let's start with the first
logic gates. But before that,

NOTE Confidence: 0.9111239

cad7a4f6-dee2-4247-a7e8-31b2b2600ee5
01:06:48.075 --> 01:06:50.755
I'm happy to answer your
questions so far.

NOTE Confidence: 0.9250182

10f9f208-0e4c-4334-bda0-85cae4ff2276
01:06:53.350 --> 01:06:54.850
Are there any questions from you?

NOTE Confidence: 0.8730133

cf691997-3b59-40a5-b841-fd9a1084aa12
01:07:01.220 --> 01:07:05.060
It seems there's no question,
so let's continue.

NOTE Confidence: 0.77247083

43a84467-0099-4882-9100-ab358a0a1028
01:07:07.020 --> 01:07:10.008
Ah, but before we continue,
let's, uh, make sure that

NOTE Confidence: 0.77247083

7ad3720f-3021-47aa-9df0-e273122a079a
01:07:10.008 --> 01:07:13.992
everyone has the focus to
the slides. So again, I

NOTE Confidence: 0.77247083

a33c8e50-a6da-44b2-bc1f-7bb4a099f6c6
01:07:13.992 --> 01:07:18.640
want to ask
you to send me some feedback.

NOTE Confidence: 0.77171814

7ac26a0c-d0bf-44ba-88b9-bdc382d04d37
01:07:22.180 --> 01:07:23.218
Guys wake up.

NOTE Confidence: 0.85306406

53a106f1-c683-4dfb-badf-f7d95b5a9eb1
01:07:23.930 --> 01:07:27.150
Cool Leah. Thank you, Justin.

NOTE Confidence: 0.78423625

28e5878e-2d1f-4325-b191-23c09a8f93ce
01:07:30.820 --> 01:07:33.886
Yeah, Taylor, Alexa.
Thank you, Joseph.

NOTE Confidence: 0.8785589

dc435de6-f3ca-486f-9f21-934251694ea7
01:07:36.650 --> 01:07:40.043
Awesome, seems everyone has their
attention, so let's continue.

NOTE Confidence: 0.87369543

69c88a78-512e-479d-8546-be377124e82c
01:07:41.420 --> 01:07:44.420
The first
logic gate we're going to

NOTE Confidence: 0.87369543

2192ac02-0e3b-497d-b80b-3598914792e3
01:07:44.420 --> 01:07:45.320
build is called

NOTE Confidence: 0.82957804

03eea68f-dfdd-456e-95fa-92458c1febd2
01:07:46.330 --> 01:07:51.786
This. This is the first
logic gate we are going to

NOTE Confidence: 0.82957804

e872fb06-4cdc-434d-96f2-35eaef606c4c
01:07:51.786 --> 01:07:56.032
build this. Again in this course,
because we are at the design level, we

NOTE Confidence: 0.82957804

01726568-7adb-40e8-ac70-177311892f15
01:07:56.032 --> 01:08:00.278
just put figures in order to
represent the units or the

NOTE Confidence: 0.82957804

93eff879-74e7-4335-9029-4d0ee1fbbbc7
01:08:00.278 --> 01:08:04.910
gates. How is this gate gonna be end
up in manufacturing process or

NOTE Confidence: 0.82957804

5fb4a56d-2f9d-4bb5-95c8-4b06065dcc49
01:08:04.910 --> 01:08:09.542
in a physical perspective? This
is not our task. This is the

NOTE Confidence: 0.82957804

5f1f64bc-ab02-40f0-ab84-09ec5b9db8d8
01:08:09.542 --> 01:08:10.700
task of engineers.

NOTE Confidence: 0.8854758

46c3de9e-ec72-4fb4-b935-89c5a0638c94
01:08:11.780 --> 01:08:14.140
So this is called NOTS.

NOTE Confidence: 0.8129427

b2cc3e46-24a8-465d-982d-74ff1d56c577
01:08:15.000 --> 01:08:20.915
Or a inverter or I mean an
inversion bubble as you can see

NOTE Confidence: 0.8129427

594218a7-7909-4cc7-bcef-9e6cb39b45a7
01:08:20.915 --> 01:08:25.465
here, there's a bubble
here. We call this an inversion

NOTE Confidence: 0.8966688

2df9dddc-e58e-4293-b4f3-4ad3a6b9056b
01:08:25.465 --> 01:08:30.560
bubble. And basically it does
the logical not on the input.

NOTE Confidence: 0.8951385

26e6a499-2373-4f4d-81ef-76efa902ecb4
01:08:31.380 --> 01:08:35.774
So whenever we have zero in the
input, it makes it one. Whenever

NOTE Confidence: 0.8951385

5a4d0f1e-4173-4f40-8a25-975f25344e43
01:08:35.774 --> 01:08:39.154
we have one in the input, it
makes it 0.

NOTE Confidence: 0.8439307

88bb5c81-de6b-4efb-9a89-0f4e2db72e08
01:08:39.830 --> 01:08:46.670
So we could say that not X or
inverter of the X or X

NOTE Confidence: 0.8439307

d20ef65a-f9d7-4f0a-8136-471994669adf
01:08:46.670 --> 01:08:52.598
prime or X bar. So all these
notations are the same for this

NOTE Confidence: 0.8439307

449f0c14-e2b8-4632-86ac-64dcf0930440
01:08:52.598 --> 01:08:55.334
gate or the operation of not.

NOTE Confidence: 0.8323419

5f0c6855-453a-4542-a5a0-3e1e0350efcb
01:08:56.270 --> 01:09:02.458
Basically what it does is if you have a
low voltage in the input, this

NOTE Confidence: 0.8323419

cd861e39-7082-4c72-a38e-dde975a87157
01:09:02.458 --> 01:09:07.218
device or this gate increase the
voltage to high voltage.

NOTE Confidence: 0.888036

0c6d2351-ef9e-495f-a263-3daf5d407991
01:09:08.290 --> 01:09:12.060
So if there's a low voltage in
the output, you gonna have high

NOTE Confidence: 0.87586886

e12cf790-bb47-4075-8513-5a261ebabd7c
01:09:12.060 --> 01:09:17.490
voltage. If in the input there
is a high voltage, this unit or

NOTE Confidence: 0.87586886

9df9887e-8dcd-4ff8-8dba-533774165733
01:09:17.490 --> 01:09:21.615
this device is gonna reduce the
voltage too low voltage, so make

NOTE Confidence: 0.8805899

15433129-148d-43da-af15-9f04eab1abdb
01:09:21.615 --> 01:09:24.540
it 1 to 0. So that's the task of

NOTE Confidence: 0.78825516

dd9dc688-2556-48c4-b66e-c6458e2efe44
01:09:24.540 --> 01:09:29.387
this gate. How we can build
this? It's not our task.

NOTE Confidence: 0.8819647

d6c30c3b-7d08-4fd5-b7da-7255cfb7e903
01:09:30.330 --> 01:09:34.763
And the thing is, the output is
usually represented as F

NOTE Confidence: 0.8819647

2d046c53-6338-4ac6-9643-f8ea6c5e806a
01:09:34.763 --> 01:09:38.793
function and because we are
working on the binary system

NOTE Confidence: 0.8819647

5ce3b42e-aea2-49d2-b9a5-28c9cc1bad19
01:09:38.793 --> 01:09:43.226
which is using the Boolean
Algebra, we could say that this

NOTE Confidence: 0.8819647

c3bf09ce-4278-4bb9-8c2e-e4c287b15e8c
01:09:43.226 --> 01:09:47.659
is a boolean expression or
Boolean function, so F is called

NOTE Confidence: 0.8819647

3a150f54-274e-4dc9-a638-5e9367041db1
01:09:47.659 --> 01:09:51.286
Boolean function or Boolean
expression. Or you could say

NOTE Confidence: 0.8819647

bd573dd2-5390-45ef-9065-4ec4ab09b988
01:09:51.286 --> 01:09:53.301
that this is a binary function or binary

NOTE Confidence: 0.80448925

68261904-6855-4055-8bf6-eb81c35ee87a
01:09:53.301 --> 01:09:58.090
expression. And it's equal to X
Prime, which means that just

NOTE Confidence: 0.80448925

c16e6b28-bee8-4915-99a5-ef6d96954640
01:09:58.090 --> 01:09:59.985
inverted version of the input.

NOTE Confidence: 0.86040473

2f552b4e-383b-48d2-9afb-44359cab4ef4
01:10:02.650 --> 01:10:07.774
So the immediate application of
this gate is using for one's

NOTE Confidence: 0.86040473

6868fddc-1563-4987-82f2-6d899cdf1705
01:10:07.774 --> 01:10:11.617
compliment. You remember we
wanted to use the one's

NOTE Confidence: 0.86040473

170cdaef-391e-4a1d-939f-d945cdf589fa
01:10:11.617 --> 01:10:15.887
complement in order to calculate
the two's complements, so two's

NOTE Confidence: 0.86040473

65105317-f339-4595-8efd-5396199fe233
01:10:15.887 --> 01:10:17.595
compliment was one's compliment

NOTE Confidence: 0.8799768

81345500-baab-4c5b-b2d1-2e702e9d6ace
01:10:17.595 --> 01:10:24.342
plus one. So for now, using the
not gate or the inverted gate,

NOTE Confidence: 0.8799768

3ec55a25-b815-4c87-9820-2015a6d4617d
01:10:24.342 --> 01:10:30.478
we can build a machine that does
the one's complement. So if you

NOTE Confidence: 0.8799768

49548a52-83e5-444a-b3b1-afa22b10c4cf
01:10:30.478 --> 01:10:32.838
are given the input XYZW.

NOTE Confidence: 0.78187627

6d701028-fdb6-4dec-8f13-85891cbc6860
01:10:33.510 --> 01:10:38.658
Uh, just by this wiring and
attaching the not gate, you can

NOTE Confidence: 0.78187627

70859a2f-2443-4c7a-8343-20d2e57270d9
01:10:38.658 --> 01:10:42.090
produce the one's complement of
the given number.

NOTE Confidence: 0.8518189

0d4d3fac-c426-4774-8dbe-86ad9062075c
01:10:43.170 --> 01:10:45.956
That's the immediate application
of the NOT gate.

NOTE Confidence: 0.8470164

8836d16f-fc60-4ed5-a977-8cb9a93fbcd2
01:10:49.240 --> 01:10:55.051
By the way, this table is called
a truth table, uh, because it says

NOTE Confidence: 0.8470164

7e7d4a02-8c4f-49e9-8f25-2294e282078f
01:10:55.051 --> 01:10:59.968
that all the combinations or all
the possibilities of input and

NOTE Confidence: 0.8470164

76041b80-ccd5-48f8-9ae7-a61e6957bd61
01:10:59.968 --> 01:11:05.779
with what outputs. So this is called
truth table. So usually we are given

NOTE Confidence: 0.8470164

d879017a-7a35-47af-b43b-1543b08fcff5
01:11:05.779 --> 01:11:11.590
a gate or given an
operator, we usually add a truth

NOTE Confidence: 0.8470164

39f5d371-73b6-4dc7-b156-ee542a7667a0
01:11:11.590 --> 01:11:15.613
table to analyze the
functionality of the gate by

NOTE Confidence: 0.8470164

c244e94a-666f-459a-92e6-a0577c7c8f88
01:11:15.613 --> 01:11:18.295
just analyzing what are the

NOTE Confidence: 0.8242384

dc2a5b5f-4b31-4295-a802-80e6978e3c4c
01:11:18.295 --> 01:11:22.690
inputs and if the inputs are for
instance, zero, what are the

NOTE Confidence: 0.8584776

87c7953e-f6bb-41f6-b9de-5de2066cc088
01:11:22.690 --> 01:11:26.810
outputs? So any gates we
introduce has a truth table. In

NOTE Confidence: 0.8584776

b6610981-5fa8-4b6e-a920-523e5b958694
01:11:26.810 --> 01:11:29.770
order to analyze the gates, the
functionality of the gates.

NOTE Confidence: 0.9184441

09557cf0-7268-400c-87ac-0c5981d0c203
01:11:31.140 --> 01:11:32.790
The next gate is gonna be

NOTE Confidence: 0.8357209

931355ee-4f77-4a70-b9c6-426eab442052
01:11:33.400 --> 01:11:37.888
The second most important gate
AND, and we represent AND

NOTE Confidence: 0.8357209

f35adcb1-3d88-43c0-89b7-d7965ee564c1
01:11:37.888 --> 01:11:41.560
by this figure. Please do
remember these figures, because,

NOTE Confidence: 0.8357209

d791554b-2ef2-431f-bfb4-af57d469e3a3
01:11:41.560 --> 01:11:46.456
uh, the next lecture, when we
design, we have to put our

NOTE Confidence: 0.8357209

0dbe76a4-0d4f-4fa5-9162-7c58849965b2
01:11:46.456 --> 01:11:51.760
design in a paper so that the
engineers know how to put the

NOTE Confidence: 0.8901731

3e61d6d5-f9d1-42ff-8083-f7bc16e347ce
01:11:51.870 --> 01:11:56.790
gates in a physical perspective,
so you have to know the figures.

NOTE Confidence: 0.8901731

fd5f6725-7554-4e2b-a783-21455a4ac694
01:11:56.790 --> 01:12:01.300
So this is the symbol or the
figure for the AND operator.

NOTE Confidence: 0.92194414

0817d3d8-0b13-432c-ae07-729e70788924
01:12:02.340 --> 01:12:04.170
And the truth table is this.

NOTE Confidence: 0.9104068

c1862f05-c7fe-4fab-b5aa-c6bed9e6f34d
01:12:04.980 --> 01:12:07.110
Given all the
possibilities in the

NOTE Confidence: 0.9104068

1fef0cc4-1ceb-42c4-8795-a29479ab4252
01:12:07.110 --> 01:12:07.465
input.

NOTE Confidence: 0.872434

6859cc52-2b21-4eb3-bef4-ac49d98e3bff
01:12:08.550 --> 01:12:14.580
X and Y, 00011011, there's no other
possibilities, the output is gonna

NOTE Confidence: 0.8651118

360bd1e0-9fd7-45e0-9dca-01f586f892a6
01:12:14.580 --> 01:12:20.347
be this. Basically the AND
operator

NOTE Confidence: 0.8396256

c3e1a29e-a85e-429c-99c7-e161e354df70
01:12:22.050 --> 01:12:28.027
on the inputs. So you can easily
see that the AND is a binary

NOTE Confidence: 0.8396256

0f17e3bc-4c73-4eb0-857f-2df878d30cb4
01:12:28.027 --> 01:12:32.504
operator. It accesses 2 operands
and apply on the input operand

NOTE Confidence: 0.8396256

ca9e67f6-a4c4-4835-b738-25222d81d20a
01:12:32.504 --> 01:12:36.981
X and Y and outputs the X&Y. In
books, the AND can be

NOTE Confidence: 0.8396256

92369aec-2237-4a4b-a5a6-1484986fdb8b
01:12:36.981 --> 01:12:40.237
represented by dots or by
multiplication symbol, but

NOTE Confidence: 0.8396256

b0982baa-e42a-45fb-a54f-1f24cfe3a1bb
01:12:40.237 --> 01:12:45.121
usually in our lecture or in
other books there's no need to

NOTE Confidence: 0.8396256

6311a103-d015-4816-a57b-69e29557cb5f
01:12:45.121 --> 01:12:49.598
represent the AND operator. You
simply say that XY means that X

NOTE Confidence: 0.8396256

0880b935-af57-48fb-bab0-eec54f59cb56
01:12:49.598 --> 01:12:50.819
& Y.

NOTE Confidence: 0.8819769

55d68054-a563-4d6f-ba18-2056491ad4d8
01:12:53.650 --> 01:12:57.885
And from the Boolean Algebra we
will cover next week, from the

NOTE Confidence: 0.8819769

ee73f8ec-cda8-4f8d-a0a8-a041d5bc2d9a
01:12:57.885 --> 01:12:59.810
Boolean Algebra we see that

NOTE Confidence: 0.87222236

bdd1a83a-40ce-4d47-859a-d375815653a4
01:13:00.390 --> 01:13:06.536
X&Y is equal to Y&X, so you can
simply change the order of the

NOTE Confidence: 0.87222236

a9c60693-46c7-4f67-b924-99a3fc28507c
01:13:06.536 --> 01:13:12.243
input and there is no change to
the output, so this property

NOTE Confidence: 0.87222236

b37c453e-f1a8-41d0-ac7e-4cdcb0d9ceff
01:13:12.243 --> 01:13:13.560
is called commutative.

NOTE Confidence: 0.87631565

619d1404-42a7-4f97-87ea-56b03b4fd22c
01:13:14.340 --> 01:13:16.345
It is like multiplication in

NOTE Confidence: 0.81752014

6ff50c73-0e5a-4023-89a6-767c94f29bdc
01:13:16.345 --> 01:13:19.002
decimal system. So the AND operator

NOTE Confidence: 0.8544166

5caddf3e-f065-403e-ab37-831d1839754e
01:13:19.002 --> 01:13:23.440
is commutative. So all
these have the

NOTE Confidence: 0.8544166

3de22d3f-9a1f-430f-aae4-fa1bc8fac2a4
01:13:23.440 --> 01:13:25.120
same truth table.

NOTE Confidence: 0.8493883

e7010adc-75e4-4625-baf1-a2b65ff3772c
01:13:27.560 --> 01:13:32.096
And there are some interesting facts
about the AND operator.

NOTE Confidence: 0.8657859

365256bd-c8f8-40d1-bd14-7e1f543cccca
01:13:32.830 --> 01:13:38.682
If you add any number or any
input with zero, the result is

NOTE Confidence: 0.8657859

1debde81-2305-4724-97e0-80fa0e19ba4c
01:13:38.682 --> 01:13:39.936
gonna be 0.

NOTE Confidence: 0.8883023

e5a01f3e-4aac-4def-a117-cc835034b562
01:13:40.590 --> 01:13:44.407
This is a huge benefit for
engineers because if they

NOTE Confidence: 0.8883023

fcaf279c-7257-474e-bda6-3a0775c91e59
01:13:44.407 --> 01:13:48.571
wanted to see what is the
result, the only thing is that

NOTE Confidence: 0.8883023

be0ce4fe-099d-4a99-a8af-ef35132b5d85
01:13:48.571 --> 01:13:52.735
if they see at least 1 zero,
they won't wait for other

NOTE Confidence: 0.8883023

340ff773-06c5-47a4-84d2-2a41637d8dfb
01:13:52.735 --> 01:13:57.246
inputs, they just simply output
0. So as long as you see at

NOTE Confidence: 0.8883023

8d912967-f81b-419b-bdd9-e08ee712fded
01:13:57.246 --> 01:14:02.104
least 1 zero, you don't have to
wait to see what are the other

NOTE Confidence: 0.8883023

dc29a148-453e-4fae-9fdf-fbb30e8776fa
01:14:02.104 --> 01:14:05.227
inputs. Just simply output
0 because zero with

NOTE Confidence: 0.8883023

eb5ad2de-4aa8-4ded-bd60-cb8d0ea961a0
01:14:05.227 --> 01:14:06.615
anything results with zero.

NOTE Confidence: 0.81406504

a13ddd82-6ac8-432b-bd3d-9d13c30b1286
01:14:09.410 --> 01:14:13.010
Again, here we see zero
in another input, so we

NOTE Confidence: 0.81406504

1b3dcc7c-38d5-42fe-b758-572ea6297449
01:14:13.010 --> 01:14:16.250
don't look at the other
inputs. Simply output 0.

NOTE Confidence: 0.89879835

19287b1c-1b20-4a47-8cf1-7f7b48c27d54
01:14:18.250 --> 01:14:23.354
The next interesting thing is
that you can add one with

NOTE Confidence: 0.89879835

64678ac3-1b3c-40b6-abce-637bacfb6e80
01:14:23.354 --> 01:14:25.210
anything without changing the

NOTE Confidence: 0.89225715

a4652778-33e0-469b-82f2-1bcce111cc77
01:14:25.210 --> 01:14:30.810
output. So if you add X with 1 on
the right side or on the left

NOTE Confidence: 0.89225715

5c34a8cc-21e7-4157-8cd9-a45035e84567
01:14:30.810 --> 01:14:34.970
side, there is no change in the
output. The output is still going

NOTE Confidence: 0.89225715

f0f03d50-97b0-4f46-8bfd-c3048190b8e2
01:14:34.970 --> 01:14:40.410
to be X and it depends on the X.
If X is 0, the result going to

NOTE Confidence: 0.89225715

88196b3f-91c1-4964-b12a-77d86bca1d2c
01:14:40.410 --> 01:14:43.290
be 0. If X is 1, the result going

NOTE Confidence: 0.87903714

c3a24358-5bc3-4b94-9005-3138f564ab95
01:14:43.290 --> 01:14:48.892
to be 1. So this is the truth
table. So if the one input is

NOTE Confidence: 0.9090539

03ea3e4b-b839-4221-b7b5-59b52e361710
01:14:48.892 --> 01:14:51.424
always one, the other input

NOTE Confidence: 0.8476403

82a2fdd1-0f5a-48b4-ad3a-a3bb9543214e
01:14:51.424 --> 01:14:55.294
actually matters. So adding
one with anything doesn't

NOTE Confidence: 0.8476403

8fa466dd-8cba-4399-8acb-912e03bf0d99
01:14:55.294 --> 01:14:59.683
change the result and doesn't
have any impact. It's kind of

NOTE Confidence: 0.8476403

83abd355-447b-42ae-a91f-543ebbad8427
01:14:59.683 --> 01:15:01.279
padding in numbering system.

NOTE Confidence: 0.80563074

6dab9109-72da-4d83-9531-72f02c1f282e
01:15:03.350 --> 01:15:05.660
And adding anything with itself.

NOTE Confidence: 0.896219

040bf385-2afe-42b7-af1d-c82205fe5998
01:15:06.340 --> 01:15:10.410
Doesn't change the result, so
X&X is equal to X.

NOTE Confidence: 0.8461828

6087d2a2-79e5-4e85-acb1-6878c590a6c7
01:15:13.120 --> 01:15:18.103
Sometimes when designing,
if you put same input in both

NOTE Confidence: 0.8461828

d1bdbf1e-c67f-4c16-8f13-89806f84e79b
01:15:18.103 --> 01:15:23.086
the inputs, you
can simply use this notation.

NOTE Confidence: 0.8461828

39207ecb-d9c5-4ede-af12-4ebe10af0288
01:15:23.086 --> 01:15:27.163
X goes to both inputs of the
AND operator.

NOTE Confidence: 0.8707682

abb60b5c-d466-4d58-836d-35dd159cd319
01:15:30.490 --> 01:15:36.070
Another thing is that if you AND
an input with the negative,

NOTE Confidence: 0.8707682

e826a2fc-7bbd-4a87-b952-43e53684f4b6
01:15:36.070 --> 01:15:39.790
sorry not negative, the inverted
version of X.

NOTE Confidence: 0.78733814

b705a14b-5e75-41bb-a902-2082baa5b15a
01:15:40.520 --> 01:15:47.684
Uh, because if X is 0 the not of
the X is 1, produces zero, and if X

NOTE Confidence: 0.78733814

44acca30-8cec-4d16-b9bb-f2b7b5853e6b
01:15:47.684 --> 01:15:53.654
is one, the NOT is 0. So the
AND is gonna be 0. So whenever you

NOTE Confidence: 0.78733814

5f934126-4ef4-43ee-b1c9-3e2dda8a8c28
01:15:53.654 --> 01:15:57.634
AND an input with its
inverted version, always the

NOTE Confidence: 0.78733814

1c142755-405a-4830-9a75-6d40daf9da2c
01:15:57.634 --> 01:15:59.624
result going to be 0.

NOTE Confidence: 0.8963772

067db048-4dba-4a1c-a83a-f0fa2c76587f
01:16:01.220 --> 01:16:04.140
So this is another interesting
fact of the AND operator.

NOTE Confidence: 0.76601875

8d820a45-a548-4a83-9fbd-e6ab5ae9c10b
01:16:05.190 --> 01:16:07.086
The AND operator can be, uh,

NOTE Confidence: 0.819385

afe1e192-eb26-47b3-a7cc-714e526bf903
01:16:07.086 --> 01:16:11.522
showed like this, using the
inverted barbell. So we just put

NOTE Confidence: 0.819385

874e3ba4-acd9-4ecb-9fc3-03148310dcfa
01:16:11.522 --> 01:16:15.734
X here and then we put here and
invented bubble means that X

NOTE Confidence: 0.818747

0667e280-2174-4cde-8826-7309680135fb
01:16:15.734 --> 01:16:21.605
prime. Or you can simply
says that F's output is always 0.

NOTE Confidence: 0.754007

df21541f-96e3-4099-b472-f666df877868
01:16:23.160 --> 01:16:25.785
So we are done with today's, uh,

NOTE Confidence: 0.81301135

52f95377-b546-4afa-94c6-7bce9be1d6b9
01:16:26.980 --> 01:16:31.564
lecture so next week we're going
to continue further with

NOTE Confidence: 0.81301135

4c52b764-15ac-44c7-89d0-851371a37f3a
01:16:31.564 --> 01:16:35.766
gates and by building these
small gates we want to build

NOTE Confidence: 0.81301135

b947e01b-d7bd-4a7c-b983-0bae9c8315d9
01:16:35.766 --> 01:16:39.968
larger units, working with these
gates. For instance, we want to

NOTE Confidence: 0.81301135

61a74eb5-7117-4ef4-8195-0d8b1af10283
01:16:39.968 --> 01:16:44.170
build adder or subtractor, do
the addition or subtraction for

NOTE Confidence: 0.81301135

c7ff62b0-89ea-4507-8436-ceb9b54c7e38
01:16:44.170 --> 01:16:48.754
us by these gates. So next week,
we're going to continue this

NOTE Confidence: 0.8346948

eccbc2c6-e2ec-4244-b035-e6cb51de2c30
01:16:48.754 --> 01:16:55.070
lecture. Uh, until then I'm
ready for your questions in the

NOTE Confidence: 0.8346948

d9ba433f-eb36-43bc-9af2-830fb43509a9
01:16:55.070 --> 01:16:59.014
office hour. Please do come
there and then

NOTE Confidence: 0.9058536

055bb62d-d7b5-4849-bd25-f28969313132
01:17:00.410 --> 01:17:01.190
Ask your questions.

NOTE Confidence: 0.8843004

62f993e0-e36d-47c1-ba93-ff03542520da
01:17:02.550 --> 01:17:06.590
So if
there are any questions here.

NOTE Confidence: 0.8705375

60215d8c-f493-414a-99a1-743955035026
01:17:07.920 --> 01:17:12.924
From earlier there was someone
asking, can you explain

NOTE Confidence: 0.8705375

ad3d5e3b-069e-4909-b30b-f5cd1a9cf4aa
01:17:12.924 --> 01:17:14.592
granularity again?

NOTE Confidence: 0.74477595

cc6f169f-9433-4108-8fe3-0c69c2355379
01:17:15.230 --> 01:17:19.380
Oh granularity means that this,
that's go back to this slide.

NOTE Confidence: 0.7550947

f8242126-efdb-4e76-b780-6682bd6760b1
01:17:27.060 --> 01:17:29.322
Granularity means the size of

NOTE Confidence: 0.7696012

587ab7b6-ecec-442d-a67b-512d96765f73
01:17:29.322 --> 01:17:35.470
the unit. Uh, if you have a fine
grain unit, it means that it's

NOTE Confidence: 0.8582167

17322692-3372-42dd-8f58-f0cc0c8f1ff4
01:17:35.470 --> 01:17:41.220
small granularity. If you have a
big size unit, it's called

NOTE Confidence: 0.8582167

c2b7615e-5442-4b67-aa10-8feaf0c42d78
01:17:41.220 --> 01:17:46.005
called large. If you have larger
unit, it's called large

NOTE Confidence: 0.8582167

f0ec9354-0cb2-4139-9dca-9650e382b918
01:17:46.005 --> 01:17:51.225
granularity, it's simply just the
size of the unit. You have to

NOTE Confidence: 0.8582167

7f6ff7f1-7658-4d87-ba27-19f08314f0ff
01:17:51.225 --> 01:17:56.010
split the continuous entity, for
instance here, for the voltage we

NOTE Confidence: 0.8582167

1f4e0a09-6867-48f1-b480-fe81ec62b9d7
01:17:56.010 --> 01:17:58.185
split the voltage into discrete

NOTE Confidence: 0.9077438

533b6281-764c-408c-b4f1-679ea7ec1f0b
01:17:58.185 --> 01:18:05.362
units. So the granularity here
is 1 unit from 9 to 10, eight

NOTE Confidence: 0.9077438

f99fbb63-334f-4241-b938-83f2eef60264
01:18:05.362 --> 01:18:06.850
to 9. 7 to 8, OK.

NOTE Confidence: 0.8678367

73f22fc9-bb1c-474d-8f38-3c11a0f18527
01:18:07.710 --> 01:18:13.221
But here the granularity is a
little bit larger, so

NOTE Confidence: 0.8678367

9169c0bf-b06c-4599-8b8a-4f31dc4934d0
01:18:13.221 --> 01:18:19.734
still from the zero to one. Sorry.
We could say

NOTE Confidence: 0.8678367

794c4f3b-cec3-40d5-8140-0f133f62ac92
01:18:19.734 --> 01:18:26.748
that from 0 to 5, from 5 to
10 and from 10 to 15. So

NOTE Confidence: 0.8678367

de4eb708-e21c-461e-9aa6-da3fb867f438
01:18:26.748 --> 01:18:30.756
we are increasing the
size of granularity.

NOTE Confidence: 0.8663581

11d3fc32-f2fd-4c54-a302-3e6e1e965615
01:18:31.910 --> 01:18:34.738
Or with the time,
for instance here.

NOTE Confidence: 0.87042475

b4f905b9-955b-4e04-8765-5063d275587f
01:18:36.840 --> 01:18:41.429
This times is actually, if this is
just one hour, we split it into

NOTE Confidence: 0.87042475

f4ede023-d814-4073-9def-c0f5a817eb9f
01:18:41.429 --> 01:18:43.547
these units, so it might be

NOTE Confidence: 0.84285825

fb6fc00c-2b83-4b04-b3bf-d16940c6cf37
01:18:43.547 --> 01:18:48.650
minutes. Uh, so the granularity
is in terms of minutes larger,

NOTE Confidence: 0.84285825

b46bf6f3-c330-4e27-b2ac-fdcfb5c0046e
01:18:48.650 --> 01:18:53.876
but we could make the time slots
smaller so we could say that

NOTE Confidence: 0.84285825

3f4c413a-466a-4dc5-9c1f-8229b7aa9612
01:18:53.876 --> 01:18:58.298
these are seconds, so we have a
smaller granularity. So by

NOTE Confidence: 0.84285825

a30a0a83-2002-4d7f-8cf0-ac73a747f6e0
01:18:58.298 --> 01:19:03.524
gravity, we just simply said that
the size of the units

NOTE Confidence: 0.84285825

501ee19b-f490-452e-be5b-596e41e48265
01:19:03.524 --> 01:19:05.132
break the continuous entity.

NOTE Confidence: 0.9007724

e85abd7d-0193-43cc-9def-0b6e31d7c7ce
01:19:06.500 --> 01:19:08.066
I hope I answered the questions.

NOTE Confidence: 0.89608794

8b2d95b0-8467-45a2-8a95-c919cea99b25
01:19:09.310 --> 01:19:10.478
So any other questions?

NOTE Confidence: 0.8881543

abcf0c4b-a4f2-4a14-b6c5-4dc0e17ead86
01:19:14.930 --> 01:19:17.882
She was asking can we use the
5th edition of the textbook?

NOTE Confidence: 0.8872677

3d5b8561-0273-4e91-a735-15cdec71d4dd
01:19:20.280 --> 01:19:25.298
Yes for sure, because as I
said, I mean based on the

NOTE Confidence: 0.8872677

0cb383a5-66dd-4325-b7b1-fffc0fffd581
01:19:25.298 --> 01:19:28.386
material we are covering.
There's no big difference

NOTE Confidence: 0.8872677

fe90fddc-85a0-441e-a36c-9d9d18d698e0
01:19:28.386 --> 01:19:32.632
between the 1st edition and
the six edition, so you can

NOTE Confidence: 0.8872677

d3a640f2-275a-4b8e-9df2-50a1f9cbd1c5
01:19:32.632 --> 01:19:35.720
use the 2nd, 3rd, or 5th
edition, yes.

NOTE Confidence: 0.86508405

9b8e33a3-c1ce-4525-803b-7e0e88b7d4fb
01:19:38.780 --> 01:19:39.809
Any other questions?

NOTE Confidence: 0.8701215

eb4eae34-0764-4ed3-9ed5-7648de5813c4
01:19:42.490 --> 01:19:46.180
Will we be programming a
processor, 8086 in machine

NOTE Confidence: 0.8701215

28bc1d6b-d052-4c25-bb95-1643b285b9af
01:19:46.180 --> 01:19:49.870
code in this class or in Computer Architecture
2, or neither?

NOTE Confidence: 0.81795084

7838bae1-202a-4336-ae74-b711577a6114
01:19:50.990 --> 01:19:55.400
Oh no, no, uh. This is for.

NOTE Confidence: 0.798701

4dabef7a-1391-4dfd-a373-d54aa80c8ec4
01:19:57.000 --> 01:20:02.489
Uh, in the computer science
course, there is a course called

NOTE Confidence: 0.798701

0e366d29-87d3-44bf-97e3-6a1fc56937b5
01:20:02.489 --> 01:20:04.485
Assembly or machine language.

NOTE Confidence: 0.88817257

fa162c2c-ac67-426f-9b1e-fd9aba380b74
01:20:05.190 --> 01:20:10.926
In that course they start to
teach you how to do programming

NOTE Confidence: 0.88817257

a8ef5492-90ca-4ced-93cd-feb5ae856c0e
01:20:10.926 --> 01:20:16.662
in a given processor. Usually
the given processor is 8086, and

NOTE Confidence: 0.88817257

098e246c-e1d9-498e-8230-423dfd67fce9
01:20:16.662 --> 01:20:21.442
they introduced the instruction
sets there and for

NOTE Confidence: 0.88817257

0097ff2c-13b7-4c7a-a22a-3af5bdf1b977
01:20:21.442 --> 01:20:27.178
instance, it's like C language. They
say that how can you do for

NOTE Confidence: 0.88817257

99566e01-42df-4340-90e1-b458c90a11fd
01:20:27.178 --> 01:20:32.436
loops or I mean how can you
define variables in assembly

NOTE Confidence: 0.88817257

f4c974c3-8fce-4178-a734-888d5d15b2e6
01:20:32.436 --> 01:20:34.826
language for the processor 8086?

NOTE Confidence: 0.842139

eb5d944a-1e3c-4be7-a12f-a41a93268eb2
01:20:35.200 --> 01:20:41.136
So in that course you are going
to learn how to do code

NOTE Confidence: 0.842139

d44c4eb7-cf7b-4686-84e0-2b36502baf97
01:20:41.136 --> 01:20:46.224
in the given processor or Arch 2.
Yes, not in this course. Also,

NOTE Confidence: 0.842139

3474e020-0e45-4420-92c4-772d793a9c3c
01:20:46.224 --> 01:20:50.040
in the Computer Architecture 2,
still you're working with

NOTE Confidence: 0.842139

04cc59a4-185b-49ad-b1e3-d8ea1bf004c3
01:20:50.040 --> 01:20:54.704
building the system, not coding
in that system. In the ending

NOTE Confidence: 0.842139

26b67517-45af-4254-808c-c83472d2b20c
01:20:54.704 --> 01:20:59.792
chapters of Computer Architecture 2,
you become closer to

NOTE Confidence: 0.8774589

4a902e06-8a9b-475e-9aa8-394ce84c494e
01:20:59.792 --> 01:21:04.470
coding. But, the assembly
language or the machine language

NOTE Confidence: 0.8774589

6dbdd656-eedb-4414-8cce-94052fb7d971
01:21:04.470 --> 01:21:08.470
in that course in computer
science programs, you have to

NOTE Confidence: 0.8774589

d318602f-3fbb-4b5b-b9d1-cc7fe7fae84b
01:21:08.470 --> 01:21:09.670
code in 8086.

NOTE Confidence: 0.91504127

9c5100bd-1441-48a5-a143-f2d9190c8188
01:21:14.170 --> 01:21:16.418
So any other questions?

NOTE Confidence: 0.84583396

98bfa48b-ef93-44b4-8af2-5710cb5b6b0d
01:21:18.810 --> 01:21:20.530
Does the midterm cover everything from textbook
chapters.

NOTE Confidence: 0.85483634

a45cd561-4904-450e-b3c6-27a3b9525b59
01:21:21.630 --> 01:21:26.193
Yes, uh, we. I mean, for the
first chapter we covered all the

NOTE Confidence: 0.85483634

df3f9dee-9dcb-40a0-9a8e-1d541a606f63
01:21:26.193 --> 01:21:30.054
topics. The only topics we
didn't cover was the

NOTE Confidence: 0.85483634

fd298237-3b0e-4a81-baa3-c96893d956ce
01:21:30.054 --> 01:21:34.617
Binary codes, we will cover it later
and for the 2nd chapter and the

NOTE Confidence: 0.85483634

0b724428-032c-4c4d-b5b3-2c877677ac8c
01:21:34.617 --> 01:21:38.478
next chapters, we're going to
cover all the topics, yes. Also,

NOTE Confidence: 0.85483634

a399dcfb-2a9c-406a-970d-2f95a5d21ded
01:21:38.478 --> 01:21:41.637
I mean we are covering
additional topics, for instance,

NOTE Confidence: 0.85483634

1eced398-6f16-4863-9cd5-bff7c1f89f0e
01:21:41.637 --> 01:21:45.498
those topics might be in the
assignment or practice in the

NOTE Confidence: 0.85483634

1ca13b2f-10d0-4a64-8702-02e8610da95b
01:21:45.498 --> 01:21:50.412
book, but we are going to cover
it in the lecture. In the lecture

NOTE Confidence: 0.85483634

dd856026-1aed-4c52-b9a9-0f69f8057ff5
01:21:50.412 --> 01:21:51.816
assignments or in the

NOTE Confidence: 0.8617682

ea1d1787-0fde-4530-a0b9-589be13f34a8
01:21:51.930 --> 01:21:55.017
lab assignments, we're covering
some additional things that

NOTE Confidence: 0.8617682

b52be792-2087-4536-8ff5-c206b470ce3c
01:21:55.017 --> 01:21:58.790
are not in the book, so we're
covering much more topics

NOTE Confidence: 0.8617682

ddbab8aa-bb1c-4884-b318-8f5e82de037a
01:21:58.790 --> 01:22:02.906
than the books, but we for
sure we cover all the topics

NOTE Confidence: 0.8617682

464a1b72-da1a-46df-ae62-fb417d9dca00
01:22:02.906 --> 01:22:03.935
in the book.

NOTE Confidence: 0.9129733

146d96f9-1ae7-4406-bedb-6f27d0cb0518
01:22:08.230 --> 01:22:10.399
And next question.

NOTE Confidence: 0.8486295

94da4cfd-5241-44a7-a9ad-a00be2f3b632
01:22:12.260 --> 01:22:15.850
Like what
chapters are going to be

NOTE Confidence: 0.8486295

88851435-6e08-463a-8191-30bb8f5b00c8
01:22:15.850 --> 01:22:19.799
on the midterm. The midterm
actually is going to cover all

NOTE Confidence: 0.8486295

8b2a26c2-efdc-4138-b888-ad61c771f54a
01:22:19.799 --> 01:22:23.030
the materials up until the
session before the midterm.

NOTE Confidence: 0.8728485

d90e5aaa-b823-49c8-a3b6-b66050f1d940
01:22:24.050 --> 01:22:30.070
So I believe the mid term is, I
mean next week we're gonna have

NOTE Confidence: 0.8728485

88960818-417a-4f0c-b402-c00516b8af21
01:22:30.070 --> 01:22:31.360
two other lectures.

NOTE Confidence: 0.77042204

0684dca5-9c6e-439c-b5da-cfbfc8ad66f9
01:22:32.060 --> 01:22:35.420
Uh, then the week after that
going to be the reading week.

NOTE Confidence: 0.8661199

92a93812-7fec-4af6-82ac-0752aadb55c1
01:22:36.110 --> 01:22:40.850
And then the first session after
the reading week is gonna be the

NOTE Confidence: 0.8661199

f6b7e810-faa4-4d8c-aa3e-423764de1706
01:22:40.850 --> 01:22:45.985
midterm. So all the topics so far
and the next week are gonna be

NOTE Confidence: 0.8661199

a073d644-a75f-4c5a-bdad-039ae2eb3918
01:22:45.985 --> 01:22:50.725
covered in the midterm exam.
Also please do look at the

NOTE Confidence: 0.8661199

81b9cd95-9411-431b-89b6-0f3c4d4dff12
01:22:50.725 --> 01:22:54.280
discussion board. There might be
some questions from the

NOTE Confidence: 0.8661199

d73516da-7764-48a9-875e-f7a3d2fb83eb
01:22:54.280 --> 01:22:57.835
discussion boards. Also in the
lecture assignments, There might

NOTE Confidence: 0.8661199

dbd2e90a-5da8-43a1-8db2-00c0f88a32de
01:22:57.835 --> 01:23:01.390
be some questions from the
lecture assignments, so please

NOTE Confidence: 0.8661199

0cb126e7-5ae8-479d-ac21-34619a827990
01:23:01.390 --> 01:23:04.945
have a look at the lecture
assignment questions

NOTE Confidence: 0.8661199

4eb34adf-f4d9-4b90-b8fe-b38a2982b1ed
01:23:04.945 --> 01:23:06.525
and the discussion board.

NOTE Confidence: 0.8945045

cddfe9c5-bc8c-4453-a35b-5d3eec1edc58
01:23:09.650 --> 01:23:14.984
So if there's no question, uh,
I'm going to be in the office so

NOTE Confidence: 0.8945045

fc75dbfe-ef8e-40b8-b81f-86073788ac84
01:23:14.984 --> 01:23:19.556
you can join the office by
Blackboard and thank you so

NOTE Confidence: 0.8945045

c8822b32-56fd-4209-a0db-8a8c0ca4ecaa
01:23:19.556 --> 01:23:21.461
much. Have a great day.

NOTE Confidence: 0.78038085

f079b8b7-0e72-416a-9a5a-5209ac98dfd8
01:23:24.430 --> 01:23:25.320
Bye everyone.



