AWEBVTT

NOTE duration:"01:19:48.2050000"

NOTE language:en-us

NOTE Confidence: 0.57166874

234cf06b-ace9-429d-a3f1-273cf6d603b6
00:00:00.060 --> 00:00:03.290
Infirst enough is about
recording.

NOTE Confidence: 0.8391532

1dab0a35-36e5-4fcb-a878-49def83b7112
00:00:06.100 --> 00:00:07.780
Share my screen.

NOTE Confidence: 0.3902817

a1a711d4-6c50-4e6f-b2e4-b1ae6915da0c
00:00:15.450 --> 00:00:17.538
So laser points.

NOTE Confidence: 0.86368483

1abbfa7e-fa55-4591-af36-81ec5b0bc7be
00:00:30.330 --> 00:00:32.358
OK, let's start.

NOTE Confidence: 0.8912449

1d4e42bc-88dd-4621-b798-0d2369bb75ad
00:00:34.940 --> 00:00:38.735
Actually today we can. I mean,
we try to finish the.

NOTE Confidence: 0.8223248

06e56e09-aadd-49da-abf1-bc2731d20df4
00:00:40.150 --> 00:00:43.666
3rd chapter which is about the.

NOTE Confidence: 0.6106353

8684af99-d409-4033-925f-911dd43f6db2
00:00:45.130 --> 00:00:48.704
Uh. The gate level

NOTE Confidence: 0.8935215

ace52d4f-f4cc-498f-bf85-e78f219685eb
00:00:48.704 --> 00:00:52.300
 minimizations. Or
Simplification.

NOTE Confidence: 0.835916

67367930-d01f-4450-b486-ba3ef2565880
00:00:54.560 --> 00:00:58.988
We be there. Might be some
little topics for the next week,

NOTE Confidence: 0.835916

1fe529d9-2357-4baf-b1b4-d247be70ee36
00:00:58.988 --> 00:01:03.047
but we cannot. I mean, primarily
finish this chapter. So let's

NOTE Confidence: 0.835916

46b4ba19-41e9-4714-a7d9-4638723ed830
00:01:03.047 --> 00:01:07.475
start before I start again like
before. So in order to see

NOTE Confidence: 0.835916

f389393b-a5fb-4234-a954-a1aa1753758b
00:01:07.475 --> 00:01:09.689
everyone has the focus to the

NOTE Confidence: 0.8755263

2e2f25d2-f536-4f5d-976b-eefde9a85ea5
00:01:09.689 --> 00:01:14.211
slide. Today you're gonna
continue some math, so I need

NOTE Confidence: 0.8755263

cf2f6730-d2ac-49c2-89ca-68086a9e808b
00:01:14.211 --> 00:01:15.318
your full attention.

NOTE Confidence: 0.83812803

1edf6729-653d-4b79-9906-0aa1a39c20a6
00:01:15.930 --> 00:01:20.658
So please send me some feedbacks
or emoji icons that I can.

NOTE Confidence: 0.8761317

4b746e4d-1030-4378-b214-bfbd73f589c3
00:01:21.310 --> 00:01:24.376
See that you have
the focus factor.

NOTE Confidence: 0.5852153

97162a9e-70ca-45b2-b12c-e8bd596df0bd
00:01:30.550 --> 00:01:31.978
Thank you Riley.

NOTE Confidence: 0.7853581

0afcdd54-319f-419d-be7d-8a29773bdac5
00:01:33.620 --> 00:01:34.380
I.

NOTE Confidence: 0.81637824

e01cb625-3897-4b9e-b14a-4e0aeced68a4
00:01:36.040 --> 00:01:36.790
I.

NOTE Confidence: 0.8740779

1f1390fa-9770-46ab-a23b-5331761e35b0
00:01:39.420 --> 00:01:41.379
Just in general.

NOTE Confidence: 0.68052673

a3db3b5f-c31e-4a04-a145-9d7d0c155d11
00:01:43.250 --> 00:01:47.594
I believe Gabby Galley my
pronouncing your name

NOTE Confidence: 0.68052673

3edc7099-46c8-48b2-a01a-0eefc1793516
00:01:47.594 --> 00:01:49.223
correctly, I'll be.

NOTE Confidence: 0.933708

287df94e-2dc8-45e6-8348-d44883db62f1
00:01:53.530 --> 00:01:54.460
So.

NOTE Confidence: 0.904065

ed177661-fc97-4de5-a742-ca0990c0b9dc
00:01:55.630 --> 00:01:56.926
How do you pronounce your name?

NOTE Confidence: 0.67185354

240be4ab-10a5-4de1-b5d7-b2ce6e098745
00:02:02.130 --> 00:02:04.536
Thank you nicolous,
Dennis thank you.

NOTE Confidence: 0.8187697

7990a3fb-65e6-48a4-8ccc-41f2546861af
00:02:07.790 --> 00:02:10.050
Let me fix you.

NOTE Confidence: 0.71973276

d96cbd85-a195-4fc8-a260-93de004aff8f
00:02:13.090 --> 00:02:14.940
Presenter.

NOTE Confidence: 0.6613607

aefa53cf-aa53-4462-b106-7899274059c3
00:02:22.880 --> 00:02:27.989
Made you presenter a gulizio so
you can. You can say your name.

NOTE Confidence: 0.91223806

5cfb0ac8-18d6-4f49-ba02-023e2ba68fb0
00:02:30.560 --> 00:02:32.988
. Yes, yes, go ahead.

NOTE Confidence: 0.8769323

a883e39a-1059-45dd-9dae-2ae01986683a
00:02:35.140 --> 00:02:36.490
How do you pronounce your name?

NOTE Confidence: 0.64289325

e29ac3fc-de5b-4511-8541-1874b20e2956
00:02:38.130 --> 00:02:41.532
, sorry about that, so
no worries, thank you.

NOTE Confidence: 0.64289325

73a4f184-2e61-483b-ab23-fc128225c06a
00:02:41.532 --> 00:02:43.044
Thank you so much.

NOTE Confidence: 0.76864696

d1563c2f-bb11-4dd8-aa38-60b61499488d
00:02:44.980 --> 00:02:45.350
Hey.

NOTE Confidence: 0.5831884

15be4dcd-93e8-465e-9a24-78e3591c6a54
00:02:47.980 --> 00:02:49.820
Participant again.

NOTE Confidence: 0.8319065

243c2279-662b-4ea3-a538-f47a415e5555
00:02:51.620 --> 00:02:53.048
So seems everyone.

NOTE Confidence: 0.926429

26e3b5ce-4b7b-41e0-8d30-5dead1c2952e
00:02:54.610 --> 00:02:56.638
Everyone is ready, so
let's start.

NOTE Confidence: 0.84578705

c521c3f2-6d85-412e-87fc-b67e15481e71
00:02:59.070 --> 00:03:04.556
So in the last lecture we said
that it's good to minimize the

NOTE Confidence: 0.84578705

0712dffb-3f56-4972-8ee6-99b04d44d9b2
00:03:04.556 --> 00:03:09.620
logic circuits because of I mean
cost so, but we said the

NOTE Confidence: 0.84578705

8294c4f2-2bec-414c-9329-a47c51760832
00:03:09.620 --> 00:03:13.418
different factors. Sometimes
they are in conflict with each

NOTE Confidence: 0.84578705

45a3efc6-5102-49ba-bcc1-2d80c135a73e
00:03:13.418 --> 00:03:15.950
other, but we try to minimize.

NOTE Confidence: 0.830865

ff7db6af-786c-481b-9a31-2bca3a140752
00:03:16.870 --> 00:03:21.875
The cause the number of bits,
number of inputs in order.

NOTE Confidence: 0.830865

0ca7027a-c63a-4d68-8a4a-8d42430f555b
00:03:21.875 --> 00:03:27.790
Sometimes area is very small, so
you have to do that. So because

NOTE Confidence: 0.830865

026eddba-05bc-4ec7-b734-456879e6b525
00:03:27.790 --> 00:03:32.340
of these factors and reducing
the cost and increasing the

NOTE Confidence: 0.830865

d07cf036-066e-4cfa-a993-ae3a13bd51ac
00:03:32.340 --> 00:03:36.890
efficiency we put, he proposed
two methods to minimize the

NOTE Confidence: 0.830865

aaa00542-c812-47a7-93b4-186ae9d2f92b
00:03:36.890 --> 00:03:41.440
logic circuits or Boolean
function. The first one was is

NOTE Confidence: 0.830865

9593f896-0f7e-4ec6-8073-5b625a65e45a
00:03:41.440 --> 00:03:46.445
on the Boolean algebra or we said
that algebraically, we minimize

NOTE Confidence: 0.8614758

c6cfe978-2196-4acf-8e90-fcd5f4cac827
00:03:46.445 --> 00:03:50.780
the. Check it also called
algebraic manipulation of the

NOTE Confidence: 0.8614758

b3a8ef96-e7ef-40e7-aebe-0db5ad27902d
00:03:50.780 --> 00:03:55.785
Boolean function. The second was
the second one is the map

NOTE Confidence: 0.8614758

ce452544-9242-4e07-8204-30d51c3cf434
00:03:55.785 --> 00:03:58.970
method, which we're gonna
introduce you today.

NOTE Confidence: 0.8026985

3e6e3e0a-9862-49fc-81a0-53c1e20073f7
00:03:59.600 --> 00:04:05.001
for the Boolean algebra the way we
minimize the circuits. By Boolean

NOTE Confidence: 0.8026985

a7147113-73bc-4910-a8f4-b14b3f8a2961
00:04:05.001 --> 00:04:07.456
algebra, we introduce algebra as

NOTE Confidence: 0.8286767

cd2ae371-9b9b-4bab-9a31-c39437d0b8da
00:04:07.456 --> 00:04:13.779
three elements. 1st is a set of
 as a as a structure with three

NOTE Confidence: 0.8620548

34b91b4d-1a50-4432-9229-9ce5709a8783
00:04:13.779 --> 00:04:19.329
sets. The first set is a set of
elements, the second set is the

NOTE Confidence: 0.8620548

3c0d4232-89b3-491e-b6ad-0734150823e2
00:04:19.329 --> 00:04:23.528
set of operators, and the third
is a set of axioms that we

NOTE Confidence: 0.8620548

d7eeb26a-2a62-4079-bf3f-b77b6be00be7
00:04:23.528 --> 00:04:28.373
accept as true, and we don't ask
for proof, we just take it as it

NOTE Confidence: 0.8620548

f92a86e3-2d92-416d-a9ff-db0d1f9f2ce8
00:04:28.373 --> 00:04:29.988
is as a true statement.

NOTE Confidence: 0.78093535

d8bb1f04-cee6-44f3-a0f9-ff2a37896043
00:04:31.630 --> 00:04:35.890
We put some example of elements
such as Binary Sets Zero and

NOTE Confidence: 0.78093535

d17eec20-b6cb-4b20-a80b-fa12acb5ff1e
00:04:35.890 --> 00:04:40.150
one or signed integer set. I
mean from minus Infinity to zero

NOTE Confidence: 0.78093535

a9c69805-af65-4490-8965-6bd5022ddd25
00:04:40.150 --> 00:04:41.215
to plus Infinity.

NOTE Confidence: 0.8634905

de557f34-85cb-4e24-b092-569ab8a4c401
00:04:43.150 --> 00:04:47.450
Example of a set of operators
would be addition or

NOTE Confidence: 0.8634905

88d1187c-60e9-42a7-a76b-7238f1a18eed
00:04:47.450 --> 00:04:49.600
multiplication or addition,
subtraction, multiplication,

NOTE Confidence: 0.8634905

cc80d51d-36d9-4c75-92a0-4405aba97473
00:04:49.600 --> 00:04:54.760
division, etc. You said that the
operators are either Unary in

NOTE Confidence: 0.8634905

b5ce9128-e690-4e54-8c04-1a2c65bc3b33
00:04:54.760 --> 00:04:57.340
that they only accept one operand

NOTE Confidence: 0.7822148

cd6ca24c-98ef-4e98-a53a-405500af2785
00:04:57.340 --> 00:05:02.706
. It may be binary,
meaning that they accept two

NOTE Confidence: 0.7822148

63ccdc98-c2a8-434c-85fd-b7b38ba892d0
00:05:02.706 --> 00:05:06.792
operand or sometimes they
are ternary that they accept

NOTE Confidence: 0.7822148

cea23cdc-69a6-4369-8950-cbc1820aa9de
00:05:06.792 --> 00:05:11.786
three operant are. In general
we can have n aray operators

NOTE Confidence: 0.7822148

911e405c-762f-42b0-b5ae-0c3f8e5a3d7f
00:05:11.786 --> 00:05:13.602
that accept n operand.

NOTE Confidence: 0.77499163

cacc8700-0c5d-4178-8908-614be070f5da
00:05:15.470 --> 00:05:20.501
And we said that George Boole
was the first guy. He was a

NOTE Confidence: 0.77499163

f3e22212-1b59-4fb9-bcd0-aa11e41dee76
00:05:20.501 --> 00:05:23.210
logician and mathematician. In
54 he introduced.

NOTE Confidence: 0.81006855

f5c88bfd-09e7-4b8b-a0f4-35810e63462b
00:05:23.890 --> 00:05:31.772
A new algebra for a thinking I
mean in a formal way, and that's

NOTE Confidence: 0.81006855

10a82110-8915-4a45-8c82-4b90d874f136
00:05:31.772 --> 00:05:37.965
why we called a structure he
introduced as a Boolean algebra,

NOTE Confidence: 0.81006855

24cb4727-226b-470a-aca1-4b7cfaf10d7a
00:05:37.965 --> 00:05:43.595
but later way later in 1904,
Huntington Beach was a

NOTE Confidence: 0.81006855

e09fb9a8-7656-4b45-b494-dbd3b0bfb13d
00:05:43.595 --> 00:05:48.662
mathematician and he practiced
on pure mathematics. He actually

NOTE Confidence: 0.81006855

cd70ab1f-4113-4a31-bb9f-aa722453b665
00:05:48.662 --> 00:05:53.729
formalized the Boolean algebra
more. Actually after him we

NOTE Confidence: 0.79615784

8e4ed286-f1e7-4a98-9265-dd2f750c2f46
00:05:53.729 --> 00:05:56.512
recognize the. Algebra
introduced by George

NOTE Confidence: 0.79615784

9894a885-9d7f-47d4-bbf2-0a5881071312
00:05:56.512 --> 00:06:00.560
Boolean algebra, so
he did a lot. I mean the

NOTE Confidence: 0.79615784

ae2800ec-d26c-4a19-bb3e-c86905e53f59
00:06:00.560 --> 00:06:02.768
significant contribution
to the Boolean algebra.

NOTE Confidence: 0.8134727

3b389908-dc9b-4156-b99b-6ce14d9315e3
00:06:04.230 --> 00:06:07.749
What did was that he
introduced some postulates.

NOTE Confidence: 0.8134727

c5557d1d-b4b7-484c-a28b-a2eb6cc2934c
00:06:07.749 --> 00:06:12.441
Let's assume this is a new
world by him. For the axioms

NOTE Confidence: 0.8134727

7254f306-edaa-4fe2-b77c-373c01a51ba1
00:06:12.441 --> 00:06:17.133
assumptions that we said we
accept as the true or we don't

NOTE Confidence: 0.8134727

68130498-c2f3-46d1-b2e8-cf8b684a0484
00:06:17.133 --> 00:06:21.043
ask for any proof was
possible, it was. There are

NOTE Confidence: 0.8134727

4715ac60-de66-40c6-bf99-a7b11939710f
00:06:21.043 --> 00:06:25.344
six postulates. It's the first
one was closure with set, with

NOTE Confidence: 0.8134727

ceeedcdd-733c-481d-a7c8-71da28629881
00:06:25.344 --> 00:06:26.517
basically says that.

NOTE Confidence: 0.83980644

401ff31e-546e-4430-b3c0-973797299411
00:06:27.810 --> 00:06:33.075
A set given a bind given an
operator is called closed if the

NOTE Confidence: 0.83980644

49902ff6-692c-4544-9818-b398d2324b0f
00:06:33.075 --> 00:06:36.720
result of the operator is still
a member set.

NOTE Confidence: 0.75463647

3b536c11-ef1f-441a-b293-41743fbe99e5
00:06:37.980 --> 00:06:42.402
for instance in the signed integer
set at addition. This set of

NOTE Confidence: 0.75463647

31e026ff-c4fc-4705-9207-64dc5d2eaba0
00:06:42.402 --> 00:06:46.020
signed integer set is closed
under the operator addition

NOTE Confidence: 0.75463647

2ac78084-e7e7-458c-908e-bbab27ec3c5f
00:06:46.020 --> 00:06:50.442
because after adding two
elements of the set S result is

NOTE Confidence: 0.75463647

1f61df2c-b568-4e8a-914e-89f66a311bdc
00:06:50.442 --> 00:06:55.266
this member of S the same is
for the subtraction to multiplication

NOTE Confidence: 0.75463647

58856415-f8c1-4b80-bd80-42c4a2b78d53
00:06:55.266 --> 00:07:00.090
Negation, an factorial. So if
you apply factorial on the set, an

NOTE Confidence: 0.75463647

eeddcd4f-373a-4d3f-bfcc-390efa4b4aac
00:07:00.090 --> 00:07:02.100
element of this set S.

NOTE Confidence: 0.7709745

4d4d8392-7eeb-41e9-8aad-22d9fe8b6a16
00:07:02.920 --> 00:07:06.770
There's lots of the factorial
is gonna be is still the

NOTE Confidence: 0.7709745

e8399af0-b87f-4377-924c-58c0476e2838
00:07:06.770 --> 00:07:11.320
member of the SAT S so we
say as is closed under the

NOTE Confidence: 0.7709745

f313d0cd-c8d0-4977-814a-5f8415c8174e
00:07:11.320 --> 00:07:12.020
factorial operator.

NOTE Confidence: 0.8146349

51d88b50-5f32-4790-b56e-dd4597261d98
00:07:14.140 --> 00:07:19.041
However, we said that sometimes
an operator is open or a set is

NOTE Confidence: 0.8146349

55b4790e-8d82-4920-8090-563e56647767
00:07:19.041 --> 00:07:22.434
open with regard to an operator,
for instance power.

NOTE Confidence: 0.7448792

966b92c5-d0d4-4207-8337-9622a01f3872
00:07:23.220 --> 00:07:27.500
You could simply, uh, find a
counterexample. for instance 2

NOTE Confidence: 0.7448792

774e4291-d9e8-40ba-a462-4ec16bf96a9c
00:07:27.500 --> 00:07:34.348
and minus one if you, uh, if you
will in 2 to the power of minus

NOTE Confidence: 0.7448792

fed760b4-37e7-473b-80f0-6174a190b109
00:07:34.348 --> 00:07:36.060
one if you do.

NOTE Confidence: 0.89542454

7550b314-a89e-480d-8c6f-f8b139c6fe2c
00:07:37.090 --> 00:07:40.819
This one, the result is 1 / 2
which is 0.5.

NOTE Confidence: 0.8593463

448892a4-6804-4597-8f1b-33a3c400d441
00:07:41.500 --> 00:07:45.932
The result is not a member of S
as a result we can say that S

NOTE Confidence: 0.8593463

0b3a34ae-a8ac-4fc8-bea3-e7637021ca2d
00:07:45.932 --> 00:07:47.594
is not close under the power.

NOTE Confidence: 0.80792725

5c765275-0bc1-4fee-9162-073d9ed80da2
00:07:49.780 --> 00:07:53.524
Interesting set is the binary set
with the element zero and one,

NOTE Confidence: 0.80792725

57a5cd07-db68-4275-ade0-9fc2f8c71ba2
00:07:53.524 --> 00:07:57.892
and we said that the Binary set
is closed under or and and not.

NOTE Confidence: 0.8484827

d1c5c841-05c8-4778-9684-a964c598ce72
00:07:59.180 --> 00:08:02.708
Operators as the result is still
the member of this set as.

NOTE Confidence: 0.79594845

554382a2-a94d-42eb-92f3-1e9f8b9aa1c3
00:08:03.820 --> 00:08:07.760
However, the negation, the
Binary set is not close under

NOTE Confidence: 0.79594845

f35f8fe9-9108-452a-b2e0-d93f1f45bdfb
00:08:07.760 --> 00:08:11.700
the negation operator, because
you can simply find one and

NOTE Confidence: 0.79594845

2bb5a14e-a946-445f-a086-6bfb09838076
00:08:11.700 --> 00:08:17.216
minus one is not a member of
this Set. So as Binary set is

NOTE Confidence: 0.79594845

0268de90-a41d-46f9-b272-a4b76074ac63
00:08:17.216 --> 00:08:19.186
not closed under the negation.

NOTE Confidence: 0.7939553

bc069254-95c4-4329-a53c-c14366c1eaf4
00:08:20.650 --> 00:08:24.578
Operator. The second possibility
is commutatively. Specifically

NOTE Confidence: 0.7939553

bc2fd898-2f67-4b3d-afbc-2abd4f32b67a
00:08:24.578 --> 00:08:29.231
says that the binary operator is
called commutative if the order

NOTE Confidence: 0.7939553

7b4ad7e8-b0ea-442f-8ccf-d024d5a74222
00:08:29.231 --> 00:08:35.153
of the operand doesn't matter.
So X operator Y is the same as Y

NOTE Confidence: 0.7939553

39fe561f-ceb3-467f-8de8-680e060e3745
00:08:35.153 --> 00:08:40.229
operator X, so the order of the
operand doesn't matter for the

NOTE Confidence: 0.8694737

5decce7e-3586-4d3f-a7a6-2e2230db63e7
00:08:40.229 --> 00:08:42.178
operator. binary operator.

NOTE Confidence: 0.78541183

e4addf0d-8276-447c-8bf9-d2cd28334861
00:08:43.780 --> 00:08:46.748
And we said that in the sign

NOTE Confidence: 0.8053136

5b691dba-86c8-431f-acae-a4cb1885ffcc
00:08:46.748 --> 00:08:50.872
integer set. Addition and
multiplication and has this

NOTE Confidence: 0.8053136

db74ad53-ab80-4546-b89a-5a0975500180
00:08:50.872 --> 00:08:54.760
property the commutativity,
because the order of XO X added

NOTE Confidence: 0.8053136

f035aea9-26e8-4c07-ab1d-59fb137f2450
00:08:54.760 --> 00:09:00.808
by Y is equal to Y added to the
order doesn't matter. The same

NOTE Confidence: 0.8053136

04d86a03-d904-4317-9f29-0f8bc2bf60ed
00:09:00.808 --> 00:09:02.536
is for the multiplication.

NOTE Confidence: 0.85806966

e6b3e79e-dc9b-42df-a541-5d78f5b884bd
00:09:04.400 --> 00:09:08.844
How about the subtraction is not
commutative under the sign integer

NOTE Confidence: 0.85806966

beed5cde-74ca-4ee1-9f5c-d82083dddba6
00:09:08.844 --> 00:09:14.096
set because you cannot
reorder the operand X - y is not

NOTE Confidence: 0.85806966

a6c41275-78ff-4547-8584-a3e3bc8fa58c
00:09:14.096 --> 00:09:16.116
equal to y - X.

NOTE Confidence: 0.7728613

5296c2ad-c48d-4b59-bdf8-f2caec6ec2c8
00:09:17.190 --> 00:09:19.776
Subtraction doesn't have
the commutative property.

NOTE Confidence: 0.73089224

4e0c27a4-1239-44ea-824e-abe6e9ce4167
00:09:20.870 --> 00:09:27.618
The Binary set as we already saw
by truth table OR AND NAND NOR XOR

NOTE Confidence: 0.73089224

f915ac30-d6c9-4837-b69d-dcc3d1ae35d7
00:09:27.618 --> 00:09:29.546
and XNOR

NOTE Confidence: 0.8311226

27230685-e133-4738-8508-3a29f96a10b4
00:09:30.290 --> 00:09:34.041
all these operators are commutative
because the order of the operand

NOTE Confidence: 0.8311226

de7ff74c-f184-4ec6-9d7b-c2ecffb3ab96
00:09:34.041 --> 00:09:38.133
 or the order of the input to
these gates doesn't matter.

NOTE Confidence: 0.76403683

226eb60d-3776-4817-aeed-07dba9b6bdf3
00:09:40.000 --> 00:09:45.797
Associative property is the
third postulate, which says that

NOTE Confidence: 0.76403683

fe3807dc-eafb-45f5-9f16-66b36299b67e
00:09:45.797 --> 00:09:51.594
a binary operator is associative
if the order of applying the

NOTE Confidence: 0.76403683

885245b3-42cd-4906-a3de-9a6977cad48b
00:09:51.594 --> 00:09:56.864
operator doesn't matter. But if
you apply the binary operator

NOTE Confidence: 0.76403683

c5dc2934-b44c-481f-88a2-6fcf94933993
00:09:56.864 --> 00:09:59.499
multiple times for instance X

NOTE Confidence: 0.85828954

0e51ab73-f4cf-4fd0-be84-efb83bd5edb6
00:09:59.499 --> 00:10:05.008
operator. y operators Z? So
it means that we first apply the

NOTE Confidence: 0.85828954

acf517bf-5f7d-47e9-9489-7dc02507c6de
00:10:05.008 --> 00:10:10.144
operator between Y&Z and then we
apply the operator with the X.

NOTE Confidence: 0.8806255

80c57d3a-0674-4213-8541-c0315925eb01
00:10:10.860 --> 00:10:14.460
If the operator is associative,
doesn't matter which operator

NOTE Confidence: 0.8806255

f3bf592a-25a5-4ec0-b476-5ca09c9f87b2
00:10:14.460 --> 00:10:18.860
actually applies first, so is
this. There's result is the same

NOTE Confidence: 0.8806255

4045c4bd-5fa8-45f3-a725-a36f2011f3d9
00:10:18.860 --> 00:10:24.060
as if you apply the operator on
the X&Y and then on this.

NOTE Confidence: 0.8226835

d7651f32-152a-4f5d-9e90-33821cde56f1
00:10:25.290 --> 00:10:28.250
So the result you can simply
drop the parenthesis because

NOTE Confidence: 0.8226835

2107ca6c-1e7d-4ded-a41e-551eab1bca24
00:10:28.250 --> 00:10:30.618
the order of applying the
operator doesn't matter.

NOTE Confidence: 0.8450661

c61f3af5-529f-4cb6-ae83-57a76a919495
00:10:32.570 --> 00:10:35.378
So this is called
associativity property.

NOTE Confidence: 0.78330845

740349ab-5ce9-4657-9c44-445421a4fc5b
00:10:37.340 --> 00:10:41.453
 for signed integer Set we said that
addition multiplication

NOTE Confidence: 0.78330845

453f34d4-736f-4eda-979c-85bfd68171a2
00:10:41.453 --> 00:10:45.566
Subtraction. It don't need to
put the parentheses because

NOTE Confidence: 0.78330845

ac9ccef7-a991-4e7a-b2f0-67a7e0f6a095
00:10:45.566 --> 00:10:47.851
order of these operators doesn't

NOTE Confidence: 0.8941332

053f6c5c-e4b9-474d-a43e-a3a3293efc3f
00:10:47.851 --> 00:10:51.704
matter. As you can see
here, you already saw

NOTE Confidence: 0.8941332

fdcae8e0-8b0a-4c8a-a8a7-7fb57517ce6a
00:10:51.704 --> 00:10:52.936
this in discrete math.

NOTE Confidence: 0.80943584

5858d432-1fc2-4ac7-be40-3986c4773701
00:10:54.590 --> 00:10:58.577
However, power operator is not
associative under the signs.

NOTE Confidence: 0.83838195

778ab1c4-8197-4164-b4a8-ae3113793adf
00:11:00.330 --> 00:11:04.566
A signed integer said, and the
reason is the order of applying

NOTE Confidence: 0.83838195

f5183941-bcb6-4ebe-8c8d-55edc20bd7b8
00:11:04.566 --> 00:11:08.802
power is important because here
you can see for example. So 2

NOTE Confidence: 0.83838195

f4711df2-35eb-40b9-adfa-056a633aa897
00:11:08.802 --> 00:11:13.391
to the power of one or three.
The result is different from if

NOTE Confidence: 0.83838195

ddffff5e-fdc5-43a2-9edf-53a47173af67
00:11:13.391 --> 00:11:18.686
you apply the 1st power this power
first to two to the power of 1

NOTE Confidence: 0.83838195

81e0a6c2-007b-4151-bd30-f9a165b3bf62
00:11:18.686 --> 00:11:23.275
and then to the power three. So
these two results are not the

NOTE Confidence: 0.83838195

9c3eae5b-775e-4e94-a40d-779464a57eea
00:11:23.275 --> 00:11:27.511
same. So we can say that power
is not associative under the

NOTE Confidence: 0.80871415

25a8b65c-5629-4c50-b14f-9191e12e9237
00:11:27.511 --> 00:11:30.770
set. Of these signed integers.

NOTE Confidence: 0.85773575

0364fc11-dc96-41c5-88f2-e739c06cb995
00:11:32.490 --> 00:11:37.154
For the Binary set with the
zero and one as, the

NOTE Confidence: 0.85773575

be47b383-56fc-40db-ab2b-380af8eb2dc7
00:11:37.154 --> 00:11:40.970
elements are both the OR an
AND operators are

NOTE Confidence: 0.85773575

9a8338b9-dfc2-4cd2-9220-3c2fb84fb0ac
00:11:40.970 --> 00:11:44.786
associative, so can simply
drop the parentheses as we

NOTE Confidence: 0.85773575

fb930638-895f-4009-ac26-69dcfc756e07
00:11:44.786 --> 00:11:46.058
already knew this.

NOTE Confidence: 0.8097907

ac964ef1-4b1a-4c69-a8e6-19aa41765858
00:11:48.430 --> 00:11:54.227
A fourth I postulate or property
is called identity, meaning that

NOTE Confidence: 0.8097907

b114e703-a2cb-4fad-905c-004d81976826
00:11:54.227 --> 00:11:55.808
applying the operator.

NOTE Confidence: 0.8258588

0107752f-fe4b-4aa7-915f-5b0e23ee38a8
00:11:56.530 --> 00:12:00.148
On any element of S and
the identity element

NOTE Confidence: 0.8258588

2ec0266e-789f-4aa0-8fda-0fa9beeef468
00:12:00.148 --> 00:12:04.972
doesn't have any impact. So
X operator E is equal to E

NOTE Confidence: 0.8258588

25858713-c80c-4acf-a438-48fcaa800f26
00:12:04.972 --> 00:12:08.992
operator X, which is equal
to X. So applying the

NOTE Confidence: 0.8258588

48f5cd90-98dd-448a-ba83-526f77944e8a
00:12:08.992 --> 00:12:12.208
operator with identity
element as one of the

NOTE Confidence: 0.8258588

519ded0d-c2b4-4ec3-9b61-38cf1bf88f7e
00:12:12.208 --> 00:12:13.816
operands as an impact.

NOTE Confidence: 0.8145496

3175c8cf-fd7f-4e1c-8a1e-ad46f7e7bc88
00:12:15.910 --> 00:12:19.474
in the sign integer set for the
addition operator identity

NOTE Confidence: 0.8145496

088c5777-8122-4c35-9d5c-3c8beec07975
00:12:19.474 --> 00:12:23.830
element is 0, meaning that
adding with 0 doesn't have any

NOTE Confidence: 0.8359463

6f1a2e00-27e5-46c0-b5fa-fa3db998c101
00:12:23.830 --> 00:12:28.670
impact. For the multiplication
operator, identity is 1, meaning

NOTE Confidence: 0.8359463

8beb5540-43f8-4003-b199-c631659a3e86
00:12:28.670 --> 00:12:34.370
that multiplying with one any
element from the S * 1 doesn't

NOTE Confidence: 0.8359463

34fd136f-6711-407c-ab00-5b8b55e69bca
00:12:34.370 --> 00:12:39.595
have any impact, so the result is
the same as X.

NOTE Confidence: 0.8628024

bf405b6e-32eb-4ed9-8cb3-abc7b3fd0b0e
00:12:43.030 --> 00:12:46.862
However, however, we couldn't
find identity elements for

NOTE Confidence: 0.8628024

6643a3cb-7fe3-45ca-ab01-2c20eb9614f2
00:12:46.862 --> 00:12:49.257
subtraction in the sign integer.

NOTE Confidence: 0.8153447

aff52ab6-341c-40f7-90ee-593e5f870347
00:12:49.840 --> 00:12:53.220
Because you cannot say that any
element from the S

NOTE Confidence: 0.86780375

e2388840-eb45-4cd1-8db0-1c08ff48d372
00:12:53.770 --> 00:12:59.020
Subtracted from zero is the same
as X because X - 0 although is

NOTE Confidence: 0.86780375

e17b2616-c62e-4a23-b47c-c6ab5f52b28d
00:12:59.020 --> 00:13:03.520
X, but it is not
commutative, so 0 - X is not

NOTE Confidence: 0.86780375

acc36717-cd86-45d6-b751-b1c72a03bb66
00:13:03.520 --> 00:13:06.520
equal to X is equal to minus X.

NOTE Confidence: 0.7994841

1f5f1255-ab30-4e3c-9057-cd917a528ee4
00:13:07.150 --> 00:13:11.934
So as a result, a 0 is not an
identity element for subtraction

NOTE Confidence: 0.7994841

94bc86c4-d405-41b2-8e3a-bec80863434b
00:13:11.934 --> 00:13:13.406
in the sign integers.

NOTE Confidence: 0.8243281

b68c5141-b72f-48b5-ba31-073bfb667dc2
00:13:14.680 --> 00:13:19.568
But the binary set. We said
that for the OR and AND we have

NOTE Confidence: 0.8258101

55391b8d-7d68-4662-92df-7d17ad7c3a07
00:13:19.568 --> 00:13:24.325
identity. Elements, but the OR
the identity element is 0,

NOTE Confidence: 0.8258101

26f6b354-15a7-447f-ac51-705589f6ca25
00:13:24.325 --> 00:13:29.305
meaning that adding any element
oring with zero for any elements

NOTE Confidence: 0.8258101

86cd0ec5-8101-4aef-97a6-2336efa59585
00:13:29.305 --> 00:13:32.625
is equal to X. The same I mean

NOTE Confidence: 0.90896714

e6d84055-4234-4a55-b7a3-530fb6d064fc
00:13:32.625 --> 00:13:37.037
x' 0. Is equal to 0 or X
which is equal to X.

NOTE Confidence: 0.83625484

e39f4b5b-e32b-42af-ab8b-dea18c787b31
00:13:37.730 --> 00:13:42.280
For the and operator have
identity element one because any

NOTE Confidence: 0.83625484

c28480a2-2733-413f-8375-238057baa76b
00:13:42.280 --> 00:13:48.195
element and with one is equal to
that element. So adding with one

NOTE Confidence: 0.83625484

8c296abe-b049-49f9-a5f5-1871299c5bda
00:13:48.195 --> 00:13:50.015
doesn't have any impact.

NOTE Confidence: 0.85841686

8b71f9e3-7663-487f-be18-1ab07f798e33
00:13:51.600 --> 00:13:57.060
So you see that the OR an AND
get kind of acting similar to

NOTE Confidence: 0.85841686

e31f3e2b-1583-4f86-bb4d-a1ae1505c61e
00:13:57.060 --> 00:14:00.570
addition and multiplication.
That's why we use the same

NOTE Confidence: 0.8745615

c1a613ca-730b-4d54-b1e7-2a53048336f0
00:14:00.570 --> 00:14:05.468
symbol for. And an OR and
addition multiplication.

NOTE Confidence: 0.880062

f40b499b-e674-493d-82cb-a2395589c98c
00:14:07.560 --> 00:14:09.400
Similar, not exactly the same.

NOTE Confidence: 0.7468298

32593ee0-e99b-4e39-8d71-91a5555835d9
00:14:11.670 --> 00:14:15.233
The 5th postulate was
inverse, meaning that

NOTE Confidence: 0.7468298

7949e1f4-b547-4ca1-bd7f-41ad6bd88d7f
00:14:15.233 --> 00:14:17.778
for any element in X.

NOTE Confidence: 0.8545506

67bce0f8-b315-4875-846f-c13a4e964571
00:14:18.880 --> 00:14:23.192
Should be another element y
this might be exactly the same

NOTE Confidence: 0.8545506

446e05cf-d6f9-4eab-868d-14657b943d04
00:14:23.192 --> 00:14:25.152
as X or another distinct

NOTE Confidence: 0.8956645

ab0e4305-41cf-4c8e-9bef-b5d44496d1d1
00:14:25.152 --> 00:14:30.200
element. And if we apply the
operator of these two elements

NOTE Confidence: 0.8956645

fb99146e-e5ad-4d65-bcf4-54303d7865ee
00:14:30.200 --> 00:14:34.090
X&Y and the result is the
identity element of the

NOTE Confidence: 0.8956645

80988193-4493-456f-8f7f-ad823285f17f
00:14:34.090 --> 00:14:37.591
operator, we can say that X&Y
has a relationship.

NOTE Confidence: 0.8530691

d8034a6f-80e6-4702-8b91-4265b2ddfc5e
00:14:38.190 --> 00:14:41.809
And this relationship is called
inverse because if you apply on

NOTE Confidence: 0.8530691

3255e6b3-7492-47f1-a139-c4053c43e020
00:14:41.809 --> 00:14:45.428
that operator on these two
elements, the result is a

NOTE Confidence: 0.8530691

27fc0664-3cc8-4704-b7d3-ff6ca59764aa
00:14:45.428 --> 00:14:49.376
specific element of the S, which
is the identity element of the

NOTE Confidence: 0.7284467

302ca062-212c-4bcd-97b5-1b346a3095fa
00:14:49.376 --> 00:14:51.870
operator. And this is commutative.

NOTE Confidence: 0.8431578

86aa8223-cdb8-4dfd-94e6-6e4d613170a7
00:14:52.500 --> 00:14:56.622
So this relationship be
represented like this? y is

NOTE Confidence: 0.8431578

aadb4ac6-d9a8-4076-8403-589945356e30
00:14:56.622 --> 00:15:01.660
the inverse of X or X is the
inverse of Y?

NOTE Confidence: 0.8377549

3babc819-c91f-4674-8325-60097f26b865
00:15:03.190 --> 00:15:07.006
for instance in the sign in the
inverse of any element is the

NOTE Confidence: 0.8377549

a7ae5a76-9ca2-4148-82f3-3296621dc54f
00:15:07.006 --> 00:15:10.822
negative form of that element.
So for any x in the sign

NOTE Confidence: 0.8062092

7d14479c-01a2-432b-a920-019244ac1bb2
00:15:10.822 --> 00:15:15.329
integer. Can negative elements
so minus X or negative negative

NOTE Confidence: 0.8062092

f8d2e48c-7b05-46f8-aab0-0a04d2db65cc
00:15:15.329 --> 00:15:20.021
x is the inverse of that
element because If you apply the

NOTE Confidence: 0.8062092

4cc6b437-206b-44e6-ad6d-4b7b87aeb6fb
00:15:20.021 --> 00:15:25.886
addition on x last minus X or
minus X + X, there is is the

NOTE Confidence: 0.8062092

0dcf8204-77fe-4d87-bebb-4efd691a7e6e
00:15:25.886 --> 00:15:28.623
identity element of addition
which is 0.

NOTE Confidence: 0.86037564

232a72dd-8e2e-42b8-bffa-58056cd88631
00:15:29.500 --> 00:15:33.387
As a result, we can say that the
relationship between X and minus

NOTE Confidence: 0.86037564

dcf717c0-6a23-4e25-810d-0819643b735d
00:15:33.387 --> 00:15:34.882
X is the inverse relationship.

NOTE Confidence: 0.87476087

5b00d155-18fe-44fd-9708-6c41a6efce9e
00:15:37.720 --> 00:15:42.120
For the multiplication, we don't
have this property because you can

NOTE Confidence: 0.87476087

af97886b-b949-4bc7-9cff-fcb09323688c
00:15:42.120 --> 00:15:46.920
simply find 2 elements, find an
element in the set, for instance

NOTE Confidence: 0.87476087

f80c7056-df5e-4f48-af62-dfab0d618b8c
00:15:46.920 --> 00:15:51.720
two that you cannot find any
other element from the set S

NOTE Confidence: 0.87476087

78f907b7-3cb3-4777-b7ce-6a976e05f332
00:15:51.720 --> 00:15:56.120
such that if you apply the
multiplication, you end up with

NOTE Confidence: 0.87476087

613888b9-35cb-421e-8dec-fa00a2cf583f
00:15:56.120 --> 00:15:57.720
the identity element of

NOTE Confidence: 0.8893028

449e60a6-5abb-491f-a701-ee9c68f0f190
00:15:57.720 --> 00:16:02.926
multiplication one. For two, the
identity of the other elements

NOTE Confidence: 0.8893028

80755bfe-8c73-4b35-9a9c-0d3719742bf1
00:16:02.926 --> 00:16:04.312
must be one.

NOTE Confidence: 0.88559705

b49c4b87-6c08-4a8b-8174-3b90403dd0fe
00:16:05.180 --> 00:16:10.124
Divided by two, which is 0.5. In
order to produce the identity

NOTE Confidence: 0.88559705

2cd0e2ad-ab0a-486a-8909-3917c641f6cc
00:16:10.124 --> 00:16:12.596
element of one thats 1 / 2

NOTE Confidence: 0.8640815

785f4812-9db3-4570-9ebc-35c236f968ab
00:16:13.160 --> 00:16:18.788
Is not an element of S, so we
can say that we find a

NOTE Confidence: 0.8640815

b21f9edd-6b80-436c-9476-8e79752536ba
00:16:18.788 --> 00:16:22.808
counterexample exam at least
one element of S doesn't have

NOTE Confidence: 0.8640815

414928b1-b72c-452c-994d-388defe4f807
00:16:22.808 --> 00:16:26.828
the inverse element. As a
result, as is not, doesn't

NOTE Confidence: 0.8640815

bbdab2ab-31a7-4f95-90c4-a35cae8cc178
00:16:26.828 --> 00:16:29.642
have the inverse property
under the multiplication

NOTE Confidence: 0.8640815

e1bc692b-a08e-4054-8960-fccb1a492f2d
00:16:29.642 --> 00:16:30.044
operator.

NOTE Confidence: 0.8334003

89eec3ac-7393-4881-a666-aa2144d7e277
00:16:32.040 --> 00:16:36.616
Interestingly, in the Binary set
for both the OR an AND, we don't

NOTE Confidence: 0.8334003

fb66bbb9-ceb2-4c04-8d71-95fa4d7eb902
00:16:36.616 --> 00:16:38.024
have the inverse property.

NOTE Confidence: 0.86531615

dd473de1-30ed-47d3-870d-6bb6405c4f32
00:16:38.950 --> 00:16:42.300
And this is the reason 'cause If
you or one.

NOTE Confidence: 0.83062226

f0a01a67-4134-45fc-8885-f4f49681d7d5
00:16:43.150 --> 00:16:47.895
Any elements of S either zero
or one the result gonna be 1.

NOTE Confidence: 0.83062226

224affc9-83ed-4855-bcfd-67a8069da1b4
00:16:47.895 --> 00:16:51.545
Already knew that, but the
result is not the identity

NOTE Confidence: 0.83062226

f3c825df-d106-4a6f-b820-f95d3742af17
00:16:51.545 --> 00:16:55.925
element of or which is zero.
Same is for the AND operator.

NOTE Confidence: 0.83888084

c84f4e99-6474-4979-9796-79c8c5cbab91
00:16:56.730 --> 00:16:59.547
So the Binary set doesn't
have the inverse property.

NOTE Confidence: 0.81077856

d26a352f-caa2-4084-95bb-ab5d9bb9b258
00:17:01.700 --> 00:17:07.160
And the last property was the
distributive property. Or postulate.

NOTE Confidence: 0.81077856

c170a6a6-4346-44c1-95ec-3dc3764987d4
00:17:07.160 --> 00:17:13.166
It says that given two binary
operators in the set S, these

NOTE Confidence: 0.81077856

d3676042-9aca-49e2-897a-8162d9aaec48
00:17:13.166 --> 00:17:18.080
operators are distributed for
each other. If this equation

NOTE Confidence: 0.81077856

1fec2f7a-51ca-4cab-a0d4-8fb4019ecf3d
00:17:18.080 --> 00:17:19.718
actually holds true.

NOTE Confidence: 0.70510715

cff1cabd-9c6e-4919-a5cd-327b482c42ec
00:17:20.590 --> 00:17:25.054
So basically X operator.
I mean this is called

NOTE Confidence: 0.70510715

722ad3a3-651e-4261-b672-8d89d3b4061f
00:17:25.054 --> 00:17:29.518
Section Sign X section sign,
y dagger sign Z?

NOTE Confidence: 0.8864318

2cbd7eae-5163-4fa2-90ae-0d3b2eb60e2b
00:17:30.590 --> 00:17:34.076
If this equation if this term.

NOTE Confidence: 0.7958525

16f11ebc-cc4d-4344-92fe-ace61ebbdd7b
00:17:34.680 --> 00:17:37.008
Is equal to this?

NOTE Confidence: 0.78904057

01b1f726-68da-4a36-82e5-bcf07f867a07
00:17:39.170 --> 00:17:41.060
A term I mean meaning x.

NOTE Confidence: 0.71583337

ff3f3f10-1090-4384-a48d-de063d49c125
00:17:41.700 --> 00:17:47.352
A section sign why dagger? Sign
X section signs. We could say

NOTE Confidence: 0.71583337

da3b5c4a-e58f-4fbb-ba7b-43fa5c488ec1
00:17:47.352 --> 00:17:52.062
that X can be disturbed and
distribute over the parentheses

NOTE Confidence: 0.71583337

bb6e710c-f2e9-4c56-b56e-d30cfec73819
00:17:52.062 --> 00:17:53.946
in the left side.

NOTE Confidence: 0.82775676

d904e6f4-d73d-4454-9c23-7d71c162f044
00:17:54.770 --> 00:18:00.243
And if it is equal to this
one, if we distribute X from

NOTE Confidence: 0.82775676

66d2c238-d96e-426a-a874-e9ed603b316e
00:18:00.243 --> 00:18:04.453
the right side to the
parenthesis, say that X with

NOTE Confidence: 0.82775676

0b9a4063-ba5d-4a5b-9e2f-94ad013df66f
00:18:04.453 --> 00:18:08.663
the operator I mean section
sign can distribute inside the

NOTE Confidence: 0.82775676

88628517-0d85-466f-b83c-e65fddb9b5df
00:18:08.663 --> 00:18:10.768
parenthesis over the dagger
sign.

NOTE Confidence: 0.8478543

4b61709b-cddb-4518-9c67-e7874401ad77
00:18:12.190 --> 00:18:15.230
So you already knew the
distributive property. But

NOTE Confidence: 0.8478543

d3bb673b-2157-41f3-8d25-5f5b0895db36
00:18:15.230 --> 00:18:17.890
this is the formal
definition of the

NOTE Confidence: 0.8478543

84f12dcc-48c6-4f7e-a850-869cd735a36a
00:18:17.890 --> 00:18:19.410
distributive postulate or
property.

NOTE Confidence: 0.8041438

f91a993e-ff4e-417d-9937-b034b92fb26a
00:18:22.050 --> 00:18:27.440
So then we introduce the Boolean
Algebra, which says that any

NOTE Confidence: 0.8041438

5a920b94-6fda-4caa-98cf-fabfb5809751
00:18:27.440 --> 00:18:31.360
algebraic structure with these
properties and is boolean,

NOTE Confidence: 0.8041438

56019dff-332c-4919-8e78-c2b173a2294f
00:18:31.360 --> 00:18:35.770
meaning that any set with at
least two elements.

NOTE Confidence: 0.88130087

c3ebe44c-fd22-4ded-8e69-0eb821cc4c96
00:18:36.340 --> 00:18:38.377
And these two elements
must be distinct.

NOTE Confidence: 0.8559986

408aceea-055b-4827-ab9e-b9450ac8eb83
00:18:39.440 --> 00:18:42.872
It could have more than two
elements, 3 4 at least

NOTE Confidence: 0.8559986

43404c12-cc26-4eb8-8023-9db571075936
00:18:42.872 --> 00:18:45.992
two elements of this set
must be distinct. An exist.

NOTE Confidence: 0.9115013

58ed8c66-7d9a-41f9-9b38-854871aed2dd
00:18:47.250 --> 00:18:49.554
Also, there must be 2 binary

NOTE Confidence: 0.81956303

7829c78f-c12f-451a-b844-43e9652768ff
00:18:49.554 --> 00:18:53.390
operators. These two binary
operators must have

NOTE Confidence: 0.81956303

b00dbd8a-cf43-4132-a8ad-ea4ce8f2d2eb
00:18:53.390 --> 00:18:54.260
identity elements.

NOTE Confidence: 0.82000566

9a919bea-c483-456f-a69c-464e3aae1f59
00:18:55.310 --> 00:19:00.645
Also, the set S as must be closed,
commutative and distributive for

NOTE Confidence: 0.82000566

e5c69ce3-2bf0-4f7c-a88f-1c8a7bc55ddc
00:19:00.645 --> 00:19:05.495
these two binary operators,
though so far these are the

NOTE Confidence: 0.82000566

888fc1c0-bda9-4ca5-9d5b-0a57796065c8
00:19:05.495 --> 00:19:10.830
possibly introduced so far, but
there is a new postulate which

NOTE Confidence: 0.82000566

a8020914-d16a-4c9a-9f16-991159496122
00:19:10.830 --> 00:19:12.770
replaces the inverse

NOTE Confidence: 0.9138208

01a5aec2-7e68-45f4-85f2-7ee9939f772b
00:19:12.770 --> 00:19:15.290
postulate. This is called

NOTE Confidence: 0.8010844

f2a50404-2067-4db0-8ab9-5fe35c8c150a
00:19:15.290 --> 00:19:21.129
compliment. Uh, we said that in
the binary set we cannot have

NOTE Confidence: 0.8010844

685e7c19-1539-4f7a-9274-3ae835225282
00:19:21.129 --> 00:19:23.583
inverse property as if we apply.

NOTE Confidence: 0.7367408

698462e9-1b8f-4b49-9c5d-4f4a6b9c740a
00:19:24.580 --> 00:19:28.060
It's back here if we apply the or.

NOTE Confidence: 0.8655576

515ab783-7e16-4c58-a412-5a4905c66126
00:19:28.740 --> 00:19:33.979
On any element. So for one or
gonna be always one. So the

NOTE Confidence: 0.8655576

21b0cd58-88b5-4928-a3ee-63ceba7faedc
00:19:33.979 --> 00:19:37.606
result is not the identity
element for 2 zero.

NOTE Confidence: 0.7372289

57bf9695-8fa8-4063-8523-11f86a6a74ee
00:19:38.740 --> 00:19:43.160
Instead of invest with we find
in new postulate compliment.

NOTE Confidence: 0.8678707

0533f6f4-cec8-449a-bc6e-103e27dfb252
00:19:44.110 --> 00:19:48.609
So we said that although we
apply the operator and the

NOTE Confidence: 0.8678707

a8c8e79b-b3da-4552-97f0-4c83bcee6a7b
00:19:48.609 --> 00:19:52.290
operator and with the
identity element not for this

NOTE Confidence: 0.8678707

2c9b9946-8867-4b7f-bd76-6c7726913b4e
00:19:52.290 --> 00:19:55.562
operator, but the identity
element for the other

NOTE Confidence: 0.8678707

df938f9c-f5f4-4c7d-96ac-2fc442c92b99
00:19:55.562 --> 00:19:57.198
operator called this
compliment.

NOTE Confidence: 0.81406885

9ee7d3e4-07f0-4efc-a0e2-c4f8525a5d45
00:19:58.450 --> 00:20:03.662
And we. The relationship between
X&Y is not inverse relationship

NOTE Confidence: 0.81406885

e2cbef3b-a388-453f-9bf7-3af314fa1e82
00:20:03.662 --> 00:20:07.134
anymore, it is a new
relationship with compliment,

NOTE Confidence: 0.81406885

b0e43ad2-3c43-447f-9b08-3db7a10ae6a4
00:20:07.134 --> 00:20:13.210
and we should show like this. we said
that y is the complement of X

NOTE Confidence: 0.81406885

e584f8cf-b898-46d5-911c-563150c3866f
00:20:13.210 --> 00:20:17.550
instead of just putting minus
one which was the inverse

NOTE Confidence: 0.81406885

b5b2d3b3-e1bc-42f3-a4f3-38dbf6005884
00:20:17.550 --> 00:20:21.456
property. Put the this prime
sign or bar sign.

NOTE Confidence: 0.80885035

c48e4ab4-ce88-4c69-b8f5-86e0665921eb
00:20:22.350 --> 00:20:26.574
Exactly as Not operator
as we already introduced.

NOTE Confidence: 0.8037407

2370ce39-e673-4728-982a-3f8cdf408315
00:20:28.240 --> 00:20:33.630
Thought this was the topics we
covered. I mean, last lecture.

NOTE Confidence: 0.8037407

29368e12-4d76-4ae5-8e60-8d9afc2891ae
00:20:33.630 --> 00:20:36.570
So let's start a new topic.

NOTE Confidence: 0.8668686

20d4d442-e8ed-4d22-8365-8be205621d87
00:20:37.300 --> 00:20:38.090
Continue the.

NOTE Confidence: 0.85129255

a465826d-d4a8-4ebd-b55c-f9bb24a5b160
00:20:40.080 --> 00:20:44.830
So basically we introduce all
these math to minimize the

NOTE Confidence: 0.85129255

34e43a07-54a9-444e-8178-78453af5b530
00:20:44.830 --> 00:20:50.055
Boolean expression. So today
we're going to see how we can

NOTE Confidence: 0.85129255

d7a606e2-090b-46b0-bd2d-eb0161b503d9
00:20:50.055 --> 00:20:53.855
use it Boolean algebra to
simplify the function.

NOTE Confidence: 0.8315808

a0e37cc2-edb1-4f76-94a7-7fdc3b505cba
00:20:56.370 --> 00:21:01.794
In 1937, as we already said,
Shannon was the first who used

NOTE Confidence: 0.8315808

adb62250-48f9-4a48-920f-d4847df3cd5a
00:21:01.794 --> 00:21:06.766
the Boolean algebra from the
math, and the huntingtons's

NOTE Confidence: 0.8434104

5c03c155-c2e0-4ceb-adf2-37bf7aa69366
00:21:06.766 --> 00:21:12.650
postulates. In order to build a
logic circuits that I mean

NOTE Confidence: 0.8434104

dcd15aa5-ff9a-4958-ab9e-782f65f1c29d
00:21:12.650 --> 00:21:14.350
incorporate the electrical power

NOTE Confidence: 0.8455963

e2ff9113-f4a6-4b1a-8b11-1f4f749dda00
00:21:14.350 --> 00:21:20.162
build machines. so in his
master thesis. He introduced an

NOTE Confidence: 0.8455963

c745e9f5-d07b-454d-b2bc-32327700b0aa
00:21:20.162 --> 00:21:21.749
instance Boolean algebra.

NOTE Confidence: 0.82200295

9ea3ad8c-de50-4241-b784-27f819d845e7
00:21:22.500 --> 00:21:26.064
Which is called switching
algebra or two valued boolean

NOTE Confidence: 0.82200295

e18dd4b8-9f34-4e64-a3c7-eba7a34632d6
00:21:26.064 --> 00:21:30.420
algebra. So this algebra is
just an instance of an example

NOTE Confidence: 0.82200295

23869dc0-437d-4eb1-b912-03375e0ace8a
00:21:30.420 --> 00:21:34.380
of the Boolean algebra. Let's
see what is switching algebra

NOTE Confidence: 0.82200295

53636cee-698a-45ea-9dd3-4fe40f88e3d4
00:21:34.380 --> 00:21:35.964
or two values algebra.

NOTE Confidence: 0.8531888

8fa48bf4-ab65-4766-9143-1573097733dd
00:21:37.580 --> 00:21:42.598
He said that let's pick S as
the set of zero and one

NOTE Confidence: 0.8531888

8c58dfc8-6ce9-4c35-8f09-c9c6a683f9a5
00:21:42.598 --> 00:21:46.072
that's the only element. So
this satisfies the first

NOTE Confidence: 0.8531888

0df7f888-2ef9-433f-9a01-633dfb193d92
00:21:46.072 --> 00:21:49.160
condition of the Boolean
algebra. We have two

NOTE Confidence: 0.8531888

917f829e-67fb-48aa-9962-7e24d9d85c2c
00:21:49.160 --> 00:21:51.862
elements, and these two
elements are distinct.

NOTE Confidence: 0.8399106

1214364d-f1ad-4186-b2fb-f5c49da4cc1c
00:21:53.260 --> 00:21:56.716
The second property is
introduced two operator and an

NOTE Confidence: 0.8399106

5a75d5c7-a4c4-4a58-b15f-d392f1d1841b
00:21:56.716 --> 00:22:01.708
or so. The section sign could
be an and the dagger sign could

NOTE Confidence: 0.8399106

623cd99a-8ae5-4f77-8768-6c113d51085b
00:22:01.708 --> 00:22:05.932
be or and this is the. This
satisfied the second condition

NOTE Confidence: 0.8399106

69a5793c-d442-42d2-a007-4df9625cf7bf
00:22:05.932 --> 00:22:10.156
of Boolean algebra, so so far
can see that the switching

NOTE Confidence: 0.8399106

72d2a2c7-df9c-4029-adfa-de011408e39f
00:22:10.156 --> 00:22:14.380
algebra is still a Boolean
algebra, but we have to check

NOTE Confidence: 0.8399106

8142b0b6-ce9f-4a81-808c-efdcc30f07a0
00:22:14.380 --> 00:22:15.148
other conditions.

NOTE Confidence: 0.8543221

322652c9-4676-4899-b28b-85b8858b6ab5
00:22:16.640 --> 00:22:22.633
You already saw that the ask the
Binary said close under and or.

NOTE Confidence: 0.80375046

8a0e7cab-c60d-4a42-8499-627ed117d087
00:22:23.230 --> 00:22:27.420
So this condition actually
satisfied also the AND and or

NOTE Confidence: 0.80375046

e714c86b-b572-46fe-807c-866c2c23d24f
00:22:27.420 --> 00:22:31.191
operator is commutative and
distributive over each other. So

NOTE Confidence: 0.80375046

02aa65bd-fbc8-467e-b632-fb91f2f7bbf3
00:22:31.191 --> 00:22:36.638
are these AND and OR. For
this set, I mean can be commutative

NOTE Confidence: 0.80375046

31561e51-a846-4691-a23a-f74c98fe1a84
00:22:36.638 --> 00:22:41.666
and distributive. Also the and
an or. We already saw that has

NOTE Confidence: 0.80375046

c221a913-fdf4-4f17-9a65-9e576c357125
00:22:41.666 --> 00:22:46.694
identity elements for the and we
have the identity element one or

NOTE Confidence: 0.80375046

b6b83cf8-0b7c-4f33-9b9c-d9e592020711
00:22:46.694 --> 00:22:49.627
the OR we have the identity element

NOTE Confidence: 0.85228944

41328b94-f5d9-4a1a-bfa4-51a08e2e9481
00:22:49.627 --> 00:22:55.450
0. So we see that it satisfies
the 4th condition of the

NOTE Confidence: 0.8373632

1a50470d-5fc9-4482-8167-1825a8456a98
00:22:55.450 --> 00:23:00.765
Boolean algebra. So we see that
the switching algebra is very

NOTE Confidence: 0.8373632

75dccf75-72ef-4af0-8e90-cf34454d15bd
00:23:00.765 --> 00:23:05.220
close to the Boolean algebra
only condition we have to show

NOTE Confidence: 0.8373632

bb1eba71-876b-4ee3-8f66-074dc04c4e4d
00:23:05.220 --> 00:23:09.675
is that switching algebra has
the complement property and as a

NOTE Confidence: 0.8373632

f0ebc965-7728-4b6b-bf0d-ae6de0077eb6
00:23:09.675 --> 00:23:12.510
result Sweeting Algebra is
Boolean algebra entity.

NOTE Confidence: 0.8387293

9d3225fd-5a39-46dc-9839-b04310971d7a
00:23:13.170 --> 00:23:18.546
So compliment we can prove this
by just prove this two 

NOTE Confidence: 0.87499166

ae305c7f-dc2d-4a46-a34b-d4e714c12dc7
00:23:18.546 --> 00:23:23.076
statement. So any elements so
zero is an element.

NOTE Confidence: 0.88728565

69b86a58-3587-4536-86eb-0d6858008ff8
00:23:23.640 --> 00:23:27.042
we could find another
element from the set which

NOTE Confidence: 0.88728565

9f2c663b-842e-4caf-a5ad-8e506e080632
00:23:27.042 --> 00:23:31.200
is 1 and we applied and the
result is the identity

NOTE Confidence: 0.88728565

7e53af8a-5ae9-498e-a05c-d3a248abbb60
00:23:31.200 --> 00:23:34.980
element of the other
operator. So if we and the

NOTE Confidence: 0.88728565

12f0618e-56ca-4742-9bc4-64d16aa1938a
00:23:34.980 --> 00:23:37.626
result in the identity
element of OR.

NOTE Confidence: 0.7962354

68807ab1-543c-42d0-bf35-229be1ea345a
00:23:39.000 --> 00:23:45.285
Sample the OR if you apply or an
zero and one. The result is the

NOTE Confidence: 0.7962354

48945139-ad94-4521-aeec-7fd42d65da74
00:23:45.285 --> 00:23:46.961
identity element of AND so.

NOTE Confidence: 0.83045846

27b5a2cc-9dbb-41f3-b3b8-8ef5214782fa
00:23:48.330 --> 00:23:51.839
Not inverse of each other, but
they are compliments of each

NOTE Confidence: 0.83045846

d29848f4-58fd-46ad-ba42-8818406b3572
00:23:51.839 --> 00:23:56.305
other. So as a result we can say
that zero is the complement of

NOTE Confidence: 0.83045846

6e6538b6-9426-451f-ac75-1cb8f764459c
00:23:56.305 --> 00:24:00.771
one or one is the complement of
zero. As I said, This is exactly

NOTE Confidence: 0.83045846

dd600236-fa79-4f6a-82b2-a598b16c931d
00:24:00.771 --> 00:24:04.918
the not of the binary variables,
so we already knew that the not

NOTE Confidence: 0.83045846

3efc44cd-c2a5-43bd-bb19-24000ecd38ed
00:24:04.918 --> 00:24:09.703
of zero is 1. The not of one is
0, so compliment is another name

NOTE Confidence: 0.83045846

495be088-1016-419d-8fa1-297eb0adcf26
00:24:09.703 --> 00:24:10.979
for the not operator.

NOTE Confidence: 0.8557726

9fa19a37-622b-47fb-8735-3c0c71b0499d
00:24:11.980 --> 00:24:17.060
So based on the last in the
4th I mean.

NOTE Confidence: 0.812323

612c35be-1988-4c32-9acb-3ccbb18ae6b9
00:24:17.710 --> 00:24:21.454
 statement we see that the
switching algebra satisfies

NOTE Confidence: 0.812323

dfab39ea-3a20-483e-94e0-33cd68390eba
00:24:21.454 --> 00:24:25.614
the complement property of the
Boolean algebra. So as a

NOTE Confidence: 0.812323

779c7f9f-ebde-4908-9a63-902c569c3a4c
00:24:25.614 --> 00:24:29.358
result switching algebra is called
Boolean algebra because of

NOTE Confidence: 0.812323

5eb140c3-5692-4151-a28e-3d3e3190d123
00:24:29.358 --> 00:24:32.686
satisfying all the five
property of the Boolean

NOTE Confidence: 0.812323

59f98cf9-3342-4cb5-b8bc-88007cbaa72d
00:24:32.686 --> 00:24:33.102
algebra.

NOTE Confidence: 0.86644804

f71c4178-324b-4989-aee9-dabc7abd128b
00:24:34.450 --> 00:24:39.754
But what's the use of this?
So before you see the use of

NOTE Confidence: 0.86644804

6ac75845-e56c-48eb-90a5-c0afc285f003
00:24:39.754 --> 00:24:40.978
the Boolean algebra?

NOTE Confidence: 0.8450229

ef6fd9b3-66f4-4d83-8ded-ea2318b7759d
00:24:42.280 --> 00:24:47.340
In Computer Science you will see
other algebraic structures. For

NOTE Confidence: 0.8450229

541471f5-9dec-4346-a06e-c3feab804ee0
00:24:47.340 --> 00:24:53.412
instance, in the 3rd or 4th year
gonna take another course called

NOTE Confidence: 0.8450229

49c05345-d124-439e-95ba-77d47cc7bf62
00:24:53.412 --> 00:24:58.978
database. In the database you
see that there is a deep

NOTE Confidence: 0.8450229

17c3e411-0282-4d02-9eb2-3500ed6c9b21
00:24:58.978 --> 00:25:03.026
mathematical background behind
the database which is called

NOTE Confidence: 0.8450229

5f799574-ceb7-43bd-9464-97f5a1c9c518
00:25:03.026 --> 00:25:07.580
Relational Algebra. So in other
disciplines of computer science

NOTE Confidence: 0.8450229

fea92587-c697-496e-98da-458f1ebf61ed
00:25:07.580 --> 00:25:11.628
would see another. I mean
different algebraic structure.

NOTE Confidence: 0.8559426

ef90d939-b58a-4b45-9daa-5d743238bf25
00:25:11.910 --> 00:25:15.897
So be prepared for the
algebraic or math, just

NOTE Confidence: 0.8559426

f28effdc-c127-4481-a05b-de2be7391e97
00:25:15.897 --> 00:25:19.441
behind the practical topics
of the computer science.

NOTE Confidence: 0.83773416

2958f9f5-0830-4238-9c5b-13c84644a55e
00:25:21.460 --> 00:25:25.376
So let's see what's the use of
the Boolean Algebra. Boolean

NOTE Confidence: 0.83773416

bffdd6ad-b8a7-4f89-9120-b7aa8bf028c3
00:25:25.376 --> 00:25:28.936
algebra has some basic
theorems that can be proved by

NOTE Confidence: 0.83773416

62568e4f-090b-4772-a22b-58c57c124571
00:25:28.936 --> 00:25:32.496
postulates for the postulate
we assume they are true, but

NOTE Confidence: 0.83773416

6e783e81-abc2-44c6-bfdd-a81b788c52c3
00:25:32.496 --> 00:25:36.768
for the theorem we have to
prove they are true. We can

NOTE Confidence: 0.83773416

41230a87-97d8-4344-95fb-12add4f2a9d2
00:25:36.768 --> 00:25:40.328
prove the theorem, by the
postulates and these theorems

NOTE Confidence: 0.83773416

f9099ef3-6ce9-4457-9445-6c1fe6218861
00:25:40.328 --> 00:25:42.464
helps us to minimize the
function.

NOTE Confidence: 0.8367347

b79675f4-347e-4d91-a726-84460f12ee61
00:25:45.270 --> 00:25:50.702
The first theorem. So we want
to prove that X or X' X or

NOTE Confidence: 0.8367347

e53ecae9-df43-40be-8b03-4c0c153711a9
00:25:50.702 --> 00:25:55.746
X is equal to X in general
form if you apply the Or gate

NOTE Confidence: 0.8367347

75c6b8d1-40d5-4501-afec-65c7da8a302b
00:25:55.746 --> 00:26:00.014
multiple times and a binary
variable is, the result is the

NOTE Confidence: 0.8367347

5e1fa56f-6c80-40e6-9f20-7ba6ce854966
00:26:00.014 --> 00:26:03.506
same as just a binary
variable, so it doesn't

NOTE Confidence: 0.8367347

d827eae5-3b66-47d1-abd0-e1521e3bce4b
00:26:03.506 --> 00:26:03.894
happen.

NOTE Confidence: 0.860482

eba504a2-71e2-4b15-8436-961477b54ed1
00:26:05.100 --> 00:26:09.818
But this is a very easy way to
reduce a boolean function. So in

NOTE Confidence: 0.860482

f13f7fc6-3038-4340-997a-dc90428f741e
00:26:09.818 --> 00:26:14.536
the left side you can see you
need one or gate two input, but

NOTE Confidence: 0.860482

e0a2f6d3-5f75-4d14-899f-84d614d8ebdd
00:26:14.536 --> 00:26:19.254
in the right side you can see
that there is no need for, so

NOTE Confidence: 0.860482

d8bc8415-50cd-4d8c-926c-9ee84767edea
00:26:19.254 --> 00:26:21.950
this is 1 easy way to reduce the

NOTE Confidence: 0.81717247

6cb0673c-a605-45c6-b52f-99eaaf667429
00:26:21.950 --> 00:26:25.878
Boolean function. So let's prove
the theory. Although this is

NOTE Confidence: 0.81717247

818c5e9f-10ce-4b54-b126-35dfe8289602
00:26:25.878 --> 00:26:29.790
trivial and you can prove it by
truth table by using postulate,

NOTE Confidence: 0.81717247

59034b61-ba31-4a8b-99d5-0377e8df8c8e
00:26:29.790 --> 00:26:31.094
it is like this.

NOTE Confidence: 0.847834

fa4269b8-2bc5-4b54-b622-b97e8123721a
00:26:32.080 --> 00:26:37.484
So X or X bar can be
rewritten as X or X X or X

NOTE Confidence: 0.847834

57b87fe9-94fd-4613-8a50-da919dbf0ec7
00:26:37.484 --> 00:26:42.888
can be rewritten like X or X
and by one and this is because

NOTE Confidence: 0.847834

34aaa72a-705a-449a-b507-2292946aa432
00:26:42.888 --> 00:26:47.520
of the identity element of the
and operator which is 1. So

NOTE Confidence: 0.847834

e3c2aa50-3d83-4cfa-980c-6a0554e871c5
00:26:47.520 --> 00:26:51.380
you can add any term with one
doesn't have any impact

NOTE Confidence: 0.9194968

33fbacc4-c957-48d7-8851-eaeccb4956ef
00:26:53.020 --> 00:26:55.039
However, the one.

NOTE Confidence: 0.8555927

a5f97121-bd8c-4bc1-b559-3aa27defe4cd
00:26:56.140 --> 00:27:00.485
This is result of the complement
property already knew that any

NOTE Confidence: 0.8555927

effcfb2b-2a5a-424f-a17a-e993aedf37c6
00:27:00.485 --> 00:27:04.830
binary variable or with its
complements, it is equal to the

NOTE Confidence: 0.8555927

3d69255d-4855-4275-8428-75deb7e250c2
00:27:04.830 --> 00:27:09.570
identity element , so one is
equal to X or X Bar.

NOTE Confidence: 0.8716292

263fd23d-b401-4572-8994-b398b61fe5fb
00:27:10.630 --> 00:27:16.524
And then this one we can extract
X as you can see here. This

NOTE Confidence: 0.8716292

440f6d3f-f839-4e73-8a24-639481f41809
00:27:16.524 --> 00:27:21.997
is kind of distributing Or over the
AND, so you can extract X from

NOTE Confidence: 0.8716292

a8b2ba86-23ee-47c7-9ccb-a5cca0283483
00:27:21.997 --> 00:27:23.260
these two parentheses.

NOTE Confidence: 0.8215968

391394c3-8f4b-4e7a-878d-07f34192db95
00:27:24.340 --> 00:27:30.038
And it becomes X or X and x bar,
so it's kind of distributing or over

NOTE Confidence: 0.7634309

dae9ab41-608a-41cc-a10e-77b7e9034023
00:27:30.038 --> 00:27:35.344
AND. 'cause of the distributive
property of OR over AND?

NOTE Confidence: 0.84744173

8b59e193-fb8f-4c53-b258-b603968feb19
00:27:36.110 --> 00:27:41.132
And then. 'cause of the
complement property X and

NOTE Confidence: 0.8371515

80662ed9-9152-4403-b0d2-c00082af80e6
00:27:41.132 --> 00:27:45.718
X'? These are complemented
each other, so and with each

NOTE Confidence: 0.8371515

f8fc4e7d-1be5-45f6-8f3f-02433523c976
00:27:45.718 --> 00:27:49.538
other with becom, the identity
element of the other operator

NOTE Confidence: 0.8371515

0e352c7e-a319-4b06-af74-2ee43876771a
00:27:49.538 --> 00:27:52.976
before, so it becomes zero.
'cause of the complement

NOTE Confidence: 0.8371515

7876a6ae-e7fa-4739-bbde-c87aae7997f3
00:27:52.976 --> 00:27:56.032
property? An X or 0 ,0 is the
identity element of.

NOTE Confidence: 0.8349922

467ca8fe-4ef1-4847-a025-5109e38ed42a
00:27:56.680 --> 00:28:01.080
 doesn't have any
influence, so it becomes X so X

NOTE Confidence: 0.8349922

535a3a9b-6e28-48e6-ba6c-356f0dae863a
00:28:01.080 --> 00:28:06.680
or X is always equal to X and
General Form X or X multiple

NOTE Confidence: 0.8349922

cfd88167-0e61-4632-a06f-cc9f2d453f17
00:28:06.680 --> 00:28:09.080
times is exactly the same as.

NOTE Confidence: 0.78837097

114e7c07-2208-4a8c-a710-261b750d7b14
00:28:10.270 --> 00:28:14.938
This is very easy, but it's very
helping theorem in order to

NOTE Confidence: 0.78837097

1cda6b54-0cdd-44f2-b576-2592a1b2587c
00:28:14.938 --> 00:28:16.883
reduce the number of gates.

NOTE Confidence: 0.861316

eddf3291-5452-48d3-af8b-a4b6c3791231
00:28:18.630 --> 00:28:21.860
Another basic theorem is this.
We already knew there. Now

NOTE Confidence: 0.861316

438fd7f2-9eea-4c9e-8e44-f6795fae55da
00:28:21.860 --> 00:28:25.413
we're going to prove it using
the Boolean algebra instead of

NOTE Confidence: 0.861316

e1ad2a72-a9c9-4903-afee-1411a6236b3f
00:28:25.413 --> 00:28:26.382
using truth table.

NOTE Confidence: 0.84110445

67ca1943-f38d-41bb-a72c-944ced1cab3e
00:28:27.500 --> 00:28:31.628
We already knew that Oring with
one is always one, so anything

NOTE Confidence: 0.84110445

3d5ea3d3-a2e2-4878-940e-efb9c5ecb751
00:28:31.628 --> 00:28:34.036
Or with one is equal to 1.

NOTE Confidence: 0.8479217

6371051b-9a91-4c73-a418-25110890b94b
00:28:35.390 --> 00:28:39.100
So you saw that if we have a
digit one in the one input

NOTE Confidence: 0.8479217

d0bbd4a3-4485-4045-b3ea-605b4a6c3ac8
00:28:39.100 --> 00:28:42.015
of the OR we don't have to
wait for other binary

NOTE Confidence: 0.8479217

63830eab-239b-4156-b12b-36e949a2c1b5
00:28:42.015 --> 00:28:43.605
variables, just we can output
one.

NOTE Confidence: 0.86107856

d7461cb2-cdc0-4b0e-ae5f-010765cdd0ee
00:28:45.270 --> 00:28:48.555
Now we're gonna prove it, with
postulates so.

NOTE Confidence: 0.86210114

27f4ac05-97cf-4391-82a8-4cbcecc677d6
00:28:49.380 --> 00:28:53.888
X or one can be rewritten as or
one and with one. This is

NOTE Confidence: 0.86210114

39aaabdc-da66-41ad-8d14-265a50947899
00:28:53.888 --> 00:28:57.108
because of the anding with. One
doesn't have any impact.

NOTE Confidence: 0.842609

47d4c779-98f1-476d-8fb7-e6acc6b39667
00:28:58.120 --> 00:29:03.961
And one can be rewritten as
complements for X or X'.

NOTE Confidence: 0.8149747

98bec8b1-edd8-459b-9e9f-02b1e79fa84c
00:29:05.170 --> 00:29:08.107
These are the complement of each
other with over becomes the

NOTE Confidence: 0.8149747

cc9ebc7e-23b4-403b-96b7-f7e4ad266d1d
00:29:08.107 --> 00:29:09.175
identity element of AND.

NOTE Confidence: 0.81209373

1ae0b268-109c-4755-8602-6319d17bb94e
00:29:09.820 --> 00:29:14.627
And then now you can extract
X because of the distributive

NOTE Confidence: 0.81209373

00d04ab3-04bd-44ab-b054-fd8b09d95281
00:29:14.627 --> 00:29:16.375
property of OR over AND.

NOTE Confidence: 0.8954204

e1e47085-ab8b-4750-92db-1a8de0a6e737
00:29:17.940 --> 00:29:18.960
Here is the result.

NOTE Confidence: 0.786453

b499a7e7-9c65-414a-95ce-2a4dafad4d4b
00:29:19.650 --> 00:29:24.512
So X or one and OR and
one x' as we know one

NOTE Confidence: 0.786453

f1704797-c463-4007-9485-4edaf74c462e
00:29:24.512 --> 00:29:27.504
is the identity element
doesn't have any impact,

NOTE Confidence: 0.786453

75d1f4d5-9bcf-4cad-8d88-116d88d0a617
00:29:27.504 --> 00:29:29.748
so we can simply drop it.

NOTE Confidence: 0.7188063

abcb816c-64ce-4ad5-abad-5f7f890568b3
00:29:30.870 --> 00:29:33.210
It becomes x or x'.

NOTE Confidence: 0.82218754

070ac930-bdae-4ec5-9eb8-763ddbdcc3c5
00:29:34.300 --> 00:29:39.149
And then x or x' is the
complement of each other, so the

NOTE Confidence: 0.82218754

0c59edfc-e57d-4436-b4ba-c652ba8e6a48
00:29:39.149 --> 00:29:42.506
result cannot be identity
element of the other operator

NOTE Confidence: 0.82218754

62dd7d5f-2775-4eaf-b08e-317e000b9795
00:29:42.506 --> 00:29:48.101
which is and. So here is the
result. So X or one is equal to

NOTE Confidence: 0.86075866

1f68a5a2-b725-4ad8-933d-34a85184d702
00:29:48.101 --> 00:29:51.940
1. Although you know from
the truth table now you can

NOTE Confidence: 0.86075866

c09ad2ac-4451-42e6-b0de-aacd3f5499c8
00:29:51.940 --> 00:29:54.560
prove it by the past. Let's
in the Boolean algebra.

NOTE Confidence: 0.8939777

45d997e1-7f7b-416c-8132-6fa9b6b5b485
00:29:56.020 --> 00:29:59.660
So again, you can see that in
the left side you need one or

NOTE Confidence: 0.82327664

09468f36-1c59-4a0e-9b0e-7229856d3c4a
00:29:59.660 --> 00:30:03.220
gate with. Two inputs, but in
the right you don't need any

NOTE Confidence: 0.82327664

8f79fd4c-e71c-43eb-92b7-7048279a8dfa
00:30:03.220 --> 00:30:06.190
gates, so it kind of reducing
the number of gates.

NOTE Confidence: 0.8005758

2be597cb-8901-4be7-b927-fd2ee697cb2e
00:30:09.320 --> 00:30:12.950
But you haven't seen this
theorem before, so this is the

NOTE Confidence: 0.8005758

9e774280-b3ac-4301-b86d-27913e51a92b
00:30:12.950 --> 00:30:16.580
new theorem. And as you can see
here is called absorption.

NOTE Confidence: 0.7507192

fccb4675-c672-42b2-bfb1-5f8b31435292
00:30:17.670 --> 00:30:19.550
Absorption theorem, which says

NOTE Confidence: 0.8059272

30bd23cf-5169-44fc-8050-f92ede1a214c
00:30:19.550 --> 00:30:25.804
that. If you see X or with
another term that has the

NOTE Confidence: 0.8059272

f24f7315-5bbc-4ff5-92fb-d90118eda2dc
00:30:25.804 --> 00:30:31.712
and operator, so you can simply
drop that term to X OR X&Y is

NOTE Confidence: 0.8059272

fccc3a78-f4c1-45e8-b2d6-cd3956fe1269
00:30:31.712 --> 00:30:36.776
equal to X. It's kind of the
other term absorbed to the X.

NOTE Confidence: 0.8356911

a55abf59-d603-44e7-a723-a8861825fd53
00:30:38.500 --> 00:30:43.947
But in general form, you can say
that if you see X Binary

NOTE Confidence: 0.8356911

2f261295-47c6-44f6-b21a-ddbf10aded71
00:30:43.947 --> 00:30:48.137
variable ORed with other
terms, all these other terms has

NOTE Confidence: 0.8356911

b254f1bf-b3a9-4ca7-b073-e1f7e0bad42a
00:30:48.137 --> 00:30:53.165
X in the end operator. For
instance X&Y X&ZW or X and with

NOTE Confidence: 0.8356911

ee7fbe2f-af41-4314-90bb-9cea38d5b520
00:30:53.165 --> 00:30:58.193
anything else all the other
terms are absorbed to the X. So

NOTE Confidence: 0.8356911

08e53694-eccc-4ac1-b5ba-373199f16f81
00:30:58.193 --> 00:31:00.707
all these equation is equal to

NOTE Confidence: 0.808593

27d1e438-52cf-44e0-a229-1225e8970e60
00:31:00.707 --> 00:31:05.238
X. So you can see that it it
helps with reducing the

NOTE Confidence: 0.808593

80e27c34-713d-459f-bbf1-bf4424683e93
00:31:05.238 --> 00:31:08.418
number of gates instance for
this equation. Here you need

NOTE Confidence: 0.808593

73342838-e01c-4324-bfdd-723642d06fa8
00:31:08.418 --> 00:31:12.552
one or gate and one and gate,
but in the right side you

NOTE Confidence: 0.808593

8f5fbc32-5e53-4d94-8aa6-b1fd4798b142
00:31:12.552 --> 00:31:13.824
don't have any gates.

NOTE Confidence: 0.8322917

74e3b0a2-c0bd-4807-af11-2990bf55212b
00:31:15.610 --> 00:31:20.823
So let's prove this by using
the postulates So here is the

NOTE Confidence: 0.8322917

5b42968f-7e2d-401e-9846-31396cdecf71
00:31:20.823 --> 00:31:26.838
proof. X or X&Y is equal to.
You can add 1 here you can and

NOTE Confidence: 0.8322917

b82778f8-c435-459a-985f-05941df1d30f
00:31:26.838 --> 00:31:31.249
X with one because one is the
identity element and doesn't

NOTE Confidence: 0.8322917

d2c1c573-4428-47a5-a14b-c8bd8106a1b8
00:31:31.249 --> 00:31:36.863
have any influence, so you can
Re-return the X or X bar and one

NOTE Confidence: 0.8322917

58d226e9-fa2f-48a7-985c-1b7e7ee30e1b
00:31:36.863 --> 00:31:37.665
or X&Y.

NOTE Confidence: 0.84919316

5933d691-a4bf-422a-bd77-e7d9d332fc98
00:31:38.950 --> 00:31:42.064
And then because of the
distributive property you can

NOTE Confidence: 0.79734296

a364cd76-5bc6-4e84-8255-6c9999a6cb78
00:31:42.064 --> 00:31:47.040
extract X. Extract X the
remaining term become one or Y.

NOTE Confidence: 0.82584363

623c9b56-5e77-406c-a169-f11e522c0a46
00:31:48.460 --> 00:31:54.235
So if you distribute again, it
becomes X and one or X and or Y.

NOTE Confidence: 0.82584363

c36c1d4f-4686-4b39-b1aa-0ba9361bf507
00:31:54.235 --> 00:31:56.545
So is the same as this.

NOTE Confidence: 0.8322819

9cb5e4fc-2507-49b6-a929-38b2253c8567
00:31:58.130 --> 00:32:02.771
You know I have so and then you
based on the previous theorem

NOTE Confidence: 0.8322819

07d16cc5-d51f-4fe3-b670-d3eac159248e
00:32:02.771 --> 00:32:06.698
already knew that one or
anything. The result is 1. So

NOTE Confidence: 0.8322819

316a44bf-f822-4965-bce7-36a1fb483639
00:32:06.698 --> 00:32:10.625
based on the previous theorem,
can simply say that the result

NOTE Confidence: 0.8322819

4f29085f-8f60-4c3d-a9fc-a61f082c7be1
00:32:10.625 --> 00:32:14.909
of the inside the Panthers is 1,
so it becomes and one.

NOTE Confidence: 0.8012657

e3c591e3-eb8d-404c-a21e-1d431f1505b4
00:32:15.670 --> 00:32:18.730
And then one is the
identity element, so anding

NOTE Confidence: 0.8012657

1e64492a-a5bc-4f2c-a204-2c91c22831b9
00:32:18.730 --> 00:32:21.790
with one having impact. So
it's equal to X.

NOTE Confidence: 0.87014633

1fe70210-e018-4f07-b076-8b915d704f78
00:32:23.430 --> 00:32:28.542
This is called absorption theory
and is very important in the I

NOTE Confidence: 0.77581733

c16578ff-a716-457a-ad34-20d8b096c353
00:32:28.542 --> 00:32:34.380
mean practice. so so

NOTE Confidence: 0.77581733

9fa80398-24b9-4564-b3cd-886853f7d0a5
00:32:34.380 --> 00:32:39.736
far. You see that how by proving
sum theorem we can help with

NOTE Confidence: 0.77581733

fac7b3ed-95e3-4354-9d0c-7ec5435204eb
00:32:39.736 --> 00:32:43.444
reducing the number of Gates.
Another theorem is called

NOTE Confidence: 0.77581733

a173dc8e-a466-472f-b41a-7c7d26c8b370
00:32:43.444 --> 00:32:47.564
duality. Before introducing the
duality theorem we have to say

NOTE Confidence: 0.77581733

1cda4e49-2d63-472b-8a97-a939d3f69879
00:32:47.564 --> 00:32:49.212
what is the duality.

NOTE Confidence: 0.6359766

896f3144-9b39-409b-b70f-cf94cd790029
00:32:50.510 --> 00:32:52.250
Duality is defined like this.

NOTE Confidence: 0.8609847

4adf58e5-5e21-4c19-bdd1-632614ec7868
00:32:53.200 --> 00:32:57.529
Any Boolean function for any
boolean expression or equation.

NOTE Confidence: 0.67931384

b14abed5-1de8-425c-ae68-968d0471ec06
00:32:58.130 --> 00:32:59.579
can have dual.

NOTE Confidence: 0.8234047

e4cb2512-81b3-478f-a493-1d28606f50b4
00:33:00.200 --> 00:33:04.100
This on this you have to simply
interchange the OR gates with

NOTE Confidence: 0.8234047

2d0295da-a08e-44f0-b41d-ce1a53b42cc4
00:33:04.100 --> 00:33:08.650
and gates and and gates with or
get so whenever you see or make

NOTE Confidence: 0.8234047

54f19d6f-d762-4066-92dc-2ca404f5608f
00:33:08.650 --> 00:33:12.875
it and. Whenever you see an and make
it or. Also you have to

NOTE Confidence: 0.8234047

5030e111-d735-4368-9c5d-7ac8917af79d
00:33:12.875 --> 00:33:16.450
interchange this zero and ones
whenever you see one you make

NOTE Confidence: 0.82208747

07c1a17b-7ade-46dd-8d47-2d01eb25cabc
00:33:16.450 --> 00:33:19.804
it 0. Whenever you see
zero, you make it 1.

NOTE Confidence: 0.790092

e0936893-710a-4e0c-ba1b-7403bd2d2820
00:33:20.980 --> 00:33:24.930
 pay attention the dual of
Boolean function doesn't

NOTE Confidence: 0.790092

1a546eb0-6988-4034-aa8a-262b813e9600
00:33:24.930 --> 00:33:30.065
mean that it is equal to F, so
the dual is and totally

NOTE Confidence: 0.790092

6d42567e-f3ce-4429-a3a6-bd7b58ee99da
00:33:30.065 --> 00:33:35.200
different equation and we build
the dual of the F like this. So

NOTE Confidence: 0.790092

11acb075-c4df-4b90-9dbc-88bcdb82492d
00:33:35.200 --> 00:33:39.940
let's see some example. For
instance the dual X or one. So X

NOTE Confidence: 0.790092

d66d01b8-5dc5-42e1-ba96-bd8b6002910a
00:33:39.940 --> 00:33:46.260
is same as X or becomes and and
one becomes 0. So the dual of X

NOTE Confidence: 0.790092

a63d9b63-1a19-4341-9a95-746e3a5e7e60
00:33:46.260 --> 00:33:48.630
or one is X and 0.

NOTE Confidence: 0.77591103

7412635f-a26f-47f7-be71-8435dca5bc9f
00:33:49.710 --> 00:33:55.296
dual of this one ,X or X'
X and x' is the same but Or

NOTE Confidence: 0.77591103

675591a3-804e-4f82-a0a7-f69dec2afa82
00:33:55.296 --> 00:34:01.281
becomes and so X or X' if you dual
 it, it becomes X and X'.

NOTE Confidence: 0.7601687

61d978ec-f02d-48db-9c5d-ee600c7f3359
00:34:03.150 --> 00:34:10.248
dual of X or X X or
Y bar again X the same? Y the

NOTE Confidence: 0.7601687

26d6e717-6c65-46d8-b788-c507f489edb6
00:34:10.248 --> 00:34:16.839
same or becomes and not the same
So the only interchanges are and

NOTE Confidence: 0.7601687

66d45e30-02f5-4803-a7c0-6d1a4c7f0f7e
00:34:16.839 --> 00:34:19.881
with or an zero with one

NOTE Confidence: 0.731644

e243bc4d-0c7f-4093-a924-9e20c6bf4d25
00:34:22.670 --> 00:34:28.034
The use of duality. Here's the
duality theorem. It says that if

NOTE Confidence: 0.731644

c9b50ab1-3371-432c-a55f-9377404052bd
00:34:28.034 --> 00:34:33.398
you could prove some postulate, some
theory based on a boolean, if

NOTE Confidence: 0.731644

acd2b67d-94d9-42b2-ac3c-8403ce494e56
00:34:33.398 --> 00:34:39.209
you prove a theorem for function
F, or if you already have the

NOTE Confidence: 0.731644

4a72169b-9ee8-403e-904b-dea2b5985dc6
00:34:39.209 --> 00:34:44.573
postulate that you accept as the
true for a boolean function F.

NOTE Confidence: 0.8491678

0d11469c-bbdc-49ef-a781-75169ea94497
00:34:45.480 --> 00:34:49.330
The same is true for the dual
of F , so if there is a postulate

NOTE Confidence: 0.79079056

e141e17e-2c09-43b3-b151-122ef3607ceb
00:34:49.330 --> 00:34:53.487
for F. Same postulate that exists
for the dual of F.

NOTE Confidence: 0.8012462

65da765c-3851-4c45-b487-441a0f4b5684
00:34:54.090 --> 00:34:58.270
If you have proved a
theorem for F, same is

NOTE Confidence: 0.8012462

3a91f22f-dc00-4bb3-9d45-ff536933a969
00:34:58.270 --> 00:35:00.778
true for the dual of F.

NOTE Confidence: 0.89849544

fdd823d5-1b00-4bc6-a045-158044bcff3f
00:35:01.810 --> 00:35:07.101
So this is very helping as we
can see in this example these

NOTE Confidence: 0.86587363

622097f1-e937-43d2-b79a-a6c2969be602
00:35:07.101 --> 00:35:11.805
examples. Since you already knew
you already have the proof for X or

NOTE Confidence: 0.86587363

073a8c4a-2c18-4b9f-b023-55a80f26fd27
00:35:11.805 --> 00:35:13.380
one is equal to 1.

NOTE Confidence: 0.8215511

8bd5d704-9ebd-4c43-8f57-47decb5a8ac6
00:35:14.190 --> 00:35:18.278
So you are given a question that
you are asked to prove X and

NOTE Confidence: 0.8215511

6f872b27-6af9-4a20-bf2f-6541e8ff495c
00:35:18.278 --> 00:35:22.366
zero is equal to 0. You could
say that we already prove it for

NOTE Confidence: 0.8215511

337059fd-7a5b-4948-9359-1310575eb991
00:35:22.366 --> 00:35:26.162
dual of itself. Do all of the
discussion 'cause they do all of

NOTE Confidence: 0.8215511

ca5cd705-4cf9-4443-9418-f583863cce41
00:35:26.162 --> 00:35:27.330
this expression is this.

NOTE Confidence: 0.8443432

df524d80-5c1c-4413-b040-d7c8562d4c0c
00:35:28.520 --> 00:35:33.935
X, or one if you make it, do
what it becomes X and 0 0. Make it

NOTE Confidence: 0.8443432

816268f0-a974-48ad-b013-0f19bb4f833a
00:35:33.935 --> 00:35:35.018
all comes zero.

NOTE Confidence: 0.7998438

ec812623-3de1-407a-ab9c-b6bed4da9f47
00:35:35.680 --> 00:35:39.931
One becomes 0, so the dual of
this expression is this to you

NOTE Confidence: 0.7998438

e39f8ac3-dfb7-4bb5-91a9-b82e1983c9b9
00:35:39.931 --> 00:35:41.566
already proved the theorem for

NOTE Confidence: 0.85697436

d29f75fa-84e8-4a0f-acc7-efe79de71c24
00:35:41.566 --> 00:35:46.391
this. You could say that it is
true also for the dual of that

NOTE Confidence: 0.85697436

bab31cb0-12c9-43d6-a11d-b68f3a17edc0
00:35:46.391 --> 00:35:47.579
theorem, which is this.

NOTE Confidence: 0.77928

cfa98537-5b6d-421a-acc1-64631fca29fc
00:35:49.900 --> 00:35:54.232
What are these saw the postulate
of complement for X or X' is

NOTE Confidence: 0.77928

28b4dba8-bab5-4859-9e5d-51555b61e7e5
00:35:54.232 --> 00:35:59.647
equal to 1. So for the dual of
this which is X&X Bar called to

NOTE Confidence: 0.77928

c94c3836-8b30-4d1c-a143-3fe316deb7ec
00:35:59.647 --> 00:36:01.813
0, so that is still true.

NOTE Confidence: 0.8276648

d0b5b2c0-c4ad-46ef-b376-9b38a31867c4
00:36:04.460 --> 00:36:08.336
Also for this one, yeah the
third one is, I mean familiar

NOTE Confidence: 0.8276648

9663cf37-0c35-4f70-bd66-9d3be1e61093
00:36:08.336 --> 00:36:11.566
to you because of these are
the De Morgan's law?

NOTE Confidence: 0.6998279

8eee6b3a-bacf-40d8-ab62-5d64b04fe0ae
00:36:13.350 --> 00:36:18.586
This is the first law of de morgan X
or Y bar? If you bring did not

NOTE Confidence: 0.6998279

840fe7bf-d406-4f31-bc03-0030199c0ca4
00:36:18.586 --> 00:36:21.952
inside the parentheses it
becomes X' and Y bar?

NOTE Confidence: 0.7879845

ad90d80d-91f4-4854-b0f6-7f3370346ce2
00:36:22.530 --> 00:36:26.127
So if you could prove this
using for instance, truth table an

NOTE Confidence: 0.7879845

53eeb50c-c9a3-4e87-aa8f-de83d1cf6b41
00:36:26.127 --> 00:36:30.705
if you are asked to prove this
second law, which is X&Y bar is

NOTE Confidence: 0.7879845

51314ad6-980c-494b-87e3-377c19f1c584
00:36:30.705 --> 00:36:33.975
equal to bring the not inside
the parenthesis, becomes X'

NOTE Confidence: 0.7879845

aecfc506-1302-4cdc-b742-4b0c9b23f002
00:36:33.975 --> 00:36:37.899
or Y'. If you're asked to
prove the right, but you could

NOTE Confidence: 0.7879845

58475397-7cd9-4e15-9f98-2e74df6d0740
00:36:37.899 --> 00:36:42.150
say that the right side is that
dual off the left side, you

NOTE Confidence: 0.7879845

bed50398-cb9d-40dd-a850-355c0b8171e9
00:36:42.150 --> 00:36:46.401
already proved the left side,
so it is true for the dual of

NOTE Confidence: 0.7879845

8d2117b0-fa9c-498f-b8b8-350db797039e
00:36:46.401 --> 00:36:47.382
its That expression.

NOTE Confidence: 0.8050192

55ce810f-5de0-46b4-8ba6-7a45710965c4
00:36:50.100 --> 00:36:53.763
Stop duality helps us too
sometimes. If it is hard to

NOTE Confidence: 0.8050192

91a8c99b-06d2-48a2-b0d2-ba17c2c91e31
00:36:53.763 --> 00:36:58.758
prove a theorem I we can make it
dual and then prove the dual

NOTE Confidence: 0.8050192

2cd9981d-e6ff-4d6f-b6df-a920e7ff63ee
00:36:58.758 --> 00:37:02.754
of that expression an say that
because they dual of the

NOTE Confidence: 0.6658925

9ca471ac-e2e8-488d-a245-a5356f8c0557
00:37:02.754 --> 00:37:06.490
expression is true. The theorem
is also true.

NOTE Confidence: 0.70553833

c9aff869-062e-491b-8d4c-6b52dc061d99
00:37:08.500 --> 00:37:14.638
Yeah, so that's your duality.
To prove this theory.

NOTE Confidence: 0.8686528

bf56e35e-b8cf-48f5-8d40-72abdd60eb45
00:37:15.700 --> 00:37:17.932
This is absorption, but for the

NOTE Confidence: 0.81044275

9c1633df-4821-4d80-bcb0-4bbde6838b60
00:37:17.932 --> 00:37:22.861
and operator. So in the OR
operator, let's back to the

NOTE Confidence: 0.81044275

b88ca026-eaec-49ee-8fc5-317d030b2446
00:37:22.861 --> 00:37:26.810
absorption for or we said X or X&Y
is equal to X.

NOTE Confidence: 0.83871925

7c0e51a9-17d1-412a-9250-b81ed1a76caf
00:37:28.940 --> 00:37:34.085
This one is said that X and X or Y
is equal to X. So basically

NOTE Confidence: 0.83871925

3b0d4840-f1d3-453f-9296-f974d45e6203
00:37:34.085 --> 00:37:38.887
whenever X and with other terms
an all the other terms has X in

NOTE Confidence: 0.83871925

e0aaea93-e815-4919-9d2f-33c63c9d5b23
00:37:38.887 --> 00:37:39.916
the OR operator.

NOTE Confidence: 0.8720045

90373b1e-41cf-4c64-9721-3e96c04b9502
00:37:40.490 --> 00:37:43.262
Thought we could simply say
that all the other terms can

NOTE Confidence: 0.8720045

9145f48f-ed13-4ebd-b029-2e3688663506
00:37:43.262 --> 00:37:44.270
be absorbed to X.

NOTE Confidence: 0.74785155

c9c46e12-4125-4e7c-9030-e95ed90cd5fe
00:37:45.760 --> 00:37:51.436
In order to prove this, we could
simply say that this theorem,

NOTE Confidence: 0.74785155

e27558cd-deb3-4f8c-96d2-beb1bc58f395
00:37:51.436 --> 00:37:54.747
theorem it, dual of this one.

NOTE Confidence: 0.75870043

24d3cf98-9b92-430b-8e5c-11abd975a635
00:37:55.460 --> 00:38:01.032
But if you daul X becomes
X X&Y is the same and y the

NOTE Confidence: 0.823109

356cd7a2-feb7-4304-8a20-966d4f17c010
00:38:01.032 --> 00:38:06.104
same? And become or so this
and becomes OR and this

NOTE Confidence: 0.823109

6b8a6e93-8ecb-45de-9316-21d8faf87613
00:38:06.104 --> 00:38:07.412
Or becomes and.

NOTE Confidence: 0.7411

6bc02171-eb08-4ecb-8f82-e6da90368e2b
00:38:09.080 --> 00:38:14.576
so the dual of this new theorem
is the theorem will prove.

NOTE Confidence: 0.8180708

f627e4e4-f11d-4d2e-81e8-9cb4087b9aed
00:38:15.200 --> 00:38:19.148
So we said that we already
proved the theorem for the dual,

NOTE Confidence: 0.8180708

70cbb947-d4b5-487b-8275-4f08ca46db9e
00:38:19.148 --> 00:38:23.754
so it is also true for the dual
of this, which is this one?

NOTE Confidence: 0.8353077

4d7c2ecf-f13b-4d3e-8954-66fe70ab2905
00:38:26.650 --> 00:38:30.922
So this is one advantage of
duality, so again, as you can

NOTE Confidence: 0.8353077

f75584b7-d629-4e5e-a848-d02806533ebd
00:38:30.922 --> 00:38:35.906
see here, in the left side you
have one and gate and one or

NOTE Confidence: 0.8353077

16114040-3205-441c-8471-2d8dda2a5b26
00:38:35.906 --> 00:38:40.534
gate, but in the right side you
don't have any gate, so it's

NOTE Confidence: 0.8353077

24a0c091-2ffd-4be5-ad7f-ee9cef6b4f56
00:38:40.534 --> 00:38:43.382
kind of a simplification using
the Boolean theory.

NOTE Confidence: 0.80971557

aebe35ec-6e3e-4da8-a5c1-e8263bd867fe
00:38:45.650 --> 00:38:50.150
we already knew how to prove
true stable, so.

NOTE Confidence: 0.8720212

c448af6b-daaf-43e4-8531-e24bb48c0819
00:38:51.650 --> 00:38:53.974
It's not a need to cover this.

NOTE Confidence: 0.87670004

4f404a16-27a5-481d-9bfe-bfb85c03082e
00:38:54.900 --> 00:38:59.069
So there are two ways to prove
any boolean expression or

NOTE Confidence: 0.87670004

cea89e5a-f414-41a8-bd29-2d990ccefd29
00:38:59.069 --> 00:39:03.238
equality or inequality. One is
the truth table, one is the.

NOTE Confidence: 0.7771712

42d846eb-4210-49ff-88cd-60f7b3fcf54e
00:39:04.240 --> 00:39:07.940
postulate using the Boolean
algebra postulate. It's an other

NOTE Confidence: 0.7771712

f61eefd5-b94f-4ffe-b6a2-6c5b80db6faf
00:39:07.940 --> 00:39:09.420
proved theorems and duality.

NOTE Confidence: 0.86836976

ff423efc-8259-4605-9fe7-242f939adc19
00:39:11.900 --> 00:39:17.564
So we said all of these math
material just for this task

NOTE Confidence: 0.86836976

0d96a170-53bb-4723-8c66-9bb87cecac63
00:39:17.564 --> 00:39:22.756
minimization. So let's do that.
For some samples, you are given

NOTE Confidence: 0.86836976

d5b5f4ec-a3ff-40be-ad8a-93616b489c76
00:39:22.756 --> 00:39:25.116
a boolean function like this.

NOTE Confidence: 0.78180397

2ac87726-105a-4556-bacd-260af0558ecc
00:39:26.020 --> 00:39:29.836
So the first is the
mid term of four.

NOTE Confidence: 0.84238976

1b588ff2-9cb6-4705-b84a-b921e974da3a
00:39:31.410 --> 00:39:38.242
7 = 111 this is minterm
6 = 110 and this is

NOTE Confidence: 0.8564384

c7b8b107-311b-438e-a469-76087a4d3ccc
00:39:38.242 --> 00:39:43.902
minterm 5 = 101. So if you
are given this Boolean function

NOTE Confidence: 0.8564384

719404fd-c7d7-43a3-8b31-50800b97847d
00:39:43.902 --> 00:39:47.842
and for designing this function
in logic circuits you need.

NOTE Confidence: 0.837047

7ff30ce8-661a-4821-93b1-186843a2e342
00:39:48.490 --> 00:39:52.954
One AND here one AND here
one AND here one AND here

NOTE Confidence: 0.837047

12492a7a-cfa3-4b61-8821-7540162b84b4
00:39:52.954 --> 00:39:57.046
so you need 4 ANDs and each AND
must have 3 inputs.

NOTE Confidence: 0.914402

584d76ec-3175-4f96-88b3-24b1d60bfbaa
00:39:58.810 --> 00:40:00.250
Finally, you have to OR the

NOTE Confidence: 0.86257607

c61add8d-ac9e-447a-b598-a311873b51b6
00:40:00.320 --> 00:40:05.836
result, so 1234 you put the four
result into one OR gate, so you

NOTE Confidence: 0.86257607

b208e593-893c-4780-92fb-321fc208438f
00:40:05.836 --> 00:40:10.958
need one 4-input-OR, so in
total you need 5 gates. So let's

NOTE Confidence: 0.86257607

f2a76234-10c7-4ab9-8d4f-ff3c20789de0
00:40:10.958 --> 00:40:15.292
see. Is it possible to minimize
it using the Boolean algebra?

NOTE Confidence: 0.8622725

70fb9b28-d394-4ad9-b00e-871496a73076
00:40:17.080 --> 00:40:23.080
So as you can see in all the
terms you can see, Z Binary

NOTE Confidence: 0.8622725

412ae5c9-c1c9-451b-afb6-8d9b7c269e19
00:40:23.080 --> 00:40:24.280
variable is repeated.

NOTE Confidence: 0.8883422

16ebdf1f-06e8-4f1f-81bd-4f9e525151e3
00:40:25.030 --> 00:40:29.590
So it's kind of a Z is
distributed over all the other

NOTE Confidence: 0.8883422

7a2df18d-419d-4a84-9766-6bb285c2d47e
00:40:29.590 --> 00:40:33.390
terms, so you can simply use
the distributive property, you

NOTE Confidence: 0.8883422

45bae509-6cf6-4598-8988-e983bdaef1c2
00:40:33.390 --> 00:40:34.530
can extract the Z

NOTE Confidence: 0.7402385

711a756f-2eaa-48cb-93e7-5ddfd74bfccd
00:40:36.010 --> 00:40:40.970
If you extract the Z,
other terms becomes inside

NOTE Confidence: 0.7402385

d0bd4ec6-1ae9-491b-b367-51bd2cdab69d
00:40:40.970 --> 00:40:45.434
the parentheses. So Z
distributed over the OR

NOTE Confidence: 0.7402385

cff4d24d-86fd-4229-ac36-0a068d5bf667
00:40:45.434 --> 00:40:51.386
gate. So the other terms
becomes Y-bar X Bar, YX, Y X-bar and

NOTE Confidence: 0.7402385

c3b2e896-fc26-4990-a9f7-f3fb89972872
00:40:51.386 --> 00:40:51.882
Y-bar X.

NOTE Confidence: 0.8573311

a7bdbd94-ad26-4447-8e2a-8863e0dc473c
00:40:53.310 --> 00:40:58.410
And then inside the parenthesis
you also can do another

NOTE Confidence: 0.8573311

2b6d4211-c19b-4f25-b1c0-bf0b29c3bb33
00:40:58.410 --> 00:41:00.960
distributor. You can also use

NOTE Confidence: 0.72581154

043bef28-be20-445a-8dac-029a3033f4a0
00:41:00.960 --> 00:41:06.444
another distributor. You can use
the distributive property

NOTE Confidence: 0.72581154

11965844-e5af-4fdd-ad59-12c795a75faf
00:41:06.444 --> 00:41:08.820
the 2nd way.

NOTE Confidence: 0.8759655

9f998703-4e9c-4150-9823-696f357f58df
00:41:10.000 --> 00:41:14.940
So as you can see here, the
Y-bar is repeated in these

NOTE Confidence: 0.8759655

ec4b4ef3-78b3-4822-87fe-b4256420c9a7
00:41:14.940 --> 00:41:15.700
two terms.

NOTE Confidence: 0.805188

e6fe48e5-79c5-47bf-9faa-ddbc253c709a
00:41:16.870 --> 00:41:20.531
So again using the
distributive property you

NOTE Confidence: 0.805188

a7921467-96b6-4148-b3d2-5840b8224f24
00:41:20.531 --> 00:41:22.623
can extract Y-bar.

NOTE Confidence: 0.8134565

d7b13acd-71ec-429c-996d-1e6baa5333dd
00:41:24.440 --> 00:41:30.278
So the result is this. If you
extract Y-bar, and now you can

NOTE Confidence: 0.8134565

e367ecd3-f3af-4d4f-b032-7b2dabad51bf
00:41:30.278 --> 00:41:34.865
see inside this parentheses when
you extract the Y-bar, you

NOTE Confidence: 0.8134565

85dc8e27-67ec-4719-93c1-ea69e4ac73f3
00:41:34.865 --> 00:41:39.035
have the complement property
Y-bar or X. So you already

NOTE Confidence: 0.8134565

38f60387-75b7-4ad5-a160-45031d7d0e71
00:41:39.035 --> 00:41:43.622
knew that when you apply OR on
the complements of Binary

NOTE Confidence: 0.8134565

b9250ef4-85f0-4270-ac14-166356b741b3
00:41:43.622 --> 00:41:47.792
Variables, the result is gonna be
identity elements of the other

NOTE Confidence: 0.8134565

2a1a8a8a-fae0-4464-87ab-35d9dd96e523
00:41:47.792 --> 00:41:51.962
operator. Here is the identity
element of OR, the other

NOTE Confidence: 0.8134565

4395d6ea-17de-48ab-9674-a41c9f8d0c4d
00:41:51.962 --> 00:41:54.047
operator is 1, so X.

NOTE Confidence: 0.8327656

b85be301-52df-4d86-8413-5fe08231d66d
00:41:54.680 --> 00:41:56.976
bar or X is equal to 1.

NOTE Confidence: 0.8804612

b62b8b9c-5685-48db-a94c-24beef758350
00:41:58.340 --> 00:42:01.976
This is the complement property.
We can reduce it to 1 and

NOTE Confidence: 0.8804612

b0833ca6-c8a2-408e-a053-d2fc9fe91385
00:42:01.976 --> 00:42:05.309
then one is the identity
element. You can simply drop it.

NOTE Confidence: 0.9119853

eefb7e64-908a-4a52-ba83-a6c7b61aaa52
00:42:08.420 --> 00:42:10.359
The same is with the other two

NOTE Confidence: 0.85551053

c61dd7f5-833b-4168-b3c2-332634b60fec
00:42:10.359 --> 00:42:14.996
terms here. So in these two you
can extract Y.

NOTE Confidence: 0.82479805

d01f0856-2152-4e77-a029-49c250855111
00:42:15.950 --> 00:42:20.746
And after that, inside the
parentheses you have X or X-bar, which

NOTE Confidence: 0.82479805

d38943bd-6a86-47fd-91e8-69800ea06921
00:42:20.746 --> 00:42:22.926
is the complement property, equal

NOTE Confidence: 0.85478085

a42a3132-ad8e-4d73-bce5-e56763a574ae
00:42:22.926 --> 00:42:28.185
to 1. We can simply drop one
because its the identity element or

NOTE Confidence: 0.85478085

e258cbb6-a801-485f-9cc0-c6dd662f8b3d
00:42:28.185 --> 00:42:29.400
the AND operator.

NOTE Confidence: 0.8220311

2d6a611c-d2a0-4438-946e-3b9d5c392219
00:42:30.490 --> 00:42:33.274
And then you see that
the inside the

NOTE Confidence: 0.8220311

1887a3b1-6998-4c3f-89cd-a3ef77646b94
00:42:33.274 --> 00:42:35.362
parenthesis, you have
Y-bar OR Y.

NOTE Confidence: 0.8281434

53e1da49-6bcb-42f4-9bc7-0eb188f49689
00:42:36.420 --> 00:42:40.860
Again, the complement property
and then the result is the

NOTE Confidence: 0.8281434

a2c66a6a-a8ad-4ea6-af0b-20bd3e697885
00:42:40.860 --> 00:42:46.632
identity element of the AND and
you can simply drop the one for the

NOTE Confidence: 0.8281434

2e74725c-4bd9-4dd1-961a-4145a153e332
00:42:46.632 --> 00:42:51.516
identity element of the AND
operator so you can see through

NOTE Confidence: 0.8281434

0cfb602d-4013-4ad4-b9cc-b1f744e6fe7e
00:42:51.516 --> 00:42:56.400
these slides that we use the
distributive possible and we use

NOTE Confidence: 0.8281434

c6c44f3a-3d19-4e56-8728-6be653398c02
00:42:56.400 --> 00:43:01.284
the complement postulate in the
Boolean algebra to reduce the

NOTE Confidence: 0.8281434

bae44f92-a61e-4a71-b2d2-c6a70f30bbc6
00:43:01.284 --> 00:43:03.504
Boolean function from 5 gates to

NOTE Confidence: 0.7712392

2dee721c-61f5-4b73-9b00-c39a40cacb3a
00:43:04.670 --> 00:43:05.650
Zero gates.

NOTE Confidence: 0.7865215

318bd3e6-6adf-4d27-ba60-ba46c4e50bfa
00:43:07.520 --> 00:43:13.145
So at first F is equal to sum of
four minterms, but in the end we

NOTE Confidence: 0.7865215

6b9ad610-8414-4b14-b8e3-367b2c8017f2
00:43:13.145 --> 00:43:17.270
minimize it to just binary
variable Z, so there's no need

NOTE Confidence: 0.7865215

d18c69f8-8ba8-4c59-a2f6-fa32fd5d4b78
00:43:17.270 --> 00:43:18.395
for the gate.

NOTE Confidence: 0.8077405

1f88394a-7c07-48c6-87f2-49496431baea
00:43:21.080 --> 00:43:24.384
You could do the minimization
applying different postulates.

NOTE Confidence: 0.8077405

1b84e451-5235-46c3-a696-a82297359d67
00:43:24.384 --> 00:43:29.753
This is the exact function
and result just in the

NOTE Confidence: 0.8077405

13ca9de5-569d-4366-b9a3-528a2147be6c
00:43:29.753 --> 00:43:34.709
previous slide, but you could
say that in these two terms the

NOTE Confidence: 0.8077405

7b1d6b1e-c151-4e6a-a08a-3c277aef01e0
00:43:34.709 --> 00:43:38.839
Z Y-bar is repeated so you can
extract Z Y-bar

NOTE Confidence: 0.80905086

bc7c33a5-b029-43cf-b264-ca7e8045ce9a
00:43:40.310 --> 00:43:45.348
and then the remaining
part is X-bar or X, which

NOTE Confidence: 0.80905086

ef05b090-d972-461d-9452-6891672448fc
00:43:45.348 --> 00:43:50.844
is equal to 1, also for the
other term, Z Y is repeated, so 

NOTE Confidence: 0.80905086

51d97276-6be7-41a2-af53-382922d1ecce
00:43:50.844 --> 00:43:53.134
you can extract the Z Y.

NOTE Confidence: 0.8710095

9d1ca8ff-2294-4c2f-9b79-15c44a6bab6d
00:43:54.940 --> 00:43:59.747
So in both the parentheses you
see the complement property, so

NOTE Confidence: 0.8710095

08386bf1-eb85-4a94-accf-cde1cd683e35
00:43:59.747 --> 00:44:01.058
both becomes one.

NOTE Confidence: 0.859714

0fcf869c-e87d-4bfe-b263-08dd0ae297ce
00:44:01.670 --> 00:44:06.103
And you can simply drop one,
ending with one doesn't have any

NOTE Confidence: 0.8281487

a12216cb-c15f-470e-847b-0557cd1dd19b
00:44:06.103 --> 00:44:10.460
influence. And here is the
result and you can see that

NOTE Confidence: 0.8281487

9232df78-b242-48ba-a600-9c8a04d46b70
00:44:10.460 --> 00:44:11.480
the Z is repeated.

NOTE Confidence: 0.79172266

5b307eb7-56dd-4e31-a02f-22926a1d8051
00:44:12.110 --> 00:44:17.294
So you can extract the Z inside
the parentheses you have. Y

NOTE Confidence: 0.79172266

0f3e3971-92fa-452b-9dbf-e8f3d1466a58
00:44:17.294 --> 00:44:22.478
bar OR Y is equal to 1. Same
result. So, there are different ways

NOTE Confidence: 0.79172266

a382b0aa-fb16-4a47-b390-cda476560351
00:44:22.478 --> 00:44:26.798
of minimizing the Boolean
function based on apply the

NOTE Confidence: 0.8037604

316dffcc-a8c9-477a-be94-66c5ee575f95
00:44:26.798 --> 00:44:31.440
postulates. So, but again,
you can see that it helps us

NOTE Confidence: 0.8037604

129ee51a-4374-4312-a6ce-27472ec225ca
00:44:31.440 --> 00:44:33.936
with reaching the number of
gates to 0.

NOTE Confidence: 0.90152204

5956d645-2d0c-4441-9808-a9a1144a6468
00:44:36.980 --> 00:44:38.440
Another example is this.

NOTE Confidence: 0.91231024

d30ed56f-8f06-4072-a6ad-16598a71c9fc
00:44:39.110 --> 00:44:41.336
If you are given this Boolean function.

NOTE Confidence: 0.804226

343eec7b-40e6-4fd9-95cc-275d5b754b77
00:44:42.830 --> 00:44:49.742
Here, this is the minterm 110,
which is 6. This is a.

NOTE Confidence: 0.88281226

8293a774-dd2d-432a-bf64-d345429a2074
00:44:51.480 --> 00:44:53.545
I guess there's a, let me see.

NOTE Confidence: 0.89220357

3cb47786-0f66-48fc-b684-228b6984f7da
00:44:57.130 --> 00:44:59.636
The first one let me fix this.

NOTE Confidence: 0.86223465

7667911f-5edb-4181-91b4-31978ba2268b
00:45:01.840 --> 00:45:05.719
Sorry about that. This one must
be like this.

NOTE Confidence: 0.80812544

9c95d66e-5b28-4661-bf40-2a3331d7c5a4
00:45:11.360 --> 00:45:13.350
Yeah. It's back.

NOTE Confidence: 0.7854273

54b655ab-e4a3-4376-8d58-9a1b27f587ee
00:45:16.640 --> 00:45:23.340
So here you see another
example. This is the minterm

NOTE Confidence: 0.7854273

e732f921-d583-4aa2-950d-ad5159b6b1bb
00:45:23.340 --> 00:45:30.040
for Z Y-bar X-bar, which
is the four = 110 and

NOTE Confidence: 0.7854273

153d1d05-5329-4bc1-bb77-138a224b611f
00:45:30.040 --> 00:45:33.390
this is the minterm 1 = 001.

NOTE Confidence: 0.77194977

6a4bc594-a692-41f1-9ce2-a53e079dd4a6
00:45:34.450 --> 00:45:39.367
Here for this Boolean
function you need 1 2 3 and

NOTE Confidence: 0.77194977

e456bcf4-4495-4ac4-920f-0766ac814a2a
00:45:39.367 --> 00:45:40.708
one final or.

NOTE Confidence: 0.84536505

960cfe56-d2c8-4388-9f82-17a11febc8eb
00:45:41.370 --> 00:45:47.454
So let's see, can we reduce the
number of cases using the

NOTE Confidence: 0.8652112

c74a3e14-9ae2-47e9-88e2-8bd6f39ea935
00:45:47.454 --> 00:45:53.026
Boolean algebra? So as you can
see here, in the first 2 terms

NOTE Confidence: 0.8652112

f8c8a50b-6d45-4fa1-928a-d1055cedf69c
00:45:53.026 --> 00:45:57.730
you see that the Z and X-bar is
repeated, so you can extract it

NOTE Confidence: 0.8652112

daae43da-413f-4d3c-a692-f52ff9aba4fd
00:45:57.730 --> 00:46:00.418
because of the distributive
property of Boolean algebra.

NOTE Confidence: 0.78583586

c71aa219-5f38-4406-b669-e4e17adeae98
00:46:01.790 --> 00:46:07.478
So the remainder is Y-bar or Y
complement property of the

NOTE Confidence: 0.78583586

c13520df-1998-4dee-9079-240a89ccfd23
00:46:07.478 --> 00:46:12.692
Boolean Algebra, which makes it
one, and then you can simply

NOTE Confidence: 0.78583586

688a7cf6-88d8-4ba4-9e82-925522e53f2e
00:46:12.692 --> 00:46:18.380
drop one because of identity
property of AND and as a result

NOTE Confidence: 0.78583586

dfbd747e-5915-4efc-b6e9-3e29c83ad6a2
00:46:18.380 --> 00:46:23.120
you have are minimized the
Boolean function from 4 gates,

NOTE Confidence: 0.78583586

ff129d40-9d6a-43da-b735-cf2b1a6dedbc
00:46:23.120 --> 00:46:28.808
to 1,2,3 gates. One AND here, one AND
here and one final OR.

NOTE Confidence: 0.8966773

c7bc0bbb-2880-4e5f-85b7-35cb74a51781
00:46:29.420 --> 00:46:33.930
And also you could reduce the
number of inputs, you already

NOTE Confidence: 0.80088335

98ef4cf7-b074-4107-8cf1-f76e3ec65bf2
00:46:33.930 --> 00:46:39.240
need three input ANDs but here
one of the ANDs, you only need

NOTE Confidence: 0.80088335

895a19bd-ddb4-4aa7-8ec0-8987d921db46
00:46:39.240 --> 00:46:43.145
two inputs for the OR. You
already need three inputs over

NOTE Confidence: 0.80088335

7956dc6a-ab77-4c7d-810a-1ec80cbf93dd
00:46:43.145 --> 00:46:45.630
here for the OR, you need to

NOTE Confidence: 0.81811273

31f22bd6-a071-4655-b3a9-2346bed1ff53
00:46:45.630 --> 00:46:51.655
2 inputs. So not only do you
reduce the number of gates to

NOTE Confidence: 0.7412589

640de558-b23e-4011-965a-59ed35b84143
00:46:52.910 --> 00:46:56.022
Three gates, it
could reduce the number

NOTE Confidence: 0.7412589

d16c86d7-64e4-4077-a4f2-76a82348967f
00:46:56.022 --> 00:46:57.967
of inputs to the gate.

NOTE Confidence: 0.7102087

2003f410-86ba-4477-96ab-7e2de40cd060
00:47:01.130 --> 00:47:07.048
So this is the way we
minimize the Boolean function

NOTE Confidence: 0.7102087

41dc4cd6-0386-42c6-93f8-a11407ab7710
00:47:07.048 --> 00:47:10.814
using the algebra,

NOTE Confidence: 0.7336533

2802f9c4-f969-4205-998f-fe898f80cc4f
00:47:12.450 --> 00:47:16.032
Boolean algebra postulates or
we can say we algebraically

NOTE Confidence: 0.7336533

4c0db56e-287c-4791-8687-a0060d8ce083
00:47:16.032 --> 00:47:19.216
Minimized the Boolean
function, but it has some

NOTE Confidence: 0.7336533

51764f6a-5863-4af1-8bb2-58853ff3c17d
00:47:19.216 --> 00:47:23.992
problems, the first one is
that you have to be smart.

NOTE Confidence: 0.8263324

cc4dbb59-17fd-4f2b-8696-d35c7a80cac1
00:47:25.330 --> 00:47:29.842
You have to memorize all the
postulates, you have to memorize

NOTE Confidence: 0.8263324

0481a769-7721-4f16-ab09-540ba437a6f8
00:47:29.842 --> 00:47:34.730
all the theorems, and you have to
know where and what postulates

NOTE Confidence: 0.8075344

7f91e949-179a-4a32-9aff-b6ad88cfd09b
00:47:34.730 --> 00:47:40.610
you apply. So it's kind of
proof by math, so proving the

NOTE Confidence: 0.8075344

50e31fda-3b23-4f12-8048-d8b3c1a161ef
00:47:40.610 --> 00:47:45.698
math is a little bit
hard. Also sometimes I mean so

NOTE Confidence: 0.8075344

d6a23a98-37fd-483b-8599-a50cea28d0f5
00:47:45.698 --> 00:47:50.362
far for example, we only had few
terms and few binary variables.

NOTE Confidence: 0.8075344

475603b7-431d-45f5-9c49-a3e51f19d71d
00:47:50.362 --> 00:47:55.026
But what if the number of
variables are more than three?

NOTE Confidence: 0.8075344

d8f735a4-5ed6-4931-9d07-841b24e1f72a
00:47:55.026 --> 00:47:59.266
For instance, we have before 5, six
or seven binary variables.

NOTE Confidence: 0.82123053

62f851ea-bf73-427c-9f47-9de23eb23fbc
00:47:59.940 --> 00:48:04.390
And the number of minterms,
for instance 10 minterms

NOTE Confidence: 0.82123053

8e8b84d0-3671-4b34-8f9f-07f8b7a8a240
00:48:04.390 --> 00:48:10.175
or 12 minterms. So then you have
a long function and you have

NOTE Confidence: 0.82123053

9ae3cd7d-d8fb-4dc9-a5b0-f78f9a5e814e
00:48:10.175 --> 00:48:15.515
to be careful what binary
variable you extract and etc. So it's

NOTE Confidence: 0.82123053

55a02cb3-0516-4e8d-849d-c131da29ed77
00:48:15.515 --> 00:48:16.405
very complicated.

NOTE Confidence: 0.8498367

969acbe7-6625-438e-b723-d94bdd0fdcee
00:48:17.760 --> 00:48:21.880
And so basically the algebraic
minimization doesn't introduce

NOTE Confidence: 0.8498367

41e17a62-3033-49f5-95c4-cc47e7d4a8b9
00:48:21.880 --> 00:48:24.970
any algorithm, so it's kind of

NOTE Confidence: 0.8015349

9be4c081-4976-4e16-be2c-51fd3c39f3c1
00:48:25.570 --> 00:48:29.925
Being smart and know already
how to apply the postulates

NOTE Confidence: 0.8015349

2a853859-7c6c-42d6-b244-e5cce7f3b46e
00:48:29.925 --> 00:48:31.600
where to apply the postulates.

NOTE Confidence: 0.63996726

8e70ace0-5c1c-458b-a73a-c59c005363de
00:48:32.540 --> 00:48:35.610
But the most important

NOTE Confidence: 0.88143164

38d79eaa-ce14-4335-a99f-7e7516f91a3b
00:48:36.390 --> 00:48:39.708
problem of the algebraic

NOTE Confidence: 0.8565725

470272b0-338f-4432-a213-4f8fea5ab87a
00:48:39.708 --> 00:48:45.197
minimization is the result, you
are not sure if the result is

NOTE Confidence: 0.8565725

771bf0e8-8fb4-4a18-8252-b9a817df480a
00:48:45.197 --> 00:48:49.327
minimal, which means that you might
forget about some postulate that

NOTE Confidence: 0.8565725

7a80fd2c-38ce-4364-8107-d2359d83d6f3
00:48:49.327 --> 00:48:53.870
if you apply in the result, could
reduce the Boolean function

NOTE Confidence: 0.8565725

e6c73980-744b-491c-aa0c-4cfe5c35de10
00:48:53.870 --> 00:48:58.826
better, so you are not sure that
the final result is minimal.

NOTE Confidence: 0.8895686

ce5d258f-c61e-4819-b853-45a380b879d7
00:49:01.270 --> 00:49:03.340
So because of this problem,

NOTE Confidence: 0.779369

fe3ddf15-267d-4b80-a5e0-e05dd813258e
00:49:04.140 --> 00:49:09.398
With the Boolean algebra, a new
method which is called map

NOTE Confidence: 0.779369

dc71d2b8-9f56-4533-8ff8-59d40a09dc24
00:49:09.398 --> 00:49:11.310
method introduced by Maurice

NOTE Confidence: 0.88725024

7f602b24-ddb0-41cd-a428-d3cfb28886e9
00:49:11.310 --> 00:49:14.548
Karnaugh. And this second method,

NOTE Confidence: 0.85325414

638a5b65-2fee-46c8-9fa3-c9d94f52b018
00:49:15.710 --> 00:49:17.696
First of all, it's an algorithm.

NOTE Confidence: 0.84469736

312f4f31-c236-438c-9437-d38d9a70a386
00:49:18.350 --> 00:49:22.960
So it's very straightforward, so
you don't memorize the postulates.

NOTE Confidence: 0.84469736

bf0b8a36-9217-4f68-a19e-16b6d0774822
00:49:22.960 --> 00:49:29.414
You only have to take step
by step of this algorithm to do

NOTE Confidence: 0.84469736

e239a940-32a4-4b8a-b18f-cb7ec48b174b
00:49:29.414 --> 00:49:34.485
the reduced Boolean function. And
the important thing is this, the

NOTE Confidence: 0.84469736

0fdf07e7-a2ee-4d74-b4dd-1a895f1cdeec
00:49:34.485 --> 00:49:40.478
result is guaranteed to be minimal,
so if you follow this step of this

NOTE Confidence: 0.84469736

0d802d89-ce24-4be0-b863-4a1875a0b8f7
00:49:40.478 --> 00:49:45.088
algorithm, the result is going to be
always minimal. This is very

NOTE Confidence: 0.84469736

3a8209f0-efa7-42bf-8e52-7c5432e99f51
00:49:45.088 --> 00:49:49.237
similar to the design algorithm
we introduced. We introduced

NOTE Confidence: 0.7164742

6543ca2d-3418-43fc-9b0f-2d4b98b6a081
00:49:49.300 --> 00:49:54.300
two design algorithms, POS and SOP
so whoever knows these steps,

NOTE Confidence: 0.7164742

e03ed0c7-13c6-41fd-b1f9-9f7ae1e2a5a2
00:49:54.300 --> 00:49:59.800
that person can design a logic
circuit. Here whoever knows the

NOTE Confidence: 0.7969548

92727dc0-849c-41c7-9e91-db66768ff3e2
00:49:59.800 --> 00:50:04.701
map algorithm easily can reduce
any Boolean function to its

NOTE Confidence: 0.8604032

07236b98-d079-4619-af47-7cd9b46576c9
00:50:04.701 --> 00:50:07.712
minimal form. It's also
called graphical

NOTE Confidence: 0.8604032

51381724-3186-4fc4-b555-78f92f50dd43
00:50:07.712 --> 00:50:11.705
manipulation and we see in a few
slides why we call it this.

NOTE Confidence: 0.86692166

f3b715f1-cd20-4e85-8320-8c8f01f4b703
00:50:14.620 --> 00:50:17.707
So before I start the
map method, I'm ready

NOTE Confidence: 0.86692166

88cd0d1a-773b-43b3-b186-b37d3d4cab47
00:50:17.707 --> 00:50:20.794
to take questions from
you. If you have any.

NOTE Confidence: 0.92407113

661ea994-c167-4b77-aaa6-89f994eddabe
00:50:23.040 --> 00:50:24.540
Is there any questions so far?

NOTE Confidence: 0.8340981

f5544f4e-0550-472a-b5e0-8932259fdef6
00:50:32.650 --> 00:50:38.278
So to make sure that you hear me
or that you have the attention again

NOTE Confidence: 0.83078945

d0e27bad-85d0-40f8-b81d-63243aa9200f
00:50:38.278 --> 00:50:43.132
please, send me some feedbacks
just to make sure that you are

NOTE Confidence: 0.83078945

3d284510-7190-4495-a4c8-3c3b99f816ef
00:50:43.132 --> 00:50:44.540
listening to the slides.

NOTE Confidence: 0.40861982

a3b464cd-779b-4b08-9939-932ef2bc63a1
00:50:46.690 --> 00:50:47.220
Mia.

NOTE Confidence: 0.62187135

3a056d5d-737a-4b5d-a557-4b8b3796de41
00:50:48.250 --> 00:50:49.778
Thank you Carter, Ali.

NOTE Confidence: 0.9365143

ddf213e7-e7a4-4c28-a8dd-30ea5bfa47fe
00:50:50.600 --> 00:50:51.550
So.

NOTE Confidence: 0.91352266

0c56a493-55be-4678-9fb7-cb61c6316101
00:50:53.300 --> 00:50:57.170
Alexa, thank you. So there is no
question so far.

NOTE Confidence: 0.81895715

fc9c1b9c-4302-4399-ae77-82278cbaa217
00:50:59.270 --> 00:51:05.081
OK, seems we
can continue, so the map method.

NOTE Confidence: 0.9107838

5094de5f-14b7-4c83-b9b1-9deb6a66d6b7
00:51:09.300 --> 00:51:12.981
The map method is another
representation of the truth

NOTE Confidence: 0.9107838

91dc93d4-7273-474d-9059-e23914c45dfc
00:51:12.981 --> 00:51:16.662
table in a way that
helps us too

NOTE Confidence: 0.81681406

733091d9-f321-4765-b615-7ecb31e17eb0
00:51:18.340 --> 00:51:24.522
Minimize the Boolean function by
an algorithm, by a pictorial or

NOTE Confidence: 0.81681406

81685452-d9b8-47d4-ac02-d23c44950838
00:51:24.522 --> 00:51:26.208
by a graphical algorithm.

NOTE Confidence: 0.83955526

4ebe2a1c-4595-4ad0-806a-722941848ea6
00:51:27.430 --> 00:51:32.146
So you already know the truth
table is just putting the binary

NOTE Confidence: 0.83955526

efc3155f-67b9-4e19-9438-71519b326eb6
00:51:32.146 --> 00:51:36.469
variables in the left side and
all the rows of the possible

NOTE Confidence: 0.83955526

136236ad-f800-4efa-829b-4bdc778c5e44
00:51:36.469 --> 00:51:40.006
inputs; these are the two binary
variables, we have four

NOTE Confidence: 0.84810084

dd55a20c-fa7f-4e8c-952c-ead83798f0ac
00:51:40.006 --> 00:51:43.145
different possibilities. And
the function, the Boolean

NOTE Confidence: 0.84810084

84e48fe9-564f-4420-96c3-8b5e0ffeeaaf
00:51:43.145 --> 00:51:46.786
function in the right side,
either one or zero. And then

NOTE Confidence: 0.84810084

f8325396-a50f-4377-a5d5-06bc01ec0688
00:51:46.786 --> 00:51:50.758
we write the Boolean function as a sum of
minterms or product of the

NOTE Confidence: 0.84810084

d2487f16-2fe6-4704-80ab-64e4501f3662
00:51:50.758 --> 00:51:51.089
maxterms.

NOTE Confidence: 0.7921885

032ac030-a7eb-4903-8108-723c3cc2420d
00:51:54.860 --> 00:51:59.095
Also, we could write the
Boolean function as a form of

NOTE Confidence: 0.7921885

15f97562-59fb-48ce-8a8f-8405f06d3aba
00:51:59.095 --> 00:52:02.945
minterms or
maxterms. So 2nd way to show

NOTE Confidence: 0.7921885

df6494fa-a22e-4809-995f-5a4df55e05f1
00:52:02.945 --> 00:52:06.025
the Boolean expression
is through a Boolean function.

NOTE Confidence: 0.8257903

0ea1ac6c-ff59-4ac6-a9d5-4d5f61bc5988
00:52:07.900 --> 00:52:12.003
And then we said that you can
design the Boolean function as a

NOTE Confidence: 0.8257903

ec2e3603-f710-4db5-95d8-aefef1685e5e
00:52:12.003 --> 00:52:16.479
logic circuit. So logic circuit
is another way to show a Boolean

NOTE Confidence: 0.8257903

8b98a798-e919-4d9c-91ae-dab24404c7ed
00:52:16.479 --> 00:52:20.582
function. So there are three ways to
show the Boolean function, the

NOTE Confidence: 0.8257903

990a7284-a846-4a15-86b2-a9310f1d1cc3
00:52:20.582 --> 00:52:23.939
truth table, the Boolean
function by using the Boolean

NOTE Confidence: 0.8257903

4189de6c-6cbb-4029-9b89-c08165af8257
00:52:23.939 --> 00:52:25.431
algebra, and logic circuit.

NOTE Confidence: 0.26852927

8983fac4-65a5-4353-b5be-4696fb919d52
00:52:26.480 --> 00:52:30.026
How? Maurice Karnaugh,

NOTE Confidence: 0.7813077

b940eed4-b6b2-4026-99eb-5c70caae1a62
00:52:30.026 --> 00:52:35.324
who is right now actually
teaching computer

NOTE Confidence: 0.8534183

52502705-8fcb-4233-a7a8-e07fdb3b978f
00:52:35.324 --> 00:52:39.974
science topics. He wasta
physicist, mathematician, also

NOTE Confidence: 0.8534183

8ebab002-21c4-4338-a00e-6fb6fb3d11ac
00:52:39.974 --> 00:52:45.298
an inventor. In 1954 in Bell
Labs he published the paper,

NOTE Confidence: 0.8534183

aee07578-9c3e-4b0a-97ef-650ab6b5d26a
00:52:45.298 --> 00:52:49.654
which is called the map method,
for synthesis combination of

NOTE Confidence: 0.8534183

39c75602-b9bd-4a2b-b861-0196962a7e6a
00:52:49.654 --> 00:52:54.978
logic circuits. I put this
paper in the Blackboard so you

NOTE Confidence: 0.8534183

66ac6ce9-efdd-4161-9620-cfe7c26181a7
00:52:54.978 --> 00:52:56.430
can browse it.

NOTE Confidence: 0.86719966

292a1677-8d3b-44c6-a88a-22da670ede2c
00:52:57.930 --> 00:53:02.493
So that we can present the truth
table in another form in order

NOTE Confidence: 0.86719966

3a13f7be-f806-431c-97cd-f41ea9af9253
00:53:02.493 --> 00:53:06.003
to help us with Minimization.
Because the table doesn't help

NOTE Confidence: 0.86719966

b78c65d8-b992-4123-90fd-343294cbc054
00:53:06.003 --> 00:53:09.864
us for the Minimization, it just
shows the entries that the

NOTE Confidence: 0.86719966

b90cbfcb-fd1c-4c2f-ad15-9f500d192a15
00:53:09.864 --> 00:53:11.619
Boolean function becomes one or

NOTE Confidence: 0.8959708

22e13a7b-3c6e-4929-8b10-4f93678df2e4
00:53:11.619 --> 00:53:16.254
zero. So he actually
introduced a transformation to

NOTE Confidence: 0.8959708

b821f5ce-bc9c-4e70-b4ff-41858230bad6
00:53:16.254 --> 00:53:21.126
the truth table in order to help
with minimization, but let's see

NOTE Confidence: 0.61817956

22115616-794b-43de-b727-69791b272ead
00:53:21.126 --> 00:53:24.700
what's the transformation.

NOTE Confidence: 0.7848745

aff75103-9491-44d1-98a2-7b2b3bcb5850
00:53:25.650 --> 00:53:30.974
That's why we called this the map
method. He called it the map

NOTE Confidence: 0.7848745

4dae54ab-5bf2-4974-821f-f8931dbf532b
00:53:30.974 --> 00:53:36.298
method, after we called it the
the Karnaugh Map method.

NOTE Confidence: 0.51564586

4300a1c9-03a0-49aa-a5b1-abb3d3ed45c4
00:53:37.570 --> 00:53:41.007
Karnaugh method sorry, Karnaugh map.

NOTE Confidence: 0.80519456

8e29bbc0-5267-4171-a1ab-a49c603cbcc0
00:53:43.080 --> 00:53:44.228
Because of his name.

NOTE Confidence: 0.83516586

f20cc80b-c294-4945-92b0-01d031bd2f0e
00:53:46.340 --> 00:53:50.240
Let's start with one variable
Karnaugh Map. One variable

NOTE Confidence: 0.83516586

2b9aef7a-cc16-41b0-a7fd-9e7dc0098c45
00:53:50.240 --> 00:53:52.970
Karnaugh Map is like this, so the truth

NOTE Confidence: 0.691823

88d56477-bc25-46a6-b2a8-17217505d695
00:53:52.970 --> 00:53:59.300
table. You already know with one
variable it has two rows.

NOTE Confidence: 0.691823

57ff4117-18b9-4e4a-9485-07c4de67f59c
00:53:59.300 --> 00:54:01.312
Minterm 0 and Minterm One.

NOTE Confidence: 0.76888025

6e964b3f-48a1-4f3b-89ea-1e507a9aa739
00:54:02.330 --> 00:54:07.868
But Karnaugh says that we can
reform, or we can represent truth

NOTE Confidence: 0.76888025

36c880d4-3b48-4f26-ba0c-6d8e0127cab9
00:54:07.868 --> 00:54:09.146
table like this.

NOTE Confidence: 0.8063204

b63355a8-f6b2-4464-aec7-30b96cffe842
00:54:10.310 --> 00:54:15.861
So putting the rows as
cells and then X is either

NOTE Confidence: 0.8063204

c9d0ef2e-1db0-4a61-8d66-8100594e416b
00:54:15.861 --> 00:54:20.558
zero or one. So we have two
cells for two rows.

NOTE Confidence: 0.83218366

e510bb5f-89a8-45f5-8c67-cd32e7dc08ad
00:54:21.590 --> 00:54:25.230
So you might not see the benefit
of Karnaugh method with one

NOTE Confidence: 0.83218366

ecd039a7-9c83-4ff0-b16c-3b119e0d80a3
00:54:25.230 --> 00:54:28.310
variable. So let's move on to
the two variable Karnaugh map.

NOTE Confidence: 0.9121745

87995ac3-4c4a-4ba0-8c44-6f605b27f792
00:54:30.110 --> 00:54:33.386
For the two variables, instead
of having four rows.

NOTE Confidence: 0.7373804

354e2aba-4858-4658-9e59-2e64b460d608
00:54:34.140 --> 00:54:37.890
Karnaugh says that we can
reform, or we can represent

NOTE Confidence: 0.7373804

d907090e-1cff-47b8-b84c-43d5b4990d7d
00:54:37.890 --> 00:54:40.890
the truth table like this,
having four cells.

NOTE Confidence: 0.8618698

e3e0be52-9e4c-4e5b-a426-411bb5d6b43b
00:54:42.180 --> 00:54:46.452
And the way we represent the
minterms in the cells are

NOTE Confidence: 0.8618698

13c1e373-8bef-4c31-bd41-42799e6e003a
00:54:46.452 --> 00:54:52.148
like this. So we put X here. X
is either zero or one and we put

NOTE Confidence: 0.8618698

614a775c-61b0-4c96-b769-e9ded3737f18
00:54:52.148 --> 00:54:54.640
Y here and Y is either zero

NOTE Confidence: 0.8319653

59ed928e-85ea-4769-af6a-c9b0ac180ff1
00:54:54.640 --> 00:55:00.235
or one.  And the minterm 0 is
here because it is zero. 00.

NOTE Confidence: 0.8319653

9ef81af5-9e2d-4f67-89b1-af699b7d5f0b
00:55:00.235 --> 00:55:05.345
Minterm one is here because
X is one and Y is 0. So 01

NOTE Confidence: 0.8319653

97c5ffa5-4d2e-4fca-b097-6eee40732dae
00:55:05.345 --> 00:55:07.170
is in the minterm one.

NOTE Confidence: 0.8079759

d4613733-642b-40c3-ba6a-a04d9cfa7278
00:55:08.500 --> 00:55:13.960
In this cell we have minterm 2
because X is in this area, X is

NOTE Confidence: 0.8079759

745e3317-ca6e-40af-9b20-052ebde1018b
00:55:13.960 --> 00:55:19.420
0. But Y is 1. So 10 is the
minterm 2. Minterm three is here

NOTE Confidence: 0.8079759

8be25e12-c7d8-43e1-9031-d6e93f649bef
00:55:19.420 --> 00:55:23.788
because in this area, in this cell,
X is 1 and Y is 1.

NOTE Confidence: 0.86602294

f2db1fc3-4249-40b9-b39e-bf5fa5392083
00:55:24.400 --> 00:55:28.257
So again, it's a
reformulation for or a

NOTE Confidence: 0.86602294

0c66c8df-8ce2-4b42-9d91-f377c520f463
00:55:28.257 --> 00:55:30.461
representation for truth
tables.

NOTE Confidence: 0.8969256

0042bd90-716c-4ae9-a51b-3e60de27c703
00:55:32.010 --> 00:55:33.690
So let's see what's the benefit.

NOTE Confidence: 0.8292529

adf6bce5-404e-47fc-8220-c11cc230f692
00:55:34.810 --> 00:55:39.738
And one thing is that the order
of the minterm in the Karnaugh map

NOTE Confidence: 0.8292529

c77e0564-9ef6-47aa-b421-a057e46d111c
00:55:39.738 --> 00:55:43.258
matters, so you don't. You
cannot simply say, for instance

NOTE Confidence: 0.8292529

bee71301-d18b-482d-b9d1-7dfcbf4e91e6
00:55:43.258 --> 00:55:48.186
m0 is here and m1 is here, etc.
So because these areas shows

NOTE Confidence: 0.8292529

d8ea6b83-c820-4834-83e1-9b627e6da6d5
00:55:48.186 --> 00:55:52.762
where the value of X&Y. So the
order of the minterms in the

NOTE Confidence: 0.8292529

43410e47-3431-445a-aa64-7d1125e507c1
00:55:52.762 --> 00:55:53.818
cells actually matters.

NOTE Confidence: 0.70783067

c040fbd3-31e5-41a7-9100-dad9e753f61e
00:55:54.630 --> 00:55:58.674
So for instance minterm
Three is here. Because X is one and Y is one.

NOTE Confidence: 0.70783067

18354396-0bbb-4458-b181-7684ff6feb75
00:55:58.674 --> 00:56:02.718
So 11
is the minterm three.

NOTE Confidence: 0.8150102

240f9f60-81d2-4eb3-b7ec-b81b58c44414
00:56:03.300 --> 00:56:06.160
So this is the way we
represent minterms in the

NOTE Confidence: 0.8150102

c1af8f60-8482-433b-9e66-cfeed5f0cc4e
00:56:06.160 --> 00:56:07.018
two variable Karnaugh map.

NOTE Confidence: 0.7206495

2fcce79c-3aa7-4abb-a702-8d8c354875ad
00:56:09.090 --> 00:56:12.680
But imagine you're given the
Boolean function this,

NOTE Confidence: 0.7206495

2b0b7c30-1f56-46c8-964e-a4ec63ef62a9
00:56:12.680 --> 00:56:16.270
which is only the minterm 0 in
the truth table.

NOTE Confidence: 0.80481505

33a2da16-6321-4bb7-99f4-98e640515ceb
00:56:17.470 --> 00:56:22.734
Which is equal to the minterm 0, which
is equal to X-bar Y-bar.

NOTE Confidence: 0.75779665

69c53bd4-a966-4f01-bb41-9ba55f6e4664
00:56:23.430 --> 00:56:26.860
So in order to show this
Boolean function in the

NOTE Confidence: 0.75779665

eb0aeb0c-a106-4ad6-a63d-0af49766e2da
00:56:26.860 --> 00:56:31.319
Karnaugh map is just simply put
one in the minterm cell. So

NOTE Confidence: 0.75779665

cc1c9b5d-919b-41f9-af86-64c3ea82aebf
00:56:31.319 --> 00:56:33.034
minterm 0 cell, we put one.

NOTE Confidence: 0.8557055

a3f0bfc2-fe60-4343-bf90-bb75246293a0
00:56:34.400 --> 00:56:40.320
As you can see here in this
cell, X is zero, Y is 0, X-bar and Y

NOTE Confidence: 0.8557055

885e1ed3-6703-444b-bc12-389fe4bd5a75
00:56:40.320 --> 00:56:41.800
Bar makes the F = 1.

NOTE Confidence: 0.79039043

52fe185e-62a8-4309-914a-f41018c87918
00:56:43.660 --> 00:56:47.664
Maybe maybe so the next function
could be this, so minterm one, so

NOTE Confidence: 0.79039043

89ed2173-1841-4adc-952a-16280f9b00b7
00:56:47.664 --> 00:56:51.360
simply in the Karnaugh map we put
one in the minterm 1.

NOTE Confidence: 0.79732597

ea65425a-6a5f-4f9e-aee3-e62076fd8761
00:56:53.640 --> 00:56:58.086
Minterm 2 here. In the truth
table we make it 1 here and

NOTE Confidence: 0.79732597

654f3bff-f8b6-4204-821a-a8127ba2dfc2
00:56:58.086 --> 00:57:03.216
others rows are 0. Here in the cell
for the minterm 2, we put one and

NOTE Confidence: 0.79732597

e89935fa-bf10-41aa-9203-8b327e012102
00:57:03.216 --> 00:57:06.636
other cells become zero, meaning
that other minterms are zero.

NOTE Confidence: 0.8104839

63057168-7a97-4df3-90f7-2cd878ec72a9
00:57:07.270 --> 00:57:09.776
But in this cell, X is 0.

NOTE Confidence: 0.7221406

d6a5bbe8-5765-46c7-b888-1674065354e0
00:57:10.360 --> 00:57:14.302
We have X not and Y, so Y
and X-bar

NOTE Confidence: 0.7221406

6b5b0a4f-e800-42f6-b93f-5bb860aba251
00:57:14.302 --> 00:57:16.492
becomes one for the F.

NOTE Confidence: 0.81864864

177f0f85-c183-40aa-83d9-b891bf3f5452
00:57:19.180 --> 00:57:22.570
Again, so far you didn't
see the benefit of Karnaugh

NOTE Confidence: 0.81864864

5644d5d8-2d98-4e81-9ee2-76d85a728c12
00:57:22.570 --> 00:57:26.299
map, so let's move on. This
is the last function, for

NOTE Confidence: 0.81864864

3292e187-090a-4694-9904-374814e5a2c5
00:57:26.299 --> 00:57:27.994
minterm 3. Same as before.

NOTE Confidence: 0.8662243

60cf741a-72c8-4072-8470-0f08e4b1e328
00:57:29.500 --> 00:57:34.090
But what if you have two rows
with one. For the two rows in the

NOTE Confidence: 0.8662243

dda485d0-24a2-40d4-ac2e-8ff0ef0d35d6
00:57:34.090 --> 00:57:37.456
truth table, we have sum of
minterm zero and one.

NOTE Confidence: 0.8118749

775a6fe6-50cc-419f-b148-8a184609e4a0
00:57:38.990 --> 00:57:43.269
So let's minimize it by the
Boolean algebra. So for the

NOTE Confidence: 0.8118749

dadc6fda-7c78-4702-86f9-2e1070ac322a
00:57:43.269 --> 00:57:48.326
Boolean algebra we can have the
minterm 0 as Y-bar and X-bar

NOTE Confidence: 0.8118749

e82755c6-f7db-4aac-acbd-6ed2ce9976f5
00:57:48.326 --> 00:57:49.882
or Y-bar and X.

NOTE Confidence: 0.8396611

9105fba8-e98b-4f21-b722-f1d6a4bcb51e
00:57:50.600 --> 00:57:54.812
As you can see here, based on
the distributive property. You

NOTE Confidence: 0.8396611

91eeda38-759a-44a0-81c4-cee40b7918a2
00:57:54.812 --> 00:57:56.567
can extract the Y-bar.

NOTE Confidence: 0.6676279

a5047a51-44d5-432a-893a-03b11ec8d56b
00:57:57.600 --> 00:58:01.620
And inside the parentheses, the remainder
is X-bar or X.

NOTE Confidence: 0.865343

a1c7ee70-d9ba-4d3b-bbdf-18a4ef4b562a
00:58:02.200 --> 00:58:06.941
So this is the complement
property, or it becomes one. So

NOTE Confidence: 0.865343

03168bca-9a51-4512-9fb3-7e86d66c026f
00:58:06.941 --> 00:58:12.544
Y-bar and Y is 1. 1 doesn't
have any influence so the result

NOTE Confidence: 0.865343

70070710-f6a0-4454-8083-d00a82b797ce
00:58:12.544 --> 00:58:13.837
is Y-bar.

NOTE Confidence: 0.85986453

06545e09-791a-4ce0-823b-b6dc0153d7a4
00:58:15.140 --> 00:58:19.320
So you can simply use the
Boolean algebra and the truth

NOTE Confidence: 0.85986453

1156ec8d-3e67-4feb-9226-2332a3b5a234
00:58:19.320 --> 00:58:24.260
table to minimize the function,
but as you can see, you have to know

NOTE Confidence: 0.85986453

bc43c980-17a5-44b4-9fc3-9bfeedf5462e
00:58:24.260 --> 00:58:27.300
the distributive property and
the complement property, but

NOTE Confidence: 0.85986453

07f2bea4-7c1e-4fc8-8dfc-ac2f23e5a20f
00:58:27.300 --> 00:58:31.860
let's see what happens in the
Karnaugh. The Karnaugh map, you don't

NOTE Confidence: 0.85986453

546cac05-c76d-473b-98bf-478f76c0083a
00:58:31.860 --> 00:58:35.660
need to know the Boolean
postulates. Here. You can see

NOTE Confidence: 0.85986453

267cbef2-59a3-412c-8709-9977da844522
00:58:35.660 --> 00:58:38.320
that in the whole area that you

NOTE Confidence: 0.81997895

2903dd36-f6b6-41ee-b6ff-3c0a7bd3b20b
00:58:38.320 --> 00:58:44.360
have one. X doesn't matter
because X is zero or one, so the

NOTE Confidence: 0.81997895

e60e3199-171b-4340-876b-1f4bc85c0f9d
00:58:44.360 --> 00:58:49.040
value of X is not determining
the Boolean function F. The only

NOTE Confidence: 0.81997895

c114a4cb-c4d9-4b0c-ba40-aeedc827326e
00:58:49.040 --> 00:58:53.330
binary valuable that matters is
Y because in this area, Y

NOTE Confidence: 0.81997895

9b40d65c-8253-4d30-8e3b-f5c217eb2116
00:58:53.330 --> 00:58:58.790
must be 0 and then we apply the
not to get Y-bar in order to make

NOTE Confidence: 0.81997895

1969025d-e58d-463a-ae43-7969540eb139
00:58:58.790 --> 00:59:03.860
F1. So we only care
about the area that the binary

NOTE Confidence: 0.81997895

06e2cab0-68f5-43e7-9391-c96eb91f0142
00:59:03.860 --> 00:59:05.030
variable actually matters.

NOTE Confidence: 0.85810703

380debf8-4d95-4590-b744-14fad49139c2
00:59:06.620 --> 00:59:10.862
So we could simply say that
this area is equal to Y-bar because

NOTE Confidence: 0.85810703

47df05a9-3833-4527-baad-0df7d026b419
00:59:10.862 --> 00:59:12.680
this area belongs to Y-bar.

NOTE Confidence: 0.8012125

ec7fddb4-82bc-4caa-a6bc-3083432cac27
00:59:17.110 --> 00:59:20.700
Again, if you are given the
Boolean function like this,

NOTE Confidence: 0.8012125

c54e6323-8cc1-4792-90fa-c274acaca424
00:59:20.700 --> 00:59:25.367
which is the sum of minterm 2
and three, you have to apply the

NOTE Confidence: 0.8012125

5898998c-e8fe-4b88-bf0f-c5211f8f17a2
00:59:25.367 --> 00:59:29.316
Boolean function postulates or
minimize it based on the Boolean

NOTE Confidence: 0.8012125

33f910db-2bcf-42f4-8ab3-a2c3b36b6562
00:59:29.316 --> 00:59:33.265
function in the truth table. But
given the Karnaugh map, you see

NOTE Confidence: 0.8012125

2d9acee7-ef12-485d-b6b9-43cc287be8e2
00:59:33.265 --> 00:59:38.291
that the minterm two and three
are these two cells and these

NOTE Confidence: 0.8012125

93d3242d-b944-4fbb-85ca-cfefcf07ea71
00:59:38.291 --> 00:59:42.599
two cells actually create an
area at X. The value of X

NOTE Confidence: 0.7764841

0eddd90b-6a73-48f6-85e1-f1d1490440b3
00:59:42.599 --> 00:59:47.718
doesn't matter. Only Binary
Variable which matters is Y,

NOTE Confidence: 0.7764841

8dae6f67-c63a-4e0f-8236-c890383009bb
00:59:47.718 --> 00:59:53.646
which must be one. So the
Boolean function is equal to Y.

NOTE Confidence: 0.86148167

5841921a-0a8e-459b-bfb6-629975705a79
00:59:54.460 --> 00:59:59.640
'cause in this area Y is 1 and
the function is equal to 1.

NOTE Confidence: 0.76114005

eb72e610-7576-40df-806f-cfe37aba6e64
01:00:01.810 --> 01:00:06.331
Another Boolean function is this,
sum of minterm one and three.

NOTE Confidence: 0.77162915

661f3099-33b8-4f37-b424-c810cbdbfdff
01:00:07.370 --> 01:00:11.174
Again, by using the truth table,
and Boolean function, it's kind of

NOTE Confidence: 0.77162915

8c772b12-3d8b-4898-a0d6-e70cd6609144
01:00:11.174 --> 01:00:14.661
hard. Using postulates are hard.
It's kind of hard to minimize the

NOTE Confidence: 0.82725346

b6b6a435-a7b2-417d-b5e7-5b22a6a46743
01:00:14.661 --> 01:00:18.177
Boolean function. But using the
Karnaugh map you can see that.

NOTE Confidence: 0.80928296

8b7d41e0-31d9-4a5a-8939-3049efde4a2d
01:00:19.400 --> 01:00:21.932
The Minterms makes an area, shared Area

NOTE Confidence: 0.8426556

c99532cd-f0af-48f4-a1a3-40bf93e70e27
01:00:21.932 --> 01:00:25.446
1 of . And in those cells in

NOTE Confidence: 0.8584391

96908b1b-a070-428a-a99f-2cb2e8508365
01:00:25.446 --> 01:00:30.540
this area, the value of Y
doesn't matter. In this area, Y

NOTE Confidence: 0.8584391

5f9cc5bd-10e8-474e-9eef-ded831c60e32
01:00:30.540 --> 01:00:34.467
is either zero or one, so it
doesn't matter. The only thing

NOTE Confidence: 0.8584391

258c3620-998e-417c-93e2-7a6dea372cee
01:00:34.467 --> 01:00:39.108
matters is the value of X, which
must be one. So the Boolean

NOTE Confidence: 0.8584391

9d973948-1264-438b-a89b-739597df7e12
01:00:39.108 --> 01:00:43.392
function F is equal to X. X means
that whenever we have one, the

NOTE Confidence: 0.8584391

ef0a8236-fd91-40d5-aba4-0286805a224e
01:00:43.392 --> 01:00:45.534
Boolean function going to be 1.

NOTE Confidence: 0.9130938

d7a902a7-c531-4239-910b-746b23f47982
01:00:47.980 --> 01:00:49.828
Another example is this.

NOTE Confidence: 0.81631446

346a8fd5-f3fc-4523-91ea-0c52cd99b56b
01:00:50.620 --> 01:00:56.164
Sum of minterm zero and two, so
you can see that by using the

NOTE Confidence: 0.81631446

2ccb0723-9113-49e1-b892-beca7c6e8cf3
01:00:56.164 --> 01:00:59.728
Karnaugh map without knowing
Boolean postulates and etc can

NOTE Confidence: 0.81631446

9947ba11-f1c0-4f74-95b0-c7cb3f4ee576
01:00:59.728 --> 01:01:04.480
simply say that in this area,
value of Y doesn't matter. The

NOTE Confidence: 0.81631446

cd7305b6-c9e2-44e8-98a8-3aa48e03cc34
01:01:04.480 --> 01:01:10.420
only thing matters is the value
of X which is 0 and we have to

NOTE Confidence: 0.81631446

72c0e2ab-a3fc-4c82-9c48-d2116c386316
01:01:10.420 --> 01:01:15.172
apply a not, so it is
equal to X-bar.

NOTE Confidence: 0.7965241

a1ab666b-ccbd-4fd3-b660-d59f2582a8c1
01:01:17.850 --> 01:01:23.295
Do you see that with the Karnaugh
map, it's very easy to

NOTE Confidence: 0.7965241

381d3b2a-7cc9-42d9-80a6-867a9103adc1
01:01:23.295 --> 01:01:27.750
minimize the Boolean function
because it's kind of

NOTE Confidence: 0.7965241

87ab2b3b-f817-491e-bce7-bae79950553f
01:01:27.750 --> 01:01:29.730
minimizing by adjacent cells

NOTE Confidence: 0.6599343

84aef643-258b-4a34-9e95-c63f2d6e8b13
01:01:30.910 --> 01:01:31.878
In the Karnaugh map.

NOTE Confidence: 0.89894253

afb921e7-b511-41c0-b265-aecd801b9855
01:01:33.430 --> 01:01:35.330
So this is another example.

NOTE Confidence: 0.909879

74df6c1d-fdce-4075-a993-50a3daf80a3a
01:01:36.290 --> 01:01:38.180
In this example,
you can see that.

NOTE Confidence: 0.803002

f2bd3edf-577b-40ec-8872-44bf4afb917b
01:01:39.410 --> 01:01:43.360
Boolean function is the sum of
minterms 0, 1 and two.

NOTE Confidence: 0.8276208

8a222acb-2662-4796-9c8c-525ac3ebb9a0
01:01:44.030 --> 01:01:48.738
So in order to minimize this
function using the Boolean postulates

NOTE Confidence: 0.8276208

ba336f1f-0915-42c0-8344-1ca7c302a9ae
01:01:48.738 --> 01:01:53.874
you could say that here
is the minterms for the Boolean

NOTE Confidence: 0.8276208

54b92a95-3876-4db9-9914-a79667b240ba
01:01:53.874 --> 01:01:59.010
function F. Here you can extract
Y-bar and then the other is X and

NOTE Confidence: 0.7751464

94fa13ae-a81e-4653-b333-cd1c08b74014
01:01:59.010 --> 01:02:03.873
it's complement. And as a result,
this complement, it becomes one.

NOTE Confidence: 0.7751464

fa2826b9-b7c0-41af-9ffd-97587523b6f8
01:02:03.873 --> 01:02:09.078
So Y-bar AND by one so you
can simply drop one,OR

NOTE Confidence: 0.7751464

c8ae1d38-11ce-4f08-86f6-28763e877f9b
01:02:09.078 --> 01:02:11.507
Y X-bar so you end up with this.

NOTE Confidence: 0.86822397

360fe6c4-369e-409b-b2c6-33754d51f4df
01:02:12.690 --> 01:02:15.627
But again, you don't know that
this is the minimal form.

NOTE Confidence: 0.80362594

aedd0065-759d-4dff-98b7-58a02dde1883
01:02:16.950 --> 01:02:21.760
But in the Karnaugh map you can
see that there are some shared

NOTE Confidence: 0.80362594

319102f9-69d2-4a22-b003-3b0594e62192
01:02:21.760 --> 01:02:25.090
adjacent areas. For the
Karnaugh Map, for instance, for the

NOTE Confidence: 0.80362594

89750006-5462-4991-b742-714a8061d5e1
01:02:25.090 --> 01:02:29.530
first area I would simply say
that the value of X doesn't

NOTE Confidence: 0.80362594

615ffcaf-230f-4a54-a24e-2d1ce73a5459
01:02:29.530 --> 01:02:32.490
matter, only Y is equal to 0. So

NOTE Confidence: 0.6713608

567eb607-4349-4f90-bbd9-11fdf1711ebb
01:02:32.490 --> 01:02:37.628
Y-bar. Or this cell
which is X-bar Y.

NOTE Confidence: 0.78728896

7fab0250-a051-442f-acaa-b34b490d3851
01:02:39.800 --> 01:02:44.660
X-bar. X is 0, X-bar becomes
one AND with Y.

NOTE Confidence: 0.73062193

dde9612b-94b4-43f2-962e-b00573543937
01:02:48.780 --> 01:02:52.398
You could minimize this
function by.

NOTE Confidence: 0.73062193

d0d6dd0a-922d-47e7-ac3f-9d6d95b6ac82
01:02:52.398 --> 01:02:56.418
The Boolean postulates,
so you could extract X-bar.

NOTE Confidence: 0.80855864

68b86d08-e80d-4c03-8ce5-c81f0357c369
01:02:58.020 --> 01:03:03.377
And then this times Y-bar or
Y become complemented with each

NOTE Confidence: 0.80855864

830d63e5-4c10-4b95-bec4-31fa6a43531b
01:03:03.377 --> 01:03:08.247
other, so then it ends up with
another simplified form.

NOTE Confidence: 0.8320488

3d1b0cc0-aab3-4b1a-a550-3c04f43c9e80
01:03:09.300 --> 01:03:13.440
In the Karnaugh map it is like
this, instead of just

NOTE Confidence: 0.86670494

f6df7791-ada1-4509-8086-ec9b243e8b5d
01:03:14.660 --> 01:03:18.664
Using this shared area and this
one, you could say that I could

NOTE Confidence: 0.86670494

61f4ff80-63c0-4b94-905a-2ca3410fdb62
01:03:18.664 --> 01:03:20.512
use this shared area and this

NOTE Confidence: 0.78257465

ed8d4dca-cdd4-461e-b2bf-d33bb689c836
01:03:20.512 --> 01:03:26.506
cell. So here the value of Y
doesn't matter and X must be 0.

NOTE Confidence: 0.78257465

322a0a68-c6eb-4008-828c-55c570826134
01:03:26.506 --> 01:03:28.416
So X-bar or this cell.

NOTE Confidence: 0.9342189

d613d9b6-7dcc-4cc3-a14a-930317f39dae
01:03:30.180 --> 01:03:31.590
Again so far.

NOTE Confidence: 0.7777407

33a61d7e-150d-4e84-aee5-e7916ebff0ec
01:03:32.300 --> 01:03:36.480
Karnaugh map helps because it's
a pictorial way to minimize.

NOTE Confidence: 0.7777407

35a66315-5787-4e8a-9669-6d5b714cd7dd
01:03:36.480 --> 01:03:40.242
But the amazing part of the
Karnaugh map is.

NOTE Confidence: 0.7570257

d262b23a-f6f8-4d64-9af2-b3917815b8da
01:03:41.580 --> 01:03:46.431
The Karnaugh map. You can have
overlapping cells, so in the

NOTE Confidence: 0.7570257

c85eb3d8-7c42-485a-b3e2-bf8a4ea4b8d2
01:03:46.431 --> 01:03:48.636
Karnaugh map, because say that.

NOTE Confidence: 0.9380156

b6e58db7-c108-4ec3-852b-6d4c841a1b06
01:03:49.260 --> 01:03:50.820
This is 1 area.

NOTE Confidence: 0.8483656

bbe1a8f6-e8e3-4dc1-be67-8b22f2d03dba
01:03:51.900 --> 01:03:56.232
And also for the second cell you
could extend the shared area

NOTE Confidence: 0.8483656

af9d53a2-c9e9-46a5-bbd4-d2680e3801e9
01:03:56.232 --> 01:04:00.203
with the adjacent cell. So
this is another shared area. As

NOTE Confidence: 0.8483656

f25c2b85-8907-4c26-a264-f30d6d3b8e96
01:04:00.203 --> 01:04:04.896
a result, you would say that for
the first shared area, the only thing

NOTE Confidence: 0.8483656

a7825633-4f0a-431b-bd2a-ffe6da931a20
01:04:04.896 --> 01:04:08.506
matters is Y with the value of
0. So Y-bar.

NOTE Confidence: 0.7777664

2374f8b6-29bd-4620-9059-6a237d9cd747
01:04:09.470 --> 01:04:13.982
And the other shared area it this, 
where the value of Y

NOTE Confidence: 0.7777664

d8208914-055d-41c0-86a0-93f65fb503f3
01:04:13.982 --> 01:04:18.494
doesn't matter, and the value of
X, which is zero, matters, so

NOTE Confidence: 0.7777664

a6888439-4195-4c7f-9715-109e54bb32fb
01:04:18.494 --> 01:04:22.630
it becomes X-bar. So you see
that the Boolean function F

NOTE Confidence: 0.6951936

fe92fbf3-f7fe-4f89-be9b-df32c2bbcc79
01:04:22.630 --> 01:04:26.258
becomes Y-bar or X-bar.

NOTE Confidence: 0.7415361

b50a6369-b352-4aa9-9d66-39cac3cbcaa9
01:04:27.020 --> 01:04:28.060
This is why Y-bar

NOTE Confidence: 0.81577575

9102c877-7114-424d-9fe1-31c453d22da2
01:04:28.700 --> 01:04:29.780
OR X-bar

NOTE Confidence: 0.8466155

540b1dc8-5241-40ab-903b-cf4d39226049
01:04:31.500 --> 01:04:37.020
But if you wanted to prove this,
minimize form with the Boolean

NOTE Confidence: 0.86196667

9955a46f-d7a6-4217-a989-100a96f2b3c4
01:04:37.020 --> 01:04:41.832
expression. With Boolean
postulates, it's kind of hard

NOTE Confidence: 0.86196667

7b5f8daf-f828-498e-80f9-2c9f18e00e49
01:04:41.832 --> 01:04:45.324
because here you have to go
through these steps.

NOTE Confidence: 0.8102503

2dc57320-cb6b-40c3-ad11-76dceca8d4bf
01:04:46.020 --> 01:04:51.788
Here you have to say that Y
bar and X-bar can be OR with each, with

NOTE Confidence: 0.8102503

d4d8a633-0399-4d06-aa85-d44b1af5f70c
01:04:51.788 --> 01:04:55.908
itself without no effect,
because we already know that X

NOTE Confidence: 0.8102503

3b6817dd-90e8-43b2-94ff-aaa1037982ff
01:04:55.908 --> 01:05:02.088
or X is equal to X, so any term
OR with itself doesn't have any

NOTE Confidence: 0.8102503

148ba08b-6b5c-4449-9b64-8e5e26f71d4b
01:05:02.088 --> 01:05:06.208
impact so, I add another Y-bar
and X-bar here.

NOTE Confidence: 0.7329859

39f544c2-b126-4421-8726-1966809cb8a8
01:05:07.100 --> 01:05:09.686
And then this time you extract

NOTE Confidence: 0.7829717

bb56fa8e-3364-4fdf-930e-ea74bef44471
01:05:09.686 --> 01:05:12.070
Y-bar. Until you keep this.

NOTE Confidence: 0.852021

fb6c6da5-76b9-4648-bcc6-39ce0c94f228
01:05:12.940 --> 01:05:18.616
This minterm. And in this
term, you extract X-bar.

NOTE Confidence: 0.6813314

9f3ee507-b2e7-41f5-879d-e6abef00e600
01:05:20.380 --> 01:05:23.548
And then you end up with X-bar

NOTE Confidence: 0.89207405

3229cade-39f7-4212-816c-c1af83576998
01:05:23.548 --> 01:05:25.420
Y-bar OR X-bar

NOTE Confidence: 0.85069096

39195fc7-5d1d-45ad-8d22-027eb90483c1
01:05:26.320 --> 01:05:32.590
so here the genius part is here.
So you have to be. I mean you

NOTE Confidence: 0.85069096

3351d6e8-151f-4ad3-bb50-93a997c62482
01:05:32.590 --> 01:05:37.606
have to know that, you have to
add another term here which

NOTE Confidence: 0.85069096

47923f70-6c8e-41cc-b82d-cd297dd096fc
01:05:37.606 --> 01:05:41.786
doesn't have impact in order to
finally reduce the function.

NOTE Confidence: 0.8370363

f5c4d7a5-2f90-47a7-920f-89b9703fef56
01:05:42.360 --> 01:05:46.100
It's kind of hard though.
Maybe an Oracle or

NOTE Confidence: 0.8370363

bb7958a8-9748-4867-a927-e557933ad0be
01:05:46.100 --> 01:05:50.180
experienced person told me that we
have to add this one, but the

NOTE Confidence: 0.8370363

7a03153c-2422-447d-9706-d130b8b2ae8b
01:05:50.180 --> 01:05:53.240
Karnaugh map doesn't need such
knowledge or experience. The

NOTE Confidence: 0.8370363

ac3b6418-9120-4ae7-80fc-cc621a047ed6
01:05:53.240 --> 01:05:57.320
only thing you need is
just to create the shared area in

NOTE Confidence: 0.8370363

a04d5ce0-1c31-458b-800d-5630e956aac6
01:05:57.320 --> 01:06:00.720
the Karnaugh map in order to
minimize the Boolean function.

NOTE Confidence: 0.84564143

96446bfd-fe52-41f9-be81-ebe63b8ae86d
01:06:05.160 --> 01:06:09.362
Another example would be this.
Imagine all the rows in the

NOTE Confidence: 0.84564143

160f031e-5a95-4673-8d42-9971302f4d1e
01:06:09.362 --> 01:06:12.800
truth table as one for the
Boolean function F.

NOTE Confidence: 0.7859407

5b515f8e-1b14-4c73-a227-7224b27f9edf
01:06:13.670 --> 01:06:18.719
So the Boolean function becomes
sum of minterms 0, 1, 2, 3.

NOTE Confidence: 0.89928544

a29da745-ce6a-4449-ae39-22e05fe632df
01:06:19.410 --> 01:06:23.687
So in order you can follow these
steps to minimize it by using

NOTE Confidence: 0.79196686

7dbb40f2-4d24-4252-b183-24419e1ab90e
01:06:23.687 --> 01:06:27.737
the Boolean postulates, but
without Boolean algebra and

NOTE Confidence: 0.79196686

adee99cb-9f41-4da1-93bb-5b5bab2e5a26
01:06:27.737 --> 01:06:32.950
postulates, by using the Karnaugh
map, you can see that all the

NOTE Confidence: 0.79196686

8dcd18e5-892a-4232-b8fa-37ec09f7b649
01:06:32.950 --> 01:06:36.960
minterms are one, so they create
a shared adjacent cells.

NOTE Confidence: 0.879361

efb13cd0-88f4-40a4-a33c-c1c9f46e7a4e
01:06:37.620 --> 01:06:40.752
And the value of X doesn't
matter in all these shared, the

NOTE Confidence: 0.879361

dd5871a7-ff67-447e-8e71-0b12d5ad399f
01:06:40.752 --> 01:06:44.145
value of Y doesn't matter,
all are one. So you can simply

NOTE Confidence: 0.879361

45a5eeeb-979c-46cf-a518-79264de7acb0
01:06:44.145 --> 01:06:45.972
say that F is equal to 1.

NOTE Confidence: 0.83682823

3a62418d-2a5d-4a41-a45d-4ebb844dfa3e
01:06:46.930 --> 01:06:51.655
Without caring about the Binary
Variables X&Y, because whatever

NOTE Confidence: 0.82617605

019d61d3-03e6-4fa5-99be-fc8f2bf44970
01:06:51.655 --> 01:06:55.770
X&Y is, all the
cells are one.

NOTE Confidence: 0.76122636

1fbebf37-0f9c-4efc-9b5c-d3352a809623
01:06:57.740 --> 01:07:02.852
So it's very quick and a
simple way and algorithmic way to

NOTE Confidence: 0.76122636

bd3acd99-2427-4ccb-b3f3-05518d67ead3
01:07:02.852 --> 01:07:04.556
Minimize the Boolean function.

NOTE Confidence: 0.75857174

d375d0e9-ad32-49fb-afdd-4b7b6862cf97
01:07:08.090 --> 01:07:12.578
However, imagine we are
given this Boolean function, with minterms

NOTE Confidence: 0.75857174

38b92a0a-c93f-4c02-9bfb-84ab6d6e4c29
01:07:12.578 --> 01:07:14.261
one and two.

NOTE Confidence: 0.7307272

e853034b-a7f5-4466-a723-6f702a273ae5
01:07:15.510 --> 01:07:19.305
Uh, the Boolean expression by
using the truth table, sum of

NOTE Confidence: 0.7307272

51f71f42-a5f4-4cd5-a045-7dbf362b2b45
01:07:19.305 --> 01:07:20.340
minterms becomes this.

NOTE Confidence: 0.69866097

99dadb3b-51dc-486d-a2eb-fac6e1f55e3e
01:07:20.900 --> 01:07:23.260
The Karnaugh map we have this.

NOTE Confidence: 0.8202966

cb9c16f7-c82b-4eb8-a4af-b884be55b708
01:07:24.070 --> 01:07:27.983
These two cells are not adjacent
to each other, so in the Karnaugh

NOTE Confidence: 0.8202966

28ffe956-d3d0-48d1-8b8a-9e50cb9842aa
01:07:27.983 --> 01:07:30.993
map you're allowed to create
shared sells by the adjacent

NOTE Confidence: 0.8330955

3daa3c26-3a06-4323-8b56-441e0483b63d
01:07:30.993 --> 01:07:35.727
cells. Not by diagonal cells, so
again, with the Karnaugh map, you

NOTE Confidence: 0.8330955

5b5ac79f-488e-45f0-8687-053898a9b545
01:07:35.727 --> 01:07:40.238
can simply say there's no shared
area, so we can make sure that

NOTE Confidence: 0.8330955

3bf259d9-42b2-4b46-a586-cd79661889c2
01:07:40.238 --> 01:07:41.973
you cannot minimize the function

NOTE Confidence: 0.8684182

b8e3b7e1-9ffa-42c5-8863-354cb647d5d7
01:07:41.973 --> 01:07:46.183
anymore. But given the truth
table and the Boolean function

NOTE Confidence: 0.8684182

e618061e-899e-4c10-b298-f0fe911b8b97
01:07:46.183 --> 01:07:47.918
and the knowledge of Boolean

NOTE Confidence: 0.83003783

18861ad9-d9e5-4f7c-8b73-73ac8310bc33
01:07:47.918 --> 01:07:51.816
expression. The knowledge of
Boolean algebra, you would say

NOTE Confidence: 0.83003783

2d4094e8-ef4f-4099-a62c-611888c7baa2
01:07:51.816 --> 01:07:55.086
that is there any possibility
that we can minimize this

NOTE Confidence: 0.83003783

3075fb74-8199-4837-990f-1e032ad8c914
01:07:55.086 --> 01:07:59.010
function anymore, and you have to
think and think and then finally

NOTE Confidence: 0.83003783

3d708709-276c-4e32-bf49-d7febbea76f9
01:07:59.010 --> 01:08:03.261
you could say that I don't know
of any possibility to minimize it

NOTE Confidence: 0.83003783

571a17bf-4a4a-418d-b00c-8fd5ba06cd07
01:08:03.261 --> 01:08:07.512
more, but with the Karnaugh map,
we can simply say that there is no

NOTE Confidence: 0.83003783

92694fdf-a833-4259-b62e-e49505214663
01:08:07.512 --> 01:08:10.782
adjacent cell. There's no way
to minimize this Boolean function.

NOTE Confidence: 0.8856716

1317d678-fc33-4210-b695-36e323dc8529
01:08:11.660 --> 01:08:15.020
That's it. At least you know
that this is the minimal form

NOTE Confidence: 0.8856716

dbb6368f-4c9d-4525-ab63-af32689ee579
01:08:15.020 --> 01:08:17.000
and there is no way to
minimize it anymore.

NOTE Confidence: 0.84195656

c7e487dc-6de6-4ac9-afbe-244fd15405f1
01:08:19.110 --> 01:08:22.734
In fact, I mean, whenever you
see a diagonal cells in the

NOTE Confidence: 0.84195656

663866d2-be65-4f3d-ad6e-e52a2e9207eb
01:08:22.734 --> 01:08:26.962
Karnaugh map, it's kind of a hint
that there is no way to minimize

NOTE Confidence: 0.8022675

b1e85afc-ae26-4cdc-9aca-e5414baa95aa
01:08:26.962 --> 01:08:29.882
the Boolean function.
Because there is no

NOTE Confidence: 0.8022675

8746abdb-58a9-447f-acdb-28e8296fcade
01:08:29.882 --> 01:08:32.462
adjacent cell and there's
no shared area in the Karnaugh map.

NOTE Confidence: 0.79776025

1ec2e806-7f85-468f-9cf5-218ac2c1fbf4
01:08:35.590 --> 01:08:40.320
Let's see what is the three
variable Karnaugh map; for the

NOTE Confidence: 0.79776025

f8983446-1973-482e-86d1-a3b2c01f75dd
01:08:40.320 --> 01:08:44.620
three valuable Karnaugh map, you
can simply attached two Karnaugh

NOTE Confidence: 0.79776025

b8f8e2e2-9f44-457f-b61a-5f6d8aa02aa7
01:08:44.620 --> 01:08:46.340
maps with two variables.

NOTE Confidence: 0.69610107

e5079f7f-0d5f-4dab-8b09-89d9a0297d66
01:08:46.950 --> 01:08:49.498
So this is the three

NOTE Confidence: 0.8454535

38e51d66-be75-4131-a499-edc867bf90d1
01:08:49.498 --> 01:08:53.080
variable Karnaugh map. This is the
truth table, which becomes the

NOTE Confidence: 0.8454535

361e08eb-01a1-484d-81e0-e56718cbb42a
01:08:53.080 --> 01:08:54.180
Karnaugh map like this.

NOTE Confidence: 0.815165

bb3b7a1e-c6d6-4687-9e48-9786cac11bee
01:08:55.420 --> 01:09:00.028
Again, pay attention to the way
we represent the minterms in the

NOTE Confidence: 0.815165

2e40416b-3f96-43fb-9058-ec2ef7779fc4
01:09:00.028 --> 01:09:01.180
three variable Karnaugh map.

NOTE Confidence: 0.8419933

dcad2e7b-f702-4a78-94b4-51996d2d7904
01:09:01.860 --> 01:09:06.527
In the Karnaugh map, the first 2 variables
comes here X&Y, and these are

NOTE Confidence: 0.8419933

c4262fd7-d8cc-4331-96bb-4340993c5577
01:09:06.527 --> 01:09:10.117
the value of X&Y. So either they
are both 0.

NOTE Confidence: 0.85875463

eb00eb84-a70a-4b5a-b938-9223792c51c5
01:09:10.730 --> 01:09:18.122
Y is 0, X is 1. Both are one.
Or Y is 1, X is zero and the

NOTE Confidence: 0.85875463

0e3c0deb-0018-4362-be2d-7726739245a0
01:09:18.122 --> 01:09:19.970
last variable comes here.

NOTE Confidence: 0.9169737

48d0c193-04fd-4f4c-9fcf-98be8ae67a81
01:09:20.910 --> 01:09:23.010
Either it is zero or one.

NOTE Confidence: 0.85360545

c7916bfb-b728-4122-aae5-767c365045e5
01:09:23.650 --> 01:09:27.577
And the way we represent the
minterms are like this. So

NOTE Confidence: 0.85360545

95041567-c910-48a0-922e-d44e3772f2de
01:09:27.577 --> 01:09:31.147
m0 is where all the
variables are 0000.

NOTE Confidence: 0.81338096

e6a3f411-a832-4b69-9f61-ebba2b6399a2
01:09:32.350 --> 01:09:38.181
m1 is when the Z is zero, Y is
zero and X is 1, so it is

NOTE Confidence: 0.81338096

45d7dbbe-d2e4-4721-9848-3e6d7d5be306
01:09:38.181 --> 01:09:42.640
minterm one, etc. But here you
can see that the minterm three is

NOTE Confidence: 0.81338096

fa63b54f-7a83-4b89-a87c-78c47ba6a259
01:09:42.640 --> 01:09:47.099
here and minterm two is here.
So this is because in minterm three,

NOTE Confidence: 0.81338096

4db46776-af63-4e87-bd1b-044dc46750c2
01:09:47.099 --> 01:09:52.244
the Z is zero, and X and Y is
1 so this is the minterm 3.

NOTE Confidence: 0.823946

df61ebdc-765b-48ff-8ba0-4f425c22d307
01:09:53.160 --> 01:09:57.052
So the way we represent minterms
in the Karnaugh map for the three

NOTE Confidence: 0.90417755

cdfd9907-7792-47f6-a245-86f4ce9714e8
01:09:57.052 --> 01:10:00.460
variable is like this. 012

NOTE Confidence: 0.889446

c2dacb47-bfbc-4660-93a2-59ff4aeacfe4
01:10:00.530 --> 01:10:05.500
And then goes here, 2 3, and
then comes here, 4 5, and then goes

NOTE Confidence: 0.889446

82fd72a7-7284-4704-892f-84cc39d409c7
01:10:05.500 --> 01:10:06.920
here 6 7.

NOTE Confidence: 0.80297697

613cfddd-20ed-4fe1-9f77-5cea170d0572
01:10:07.870 --> 01:10:11.062
So as I said, the order of
meetings in the Karnaugh map

NOTE Confidence: 0.80297697

2633ba05-1377-4da9-aff5-f3ad4ef0d18d
01:10:11.062 --> 01:10:11.328
matters.

NOTE Confidence: 0.83141994

cc57af78-b145-4e1a-97c3-6658a3ab1f49
01:10:13.040 --> 01:10:18.724
And this is because of the, I
mean the area of these cells. So

NOTE Confidence: 0.83141994

1887bc56-56f2-4797-993a-3b4c55073eb2
01:10:18.724 --> 01:10:24.814
minterm 7. This is minterm 7 because in this
cell, X is 1, Y is 1, Z is

NOTE Confidence: 0.83141994

8fc71fe0-8c12-4773-bce1-62674e23a303
01:10:24.814 --> 01:10:27.250
1, so this is it minterm 7.

NOTE Confidence: 0.86541146

9884a515-8950-494d-b825-66a6384d2137
01:10:30.860 --> 01:10:35.840
The area that Y is 1 is this area
in the right side. As you can

NOTE Confidence: 0.86541146

e2c2b471-504a-446e-917f-622010fa6040
01:10:35.840 --> 01:10:38.164
see here in this area, Y is 1.

NOTE Confidence: 0.81239915

4d22dc39-2ea5-40e6-b2ee-70cc2dfacd1a
01:10:39.630 --> 01:10:45.105
And in the left side, Y prime.
We have Y prime because Y is 0

NOTE Confidence: 0.81239915

b1d75485-94d0-4bc4-988d-a1816f5a1ab6
01:10:45.105 --> 01:10:49.485
so whenever Y is zero, Y prime becomes
one, so in this area,

NOTE Confidence: 0.75985605

887c9c9f-48c5-4d7e-b76c-c1334bf0bdc3
01:10:50.180 --> 01:10:52.220
Y prime becomes one.

NOTE Confidence: 0.80640596

118b947c-22f7-4ac3-a956-6b72c6349901
01:10:54.310 --> 01:10:58.384
And for the Z. You can see that
in the first row, these are ones, so

NOTE Confidence: 0.80640596

c526f442-24a8-4adc-952c-b773722bc376
01:10:58.384 --> 01:11:00.130
the 1st row is Z-bar.

NOTE Confidence: 0.787586

5d730dd6-85fb-483f-887e-d13669094574
01:11:00.820 --> 01:11:04.855
And the second row, Z is one. So the
2nd row is Z, the 2nd row is

NOTE Confidence: 0.787586

7f6d101a-414b-4ffe-ab41-d2436b509e5c
01:11:04.855 --> 01:11:08.352
the area of Z. The first row
is the area of Z-bar.

NOTE Confidence: 0.78617674

4f5cc243-2d64-4292-b4f3-c39ae806059f
01:11:09.820 --> 01:11:11.280
However, for the X.

NOTE Confidence: 0.87671846

a8875ef4-ae13-4d08-a9ff-eb2dd27413ca
01:11:12.540 --> 01:11:14.000
The cells in the middle.

NOTE Confidence: 0.8840084

7f6e096e-d831-462d-a07c-8def965cfcec
01:11:14.850 --> 01:11:17.166
Those mean X is 1.

NOTE Confidence: 0.87274736

8b3787b9-b49b-4fd1-ac41-49bf16ab1f41
01:11:19.290 --> 01:11:21.150
How about the X-bar?

NOTE Confidence: 0.8053476

8512e2af-439e-4c4b-9caa-10a39c935367
01:11:22.100 --> 01:11:27.935
X-bar as you can see here in
these two cells, the X is 0, so

NOTE Confidence: 0.8053476

fb9ee2ca-379a-41a1-bb92-d5ae8fcf7d1b
01:11:27.935 --> 01:11:32.214
X-bar is one and these two
cells minterm 2 and 6.

NOTE Confidence: 0.81912446

d01ab8e4-d922-4777-8873-a79d39a769bf
01:11:32.870 --> 01:11:39.758
X is zero, X-bar is 1, so these
two cells are the area of

NOTE Confidence: 0.91321385

7502f24e-3578-4502-bf37-8d5ca5969475
01:11:39.758 --> 01:11:45.650
X-bar. But you might say that
these two are kind of

NOTE Confidence: 0.8625114

bbaa5dbd-43dc-4574-a8bc-87858f7bbd67
01:11:45.650 --> 01:11:47.780
disconnected. The thing is,

NOTE Confidence: 0.8213163

6b12c62b-5ac4-4fb9-96e7-619f6415e3df
01:11:49.140 --> 01:11:53.410
When Maurice Karnaugh
introduced the Karnaugh map, he

NOTE Confidence: 0.8213163

569844a6-fd03-40fa-a9fc-033492031e25
01:11:53.410 --> 01:11:58.107
introduced it as a continuous
amount. So if you imagine the

NOTE Confidence: 0.8213163

d02ea439-53a2-41ab-84b0-ba1e61ab41bd
01:11:58.107 --> 01:12:04.085
map as a flat surface, you can
bend the two sides of the flat

NOTE Confidence: 0.8213163

607ae8a6-2fd1-4eb6-b9e5-85a6202f10aa
01:12:04.085 --> 01:12:09.636
surface and attach it in order
to make it roll, so in other words

NOTE Confidence: 0.8398449

fc0fd572-73de-4af6-9f41-43e92e2a4b10
01:12:11.720 --> 01:12:17.096
The left side of the Karnaugh map
is attached to the right side of

NOTE Confidence: 0.8398449

672fe86e-23df-4762-a4e1-5929ebfa6f39
01:12:17.096 --> 01:12:21.320
the Karnaugh map, but because we are
representing in 2D surfaces,

NOTE Confidence: 0.8398449

6a1e053b-d55f-4d34-a13b-baf3392361e1
01:12:21.320 --> 01:12:25.544
That's why we disconnected the two
sides. In reality, in 3D, these

NOTE Confidence: 0.8398449

81f60853-d06f-41d9-92ef-11d72f4cabce
01:12:25.544 --> 01:12:27.464
two edges are connected with

NOTE Confidence: 0.83891445

ba5b4de6-2d40-49bb-a159-8202d9b0ef7e
01:12:27.464 --> 01:12:32.476
each other. So these
two cells and these two

NOTE Confidence: 0.83891445

2907fe71-749e-438c-93cc-714ef30c292b
01:12:32.476 --> 01:12:36.229
cells are actually 4 cells
connected with each other.

NOTE Confidence: 0.79775476

9f95b1d6-b925-4917-8f33-0869ea99dc13
01:12:37.980 --> 01:12:43.447
So these two areas are the
X-bar, so all the shared

NOTE Confidence: 0.79775476

9a790f1e-90c9-4b2d-b254-826d4a3ec5b2
01:12:43.447 --> 01:12:48.417
area for Z, Z-bar, X, X-bar,
Y, Y-bar, are all continuous.

NOTE Confidence: 0.65611434

2e041237-d95d-4a9e-86ed-1015607ffec3
01:12:50.040 --> 01:12:51.190
Adjacent cells.

NOTE Confidence: 0.87977535

d954b8a3-e058-459a-adcd-1b274d5d0b59
01:12:53.070 --> 01:12:57.220
So let's practice to minimize a
Boolean function with three

NOTE Confidence: 0.88638526

f8317e5b-16f0-4204-a475-9becd8ce8461
01:12:57.220 --> 01:13:03.287
variables. So. Imagine this
is the Boolean function with

NOTE Confidence: 0.88638526

7118b9c0-6316-4176-b572-1065eb85d7b1
01:13:03.287 --> 01:13:04.730
three variables X&Y&Z.

NOTE Confidence: 0.80527663

5ae5b93e-b894-4951-a9a0-ff2a6ee1d3cf
01:13:05.370 --> 01:13:08.457
And this is the Boolean function
sum of minterms.

NOTE Confidence: 0.9035876

817656cd-13f2-41c1-93e1-9b41838fc3e3
01:13:09.480 --> 01:13:13.078
The minterms are 0,1,2,3 and then six

NOTE Confidence: 0.79832625

b468369b-d90d-4e65-9019-b2eef417ce4b
01:13:13.078 --> 01:13:18.490
and seven. So these are the
minterms as we already saw in

NOTE Confidence: 0.79832625

96e413d7-1ebc-47ee-84a6-f27f19245b1b
01:13:18.490 --> 01:13:23.339
the sum of products or SOP.
And now you're asked to minimize

NOTE Confidence: 0.79832625

8d6967b7-ad8a-473b-a915-8b9bdf25bec9
01:13:23.339 --> 01:13:28.188
it, if you wanted to minimize it with the
Boolean postulates you have to

NOTE Confidence: 0.79832625

95ea2008-8c40-49e6-bf06-8d591f2be3f2
01:13:28.188 --> 01:13:31.172
use the Boolean property, the
complement property and other

NOTE Confidence: 0.85055953

8650c5bc-f0aa-4a10-a634-18b5c052a742
01:13:31.172 --> 01:13:35.244
postulates. But with the Karnaugh
map you can see that

NOTE Confidence: 0.8164012

18a9092f-b93f-43bf-861b-708b729f863e
01:13:36.210 --> 01:13:40.753
this area, those cells with one
have shared adjusting cells.

NOTE Confidence: 0.8164012

d0240c72-6782-4bfb-87e1-1ba570cfb1c1
01:13:40.753 --> 01:13:44.883
So what are those shared areas?
One of them is this?

NOTE Confidence: 0.90805066

2c49d6af-619b-417f-9df3-f469063c6326
01:13:46.300 --> 01:13:48.148
Which is the area of Z-bar.

NOTE Confidence: 0.8849209

8c7a886c-e4f6-4ddc-9ace-2be2b6cf2537
01:13:49.920 --> 01:13:55.100
And the other one is thism,
the shared area where Z must be

NOTE Confidence: 0.87988406

11b6d374-12d4-4c10-b63c-3b34bcae3ec2
01:13:55.100 --> 01:14:01.358
one, Y must be one. But it
doesn't matter if the value of X

NOTE Confidence: 0.87988406

b4cd4a3e-a0e0-4cd4-b43b-480a5aef77eb
01:14:01.358 --> 01:14:06.622
is zero or one because in this
area, X is either zero or one. So

NOTE Confidence: 0.87988406

f264955a-03cc-4156-954e-89851265a040
01:14:06.622 --> 01:14:10.758
the only thing that matters is the
value of ZY. So ZY.

NOTE Confidence: 0.8869509

f407167c-0b3b-4d72-b3c2-d0192d495fee
01:14:12.720 --> 01:14:17.478
As you saw in the two
variable Karnaugh map, we can extend

NOTE Confidence: 0.8869509

06c985a6-5492-40ad-a12a-f886252ea7a8
01:14:17.478 --> 01:14:21.138
the adjacent cells. We can
have overlapping, so for the

NOTE Confidence: 0.8869509

3912cf0b-8e41-43cc-abdd-fde82208f33c
01:14:21.138 --> 01:14:25.530
this area we can extend with an
overlap with the other shared

NOTE Confidence: 0.8869509

985a7747-cd46-4ea7-8edf-662e5c366f55
01:14:25.530 --> 01:14:30.654
area, so you can see that we
have an area where the value of

NOTE Confidence: 0.8869509

024c7c19-a23c-4093-9de0-18c8327ab981
01:14:30.654 --> 01:14:32.850
Z doesn't matter in these areas.

NOTE Confidence: 0.8495699

2226cd23-e78d-436e-ac07-d5348888b5b6
01:14:33.420 --> 01:14:37.372
These cells, the value of Z is
either zero and one, so you can

NOTE Confidence: 0.8495699

82df0ab7-198d-4ef0-bf48-1a2276defc89
01:14:37.372 --> 01:14:41.020
simply drop the Z. The only thing
matters is the value of Y, which

NOTE Confidence: 0.88146687

5e753bc3-8bff-4fb6-8aa5-59d6171e9b8c
01:14:41.020 --> 01:14:44.355
is 1. So by just creating the

NOTE Confidence: 0.7403819

39c95c50-0758-4183-9421-675d6f0797c0
01:14:44.355 --> 01:14:48.256
shared adjacent cells
we can simply minimize

NOTE Confidence: 0.7403819

cda1733f-4fef-454b-ac52-098cab541cf9
01:14:48.256 --> 01:14:49.744
the Boolean function.

NOTE Confidence: 0.8454098

89974c1e-04f9-4613-a43f-fc1c000446ca
01:14:53.410 --> 01:14:58.870
One thing is that he said that
we could come up with the

NOTE Confidence: 0.8454098

72da6103-f90d-4891-9fec-eed8239e3989
01:14:58.870 --> 01:15:02.650
reduced logic circuits by using
the product of Maxterms.

NOTE Confidence: 0.83040494

963697fd-7be6-4915-8701-9f25633af72c
01:15:03.470 --> 01:15:07.890
So because we only have two rows
with 0, instead of writing the

NOTE Confidence: 0.83040494

4141115d-ab10-404d-b63b-f33b1294b6ee
01:15:07.890 --> 01:15:11.970
sum of minterms, we could say we
could write product of Maxterms

NOTE Confidence: 0.83040494

fab2f947-5e4b-4546-bea6-d0d91b1e43bc
01:15:11.970 --> 01:15:16.050
because it has only two maxterms. So
basically F is equal to the

NOTE Confidence: 0.83040494

2119abea-6411-4880-a071-60fd51ba8b6f
01:15:16.050 --> 01:15:17.750
product of maxterms four and

NOTE Confidence: 0.8418134

0a899e5d-2568-464d-9ac8-6425e26c18c7
01:15:17.750 --> 01:15:23.276
five. So this is the maxterm, so
then you have to minimize it by

NOTE Confidence: 0.8418134

c9bda07b-6c63-4482-bb1b-473476d1a983
01:15:23.276 --> 01:15:26.264
using the Boolean algebra
postulates, but given the Karnaugh

NOTE Confidence: 0.8418134

9eb30d99-6bde-434f-b55e-d95b2771aef4
01:15:26.264 --> 01:15:29.916
map, you can see that there are
two cells with zero.

NOTE Confidence: 0.810384

2cc27408-6daf-42c9-a70f-2bae11ce7395
01:15:30.750 --> 01:15:32.731
How can we simplify it using the

NOTE Confidence: 0.8414629

c1060f1a-7afb-4093-bdec-aa0dc680b313
01:15:32.731 --> 01:15:38.076
Karnaugh map. It's very simple,
we can simply say that let's write

NOTE Confidence: 0.8414629

8c1dda83-b8fa-499c-9420-ce0c1f70f918
01:15:38.076 --> 01:15:40.396
the Karnaugh map for F bar.

NOTE Confidence: 0.85051304

3ca72272-d563-495f-835d-bf43256c31e5
01:15:41.120 --> 01:15:48.120
So to create the Karnaugh
map for F bar, we could simply just

NOTE Confidence: 0.85051304

f133bbbe-148d-4e75-b763-8c43632d4c3f
01:15:48.120 --> 01:15:49.749
make use the cells of 00 01 for Z = 1.

NOTE Confidence: 0.81357664

5f2a1bc0-d3be-4c24-873e-e16c5bdf36ad
01:15:50.690 --> 01:15:57.116
And this is the simplified F bar or F
prime. So if you simplify the F

NOTE Confidence: 0.81357664

bc59640b-0a99-44f5-aa3a-5ade382eeebd
01:15:57.116 --> 01:16:03.542
bar, the minterm of the
this one, the four and five, the

NOTE Confidence: 0.81357664

74aedacf-9ee6-4408-8d78-7b6de8ff37ce
01:16:03.542 --> 01:16:09.968
shared area. The only thing that
matter is the value of Z and the

NOTE Confidence: 0.81357664

ed03d9f8-336d-4436-add0-0d469b7465b9
01:16:09.968 --> 01:16:15.935
value of Y, which is 0, so Z Y-bar shares
adjusting cells. But the value

NOTE Confidence: 0.81357664

d16a9ef8-556a-42bf-bf6a-a026d35b5dd1
01:16:15.935 --> 01:16:18.230
of X doesn't matter if it's 0

NOTE Confidence: 0.8612838

6bb0f399-138d-4b26-89cd-ee6b92a488d0
01:16:19.440 --> 01:16:25.773
Or one. So you could write a
simplified form for F bar, so you

NOTE Confidence: 0.8612838

9dac5d93-d9e1-4f72-9596-48cc0c02596c
01:16:25.773 --> 01:16:27.938
can simply do another not.

NOTE Confidence: 0.84948826

a153365b-d568-4131-8e51-66298007614a
01:16:28.550 --> 01:16:33.730
In order to come back to the
function F, so F bar followed by

NOTE Confidence: 0.84948826

96336b3e-8aa7-453f-9506-98b196b35d36
01:16:33.730 --> 01:16:38.170
another bar is equal to the
simplified form of the F bar.

NOTE Confidence: 0.84948826

a328f6ee-5577-436b-a0a6-ef4f94da8827
01:16:38.170 --> 01:16:40.020
The Y-bar followed by another

NOTE Confidence: 0.7293251

4059082a-8536-4805-8c0b-bbd4fecc297d
01:16:40.710 --> 01:16:46.410
Not, by the De Morgan's Law,
It is equal to Z-bar OR Y.

NOTE Confidence: 0.8233682

6e49ed9f-055d-4ccb-9e1f-a8b917c1015d
01:16:47.320 --> 01:16:51.701
So again, using the Karnaugh map,
not only you can simplify

NOTE Confidence: 0.8233682

f402058e-9816-4b78-b9f4-dadbf9cc59f5
01:16:51.701 --> 01:16:56.419
in sum of products, you can
also simplify it as a product of

NOTE Confidence: 0.87123615

459749dc-8cf3-45ed-84b9-8ed24b594d79
01:16:56.419 --> 01:17:01.172
sum. So you can simply say that
let's create a shared area with

NOTE Confidence: 0.87123615

4ef466f1-118c-4f6c-82ba-b23f16d9193c
01:17:01.172 --> 01:17:04.382
zero cells, and then do another
not on top of it.

NOTE Confidence: 0.7873144

a5016d59-d558-46f6-b985-30d63561d60c
01:17:07.100 --> 01:17:11.715
So these are different forms. Or
as you can see, both the product

NOTE Confidence: 0.7873144

04df7058-d908-48e9-8a4b-09c488834ee1
01:17:11.715 --> 01:17:16.330
of Maxterms of the Karnaugh map and
the sum of minterms with Karnaugh

NOTE Confidence: 0.7873144

6d824162-c2c6-448f-ab59-b4950b9da151
01:17:16.330 --> 01:17:18.105
map end with the same result.

NOTE Confidence: 0.84103715

eba4aad8-2834-42f4-92dd-d7ce16cd14ff
01:17:20.250 --> 01:17:23.930
However, if you wanted to
minimize it using the Boolean

NOTE Confidence: 0.84103715

5dff8e6b-81ab-4801-b9de-5d0923567941
01:17:23.930 --> 01:17:25.034
expression or Boolean

NOTE Confidence: 0.83435416

2a01c2fe-5f12-4332-b298-d58628cc7bda
01:17:25.034 --> 01:17:30.004
postulates. It's kind of hard. I
mean to come up with the

NOTE Confidence: 0.83435416

d079105c-39a4-49b4-a7ce-f548216b502a
01:17:30.004 --> 01:17:33.280
distributive property, and then
complement property and etc. And

NOTE Confidence: 0.83435416

43c28136-bea9-4ca6-98ed-5907f3ff43c5
01:17:33.280 --> 01:17:38.012
you can see that there are lots
of terms and it might be

NOTE Confidence: 0.83435416

5d31ab16-f8de-4a2d-b95d-ed0f99a88d9b
01:17:38.012 --> 01:17:41.652
confusing for you, but with the Karnaugh
because it's a pictorial form,

NOTE Confidence: 0.83435416

84bb1f54-ee33-403a-9f06-0d895192702a
01:17:41.652 --> 01:17:42.744
easy to simplify.

NOTE Confidence: 0.84626883

6d0f26ff-5174-454d-8d94-6e1f3edf66e2
01:17:46.150 --> 01:17:50.880
So at home you can practice
this example. You can see

NOTE Confidence: 0.84626883

e75e8816-8354-47bd-aff5-a1b506dc8c7b
01:17:50.880 --> 01:17:53.890
this slides for another
function like this.

NOTE Confidence: 0.80480105

f673444d-33a2-4e02-b45a-0fbdc8d8093a
01:17:55.070 --> 01:17:58.870
And you can see because the
kernel map is continuous in

NOTE Confidence: 0.80480105

18a178f9-2204-421d-96ea-90030a35aa52
01:17:58.870 --> 01:18:03.050
these two edges, you can create a
shared area for this Boolean

NOTE Confidence: 0.80480105

5d328fcd-5266-4bfd-9e8e-06cfdfb5acff
01:18:03.050 --> 01:18:07.230
function and the only thing
matters if the value of X

NOTE Confidence: 0.80480105

a5292ec7-63c7-424f-8621-fc532164e665
01:18:07.230 --> 01:18:11.790
going to be 0. So X-bar is
the simplified form of this

NOTE Confidence: 0.80480105

e7a154d5-e40a-46e1-ac8d-0502b874407b
01:18:11.790 --> 01:18:12.170
function.

NOTE Confidence: 0.8062632

95287275-badc-4942-925c-75ca4c193b2f
01:18:14.160 --> 01:18:19.438
You can write in a form of
product of Maxterms and you can

NOTE Confidence: 0.8062632

0db1bf38-fed9-43cb-9576-33621114e2c1
01:18:19.438 --> 01:18:23.962
practice these last two slides
at home and if you have

NOTE Confidence: 0.8062632

98178f54-d24f-45f5-a706-589bdbbcdc61
01:18:23.962 --> 01:18:28.486
questions, you can ask in the
next lecture, but we are done

NOTE Confidence: 0.8062632

82158f1b-2439-40ea-8694-64bf752bfbfb
01:18:28.486 --> 01:18:32.256
with the one variable, two
variable, and three variable

NOTE Confidence: 0.8062632

6993a82e-c2af-427a-98e8-d9d2935248e5
01:18:32.256 --> 01:18:37.911
Karnaugh maps. You can see
how it is easy to use the

NOTE Confidence: 0.8062632

e6043d08-49d2-495b-b7cd-c07083f3f935
01:18:37.911 --> 01:18:39.796
Karnaugh map to simplify a Boolean

NOTE Confidence: 0.84517974

9206fb7b-74b7-44b3-bf10-b06cc48a04af
01:18:39.796 --> 01:18:43.830
function. In the next lecture,
we're going to continue with the

NOTE Confidence: 0.84517974

9b978979-0a30-4845-8650-79701473d1fd
01:18:43.830 --> 01:18:46.670
four variable Karnaugh map and
another thing which is called the

NOTE Confidence: 0.7703475

c1f854a7-3240-4092-a2d7-a4861266ee8e
01:18:46.670 --> 01:18:52.058
don't care condition. And then
we start with the next chapter,

NOTE Confidence: 0.7703475

c74b4b6d-1788-4dec-9fba-903e506e4bca
01:18:52.058 --> 01:18:54.538
which is the combinatorial circuits.

NOTE Confidence: 0.9324407

f6be95c0-e4b6-4857-99dc-4092e219a746
01:18:55.440 --> 01:18:57.750
So I'm ready for your
questions. If you have any.

NOTE Confidence: 0.9307556

494ea5e6-3403-4db7-a96f-4ad5c8030f10
01:19:06.640 --> 01:19:07.788
Is there any questions?

NOTE Confidence: 0.8720325

f7826009-c1a8-4e9a-aad8-fbda7a50ed71
01:19:16.790 --> 01:19:21.025
Seems there is no question, so
we're going to finish this

NOTE Confidence: 0.8720325

773a1495-f05f-4c73-acd3-2463ab3ad31e
01:19:21.025 --> 01:19:25.645
lecture and I'm going to be in
the office hour for your

NOTE Confidence: 0.8565394

392c44c3-ae28-46a6-8a6d-0e2b435254ea
01:19:25.645 --> 01:19:29.014
questions. If you have any
also about the lecture

NOTE Confidence: 0.8565394

b9edac13-10d4-4648-8963-088ad2d41d16
01:19:29.014 --> 01:19:31.100
assignments or lab
assignments, I'm ready for

NOTE Confidence: 0.8565394

c3735319-a149-4513-9906-ea4c098a5bf4
01:19:31.100 --> 01:19:34.080
your questions. In the office
hour. Thank you so much.

NOTE Confidence: 0.8565394

e41f81b2-f953-49a2-97e1-ade65fd0595f
01:19:34.080 --> 01:19:35.272
Have a great day.


