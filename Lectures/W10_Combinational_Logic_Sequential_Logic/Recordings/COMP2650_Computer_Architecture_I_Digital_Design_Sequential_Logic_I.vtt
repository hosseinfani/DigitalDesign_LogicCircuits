WEBVTT

NOTE duration:"01:15:40.2480000"

NOTE language:en-us

NOTE Confidence: 0.817451

911a9552-b9de-48df-a133-dd2baf3caca8
00:00:03.100 --> 00:00:04.030
And.

NOTE Confidence: 0.8394748

606bfc14-df2a-49c1-a99f-a6e9c9a1d214
00:00:06.170 --> 00:00:12.110
So today we are going to start
the next chapter. Chapter five

NOTE Confidence: 0.8394748

124b5bb5-0766-4004-92f5-dd34c3db5e5d
00:00:12.110 --> 00:00:17.555
of the book, which is about the
sequential logic. So before

NOTE Confidence: 0.8394748

957a8b6b-7901-43a7-ac63-4a9d736a7f47
00:00:17.555 --> 00:00:19.040
starting this chapter.

NOTE Confidence: 0.73862064

1e001429-c177-4060-9680-ca5dcf43b65b
00:00:19.630 --> 00:00:22.714
Uh, who actually

NOTE Confidence: 0.87827873

f5c948a2-f4a3-4b36-b3da-00b7fa07011c
00:00:22.714 --> 00:00:28.188
saw this? Movie
by Christopher Nolan.

NOTE Confidence: 0.73593587

1e0841d3-edca-4495-be70-0eda003086e1
00:00:32.660 --> 00:00:38.159
It's a pretty, I mean old movie.
It's in 2000, uh, it is

NOTE Confidence: 0.73593587

48f44d4c-a14b-458a-82c4-4c32977dd32f
00:00:38.159 --> 00:00:43.235
released. I mean 2000 in the
year 2000, so 20 years old.

NOTE Confidence: 0.62825316

3058d379-fa99-44ff-8f36-96eccb586ee8
00:00:43.820 --> 00:00:45.190
But, uh.

NOTE Confidence: 0.7624323

8aea2baf-e562-443d-a78c-e7e3db83a482
00:00:47.600 --> 00:00:51.597
Wait, Justin who else actually
saw this movie.

NOTE Confidence: 0.70857555

20ec8a6e-f13a-47de-b8bf-977e3afeb460
00:00:54.750 --> 00:00:57.090
Yeah, Sean did that so.

NOTE Confidence: 0.8643868

608eaf34-989b-4f91-8937-098833bea698
00:00:58.950 --> 00:01:02.136
I really suggest you to
see this brilliant movie.

NOTE Confidence: 0.8643868

41c03ee8-d357-44c4-9870-b294bb8656d9
00:01:02.136 --> 00:01:04.260
I mean, uh, to be honest.

NOTE Confidence: 0.82325536

0d64e7f3-a903-49ca-ba5e-5752634d0711
00:01:06.140 --> 00:01:10.250
The first debut movie of
Christopher Nolan, which was a

NOTE Confidence: 0.82325536

6ae71f81-b6b8-49e2-8793-145f01ab3128
00:01:10.250 --> 00:01:15.593
kind of a private movie. I mean,
it was not a Hollywood based

NOTE Confidence: 0.82325536

c695a325-0b5b-4830-9f44-59dda9bc44b9
00:01:15.593 --> 00:01:20.114
movie and this is the second
movie of the Christopher Nolan

NOTE Confidence: 0.82325536

417f2cef-abf6-46df-84aa-c1aa75c22990
00:01:20.114 --> 00:01:21.758
was a big movie.

NOTE Confidence: 0.87319887

f111c6ee-358c-43c0-8f7f-08b2c460c90f
00:01:23.300 --> 00:01:29.684
This movie is one of my most or
from my opinion the best movie

NOTE Confidence: 0.87319887

e0643f1e-fe25-42ed-b424-4052dfceb14a
00:01:29.684 --> 00:01:31.508
of the Christopher Nolan.

NOTE Confidence: 0.8696407

191ee2ba-3c51-4e54-bfc3-987cc29fead6
00:01:32.500 --> 00:01:37.024
As I said, it's 20 years old.
You might say that it's old.

NOTE Confidence: 0.8696407

87b12743-1255-47ea-a34d-42583baa9f54
00:01:37.024 --> 00:01:42.244
It's an old movie, but I I mean,
trust me, uh, it's a good movie

NOTE Confidence: 0.8696407

f6e2afde-fa6e-41e8-b7de-2d854c89c1c7
00:01:42.244 --> 00:01:46.420
and it's worth to allocate two
or three hours to watch the

NOTE Confidence: 0.8696407

5f451289-ac06-4696-9224-c94bc242325d
00:01:46.420 --> 00:01:50.596
movie. You might not understand
the movie at first. I mean, for

NOTE Confidence: 0.8696407

e509280e-c185-40d4-85a6-cd9006c98fb0
00:01:50.596 --> 00:01:55.120
one time, so you have to watch
this movie two or three times

NOTE Confidence: 0.8696407

3301ede3-d124-40fa-97e0-7ce1848fe817
00:01:55.120 --> 00:01:56.860
and also read about the.

NOTE Confidence: 0.8862308

51d7fb7e-8092-4056-8488-5786fe4d6737
00:01:57.460 --> 00:02:03.518
A form or the structure of the
movie, but basically the plot is

NOTE Confidence: 0.8862308

42d779f9-002c-48c9-ada6-d71d5b0baa8f
00:02:03.518 --> 00:02:08.644
that it's about the guy that
lost his long-term memory. So

NOTE Confidence: 0.8862308

40153b60-ead8-4979-85b5-2324679c1fa2
00:02:08.644 --> 00:02:13.770
there is a character in this
movie that only can remember

NOTE Confidence: 0.8862308

7b80edb9-b167-4ee8-8766-fdf9fd588913
00:02:13.770 --> 00:02:20.294
just 10 minutes or 15 minutes as
a short period of time and then

NOTE Confidence: 0.8862308

9a123a3f-9379-48e1-bf38-5399ac44d8f1
00:02:20.294 --> 00:02:24.488
suddenly everything actually
resets. So I picked this movie

NOTE Confidence: 0.8862308

619e8abf-b133-4514-95f5-e9d029b5ac60
00:02:24.488 --> 00:02:26.818
just to show you that.

NOTE Confidence: 0.8202919

3afa78cd-5843-4bfa-a119-e737588197e5
00:02:27.680 --> 00:02:35.090
The basic or the fundamental, a
fact that we can memorize or can

NOTE Confidence: 0.8202919

22e66d38-6a72-4676-b704-ea3675898f3e
00:02:35.090 --> 00:02:40.790
learn learning is the process
that we memorize things so.

NOTE Confidence: 0.89132667

f7431b90-09a5-4c6e-9347-eb4427da73ac
00:02:41.410 --> 00:02:46.580
Yeah, it's because of the
feedbacks. Because of the we

NOTE Confidence: 0.89132667

7f303b57-cf2a-4b8a-a38f-72e6e880a80c
00:02:46.580 --> 00:02:52.267
can recover what we've seen
or what we've learned so far.

NOTE Confidence: 0.89132667

da870e5c-5f44-4767-bb7e-c079bfdce3e4
00:02:52.267 --> 00:02:57.437
So today we are going to
introduce a different model

NOTE Confidence: 0.89132667

4d49e968-f4be-4825-a964-4f021b716a84
00:02:57.437 --> 00:02:58.988
of logic circuits.

NOTE Confidence: 0.878842

ef9df871-1dc6-460a-aa8e-c82359b9dd67
00:03:00.540 --> 00:03:03.076
All sequential logic. We
already covered the combinational

NOTE Confidence: 0.878842

eaa3170b-4b4b-4049-ab46-ea821ddf79f4
00:03:03.076 --> 00:03:06.880
logic and the combination of
logic was based on whatever the

NOTE Confidence: 0.878842

717528ab-1aac-43b1-b7a2-bfb1064ca592
00:03:06.880 --> 00:03:10.367
value of the input after some
propagation delay, we have the

NOTE Confidence: 0.878842

78696171-0fcd-4523-9b15-3cab78ca1864
00:03:10.367 --> 00:03:11.952
value of the output ready.

NOTE Confidence: 0.8674453

0bb86808-a239-4dd8-8a2a-e52d6b15c1ce
00:03:13.210 --> 00:03:17.680
However, in sequential logic, we
said that we can have.

NOTE Confidence: 0.8427569

6048847a-7ebd-43a2-967f-b81990843e34
00:03:18.340 --> 00:03:23.536
Feedbacks, meaning that one or
more of the outputs can come to

NOTE Confidence: 0.8427569

c2ffc740-d0ec-4fe3-b1ce-8b7fe8fe01c7
00:03:23.536 --> 00:03:25.701
the input of the circuit.

NOTE Confidence: 0.85036767

ed47cbd7-68c9-4202-b5ba-404fd115d791
00:03:26.580 --> 00:03:32.352
So this way you are kind of a
recurring or wants to memorize

NOTE Confidence: 0.85036767

0d8c9298-14d2-4517-9a5e-2249316e0f71
00:03:32.352 --> 00:03:38.124
the output to the input. So in a
circular feedback we are trying

NOTE Confidence: 0.85036767

9e277bf7-1695-4a0b-8fcf-62c4ec12d702
00:03:38.124 --> 00:03:43.008
to memorize something or some
some of the output that we

NOTE Confidence: 0.85036767

53f67bbf-a69c-4021-ba03-879b42aea926
00:03:43.008 --> 00:03:48.336
already output to the. For the I
mean combination circuit we just

NOTE Confidence: 0.85036767

d6e1597e-ef82-42ab-bf46-7dcdffd63f12
00:03:48.336 --> 00:03:52.332
wanted to recover the output with
an memorize it.

NOTE Confidence: 0.82079184

49bde448-0aa7-47f4-b44e-ae07d9a5d598
00:03:53.160 --> 00:03:55.860
So this is called
sequential logic.

NOTE Confidence: 0.82079184

06a9f464-568d-4b56-9fad-b4d71ad2d007
00:03:55.860 --> 00:03:59.460
Whenever we have a
feedback from the output

NOTE Confidence: 0.82079184

1f49fdac-aa07-4541-afd9-b178ff7d48ee
00:03:59.460 --> 00:04:02.610
of the combinational
circuit to the input.

NOTE Confidence: 0.11973134

a363db90-cc69-42b2-ba34-8b8cd84f0530
00:04:04.970 --> 00:04:05.840
Ah.

NOTE Confidence: 0.8940295

4bcea6b4-f3a4-47d5-9f9c-e1ff875900ac
00:04:06.970 --> 00:04:12.781
So let's see what happens when
we want to add a feedback once

NOTE Confidence: 0.8940295

53fa7cd7-b560-4e13-8de3-ffbc9a37e209
00:04:12.781 --> 00:04:18.145
to add an input. That input
comes from the output from the

NOTE Confidence: 0.8940295

62bb9707-6c38-4a2d-89b9-25a84cbfaf57
00:04:18.145 --> 00:04:20.380
previous step or previous time.

NOTE Confidence: 0.7488362

76fc260b-f057-4085-8d1d-1436e85f94a3
00:04:21.820 --> 00:04:28.372
So again, we can, uh, we just
now I just wanted lost with the

NOTE Confidence: 0.7488362

5965b575-9e76-4dec-b23b-ba161f1c7575
00:04:28.372 --> 00:04:30.712
I mean this most simplest.

NOTE Confidence: 0.85793895

4f71a7ae-853a-4ab0-809c-d73276874b11
00:04:32.170 --> 00:04:36.170
Sequential logic we saw this
diagram when we introduced the

NOTE Confidence: 0.85793895

2d974295-f2e3-4c09-bc01-574026f650c0
00:04:36.170 --> 00:04:40.170
combinational logic. The most
simplest circuit, but just and

NOTE Confidence: 0.85793895

3038ef96-1e3c-43da-bc5d-b8c765ec46fd
00:04:40.170 --> 00:04:45.370
to input an output F. Now we
just wanted to see what happens

NOTE Confidence: 0.85793895

d1a2d80a-59ab-4221-becf-5c1dd28b89fb
00:04:45.370 --> 00:04:51.370
if I attach the F to one of the
other input of the and. Imagine

NOTE Confidence: 0.85793895

048ca28c-0d16-4cad-9899-ad172a9805eb
00:04:51.370 --> 00:04:56.170
you have you're given if and
with three input and two inputs

NOTE Confidence: 0.85793895

f1bddb70-522b-4e9b-9d17-23ec064a30c7
00:04:56.170 --> 00:05:00.570
are X&Y. As in the combination
logic, but the third input

NOTE Confidence: 0.85793895

8f1d9369-751a-4837-b3d3-6277638edb61
00:05:00.570 --> 00:05:02.570
actually is feeding from the output.

NOTE Confidence: 0.8010375

a2fa7b9f-a8aa-4eb7-a97c-9ffec7da1e41
00:05:02.740 --> 00:05:05.064
It's F as you can see here.

NOTE Confidence: 0.9372959

5a869200-4822-4667-a4e6-a05327ae2fb0
00:05:06.550 --> 00:05:07.250
So.

NOTE Confidence: 0.8966218

85a90f19-c1f8-4d99-aa77-15d566ed20a2
00:05:09.660 --> 00:05:15.250
Here is the Boolean function for
that F X&Y is equal to X&Y, but

NOTE Confidence: 0.8966218

9c9cefb8-798c-486d-9bd4-2861474801d3
00:05:15.250 --> 00:05:20.410
here one thing actually matters
is the time because we want to

NOTE Confidence: 0.8966218

03d91af8-e7e0-4e6e-8b4d-9e5f3c27c6be
00:05:20.410 --> 00:05:26.860
see what's the value of F in the
next step or in the next time

NOTE Confidence: 0.8966218

c0f09ab7-78dd-4bd1-9df3-a0c662ff5905
00:05:26.860 --> 00:05:32.020
interval based on the value of
X&Y, and because you have the

NOTE Confidence: 0.8966218

3373d1b7-0c13-49ee-94b1-6301eadcadb9
00:05:32.020 --> 00:05:35.890
feedback from previous step, we
have to add this.

NOTE Confidence: 0.8702067

23128e19-d137-4395-9909-0a1316899ef2
00:05:37.530 --> 00:05:43.445
And Y and with the F the
output from the previous step T?

NOTE Confidence: 0.85089993

025cacdf-69b9-447c-98a2-d8160b79c7b3
00:05:44.850 --> 00:05:51.495
So F from T goes to one of the
input of the and with three

NOTE Confidence: 0.85089993

8f14d30e-83c3-471d-8b19-25d623c649ea
00:05:51.495 --> 00:05:56.368
inputs. But this F comes from
the previous system, so F T&Y&X

NOTE Confidence: 0.85089993

c0ca93fc-ddda-4fbd-a491-7856d39d1efc
00:05:56.368 --> 00:06:01.684
now becomes the X&Y, but this
time in the T + 1.

NOTE Confidence: 0.91434216

6ab0906b-dbd3-4007-aee7-92aadb3c9504
00:06:02.880 --> 00:06:04.390
So let's see what happens.

NOTE Confidence: 0.86858875

d2e32018-5ed9-4bc7-ac6f-10a6fbaa9fc4
00:06:05.810 --> 00:06:11.396
By default, when you are in the
positive logic as we said in the

NOTE Confidence: 0.86858875

b6c645d5-2e46-4f92-8239-bef3ae8ecb53
00:06:11.396 --> 00:06:16.184
first, in the second chapter at
the start of the second chapter,

NOTE Confidence: 0.86858875

85396066-1195-4d12-9ae5-20538963e3f9
00:06:16.184 --> 00:06:20.972
we usually by default we are in
the positive logic, meaning that

NOTE Confidence: 0.86858875

6c633d19-8a03-4600-85c4-1c8f4796c4a0
00:06:20.972 --> 00:06:25.760
all the circuits are in the low
voltage. Whenever we need to

NOTE Confidence: 0.86858875

20bd297a-e707-4d1e-8625-a58b95ad3246
00:06:25.760 --> 00:06:30.947
create a digit one, we have to
create, we have to increase the

NOTE Confidence: 0.86858875

8429e038-fbd2-4784-9713-0ac97dfac833
00:06:30.947 --> 00:06:35.735
voltage to plus five or within
that range. So by default when

NOTE Confidence: 0.86858875

6d013432-e24a-4010-a081-875c62b2997c
00:06:35.735 --> 00:06:38.129
there is no need for high

NOTE Confidence: 0.86768967

e29fe15e-0d1e-4a15-9490-ec6ca470c812
00:06:38.129 --> 00:06:42.920
voltage. All the circuits are in
a low voltage or zero ground.

NOTE Confidence: 0.89271164

0addaaf2-f028-4c53-aa35-9711900deb1b
00:06:44.220 --> 00:06:49.820
So imagine at the first step of
the time F0, the output is 0.

NOTE Confidence: 0.8943458

b25f0d07-2d39-4fab-9b79-734423ca2e68
00:06:50.910 --> 00:06:55.386
So we can assume that we go to
the previous time interval,

NOTE Confidence: 0.8943458

6677fbc0-1d3e-4a18-883b-159f29698c1b
00:06:55.386 --> 00:06:59.116
previous times up until the
first time interval, and we

NOTE Confidence: 0.8943458

67c93a84-f4b6-4099-83ac-c2edeb711847
00:06:59.116 --> 00:07:03.592
assume that the first time the
initial time interval it is 0.

NOTE Confidence: 0.8943458

471d94bc-7a9c-4478-8d72-258e32dff2df
00:07:03.592 --> 00:07:05.830
So based on the first time

NOTE Confidence: 0.8968953

42a28726-5120-45ba-8c6d-28aefb9c3362
00:07:05.830 --> 00:07:11.290
interval. So let's see
what's the progress of this.

NOTE Confidence: 0.8968953

a41af327-8f50-42e9-98f0-f907a86cf3e8
00:07:11.290 --> 00:07:17.530
I mean simplest form of the
sequential logic at the point 0 F

NOTE Confidence: 0.8968953

cbacdf39-4846-434f-8953-b670aee20e66
00:07:17.530 --> 00:07:19.090
gonna be 0.

NOTE Confidence: 0.7943841

137aa450-0551-4aa3-9fca-b3a82a67e247
00:07:21.510 --> 00:07:26.094
And why is 1,X
is 1 so becoms?

NOTE Confidence: 0.43881908

b209e710-bb0b-4250-a199-1cdbacf0a335
00:07:27.500 --> 00:07:28.630
Ah, sorry.

NOTE Confidence: 0.8803259

9dcc7a38-c291-4f29-8001-12988bd07ba7
00:07:30.410 --> 00:07:34.838
I becomes one and with one
and with zero, so there is

NOTE Confidence: 0.8803259

fc66a538-9d9e-4fdd-88c2-cf7a4dd96560
00:07:34.838 --> 00:07:40.004
all going to be 0. So again
as you can see here, at time

NOTE Confidence: 0.8803259

f92837d4-0f51-4d70-b651-71fb77e2f5d4
00:07:40.004 --> 00:07:45.170
zero F0 is 0. So whenever we
have a zero in an and, we

NOTE Confidence: 0.8803259

086b8f54-168b-4f79-9b4c-542e78f841ba
00:07:45.170 --> 00:07:49.229
don't look at the other
inputs. Simply output 0 so F

NOTE Confidence: 0.8803259

23e5c0e0-fdd8-4e49-b135-7d817060b173
00:07:49.229 --> 00:07:52.550
in the next time interval
going to be 0.

NOTE Confidence: 0.9388721

e4784d5e-71e4-4d99-bbb1-71249f5d24d8
00:07:54.170 --> 00:07:55.280
The next step.

NOTE Confidence: 0.86793286

9be95193-e106-43c9-8d65-42ba8918bceb
00:07:56.060 --> 00:08:01.044
As you can see here, because F
is zero in the previous step. So

NOTE Confidence: 0.86793286

3080d08d-f5ec-4fda-a4f4-b3809d1719a5
00:08:01.044 --> 00:08:06.028
because it goes to the one of
the input of the and, the output

NOTE Confidence: 0.86793286

defcbcb4-e4cc-4683-a6d5-0689f3b18677
00:08:06.028 --> 00:08:10.656
in the next step going to be 0.
So this logic circuit actually

NOTE Confidence: 0.86793286

59fb68de-fb5c-4c68-aa5a-861674585996
00:08:10.656 --> 00:08:14.928
always output zero and doesn't
look at the X&Y because F is

NOTE Confidence: 0.86793286

016ca4d0-a44e-44ea-8012-143892b03547
00:08:14.928 --> 00:08:20.268
always zero and one of the input
of the and is 0. So simply output

NOTE Confidence: 0.86853075

daa613d2-68e1-419f-8d7a-8d8d01f8244a
00:08:20.268 --> 00:08:27.194
0. So with this simplest form of
the sequential logic, as you can

NOTE Confidence: 0.86853075

0d4d2da1-a071-420e-861b-92e90279b941
00:08:27.194 --> 00:08:32.606
see here, we cannot memorize the
digit one. It always outputs

NOTE Confidence: 0.86853075

bc8743fb-2705-4b03-81fb-1a621c9afc8e
00:08:32.606 --> 00:08:35.558
zero kind of just memorizing 0.

NOTE Confidence: 0.8883301

5194a40f-7d59-4e80-993a-b417b4a9c7ae
00:08:36.920 --> 00:08:40.770
So you could say that what
happens in the negative logic

NOTE Confidence: 0.8883301

a1458b77-a901-4f1a-9720-d8e9fb336f00
00:08:40.770 --> 00:08:45.320
when the initial step is 1? For
instance at. If we assume that

NOTE Confidence: 0.8883301

1accd024-7f89-4f8a-af9b-67639851104d
00:08:45.320 --> 00:08:47.420
at the first time in step.

NOTE Confidence: 0.85678047

c7e1121e-e442-4810-af28-906f4be0ca52
00:08:48.420 --> 00:08:53.672
This logic outputs one, so even
if the first time interval F at

NOTE Confidence: 0.85678047

4e44978b-21c7-4b2e-b9c9-7d803d712413
00:08:53.672 --> 00:08:58.520
times zero becomes one, you can
see that one comes here. Assume

NOTE Confidence: 0.85678047

8a1e7c38-2483-46ef-b0c5-df7bc40ce3fd
00:08:58.520 --> 00:09:04.984
that in this is that we have one
X&Y and one as on this one which

NOTE Confidence: 0.85678047

c96277a7-862b-4b5a-ba44-25e6ae05fea7
00:09:04.984 --> 00:09:11.044
is 1, so one and one, and if we
assume that the initial step of

NOTE Confidence: 0.85678047

828cbf12-0bcd-46f5-b8c1-a492c67de346
00:09:11.044 --> 00:09:15.892
F is 1, so one, so the output
going to be 1.

NOTE Confidence: 0.8937476

005f1e8c-430e-4172-afc8-e6baf2997e4f
00:09:16.960 --> 00:09:23.490
OK, and then after this time
interval Y becomes 0.

NOTE Confidence: 0.8465486

5a0d0861-8942-4156-918f-18a41cc86828
00:09:24.070 --> 00:09:28.074
And because Y becomes zero, this
logic circuit goes to 0.

NOTE Confidence: 0.8729

f4331a3b-2339-4522-90aa-da10c9390997
00:09:29.350 --> 00:09:34.719
And then when it goes to zero,
it never can recover to one

NOTE Confidence: 0.8729

a8a44cdd-4bd6-4ded-bb40-1cd851ffe138
00:09:34.719 --> 00:09:40.088
because this logic circuit, if
it goes to the zero state, the F

NOTE Confidence: 0.8729

5803e181-7939-41ef-a3f3-4a6fecac6599
00:09:40.088 --> 00:09:45.457
gonna be always zero and makes
the output always 0, even if X&Y

NOTE Confidence: 0.8729

717051e1-285f-49af-8f01-12d1fdc1ad2a
00:09:45.457 --> 00:09:50.413
are different values, or both or
one. So this logic circuit, even

NOTE Confidence: 0.8729

71fc358f-2da9-4bc2-963e-a1915a1916c6
00:09:50.413 --> 00:09:55.782
if you are in the negative logic
and the default value for the

NOTE Confidence: 0.8729

dba0daa5-014b-4ad1-84da-45eb1d680a07
00:09:55.782 --> 00:09:57.847
time step F0, is 1.

NOTE Confidence: 0.83949995

fa45c6a8-82a4-4b53-b77a-e8c2e5486f9d
00:09:59.190 --> 00:10:04.862
For awhile. Becomes one, but if
it reaches 0 state actually

NOTE Confidence: 0.83949995

8eaf9f3f-5574-44b1-8b01-d92aa8536e4a
00:10:04.862 --> 00:10:06.974
then it's always 0.

NOTE Confidence: 0.8479328

48012cf6-018f-4749-b6ce-a2010c34b3cd
00:10:07.610 --> 00:10:13.093
So. Uh, by this logic circuit,
we can say that this logic

NOTE Confidence: 0.8479328

e03454c7-8edf-4038-9514-c841eb6df775
00:10:13.093 --> 00:10:16.976
circuit cannot memorize one
because if it becomes one and if

NOTE Confidence: 0.8479328

92862d5e-76fc-4ca1-b012-9aa9a87c97ab
00:10:16.976 --> 00:10:22.271
one of the inputs X or Y becomes
zero and it goes to the zero

NOTE Confidence: 0.8479328

8153b787-072b-4890-a814-fc676a6058db
00:10:22.271 --> 00:10:26.860
state it is it remains there and
it never recovers to re memorize

NOTE Confidence: 0.8479328

014a20e9-044e-4710-8381-fb41a8c27ba4
00:10:26.860 --> 00:10:27.919
another digit 1.

NOTE Confidence: 0.87284935

6dc296b8-ae01-4066-9b8e-1c84de99cd77
00:10:30.160 --> 00:10:34.080
So let's. Try another
sequential logic. Just

NOTE Confidence: 0.87284935

550cb7f0-c03c-45dd-a4d0-0c5af2b90d2f
00:10:34.080 --> 00:10:37.092
change the just to fix that.

NOTE Confidence: 0.8419635

6788bc85-1bc4-4afb-b977-0eb136d3e676
00:10:38.370 --> 00:10:42.680
To try that to memorize zero
and then memorize one

NOTE Confidence: 0.8419635

617d16d5-fe62-4014-9c29-d2db8f61a525
00:10:42.680 --> 00:10:46.128
whenever we want to memorize
it binary number.

NOTE Confidence: 0.80749416

2006c1fb-a79e-4334-add9-027c2adb98cb
00:10:47.260 --> 00:10:53.740
So I just added not a gate here
just to see what happens if we

NOTE Confidence: 0.80749416

63958dbd-4294-4fe2-a0c4-2dd41156a981
00:10:53.740 --> 00:10:58.492
do the feedback and then and not
to the and gate.

NOTE Confidence: 0.92000353

48211b00-f074-406f-82aa-f7c7b922846c
00:10:59.330 --> 00:11:03.674
So as you can see here, the
difference here is that X&Y.

NOTE Confidence: 0.85088754

4895f8ca-f19a-4e2c-9cd3-1dc1aa891271
00:11:04.290 --> 00:11:07.629
And F bar or F prime from previous

NOTE Confidence: 0.9111807

5faed85d-ef1c-42d4-ad1e-30784dfc92fd
00:11:07.629 --> 00:11:14.060
step. And we are in the positive
logic by default. So the first

NOTE Confidence: 0.9111807

7cdbc52c-555d-4767-858a-5f6620597cff
00:11:14.060 --> 00:11:15.800
step F0 is 0.

NOTE Confidence: 0.9245291

26214892-ef3b-487d-afb5-5292998910cb
00:11:17.410 --> 00:11:18.030
So.

NOTE Confidence: 0.8587805

28801a99-818e-4bce-9a70-b97a35d6c35e
00:11:19.050 --> 00:11:25.731
If you start at the first time,
X is 1,X is 1. Y is one OK and

NOTE Confidence: 0.8587805

312993f8-0bca-458b-9d84-c9ba3a49ccb5
00:11:25.731 --> 00:11:30.054
the initial step of the F at
times zero is 0?

NOTE Confidence: 0.88805246

8956b3f1-5712-4d2d-8d0e-78e6d0a5f36a
00:11:30.990 --> 00:11:36.666
So after Delta T propagation
delay one and one and 0.

NOTE Confidence: 0.93040484

3a1fe610-1a35-42d3-83c3-ff7ac4d2b4a5
00:11:37.450 --> 00:11:39.560
So one and one and.

NOTE Confidence: 0.86200863

493fe2d1-e803-44eb-a925-00dbf602091b
00:11:40.220 --> 00:11:46.109
Here goes 0. Here comes the
initial F is 0 and then not

NOTE Confidence: 0.86200863

534a38fe-ca0b-4a6b-913b-4c4eab9825c3
00:11:46.109 --> 00:11:51.545
becomes one, so zero prime one
and one and one becomes one.

NOTE Confidence: 0.80470926

eef87e4d-61dd-4c74-b2af-30ec25bd508e
00:11:52.380 --> 00:11:58.414
So at initial after Delta T time
step we have one in the output

NOTE Confidence: 0.80470926

fc99b43a-d246-421f-801e-60ee4ce008c0
00:11:58.414 --> 00:11:59.707
in the F.

NOTE Confidence: 0.90264934

4025cfa0-c48b-4021-8793-e11b730426d3
00:12:00.790 --> 00:12:04.480
So FX&Y T + 1 here.

NOTE Confidence: 0.87912613

4f523859-3499-4372-aac4-33131d26cba9
00:12:05.600 --> 00:12:08.000
Up until here we have one in the

NOTE Confidence: 0.8652723

bfbe4788-0653-4c7a-add0-ed8dd9c931e7
00:12:08.000 --> 00:12:14.330
output. So let's see what
happens next after Delta T, so

NOTE Confidence: 0.8652723

92ab5d20-0925-4716-89e8-6d496ee15037
00:12:14.330 --> 00:12:20.462
this F becomes one and one
comes here becomes not and one

NOTE Confidence: 0.8652723

1f16e2ac-b784-4888-acbf-336aa41f9959
00:12:20.462 --> 00:12:27.616
not becomes 0 after 2 delta T after
another Delta T, you see that X.

NOTE Confidence: 0.8698456

0fc8df65-dc72-4d40-9bb1-f9845b50eca4
00:12:28.440 --> 00:12:30.848
As you can see here, X is 1

NOTE Confidence: 0.87018645

1d1fe825-9dd4-4b29-a1a6-dd025d6831a9
00:12:30.848 --> 00:12:37.268
still. Y is one is still so
X&Y is still there one, however

NOTE Confidence: 0.8327961

d2414d65-b21f-4c07-8940-baec5449a5d7
00:12:37.268 --> 00:12:44.004
F? In the previous step, becomes
one and now one bar or prime

NOTE Confidence: 0.8327961

b7f17854-3f96-418c-8d82-28a9f57f22e4
00:12:44.004 --> 00:12:49.608
becomes zero and then reduced. I
mean reduce the high voltage to

NOTE Confidence: 0.8327961

d29b784d-1248-45dd-9194-f2cbe25de335
00:12:49.608 --> 00:12:53.344
0 for the F so it drops from 1 to 0.

NOTE Confidence: 0.92531574

8434681b-5e78-4e26-a125-6f18bc045bea
00:12:54.730 --> 00:12:56.770
And then see what happens next.

NOTE Confidence: 0.87871146

9583d80a-b360-482d-a6f7-bb015c08282e
00:12:57.760 --> 00:13:04.000
At the third Delta T, so after
another step, the previous F was

NOTE Confidence: 0.8479633

798dfca1-15b6-4c08-99a3-415e262959ac
00:13:04.000 --> 00:13:09.820
zero. Zero comes here and then
applies. The not becomes one.

NOTE Confidence: 0.8473731

c920e840-3c15-4e61-b41a-7ff4e663a186
00:13:10.550 --> 00:13:17.528
So here. The previous step of
the F2  it is zero, and

NOTE Confidence: 0.8473731

77f4dc1f-59eb-47ef-bbf4-f66e23b42ad2
00:13:17.528 --> 00:13:19.240
then bar becomes one.

NOTE Confidence: 0.85090995

0b11cb25-d76a-43ea-a449-8c59fe63b495
00:13:20.720 --> 00:13:27.110
Now we have to see the X&Y
in this Delta T and the third

NOTE Confidence: 0.85090995

1ae84954-03b6-46ef-8104-d9cf6a4a669c
00:13:27.110 --> 00:13:34.352
Delta T y is zero, X is 1, so one
and zero and zero bar from the F

NOTE Confidence: 0.85090995

cc2e39af-95c8-4583-80c8-729a45efab62
00:13:34.352 --> 00:13:39.464
from previous step. So because
Y is zero, it makes the output

NOTE Confidence: 0.85090995

f84e668e-b421-4c24-9723-63429102641e
00:13:39.464 --> 00:13:41.168
of the and 0.

NOTE Confidence: 0.90946674

aff3c995-418d-47fe-892f-dbc3065e16e3
00:13:43.740 --> 00:13:49.065
And then at 4th step as you can
see here, you have to check what

NOTE Confidence: 0.90946674

903c3d85-0bc3-47a7-a145-b98a8901b70c
00:13:49.065 --> 00:13:52.615
was the value of F in the
previous time interval.

NOTE Confidence: 0.87013537

a2d94bf6-14cb-4f04-829e-9f578dac0bcc
00:13:53.590 --> 00:13:59.014
And what's the current value of
X&Y? So here the current value

NOTE Confidence: 0.87013537

1f88d3ae-dad8-4874-a351-976a18e24149
00:13:59.014 --> 00:14:01.274
of X&Y are both 0.

NOTE Confidence: 0.84467095

49bf59c2-2c9d-47e7-ba72-6336c196babc
00:14:01.830 --> 00:14:05.313
So whatever the previous
value of F doesn't matter

NOTE Confidence: 0.84467095

38da209e-2cc2-42a8-9b59-79defeb0fdbf
00:14:05.313 --> 00:14:09.183
actually because this is 0
not becomes one, but X

NOTE Confidence: 0.84467095

687832b3-9e78-460e-9b23-1d8821b6e1c8
00:14:09.183 --> 00:14:11.505
and Y are 0, so it's still 0.

NOTE Confidence: 0.8331166

e44b0319-0500-453f-9aea-fb30c6314dc2
00:14:13.200 --> 00:14:19.950
So as long as X and Y are 0 all
the output of the F gonna be

NOTE Confidence: 0.8331166

d31c1c7d-980c-4030-9e71-8c0908e15bc9
00:14:19.950 --> 00:14:24.900
always zero. Although we have a
feedback from F bar here

NOTE Confidence: 0.8331166

4edd1a87-7e05-4ccb-a4cb-62285ab545dd
00:14:24.900 --> 00:14:29.850
because however, because X and
Y are 0 the output  is always zero.

NOTE Confidence: 0.89083

25008ed7-0108-496e-86c0-84493b22caf8
00:14:31.010 --> 00:14:37.910
So my question is here, is this
so now we know that the F from

NOTE Confidence: 0.89083

b1e7fb52-46a5-431a-bf53-812fcf2e2035
00:14:37.910 --> 00:14:41.130
previous time is 0 and now X&Y

NOTE Confidence: 0.88170636

4b7176d1-0498-43e0-b454-8d6d8150f445
00:14:41.130 --> 00:14:45.086
becomes one. What would
be the output of F in

NOTE Confidence: 0.88170636

31cde3bb-37e1-4c16-a4f1-4d09e986e4f2
00:14:45.086 --> 00:14:46.274
the new time interval?

NOTE Confidence: 0.92390746

a515cd66-1ac2-480d-8362-506f3f985685
00:14:51.060 --> 00:14:53.587
Correct, because as
you can see here.

NOTE Confidence: 0.7945917

d45dca2f-960b-4e8a-8a76-85d714d76a63
00:14:55.690 --> 00:14:57.769
F is 0.

NOTE Confidence: 0.84729415

b572d2a9-6bf4-4a15-b00c-139c86bac94d
00:14:58.990 --> 00:15:04.028
To the next of previous time
interval, the next zero not

NOTE Confidence: 0.84729415

c1b1fe6a-dbe0-4f58-b900-349cba435db5
00:15:04.028 --> 00:15:06.318
becomes one, so this input

NOTE Confidence: 0.9089868

90d17b06-afdd-4469-9480-29fd52b78cc6
00:15:06.318 --> 00:15:12.822
becomes one. X is 1 already.
Y is 1 already so one and

NOTE Confidence: 0.9089868

ee2595a2-f616-4567-8825-143fdb5ebcf5
00:15:12.822 --> 00:15:17.242
one and one becomes one? So
it goes to one?

NOTE Confidence: 0.8962337

b56cc694-6656-4154-a6c6-2c69881023e0
00:15:18.920 --> 00:15:25.679
However. It keeps it only
remains at one for Delta T. The

NOTE Confidence: 0.8962337

eb2335ec-ce2c-4b38-83ea-c1f4604159ec
00:15:25.679 --> 00:15:31.965
reason is after the Delta T this
is 1. One goes here, then not

NOTE Confidence: 0.8962337

6379514b-fe13-493c-8177-67ed3bbcd89b
00:15:31.965 --> 00:15:37.802
becomes zero and then makes the
output of the and in the next

NOTE Confidence: 0.93629646

a5bbca60-b644-46af-8dfe-30afac88ccfd
00:15:37.802 --> 00:15:40.748
step 0. So it is 1.

NOTE Confidence: 0.84355414

dba45462-cf5f-4281-96b3-2cec0aa5aa72
00:15:41.310 --> 00:15:46.801
Not. Here it becomes not becomes
zero the and gonna be 0.

NOTE Confidence: 0.87192607

013b58eb-e076-44a7-b76e-c9dd6242946f
00:15:48.280 --> 00:15:51.374
Again, for Delta T it keeps 0.

NOTE Confidence: 0.8505059

a4ab793d-1a2a-477a-9e88-798f07b18043
00:15:52.490 --> 00:15:58.280
And then this not comes to the F
becomes a 0, not becomes one. So

NOTE Confidence: 0.8505059

5674d0b5-38e7-4be7-a621-14c6e81880e1
00:15:58.280 --> 00:16:04.456
now X is 1. Y is 1 so one and
one and one becomes one? So

NOTE Confidence: 0.8505059

2fcdfb0e-fdc1-48ff-8728-c94b56c33da7
00:16:04.456 --> 00:16:06.386
again goes to the one.

NOTE Confidence: 0.87867814

f67f8038-d6f1-49fa-90f5-53c290c56131
00:16:07.430 --> 00:16:13.189
But keeps for Delta T1, but one
comes here not becomes zero and

NOTE Confidence: 0.87867814

8a50621b-faea-4777-95a1-6d4827e2ee8a
00:16:13.189 --> 00:16:20.277
then makes the and 0. So as you
can see here, as long as X&Y are

NOTE Confidence: 0.87867814

75444675-5a52-45e5-a827-0b3cced08f36
00:16:20.277 --> 00:16:25.593
one, both these inputs are one.
The only thing matters is the

NOTE Confidence: 0.87867814

e9d5c5cd-158c-46bd-bef3-3125649ce775
00:16:25.593 --> 00:16:30.023
feedback from the output.
However, if F from the previous

NOTE Confidence: 0.87867814

2acc3f36-9217-400d-9447-da952ef1f3f0
00:16:30.023 --> 00:16:35.782
step is zero, goes to one and
then after a while it becomes

NOTE Confidence: 0.87867814

d0b6c49d-d99f-42e5-93af-9a850c95246e
00:16:35.782 --> 00:16:37.554
one, not becomes 0.

NOTE Confidence: 0.8687452

24352ab8-2a82-4b3b-a499-80e4d721ab05
00:16:38.040 --> 00:16:40.410
And then zero becomes one, an

NOTE Confidence: 0.9427256

f4a7d1de-6740-4925-abe0-6e49ae336bf8
00:16:40.410 --> 00:16:43.070
etc. So you see that.

NOTE Confidence: 0.85167915

5ba328de-897a-4242-99a7-81898982110a
00:16:43.860 --> 00:16:49.416
This sequential logic is trying
to recover from zero to 1, but

NOTE Confidence: 0.85167915

29587bda-fcfc-4640-98cc-be326c878d98
00:16:49.416 --> 00:16:55.898
it cannot keep at one because as
long as it becomes one after the

NOTE Confidence: 0.85167915

d115a872-f4dc-42fd-996d-e6c0e0f4f35b
00:16:55.898 --> 00:17:01.454
Delta T applies, the not one
becomes zero and next the and

NOTE Confidence: 0.85167915

0c6c303a-1736-4efa-b919-eb22ce59878a
00:17:01.454 --> 00:17:07.473
zero and again it becomes zero
and then not becomes one, so it

NOTE Confidence: 0.85167915

c71c123f-01c3-457a-815b-8c309b71e694
00:17:07.473 --> 00:17:11.177
jitters. Or it's kind of
intermittently swapped between

NOTE Confidence: 0.85167915

99f65d9a-c6f0-40b9-8191-743f5e5df754
00:17:11.177 --> 00:17:13.955
zero and one. It never actually

NOTE Confidence: 0.91472185

003d3b5f-c020-46c9-943e-9d7b3e12db16
00:17:13.955 --> 00:17:15.590
remains stable. At 1

NOTE Confidence: 0.90000665

54c6132f-9eaa-4543-8314-91b5e44b6f8b
00:17:16.910 --> 00:17:21.482
so this is the problem of this
sequential logic, but at least

NOTE Confidence: 0.90000665

773fdd93-05d7-4512-8042-9c2046db8532
00:17:21.482 --> 00:17:26.816
we could cover for a very moment
here to one, so it's better from

NOTE Confidence: 0.90000665

e987f5f4-f95a-4a3b-90f9-e1be5d8dad8b
00:17:26.816 --> 00:17:27.959
the previous logic.

NOTE Confidence: 0.9408953

57de2b68-fef0-4049-a603-bea418626590
00:17:31.560 --> 00:17:32.380
So.

NOTE Confidence: 0.8842929

cce02795-8928-42f7-a696-ce3e831acadd
00:17:34.110 --> 00:17:40.858
Now let's this is the I mean.
This is the kind of work we're

NOTE Confidence: 0.8842929

ee3c7321-3a27-4210-a848-47167f0b2be4
00:17:40.858 --> 00:17:46.642
going to do today. We're trying
to build a combination of logic

NOTE Confidence: 0.8842929

dda61fc5-16c1-476a-b8e5-99cb54307d67
00:17:46.642 --> 00:17:52.908
by adding a feedback to memorize
a bit just one bit, either zero

NOTE Confidence: 0.8516683

22cfba5b-298b-486a-88fc-35b64a33fd88
00:17:52.908 --> 00:17:58.574
or one. For the first design, we
saw that for this diagram you

NOTE Confidence: 0.8516683

0fe7d85c-e01a-4edb-b395-c6dcf1b2c705
00:17:58.574 --> 00:18:02.822
saw that it can always memorize
zero, and it can never recover

NOTE Confidence: 0.8516683

2e23c41b-03ad-4be3-a913-f5dcec546564
00:18:02.822 --> 00:18:07.070
to one, so we cannot memorize
one with this logic circuit with

NOTE Confidence: 0.8516683

df82a343-2159-4822-973c-40406ac398f2
00:18:07.070 --> 00:18:10.610
this logic circuit, we can
recover from this zero state,

NOTE Confidence: 0.8516683

ed8c0fb1-1050-4080-8325-d57f318c04e0
00:18:10.610 --> 00:18:15.566
but it goes to zero and one as
you can see here, it just

NOTE Confidence: 0.8516683

2d9b992d-f628-4ca4-95c3-2faf417e5985
00:18:15.566 --> 00:18:16.628
details within 0 1.

NOTE Confidence: 0.8721671

b14366ff-6619-45d2-adc3-7abc25eaea90
00:18:18.110 --> 00:18:22.764
So it's kind of better, but it's
not actually correct. For now in

NOTE Confidence: 0.8721671

3a1e92e4-d1a5-4393-abe9-5d3ba4227c95
00:18:22.764 --> 00:18:26.344
practice, so we're going to
build a sequential logic that

NOTE Confidence: 0.8721671

76b7b070-6454-4995-8682-cc75b6601a37
00:18:26.344 --> 00:18:30.282
can memorize whenever we want to
memorize zero. It keeps zero

NOTE Confidence: 0.8721671

f4034e2c-7d98-480f-8231-d44fabf9e0ef
00:18:30.282 --> 00:18:34.578
whenever we want to memorize
one. It keeps one, so we can

NOTE Confidence: 0.8721671

1deb8e87-be56-44f1-847d-4eb6513cf327
00:18:34.578 --> 00:18:38.874
handle what digit we want to
memorize, and as long as we

NOTE Confidence: 0.8721671

e42ae917-208d-4155-884c-bedcf87ef3c9
00:18:38.874 --> 00:18:42.812
decide to memorize a digit, we
want that sequential logic to

NOTE Confidence: 0.8721671

ed23e167-cfea-4af0-8e37-8da51262c621
00:18:42.812 --> 00:18:44.602
memorize that digit we want.

NOTE Confidence: 0.82989615

cc68a468-9b57-4616-ab49-7486b3a0ec08
00:18:45.830 --> 00:18:51.670
So let's. see this, we already
saw this gate. This is called

NOTE Confidence: 0.82989615

da413365-253a-450e-849d-b9131cab5978
00:18:51.670 --> 00:18:56.170
buffer. So for the buffer gate
simply whatever is the input, it

NOTE Confidence: 0.82989615

b19ad683-2a89-4bb5-a475-1f5ff9db89fa
00:18:56.170 --> 00:18:59.920
goes to the output just with.
With a propagation delay.

NOTE Confidence: 0.85900027

b30bbc68-d2af-4365-81e4-4c3334ec483e
00:19:00.760 --> 00:19:03.988
Sometimes we need to create some
delays, but in this course we

NOTE Confidence: 0.85900027

2c3c34c1-c1f3-4d70-8be0-48d3c20529f2
00:19:03.988 --> 00:19:07.485
said that the delay can be
assumed to be 0. So for the

NOTE Confidence: 0.85900027

c7a08c82-ba72-4b01-ae22-38590bed3846
00:19:07.485 --> 00:19:10.175
buffer gate, whatever goes to
the input goes the output.

NOTE Confidence: 0.85671735

eae82632-fc14-4f92-8d78-247cf3bd5d9a
00:19:11.100 --> 00:19:16.140
So if I attach the output of
this gate to the input, we could

NOTE Confidence: 0.85671735

ab51314c-ea2a-48cb-b194-616094972b72
00:19:16.140 --> 00:19:20.820
say that as long as we put one,
this circuit circulates to the

NOTE Confidence: 0.85671735

85fbd082-e49e-492c-9687-1eebf8b20c72
00:19:20.820 --> 00:19:25.500
value of 1. So we can say that
we are memorizing one because

NOTE Confidence: 0.85671735

68b8876b-89c4-4d05-ade1-db1f3ae3fff2
00:19:25.500 --> 00:19:29.460
one comes. Here, goes here, and
then comes here and etc.

NOTE Confidence: 0.88123506

cc85ae41-30bf-4fc2-a7aa-92ae6ba9ed19
00:19:31.140 --> 00:19:36.884
Also, we could say that we could
make it 0, so if I input zero it

NOTE Confidence: 0.88123506

27c70f62-444e-42b6-9681-eac47e8682bc
00:19:36.884 --> 00:19:41.192
goes to zero and then zero
comes. Here comes here. So it

NOTE Confidence: 0.88123506

235d163f-a583-4825-8daa-5ea117b255b9
00:19:41.192 --> 00:19:44.782
circulates to the zero state so
we can memorize 0.

NOTE Confidence: 0.7701537

6d21ccbb-eedd-4455-a902-52da1471183d
00:19:46.300 --> 00:19:51.830
But this a logic circuit with
feedback or sequential logic

NOTE Confidence: 0.7701537

a4c30107-59ec-47ab-b53a-c4258f58f276
00:19:51.830 --> 00:19:55.148
circuit has a problem. It is

NOTE Confidence: 0.8675032

07c057b7-01f3-4bac-906d-6799388dd23d
00:19:55.148 --> 00:20:00.106
logically incorrect. You
couldn't say that I could use a.

NOTE Confidence: 0.826219

d2330439-529b-4d91-bbc2-462623d8aa9b
00:20:00.190 --> 00:20:05.080
Buffer gates X and as long as X
is zero, it memorize zero as as

NOTE Confidence: 0.826219

3fcc1612-5dec-46f9-8696-1d1d282ae068
00:20:05.080 --> 00:20:06.710
long as it is 1.

NOTE Confidence: 0.8348944

1262e552-6f4f-44d0-bfe3-58a8b3a74bab
00:20:07.380 --> 00:20:10.120
It becomes memorizing 1?

NOTE Confidence: 0.9219561

58d1361d-8bf6-410e-b255-48b806be649e
00:20:10.800 --> 00:20:14.744
What's the problem? What's
the logical problem with

NOTE Confidence: 0.9219561

387e4c42-b0ff-45a3-9257-1f6181e8897f
00:20:14.744 --> 00:20:15.730
this circuit?

NOTE Confidence: 0.882389

89b77eae-818d-479c-868e-f05fac420318
00:20:20.150 --> 00:20:24.374
It might be, I mean, intuitive,
but not only in the engineering

NOTE Confidence: 0.882389

4dac166a-4bb2-4976-9b16-2e9e04bfa0d1
00:20:24.374 --> 00:20:27.894
perspective, but also in the
logical part. In this course.

NOTE Confidence: 0.882389

f89465d3-c6cf-40cc-a078-897b6e7c7144
00:20:27.894 --> 00:20:29.654
This logic is not correct.

NOTE Confidence: 0.78358805

4b874420-eb5c-4fcf-bbda-e5e550a9307f
00:20:33.720 --> 00:20:37.210
Ah Marco says that if X
changes, feedback is different.

NOTE Confidence: 0.78358805

e952dd17-7173-418c-81e6-b67617c910b3
00:20:37.210 --> 00:20:41.398
You right. But The thing is, we
can control their X. For

NOTE Confidence: 0.78358805

b130b7e6-170d-4714-a11b-1ffcb870fb9f
00:20:41.398 --> 00:20:46.284
instance, we say that we want to
memorize one, so we make X 1 and

NOTE Confidence: 0.78358805

aec748f8-b123-4292-976f-23d10fd0c832
00:20:46.284 --> 00:20:48.029
since then it memorized one.

NOTE Confidence: 0.8180926

f9ab7afa-10d7-4dfb-9b17-7ad1fdafb977
00:20:48.800 --> 00:20:54.305
Uh, if you want to change our
memory to 0 so we can make we

NOTE Confidence: 0.8180926

bb4fd369-0f97-442d-a8f0-8f46fc9dfa8d
00:20:54.305 --> 00:20:59.076
can apply the change to The x,x
becomes zero and then the this

NOTE Confidence: 0.8180926

4c67af8e-1b2a-444f-967e-81d6ca8c344c
00:20:59.076 --> 00:21:03.480
second memorize 0. So we decide
what bits we want to memorize.

NOTE Confidence: 0.8908275

f3838b5d-338d-4d0d-a2ed-5e8e8fa0b727
00:21:04.760 --> 00:21:08.684
But this cannot be applied in
not only practice, but also in

NOTE Confidence: 0.87084824

6a1d22fd-e065-4b02-a359-1a5268ea2655
00:21:08.684 --> 00:21:14.150
this course. The thing is, the
false. I mean design in this

NOTE Confidence: 0.87084824

471bb36c-335c-4666-86e3-b164ac18f2a5
00:21:14.150 --> 00:21:18.914
picture is that the buffer gate
has only one input. So although

NOTE Confidence: 0.87084824

70064e8b-a382-4a92-a8d4-3377449733c9
00:21:18.914 --> 00:21:24.075
you can make an attachment to
the output and you can say that,

NOTE Confidence: 0.87084824

8a45c1eb-4384-496e-abe4-cd3ac517ea1c
00:21:24.075 --> 00:21:28.442
let's see what's the output and
create another wire from the

NOTE Confidence: 0.87084824

2e6dd8e5-8478-4ef6-ba1e-2741ae6ab4b1
00:21:28.442 --> 00:21:33.206
output. But for the gates it
depends on the number of inputs

NOTE Confidence: 0.87084824

6ab3575d-8fab-4113-9409-d1102f63e674
00:21:33.206 --> 00:21:38.367
to the gate. We cannot simply
attach this one to the wire to

NOTE Confidence: 0.87084824

3252915e-3c4c-4fa4-85b7-291719820667
00:21:38.367 --> 00:21:40.352
the X. So what happens?

NOTE Confidence: 0.8613594

d828707a-8474-4e4b-b41b-cfd9f29df098
00:21:40.470 --> 00:21:46.138
X If X is zero an this one
becomes one in the previous

NOTE Confidence: 0.8613594

af7d14ce-551f-435e-bd61-18237c853912
00:21:46.138 --> 00:21:51.806
step. Imagine we have stored
one, so one comes here and if we

NOTE Confidence: 0.8613594

cb7d7398-12a3-479d-b39a-96788a843818
00:21:51.806 --> 00:21:57.910
make X 0 So what happens in this
point? There is no gate here so

NOTE Confidence: 0.8613594

b6087bf5-a17e-4a66-875d-7b3238373294
00:21:57.910 --> 00:22:01.398
we haven't studied any
attachment of wires with

NOTE Confidence: 0.8613594

8f47cd8c-b1e9-4807-bd5c-b648880e087e
00:22:01.398 --> 00:22:06.194
different binary values. So here
we have high voltage. Here we

NOTE Confidence: 0.8613594

324ec746-0a11-4e7f-ac10-6c09d320bcaf
00:22:06.194 --> 00:22:08.374
have low voltage. What happens

NOTE Confidence: 0.85214

e10578d8-a1a1-463a-ab84-12ddb1497a14
00:22:08.374 --> 00:22:12.995
here? We already knew that
when we have two inputs,

NOTE Confidence: 0.85214

af8909b4-9a95-4f46-93df-1b289f7ebd12
00:22:12.995 --> 00:22:17.375
we need a gate to apply on
that for the buffer gate.

NOTE Confidence: 0.8049422

8752ff5f-463c-4668-9e57-e095c0f5d64d
00:22:18.730 --> 00:22:20.390
You only accept one input.

NOTE Confidence: 0.8883159

55cc7984-8dc2-449d-9b5d-a15b33d0d9e2
00:22:21.380 --> 00:22:25.088
So we cannot simply attach the
wire from output to the input.

NOTE Confidence: 0.8690246

8003d9e6-ed35-4091-9c5a-1d332036c5ae
00:22:25.860 --> 00:22:29.402
So this is not logically
correct. It means that. I mean

NOTE Confidence: 0.8690246

e1bb7c19-51e5-44f9-80c3-0e0528e1b7c9
00:22:29.402 --> 00:22:33.910
it is very similar to the not
gate. So for the not gate you

NOTE Confidence: 0.8690246

4ec35451-a9d3-46fd-9c01-311783b64f98
00:22:33.910 --> 00:22:35.198
cannot simply input 2.

NOTE Confidence: 0.77901685

4861b47e-0bc5-4447-b879-fcb804a62d64
00:22:36.300 --> 00:22:39.630
Inputs, because not gate is only
accept one input.

NOTE Confidence: 0.84638464

e7a90521-e92d-4aed-acc7-d13f7ecec529
00:22:40.820 --> 00:22:44.560
So this is logically incorrect,
so you cannot build this at

NOTE Confidence: 0.84638464

e89ba468-2ff2-412d-b4e1-64d24ae16bd6
00:22:44.560 --> 00:22:48.980
logical level. Not only I mean,
I mean I also you cannot build

NOTE Confidence: 0.84638464

b97d7472-9e99-45a5-a5fe-dac2a0e7f6c9
00:22:48.980 --> 00:22:50.340
this in the practice.

NOTE Confidence: 0.89646953

b340e8f7-24bf-4ff6-bb4b-756b1c9c0d1f
00:22:52.010 --> 00:22:56.429
So let's pick another gate that
accept two inputs.

NOTE Confidence: 0.8500769

129dd4f9-977f-49c3-9856-432fef825e9c
00:22:57.940 --> 00:23:01.744
So for the two inputs at the
simplest gate gonna be, and

NOTE Confidence: 0.8500769

7c758ac6-9bb4-4e20-95d6-381b56f88656
00:23:01.744 --> 00:23:04.597
so let's try the feedback
with the and gate.

NOTE Confidence: 0.89098334

4ba434f0-9310-4f7a-b27e-a4cf7b3243b4
00:23:05.900 --> 00:23:11.659
So one of the input of the end
could be our control. Whatever

NOTE Confidence: 0.89098334

828ede10-7be6-4887-b9fd-af18859589b9
00:23:11.659 --> 00:23:13.874
we want to memorize, for

NOTE Confidence: 0.85189897

f9bc6b7d-92ec-4e93-a577-566404bb3b62
00:23:13.874 --> 00:23:20.360
instance X. And the output of
the and gate can be comes to the

NOTE Confidence: 0.85189897

0c4e24e0-e900-4115-960c-bd54cb3a9288
00:23:20.360 --> 00:23:23.960
feedback as the second input of
the and gate.

NOTE Confidence: 0.8585478

f3e80249-172c-46d0-9c2b-8c8aa0c74d2a
00:23:25.530 --> 00:23:30.660
So what happens with this?
What's the problem with

NOTE Confidence: 0.8585478

584fc674-d976-425e-8c4d-0721ee4236d1
00:23:30.660 --> 00:23:31.800
this design?

NOTE Confidence: 0.8722981

adc373db-2151-4f93-9547-88d75b98f6e3
00:23:35.290 --> 00:23:38.962
We already covered the problem
with this simplest design

NOTE Confidence: 0.8722981

806a1762-4914-436c-80bd-f27f2aea115a
00:23:38.962 --> 00:23:42.226
sequential logic design. What's
the problem with this?

NOTE Confidence: 0.90811694

32a76a35-ed8e-4a0d-b710-67055c23614e
00:23:45.470 --> 00:23:46.340
Any of you?

NOTE Confidence: 0.8286837

cf985ca7-5655-45ed-af14-baa33c514380
00:23:48.120 --> 00:23:50.430
Correct, Marco says that
it's cool.

NOTE Confidence: 0.85687053

cc76cdbc-21b5-44d8-b097-e37f1eb3729d
00:23:51.960 --> 00:23:55.400
Justin says 6, 6 oh sorry.

NOTE Confidence: 0.86504036

20d88999-f025-4917-bbac-824c71214dd1
00:23:57.270 --> 00:23:58.089
You mean 0?

NOTE Confidence: 0.8987873

4b8569c0-6ece-47e8-a6ff-253affdf08dc
00:23:59.590 --> 00:24:03.208
Yes, actually this this is very
similar to our.

NOTE Confidence: 0.87896216

951019df-0d7a-4f8d-afd7-43fd0716eb9b
00:24:03.930 --> 00:24:07.180
Let me come back here
to this here we have

NOTE Confidence: 0.87896216

6218576e-167e-4e63-b75d-591a39ff410f
00:24:07.180 --> 00:24:08.480
and the three input.

NOTE Confidence: 0.8307047

30007a92-25c4-4dec-91c9-47910788b18b
00:24:09.500 --> 00:24:12.206
In this design, you have added

NOTE Confidence: 0.84421235

190c4e30-cc1e-4bb3-b6f9-700a35f62345
00:24:12.206 --> 00:24:16.986
two inputs. And correct it
always stays at zero. And the

NOTE Confidence: 0.84421235

1d18179b-6a01-473a-895d-6e3362d2a5f7
00:24:16.986 --> 00:24:21.354
reason is by default if we
assume that our at time step

NOTE Confidence: 0.84421235

851e18da-8a03-4ec7-927f-24008a32ef47
00:24:21.354 --> 00:24:26.086
zero the output is 0,one of the
input of the and is zero,

NOTE Confidence: 0.84421235

d0cdeb4d-0500-4a07-983f-ce09d612eacc
00:24:26.086 --> 00:24:30.818
always 0 even the next step 0
to the next step zero, it

NOTE Confidence: 0.84421235

770d31cc-676f-42f5-92ff-e8d134f9b171
00:24:30.818 --> 00:24:32.274
always is, I mean.

NOTE Confidence: 0.8390858

fc3ac3c7-8401-415d-873b-0e2b7a2d58e8
00:24:33.850 --> 00:24:36.810
It stays at 0, even if at some

NOTE Confidence: 0.7956583

58477596-d2ca-458c-86ef-36eee69c0e28
00:24:36.810 --> 00:24:41.234
point. I'm assuming that from I
mean some, I mean.

NOTE Confidence: 0.9192186

7d4b5756-1757-43d2-822b-d1be0d7b5793
00:24:42.790 --> 00:24:45.760
Irregularities at some point we

NOTE Confidence: 0.85886645

d48fb48b-cd16-422e-a3f8-3e0e353000a9
00:24:45.760 --> 00:24:50.772
have one. Even if you have one
here, one comes here. It depends

NOTE Confidence: 0.85886645

f91c10ba-bd01-439e-9a4b-8e42eb9376bd
00:24:50.772 --> 00:24:56.052
on the X, so as long as we keep
one, the output gonna be one.

NOTE Confidence: 0.85886645

68a7f507-4c5b-490e-8d4b-a0bd0bb52067
00:24:56.052 --> 00:25:00.980
But suddenly if we do X 0 and it
goes to the zero state, it

NOTE Confidence: 0.85886645

9f7254db-2ecc-4446-96ea-bfbc30cd68cd
00:25:00.980 --> 00:25:05.204
remains at 0. So this gate or
this sequential logic, if it

NOTE Confidence: 0.85886645

602ec907-f682-446c-8716-447486a6f2e7
00:25:05.204 --> 00:25:09.076
goes to this zero state, it
remains there and it never

NOTE Confidence: 0.85886645

ae20446b-99e2-4fb7-a97e-fcfd7d2dd009
00:25:09.076 --> 00:25:12.596
recovers to the one even if you
change the X.

NOTE Confidence: 0.94219196

284cb022-6f03-4b4d-a568-bf5bfbf3d60b
00:25:14.400 --> 00:25:15.100
So.

NOTE Confidence: 0.86797595

9ca73e89-7c0f-4d0a-bc13-05a9c4954eb1
00:25:16.410 --> 00:25:22.024
Also, this one if we do the
feedback by not we saw that this

NOTE Confidence: 0.86797595

daf86160-62ab-431c-a353-7f804e0c3331
00:25:22.024 --> 00:25:26.034
logic circuit actually jitters
between if it goes to 0.

NOTE Confidence: 0.84781814

a33efdc5-8e8a-41d8-ac21-627b9e750cea
00:25:27.250 --> 00:25:32.134
Zero becomes one. Assume that X
is always one. If you assume

NOTE Confidence: 0.84781814

ffd91b96-2c6d-41ee-8185-f92b7133de1f
00:25:32.134 --> 00:25:37.425
that X is always one, meaning
that we want to memorize one. So

NOTE Confidence: 0.84781814

d8314449-e64d-4341-a7d2-38f3344b0918
00:25:37.425 --> 00:25:42.309
one comes here 0 by default,
zero comes here becomes one. So

NOTE Confidence: 0.84781814

14acb01d-9bf2-41dc-bebc-692cd61b5a6f
00:25:42.309 --> 00:25:44.344
the and gates becomes one.

NOTE Confidence: 0.8694056

e9ed202a-010b-4df5-ba55-035b1d319b11
00:25:44.980 --> 00:25:50.403
But after awhile one comes here,
not becomes zero becomes 0.

NOTE Confidence: 0.85803723

cfd7d976-e266-4082-8b8f-d87f645eacd4
00:25:51.070 --> 00:25:56.878
So the next step is 0 from one
goes to zero and if it goes to

NOTE Confidence: 0.85803723

421abb0b-ddbd-4639-9fb8-4d1ed28914f4
00:25:56.878 --> 00:26:01.960
0, not becomes one. So it goes
to the one so it always jitters

NOTE Confidence: 0.85803723

9a9ad1c7-38cf-4710-ab18-fe1b91fea577
00:26:01.960 --> 00:26:05.590
between zero and one as long as
X is 1.

NOTE Confidence: 0.7938505

6b7554e9-1af6-4e85-8d78-d77c7a92d011
00:26:06.270 --> 00:26:11.522
If X is zero, it's always
gonna be a stays at 0, so

NOTE Confidence: 0.7938505

e551f5e7-b6d6-4c4f-a627-5b9a6712dbf4
00:26:11.522 --> 00:26:16.370
again it cannot store 0 as
long as X is zero, it

NOTE Confidence: 0.7938505

c040916d-bb13-40ae-9afe-078d3d043f43
00:26:16.370 --> 00:26:20.410
memorized 0, but if X is
becomes becomes one. In

NOTE Confidence: 0.7938505

7de0479b-d009-41d5-bccf-cb12ed0e5338
00:26:20.410 --> 00:26:24.046
order to memorize one, it
jitters between zero and

NOTE Confidence: 0.7938505

6000a80e-1e91-41de-bbbc-e8779a208dd3
00:26:24.046 --> 00:26:28.086
one, so it never becomes
stable. At the law, high

NOTE Confidence: 0.7938505

d4489a0c-ad85-4b57-a528-0fbec0c090e5
00:26:28.086 --> 00:26:30.510
voltage for the value of 1.

NOTE Confidence: 0.8326477

135c0c7a-4eed-4609-8f4c-67c86a43357a
00:26:32.850 --> 00:26:37.894
So the next try gonna be this
one. You can try with other

NOTE Confidence: 0.8326477

452f2e6f-4924-419c-9172-1e14b5b309e8
00:26:37.894 --> 00:26:42.550
gates. For instance, you can
change the and with or we can

NOTE Confidence: 0.8326477

4f2da192-1980-427f-b7f2-45d70b58b057
00:26:42.550 --> 00:26:48.370
change the and with X or we can
change with nor with NAND and

NOTE Confidence: 0.8326477

43b9b333-6fc7-457e-94e4-632781d2d8b1
00:26:48.370 --> 00:26:53.414
practice at home. Is it possible
to memorize a bit by using one

NOTE Confidence: 0.8326477

e8e776aa-af08-4012-9b55-d06cb740310c
00:26:53.414 --> 00:26:58.458
gate and using a feedback to the
another input of that gate? For

NOTE Confidence: 0.8326477

dccd15e8-17d9-4876-aaba-aba071379bd4
00:26:58.458 --> 00:27:02.726
instance for the OR gate, try
that or for the exclusive.

NOTE Confidence: 0.85423905

1231c306-de31-4119-a291-826129375181
00:27:02.860 --> 00:27:06.900
Or or for the NAND or nor
Gates try this.

NOTE Confidence: 0.8546787

46af760c-1196-4c23-b93b-fe4f6f8b6705
00:27:08.480 --> 00:27:12.956
If you try that, you see that
there are some problems with

NOTE Confidence: 0.8546787

e5e95d0d-03d6-4d3f-98ff-3427447ebd6e
00:27:12.956 --> 00:27:17.432
those, I mean sequential logic
with only one gate, but the next

NOTE Confidence: 0.8546787

0df88c5b-9823-4ce1-8b77-ab80c147ea06
00:27:17.432 --> 00:27:19.297
try gonna be using 2.

NOTE Confidence: 0.78161705

3a74d81e-0475-4912-a70a-baf2b09ec340
00:27:19.900 --> 00:27:22.380
And Gates an using these

NOTE Confidence: 0.8663015

5c0bb863-ca6d-48bb-9345-9005db0aa8e5
00:27:22.380 --> 00:27:26.324
feedbacks. Instead of just
feedback into the gate itself,

NOTE Confidence: 0.8663015

b5a8837f-df37-4aa0-add1-fd74141b45c6
00:27:26.324 --> 00:27:28.412
let's do a feedback to another

NOTE Confidence: 0.844543

c2e2efb4-8788-4e68-ba03-870c4441f656
00:27:28.412 --> 00:27:33.774
gate. So we have two ands here.
X goes the first and. y goes

NOTE Confidence: 0.844543

ef649cef-f13a-4240-abfc-f4726dda1300
00:27:33.774 --> 00:27:37.492
to the second one and the output
of the first and

NOTE Confidence: 0.85150933

24d5422b-0910-4621-a050-71d5a9797c38
00:27:38.610 --> 00:27:43.394
Goes to the second input of the
2nd and the output of this

NOTE Confidence: 0.85150933

da3b8dae-b655-4d69-8080-dd3349dc37ec
00:27:43.394 --> 00:27:47.442
second, and goes to the another
input of the first and.

NOTE Confidence: 0.92258817

03f907e3-a813-4bc9-89fd-294bde3a96c8
00:27:48.650 --> 00:27:53.131
So. This is the way we do. The
feedback in this design.

NOTE Confidence: 0.7804791

ee8f630d-dd06-4e15-8f41-a56234a61104
00:27:54.760 --> 00:27:57.320
So kind of cross feedback.

NOTE Confidence: 0.8862477

9c5eb49d-f1b0-41bc-9e3a-b85cf456ea78
00:27:58.370 --> 00:28:02.298
So let's see what happens
with this design.

NOTE Confidence: 0.84866166

fa5e8eb5-319f-4a3c-8f8a-b8e18431bd99
00:28:04.240 --> 00:28:09.505
So if you are given this design,
and x is zero and Y is 0.

NOTE Confidence: 0.9351144

312a6cf6-9dd3-48c8-8791-e2e22e00c017
00:28:10.620 --> 00:28:11.540
What happens?

NOTE Confidence: 0.84280795

8fa18bd4-17f6-435d-9e80-6dc16e3bb361
00:28:13.610 --> 00:28:18.940
As you can see here, so the
another input of each and each

NOTE Confidence: 0.84280795

e76629b1-30bc-4c63-a2bf-9b7b59991806
00:28:18.940 --> 00:28:23.450
and for a first and another
input comes from the F2.

NOTE Confidence: 0.89605266

fe0a48d0-f8ed-4a31-b6a4-bbaf0871e16f
00:28:24.380 --> 00:28:29.580
At time T, in order to see
what's the F1 in at time T + 1.

NOTE Confidence: 0.7906541

79cd941e-8e94-4124-9e14-cb10e71d8e6d
00:28:30.820 --> 00:28:33.646
So current step. What's the next

NOTE Confidence: 0.89664644

c6644666-ddbc-4a32-b012-3808e8bf1114
00:28:33.646 --> 00:28:40.370
step? Also, for the 2nd
and O and with the current

NOTE Confidence: 0.89664644

cdc5a58e-de02-4678-b742-909af939d09b
00:28:40.370 --> 00:28:41.948
value of F1.

NOTE Confidence: 0.9148762

2a896b4c-d7f5-4e10-8278-83017d16fca5
00:28:43.020 --> 00:28:46.397
And in order to see what's the
next value of F2.

NOTE Confidence: 0.89983815

95f8ad29-88ab-40d5-896e-5eec91e0e8c3
00:28:48.170 --> 00:28:52.122
So imagine we look at the logic
circuit correctly and we want to

NOTE Confidence: 0.89983815

8bf862fe-776a-4755-926e-d6fccfcdca02
00:28:52.122 --> 00:28:53.338
see what happens next.

NOTE Confidence: 0.8679032

02a77abc-72c9-4419-8fc0-d078693926a5
00:28:54.440 --> 00:28:59.480
So as you already knew, for the
and gate, as long as one of the

NOTE Confidence: 0.8679032

a4c8d1f2-c3a6-444b-8723-6b5d43db98f2
00:28:59.480 --> 00:29:04.160
input is zero, you don't have to
wait for the other input, so

NOTE Confidence: 0.8679032

d299c213-f933-498d-8c98-a9a35b95e590
00:29:04.160 --> 00:29:05.960
simply output 0, so if.

NOTE Confidence: 0.8543229

1a302802-1e76-4d30-b50c-969b83a42904
00:29:06.960 --> 00:29:11.300
X is Zero Y is 0. The output for
the F1 and F2 is 0.

NOTE Confidence: 0.7839173

51cb4f0e-b68d-4ade-8ec7-5559ce7ab9ae
00:29:13.990 --> 00:29:17.293
Regardless of the current state
of F2 and F1.

NOTE Confidence: 0.8795595

eee0da8b-a198-4e12-91da-c8dd82d99bc4
00:29:19.350 --> 00:29:24.768
So the next combination for the
input is X is 1. And Y is

NOTE Confidence: 0.8795595

98900c33-7fde-4985-8961-4268152509b5
00:29:24.768 --> 00:29:30.186
zero again? Y is 0 the 2nd
and is always 0? Because Y is

NOTE Confidence: 0.8795595

e4c05a58-2f68-4bc4-b7ee-9b30a2cee8d1
00:29:30.186 --> 00:29:34.830
there we don't have to wait for
the current state of current

NOTE Confidence: 0.8795595

b1dd2c75-9953-46c8-a339-27b7dde56283
00:29:34.830 --> 00:29:35.991
value of F1

NOTE Confidence: 0.88450164

62b47c3a-e3a9-44f8-97d0-23363b55e400
00:29:36.940 --> 00:29:42.638
So F2 for the next step is
going to be 0 because Y is

NOTE Confidence: 0.88450164

4ec52c38-8b4c-4606-ac42-dfa8fc154203
00:29:42.638 --> 00:29:47.115
zero. However, for the first
and one and with the current

NOTE Confidence: 0.88450164

8540deb7-a99f-4d63-a8b2-682e8bc210b3
00:29:47.115 --> 00:29:48.336
value of F2.

NOTE Confidence: 0.81905586

86b28ac9-5190-4cb8-bd60-5924d8b36692
00:29:49.960 --> 00:29:54.856
So the current value of after
whatever ands with one becomes a

NOTE Confidence: 0.81905586

782bbcf3-fedc-4d37-985e-3082e3039baa
00:29:54.856 --> 00:30:00.160
dad thing for so F2 and with one
becomes F2 but the current.

NOTE Confidence: 0.86085147

6ccf89dc-6b16-4f58-80b2-dbf4af74e2af
00:30:00.260 --> 00:30:03.308
 value of F2, so F1.

NOTE Confidence: 0.8979747

7d6b810a-e790-4d66-bc28-0216b69e8e3b
00:30:04.410 --> 00:30:09.311
In the next step, gonna be the
value of F2 which was currently

NOTE Confidence: 0.8979747

f2c5d8f0-7a76-40e7-89a3-43b6b37b447b
00:30:09.311 --> 00:30:13.458
so F1 in the next step going to
be F2 currently.

NOTE Confidence: 0.8540049

4bfac6b1-0993-4c99-8c22-1f772287aeb8
00:30:14.220 --> 00:30:19.296
So it's kind of F1 preserving or
restoring or showing the value

NOTE Confidence: 0.8540049

791b4901-9726-4d58-88a7-057fa41d6a4e
00:30:19.296 --> 00:30:21.834
of F2 in the current step.

NOTE Confidence: 0.81410503

7139c85e-c52e-4532-bf23-361f63c56275
00:30:25.290 --> 00:30:29.418
So let's see what happens when Y
is 1, an X is 0.

NOTE Confidence: 0.8594919

c7bf8557-6583-47e2-96b3-5e9a83f1d801
00:30:30.390 --> 00:30:35.330
So again, because X is zero and
anything with zero gonna be 0,

NOTE Confidence: 0.8594919

a648d660-d49d-46c0-87b4-e5b3fd47cb6a
00:30:35.330 --> 00:30:37.610
so F1 this times becomes 0.

NOTE Confidence: 0.8915271

c32f774b-2f75-4f23-b257-74b631bcfa91
00:30:38.540 --> 00:30:44.420
However, F2 in the next step on
the future gonna be one and with

NOTE Confidence: 0.8807435

b52cd455-0b92-4b36-a638-c5ad464fe47b
00:30:44.420 --> 00:30:48.556
F1 currently. But F
so it becomes F1.

NOTE Confidence: 0.8936144

f4f82c88-7d57-4f77-ab6e-655a53ba0cf8
00:30:49.670 --> 00:30:54.576
Currently so F2 in the next
step gonna show the value

NOTE Confidence: 0.8936144

59ca4dbd-6737-4c50-a938-863b5b876b8b
00:30:54.576 --> 00:30:56.806
of F1 which is currently.

NOTE Confidence: 0.8675285

1b6fc2b9-d15c-49ef-9fc4-8ac519155d75
00:31:00.200 --> 00:31:05.480
And the last one is if both the
inputs X&Y becomes one.

NOTE Confidence: 0.8978853

38d63278-cae5-46bf-962a-31c30af26dd6
00:31:06.050 --> 00:31:10.936
So if both becomes one, the only
thing matters for the and is the

NOTE Confidence: 0.8978853

2d459895-6345-43c9-9fc9-33d005bf3582
00:31:10.936 --> 00:31:15.473
current value of F1 and F2. For
F1. It depends on the current

NOTE Confidence: 0.8978853

748936d1-ae3f-4a25-b6bf-09601a8fa2a6
00:31:15.473 --> 00:31:16.520
value of F2.

NOTE Confidence: 0.9068843

d96289e0-8650-4e53-b968-759730fcc6f3
00:31:17.260 --> 00:31:21.152
For the F2 in the next step, it
depends on the current value of

NOTE Confidence: 0.9068843

ede31808-530f-4ced-8b87-657dcde7d284
00:31:21.152 --> 00:31:22.820
F1. As you can see here.

NOTE Confidence: 0.85339767

7bb8adea-5c9c-45aa-8cb5-5a7b35ac0192
00:31:25.150 --> 00:31:30.542
So if X is 1, Y is 1, F1 in the
next step gonna be the current

NOTE Confidence: 0.85339767

528503ae-a3a3-4f0d-81d3-2844be81dc26
00:31:30.542 --> 00:31:31.553
value of F2?

NOTE Confidence: 0.86663795

b77771ce-a6ec-44ac-a7fe-092a72aa8853
00:31:32.570 --> 00:31:36.353
An F2 in the next step gonna be
the current value of F1.

NOTE Confidence: 0.89745784

254bfb85-3b91-4672-bca6-50a8578f23fc
00:31:38.550 --> 00:31:40.830
And this is because of this
cross feedback.

NOTE Confidence: 0.90503

9e534d10-87fd-4226-9cb7-9675c11a9966
00:31:42.740 --> 00:31:48.948
So we know that what's going to
be the value of F1 and F2 in the

NOTE Confidence: 0.90503

1465a721-81e7-458b-8070-c8066d754fae
00:31:48.948 --> 00:31:53.216
next step, but this is based on
the value of current.

NOTE Confidence: 0.9118172

ded8f8c1-43e1-44bb-ada7-80f81ae528e4
00:31:55.000 --> 00:31:56.239
F1 and F2.

NOTE Confidence: 0.9144097

353a7e1a-24d7-465b-8745-0296f3ee830e
00:31:57.220 --> 00:32:03.040
So let's see what are these
values. So we have to check.

NOTE Confidence: 0.92557913

99c83eb3-d45a-4694-94ef-62966500925d
00:32:03.940 --> 00:32:08.863
Different possibilities for the
value of F1 and F2.

NOTE Confidence: 0.88255584

e02f435e-ab70-435e-b6d6-19d2cce1b30a
00:32:09.450 --> 00:32:12.870
At current step, in order
to see what's the actual

NOTE Confidence: 0.88255584

84e1c6b6-a249-4782-9091-d8af434354c2
00:32:12.870 --> 00:32:14.580
value for the next step.

NOTE Confidence: 0.8963664

e92bf661-1c0f-44d3-bb33-3a74e1ead108
00:32:17.050 --> 00:32:22.471
So again, as you can see here
this logic circuit, if it goes

NOTE Confidence: 0.8963664

fde6c98f-0e31-4b59-84c4-c988ad9b5a45
00:32:22.471 --> 00:32:24.139
to the zero state.

NOTE Confidence: 0.8636106

68cfec22-835e-4196-8a6b-2f4ac8cc3e5e
00:32:27.110 --> 00:32:33.605
If it goes to zero State, so if
the input is 00 and  always

NOTE Confidence: 0.8636106

ea6c6706-ed72-4f8b-ab0f-2f53439a8715
00:32:33.605 --> 00:32:35.770
the output gonna be 0.

NOTE Confidence: 0.8573906

0eeeaeb5-f460-4e5e-a67f-df7c4499bc17
00:32:36.410 --> 00:32:41.649
OK, and if it goes to this 00,
the current step becomes zero.

NOTE Confidence: 0.8573906

ad42fb0d-4717-45f6-8272-5d696beca605
00:32:41.649 --> 00:32:46.888
Let's back to the this one if
the current step is 0, this

NOTE Confidence: 0.8573906

a8c4b335-a7f4-499f-86e2-29758dd9ced6
00:32:46.888 --> 00:32:50.918
becomes zero. This becomes zero.
This becomes zero and this

NOTE Confidence: 0.8573906

df30c119-799e-4cb2-acca-d9dfb45e9623
00:32:50.918 --> 00:32:54.545
becomes 0. So if the current
state is 0.

NOTE Confidence: 0.9012742

f41ebfeb-a24a-49ea-8bbf-e36a1a784408
00:32:55.350 --> 00:33:00.758
For F1 and zero for the F2
regardless of the value of X&Y.

NOTE Confidence: 0.8970841

cb9e3728-df90-4ef3-92ac-ab46f4eb515f
00:33:01.450 --> 00:33:03.788
We have always zero in
the output.

NOTE Confidence: 0.8640211

263f0fb2-d41c-48a5-bc5a-d011555650f3
00:33:06.740 --> 00:33:10.900
So this design has the same
problem as the previous

NOTE Confidence: 0.8640211

efad35e4-7acf-4162-b93d-19fcaed00910
00:33:10.900 --> 00:33:14.228
sequential logic with one gate
one and gate.

NOTE Confidence: 0.87393475

a81fe60d-16fa-488e-82ba-72cc91c36b81
00:33:15.350 --> 00:33:19.838
So when it goes to the zero
state, meaning that the

NOTE Confidence: 0.87393475

da68c234-f40c-4a19-9352-368b3e6d3ed1
00:33:19.838 --> 00:33:24.326
current step current value of
F1 is zero and the current

NOTE Confidence: 0.87393475

1233a8d3-3895-4585-9192-b4ee1d563bfe
00:33:24.326 --> 00:33:26.366
value of F2 is 0.

NOTE Confidence: 0.88311595

adcba16f-059e-44c3-be3c-2255e9dd7d99
00:33:27.500 --> 00:33:30.800
It remains at the Zero State and
never recovers the one.

NOTE Confidence: 0.85181403

9bc6d2cc-0d61-4762-bf31-9d95158cef35
00:33:35.870 --> 00:33:41.630
So let's fix this with the OR
gate. Now we add two or gate is

NOTE Confidence: 0.85181403

7fa8a264-f875-4e98-a258-12c92134b72c
00:33:41.630 --> 00:33:44.318
left to and it and see what

NOTE Confidence: 0.890202

4f403dbf-005c-4d87-b125-614714e4cc24
00:33:44.318 --> 00:33:48.844
happens. So I'm not going to
check this today. Please

NOTE Confidence: 0.890202

a60a66ee-8c1e-47cf-a573-1617ef07c76d
00:33:48.844 --> 00:33:52.870
practice this at home and see
what's the problem with this

NOTE Confidence: 0.9263372

09e2408e-a7a9-42f9-8b72-b4f8fd0f8929
00:33:52.870 --> 00:33:54.840
sequential logic. Again.

NOTE Confidence: 0.89220464

36845125-7947-47fe-8503-7a18f38867eb
00:33:55.510 --> 00:34:00.790
For different combination of
X&Y, if X is 00 01 10 and 11

NOTE Confidence: 0.89220464

316a45c5-a850-408e-b2ef-132e9dd8e820
00:34:00.790 --> 00:34:06.550
, what happens to the F1
and F2 in the next step

NOTE Confidence: 0.89220464

045aa32d-ef80-4538-b815-6438af91be6c
00:34:06.550 --> 00:34:11.830
assuming that the current
value of F1 and F2 is these

NOTE Confidence: 0.89220464

ae583bbb-f9be-4dee-968d-38add5f5312c
00:34:11.830 --> 00:34:12.310
values.

NOTE Confidence: 0.8642667

6b979457-0a54-4b21-b46e-16054f859c82
00:34:13.800 --> 00:34:18.415
And then you see that if the
current step is 00, what happens

NOTE Confidence: 0.8642667

b201a23c-9685-4413-a2f2-8aacfb1c25db
00:34:18.415 --> 00:34:21.965
if the current step is 1 1,
what happens, etc.

NOTE Confidence: 0.64607185

741f3b93-be9f-4658-9bad-f9afb299b9c0
00:34:26.120 --> 00:34:28.689
 says that does the.

NOTE Confidence: 0.8532502

38b460d9-0f8b-4a33-96b8-955926bdbccf
00:34:29.910 --> 00:34:32.458
Overlapping affect the output.

NOTE Confidence: 0.2102254

cd8c600a-061e-4776-965c-f100da496263
00:34:33.550 --> 00:34:34.220
Uh.

NOTE Confidence: 0.889389

dfc9c848-3fd3-41d8-b785-a94ebe59f372
00:34:35.290 --> 00:34:37.906
What do you mean by the
over overlapping?

NOTE Confidence: 0.8184338

d0d38df7-1cf3-4120-a20b-5f9c2d15d05c
00:34:41.710 --> 00:34:45.466
This over this you mean this?
No, no there is no connection

NOTE Confidence: 0.89860517

38828965-449d-4e81-920f-60f96acb6274
00:34:45.466 --> 00:34:47.750
here. There is no
connection here.

NOTE Confidence: 0.8782031

94a8e281-1da4-4659-99a7-899cafbc9488
00:34:49.000 --> 00:34:53.620
Yeah, I mean whenever we we want
to say that the wires has a

NOTE Confidence: 0.8782031

6af607e2-da4b-413d-b2d7-1f3dabebf41d
00:34:53.620 --> 00:34:57.250
connection, we have to make it
bolts here. For instance, here

NOTE Confidence: 0.8782031

1cceaf8c-6ecf-4700-8883-b554abce4edf
00:34:57.250 --> 00:34:58.570
we make a connection.

NOTE Confidence: 0.87628365

19808d53-2f90-4edd-9e11-519c4531ad0b
00:34:59.840 --> 00:35:03.792
Or here we make a connection,
but as long as the wire crossing

NOTE Confidence: 0.87628365

03ce48ea-807a-46f7-ba96-ecc1afb25999
00:35:03.792 --> 00:35:07.440
each other without any this I
mean circle, it means that they

NOTE Confidence: 0.87628365

100dd480-12cc-47b7-959d-d3d29693e490
00:35:07.440 --> 00:35:10.480
are just passing each other.
There are no connection there.

NOTE Confidence: 0.87247765

271a709f-8da1-4be4-8679-ecb872dd39a5
00:35:12.240 --> 00:35:18.540
Marco says that if you get
a one in, the output will

NOTE Confidence: 0.87247765

8ba59d23-d0c1-4b7f-8f9c-9e7f72071e08
00:35:18.540 --> 00:35:23.790
never be 0 again. Oh, for
this design correct? Yes.

NOTE Confidence: 0.8912321

a7f9c83d-54c6-496b-b502-d75b4e3679cf
00:35:24.980 --> 00:35:27.332
If you if you your current state

NOTE Confidence: 0.88534766

83cef6ba-c121-430d-bcdc-33f5f1a6941e
00:35:27.332 --> 00:35:33.222
is 1. If at some point you see
that the value of F2 currently

NOTE Confidence: 0.88534766

16ac6b4d-654e-40c1-9185-ed43d28e9012
00:35:33.222 --> 00:35:38.346
is 1 and the value of F1
currently is 1, it never look at

NOTE Confidence: 0.88534766

7128b801-b6e6-4847-ae88-754748a3a988
00:35:38.346 --> 00:35:44.202
the X&Y because we are in the OR
gate, so as long as one input of

NOTE Confidence: 0.88534766

002c098e-a953-4c9e-b90d-e3a43f903392
00:35:44.202 --> 00:35:48.960
the or gate becomes one, the
output gonna be one, so it goes

NOTE Confidence: 0.88534766

6032dcec-4c9e-4bb8-93fd-6116ec3763ec
00:35:48.960 --> 00:35:50.058
to here one.

NOTE Confidence: 0.8610032

c59f73f4-2571-40ad-95df-c73971e63340
00:35:50.640 --> 00:35:54.688
Here becomes one and again one
comes here. One comes here

NOTE Confidence: 0.8610032

4bd4e9a9-e10c-454d-aef1-d9156ceb7de6
00:35:54.688 --> 00:35:59.104
always one so regardless of the
value of X&Y, this is the

NOTE Confidence: 0.8610032

653f72b1-499b-42ea-9e4c-f62b599db4c3
00:35:59.104 --> 00:36:03.888
reverse logic of the and. So
when it goes to the one state,

NOTE Confidence: 0.8610032

1104a90b-6be7-4078-a942-950707cead8f
00:36:03.888 --> 00:36:07.936
it never recovers 20 state. So
if you want this sequential

NOTE Confidence: 0.8610032

8ae6b2df-ef5a-4179-a3ac-fa92e052162c
00:36:07.936 --> 00:36:12.352
logic to the store zero, we
cannot do that because it always

NOTE Confidence: 0.8610032

529c1fe1-f856-4499-b311-bb81636ddf45
00:36:12.352 --> 00:36:14.928
one of the inputs is always one.

NOTE Confidence: 0.8071771

bb4f2529-fa09-48f5-942f-fbe995a20c5d
00:36:16.810 --> 00:36:20.386
True, that's the problem with
this sequential logic.

NOTE Confidence: 0.8033061

9962e1ac-bfee-4dd7-be4f-3c4fc1220625
00:36:22.690 --> 00:36:26.986
Ah, as as Marco said, no, this
doesn't solve our problem, and

NOTE Confidence: 0.8033061

0b42d7e2-9334-4e00-8a48-27fc7d730bef
00:36:26.986 --> 00:36:29.492
the reason is it stays as one.

NOTE Confidence: 0.9375259

bc96f321-1de4-475b-a444-a5f1fdc1fce1
00:36:30.790 --> 00:36:32.878
So let's change the.

NOTE Confidence: 0.55892307

e73d12b4-c43e-48d2-b6c3-75b6a1af19bc
00:36:33.420 --> 00:36:36.070
Or gate with the Norgate.

NOTE Confidence: 0.8500534

4616cde6-4274-4b2e-b4a9-ad1fab96e96d
00:36:37.000 --> 00:36:42.148
As you can see here, whenever we
wanted to get, I mean just

NOTE Confidence: 0.8500534

2e497aaa-0b51-4eea-b90a-4ce02088df6a
00:36:42.148 --> 00:36:47.296
escape from being in a 0 or
being in a one. The Escape

NOTE Confidence: 0.8500534

c4562d80-5f06-4adf-8bbb-5348d7d64d9d
00:36:47.296 --> 00:36:49.276
solution is applying and not.

NOTE Confidence: 0.72851956

17f07c3a-6564-4be5-a0d9-792ec195724d
00:36:49.840 --> 00:36:51.700
So for instance, are.

NOTE Confidence: 0.88250667

ea88c31e-5066-4df8-99f2-4390e6cd9043
00:36:54.130 --> 00:36:57.408
Let's come back here for
instance here, in order to just

NOTE Confidence: 0.88250667

78caff2d-7b8b-41e8-816c-596b7f7f73e2
00:36:57.408 --> 00:37:01.580
escape from this zero state, we
apply the not to go to the one,

NOTE Confidence: 0.88250667

061f35a9-7b34-4dea-8b89-34b16d691129
00:37:01.580 --> 00:37:05.454
but it doesn't solve our problem
because it goes to one and 0.

NOTE Confidence: 0.78675187

9e22a8e5-dfbf-4e51-9933-fad6f149bfae
00:37:06.600 --> 00:37:10.879
Here we apply the same
solution. So now we want to

NOTE Confidence: 0.78675187

d0e16ed3-2cd4-41b5-aa3c-e07928ecaa3b
00:37:10.879 --> 00:37:15.158
get rid of, for instance,
being at zero forever or being

NOTE Confidence: 0.78675187

1f6a019d-8abd-4b9d-9233-5e8f3550fdd1
00:37:15.158 --> 00:37:19.826
at one forever. So we apply
and not. So applying and not

NOTE Confidence: 0.78675187

e341c851-3377-4e52-a7ca-662767c1895a
00:37:19.826 --> 00:37:24.105
after the OR gate for instance
it becomes Norgate. So let's

NOTE Confidence: 0.78675187

fd6cec3d-9bb8-4064-ac35-5b295b55c16f
00:37:24.105 --> 00:37:26.050
see what happens within
NOR gate.

NOTE Confidence: 0.92118114

6fb8e85f-f790-4b4b-8116-abf519a1ab72
00:37:27.380 --> 00:37:33.086
So. Again, we want to see
what's the value of F1 and F2

NOTE Confidence: 0.92118114

b9e9a44f-74a0-431e-adff-744b088dbe5f
00:37:33.086 --> 00:37:36.308
for the next step before the
next time interval.

NOTE Confidence: 0.87636656

6705f14b-f325-4951-b143-d8d10f2d9a29
00:37:37.930 --> 00:37:44.062
Assume that currently the value
of the F1 is F1, T and the value

NOTE Confidence: 0.87636656

36216e53-7440-4846-90f6-aceccccd8cf6
00:37:44.062 --> 00:37:50.194
of F2 is F2, T. OK. So and these
are different value of X&Y

NOTE Confidence: 0.87636656

98be27ac-bf3c-4b1c-95f6-46fcb9a5ecdb
00:37:50.194 --> 00:37:56.326
00 01 10 and 11, so let's see
happens when the X&Y are both 0.

NOTE Confidence: 0.8378743

dc04ab9a-0d2c-4872-a233-d34d19a10a97
00:37:58.080 --> 00:38:03.808
If both 0 so in the OR gate. If
one of the input is zero, we

NOTE Confidence: 0.8378743

94866869-9e09-4ff1-bef2-42ec1f4d956d
00:38:03.808 --> 00:38:09.178
have to look at the other input,
so the other input is F2 for the

NOTE Confidence: 0.8378743

ff30a96d-5f80-465c-a907-08958bd47819
00:38:09.178 --> 00:38:13.474
first NOR gate. The NOR means
that F2 goes to the OR gates

NOTE Confidence: 0.8378743

4c153ec9-95b8-4fed-bc9b-551ae5bd614d
00:38:13.474 --> 00:38:17.770
followed by the NOT, so it
becomes F2 bar OR F2 prime.

NOTE Confidence: 0.90131605

2e7cad42-346a-4745-b40b-ce8d25953b63
00:38:18.780 --> 00:38:24.253
So the next value of F1 is going to be
the current value of F2

NOTE Confidence: 0.86043113

01c89111-87ea-4fd0-893c-b5d353b8702d
00:38:25.130 --> 00:38:28.238
Followed by a NOT, so F2 NOT.

NOTE Confidence: 0.8700795

ab6f1cae-5d13-4193-a306-20cc1f911f64
00:38:29.770 --> 00:38:34.726
The same happens with the second
NOR, so if Y is zero, it goes

NOTE Confidence: 0.8700795

e0c0961c-8fe3-4aad-a042-919d42937b00
00:38:34.726 --> 00:38:39.682
here. So this is the OR gates.
We have to look at the other

NOTE Confidence: 0.8700795

95c0fde6-75b7-48cf-b679-803a18c127c2
00:38:39.682 --> 00:38:43.930
input F1 currently and then
followed by the NOT. So F1 NOT.

NOTE Confidence: 0.8700795

13949b6a-db6f-41ae-8fef-a212e852e763
00:38:43.930 --> 00:38:46.408
so the next value of F2 is going to

NOTE Confidence: 0.8883557

f02920ad-d64a-4a2f-ab82-2eec5ad7cf08
00:38:46.408 --> 00:38:50.596
be the current value of F1
followed by the NOT.

NOTE Confidence: 0.89718485

dfc1a0db-87ef-4e5c-89b7-b2203779de5e
00:38:51.700 --> 00:38:57.254
OK. And we assume that for now
we don't know the current value,

NOTE Confidence: 0.89718485

32373563-580f-4691-a7a2-3ec6297e88a8
00:38:57.254 --> 00:39:01.418
either zero OR one. We just put
it based on the variables.

NOTE Confidence: 0.80674833

9f3559ed-65e5-4a60-b965-59212cee91bf
00:39:02.160 --> 00:39:06.060
Current value of F2 followed by
the NOT goes to the F1. Current

NOTE Confidence: 0.80674833

a22f01d3-6144-4e0a-9486-f2448981a0aa
00:39:06.060 --> 00:39:09.360
value of F1 followed by the NOT
go to the F2.

NOTE Confidence: 0.9307057

e7111dfe-a1c1-4d8a-af93-3d9d354939dc
00:39:11.250 --> 00:39:14.671
So let's see what happens when
we have zero and one.

NOTE Confidence: 0.8622458

c7d0f93f-b387-4c66-b276-f47629293a53
00:39:15.440 --> 00:39:21.392
So if X is 1 and Y is 0, so
for the OR gate, whenever we

NOTE Confidence: 0.8622458

1df37a5f-c01d-4ff3-a592-6bbb990c0d59
00:39:21.392 --> 00:39:26.228
have the input one, we don't
have to look at the other input.

NOTE Confidence: 0.8622458

b78ed2fc-b59e-42f1-b140-19b3991e2be8
00:39:26.228 --> 00:39:29.948
So OR becomes one followed by
the NOT becomes 0.

NOTE Confidence: 0.90101266

b829dbe8-830b-4e1a-89c5-b9423fa8f3f6
00:39:30.610 --> 00:39:35.580
So F1 for the next step is going
to be 0 regardless of the

NOTE Confidence: 0.90101266

5750a128-c6d4-4b85-b33b-bd82e5133b86
00:39:35.580 --> 00:39:37.710
current value of F1 and F2.

NOTE Confidence: 0.924422

2d55d790-f815-4cc7-8899-7c382c11e571
00:39:39.130 --> 00:39:41.230
However, for the second OR, it is

NOTE Confidence: 0.8081453

f868762b-598f-41d1-99ee-738d28dd537c
00:39:41.790 --> 00:39:46.942
very like, I mean to the
previous slide. So Y is 0. So

NOTE Confidence: 0.8081453

8d9ae0fc-b443-4836-b255-796f68310c19
00:39:46.942 --> 00:39:51.726
we have to see what's the
other input for the OR gate.

NOTE Confidence: 0.7851434

2c765fd3-7f05-4967-9f1a-cb03d55f7b18
00:39:52.470 --> 00:39:57.822
This is F1 and F1 followed
by the NOT becomes F1 bar or

NOTE Confidence: 0.7851434

364c806c-ac81-471b-a591-08d6e49f8f30
00:39:57.822 --> 00:39:59.606
F1 prime.

NOTE Confidence: 0.8922659

42abe31e-07d7-474f-8a30-dcb93e7384b7
00:40:01.780 --> 00:40:07.480
So for this case, F2 is equal to
this, F1 bar.

NOTE Confidence: 0.82445073

1b6e1930-1541-45d8-afcc-b9ae177ff0b1
00:40:09.810 --> 00:40:13.212
What happens when Y becomes one
and X becomes 0?

NOTE Confidence: 0.8682785

4fbbbfab-20f1-48c4-91ff-0ba3b5ed689a
00:40:14.570 --> 00:40:19.890
So the reverse logic. So this
time, Y is 1 so the OR gate

NOTE Confidence: 0.8682785

99ba304c-4ed9-44a9-a015-df30407db98a
00:40:19.890 --> 00:40:24.070
outputs one regardless of the
other input and then followed by

NOTE Confidence: 0.8682785

850ea4af-71ed-4499-b542-1a2dcd52c56d
00:40:24.070 --> 00:40:25.590
the NOT, it becomes 0.

NOTE Confidence: 0.90028507

ccca9d2a-987e-423a-bbba-1233a8c62670
00:40:27.190 --> 00:40:30.116
F2 for the next step becomes 0.

NOTE Confidence: 0.88101584

5b0ae749-c27d-43c7-b928-d7edf7757b41
00:40:31.010 --> 00:40:35.784
However, X is 0, so you have to
look at the other input, the

NOTE Confidence: 0.88101584

ac7f9498-a1b6-4a77-ba80-17b2da5a5b53
00:40:35.784 --> 00:40:37.148
current value of F2

NOTE Confidence: 0.8311019

cd784592-4f4a-40b2-bd11-ca0979f55cc8
00:40:38.200 --> 00:40:41.434
Followed by the NOT, so F2 NOT.

NOTE Confidence: 0.9056447

e2cf2ffc-1f03-41c3-b68f-f2f8ea00c854
00:40:42.380 --> 00:40:43.920
And if both are one,

NOTE Confidence: 0.92114913

18d77678-7c69-4b98-bf72-33a62816fa17
00:40:45.950 --> 00:40:47.318
If both are one,

NOTE Confidence: 0.803994

6b05eaf1-cbe6-49ff-961b-0f96331d752e
00:40:48.000 --> 00:40:52.334
The OR gate is going to output one,
followed by the NOT becomes zero

NOTE Confidence: 0.803994

c2ad3dae-e5f5-4a81-b244-7609142e250d
00:40:52.334 --> 00:40:54.304
if both inputs are one.

NOTE Confidence: 0.89327806

79072e8b-8af3-40e5-b0f7-d9638c0d805e
00:40:54.910 --> 00:40:58.220
F1 and F2 for the next
value is going to be 0.

NOTE Confidence: 0.8872219

306a06bb-b39e-4550-ac62-10a45b1f354a
00:41:00.330 --> 00:41:03.750
So now we know what
happens based on different

NOTE Confidence: 0.8872219

b58f43f4-2ef0-4c70-b522-bb7a4917675d
00:41:03.750 --> 00:41:08.538
value of X&Y. The next
step of F1 and F2 is based on the

NOTE Confidence: 0.8872219

b943831f-144c-4d7e-b277-104a0cd1b74c
00:41:08.538 --> 00:41:10.590
current step of F1 and F2.

NOTE Confidence: 0.90912014

69f93347-77b5-4084-bca9-44c89cf2c0ca
00:41:11.720 --> 00:41:15.428
But the next question is,
what are the possibilities

NOTE Confidence: 0.90912014

35d693cf-af73-442c-9343-a03ba9decf08
00:41:15.428 --> 00:41:17.076
for the current step?

NOTE Confidence: 0.89842165

ecfccc8a-7dc3-4aa3-b66f-ac9a140d0ecb
00:41:21.080 --> 00:41:25.930
So. We have to check all the
current possibilities for the

NOTE Confidence: 0.89842165

a042dfdb-d70e-4838-bb84-c0fca8c5a3d8
00:41:25.930 --> 00:41:29.813
F1 and F2 and see the
different values for the next

NOTE Confidence: 0.89842165

f3195528-ea5e-4dda-8b4e-15761aa3814b
00:41:29.813 --> 00:41:31.578
value of F1 and F2.

NOTE Confidence: 0.9080701

331bae96-c777-4e18-afdf-0374b92de770
00:41:34.270 --> 00:41:40.925
So imagine currently the F1 is
zero, and F2 is 0.

NOTE Confidence: 0.85252845

60e4d272-ddf4-47fa-be79-8eaf337ee126
00:41:41.570 --> 00:41:46.778
As you can see here, F1 and F2
is always zero currently OK. Or

NOTE Confidence: 0.85252845

cb854fe4-97f8-429d-8a70-1786a2ccecfc
00:41:46.778 --> 00:41:52.358
you could say that we are at the
time 0, so initial start of the

NOTE Confidence: 0.85252845

ab7ac44d-229f-4cf6-9a52-ab585841a222
00:41:52.358 --> 00:41:56.822
sequential logic is zero and it's in
positive logic, so always 0. So

NOTE Confidence: 0.85252845

ed09dbbe-768c-4e2c-a14c-9bf184154b78
00:41:56.822 --> 00:42:01.286
let's see what happens. So we
already knew that based on the

NOTE Confidence: 0.85252845

3038ed61-b6a8-49b3-9031-47ecc47e947f
00:42:01.286 --> 00:42:06.122
current value of F1 and F2, we
have these values for the next

NOTE Confidence: 0.85252845

07a67f91-3349-402a-82d9-a3b310dd14c5
00:42:06.122 --> 00:42:10.586
step. So if the current step,
for instance F1 is 0,

NOTE Confidence: 0.7833249

9f6a0a16-68d2-431b-acfb-4bd0fb428ad8
00:42:11.380 --> 00:42:14.098
F1 bar becomes for the F2.

NOTE Confidence: 0.82700276

56878e66-cb3f-4c24-90c5-5516b69db2a5
00:42:14.880 --> 00:42:19.755
And current step of F2 is
zero, F2 bar becomes for the F1,

NOTE Confidence: 0.82700276

e4d175be-0d7a-4749-b38b-137c48dd9891
00:42:19.755 --> 00:42:24.630
so these two becomes 0 bar = 1,
zero bar = one. This one becomes

NOTE Confidence: 0.82700276

66dcd806-3c52-402b-b514-f8185648b9cc
00:42:24.630 --> 00:42:29.880
0 bar = one and this term becomes
0 bar = one. So if the current

NOTE Confidence: 0.82700276

cb3f77a0-bb39-42ea-9e76-34098404785b
00:42:29.880 --> 00:42:31.005
step is 0,

NOTE Confidence: 0.8414759

1745e731-a77b-450d-91f5-f99f6b415c43
00:42:32.290 --> 00:42:38.066
This is going to be the value of
F1 and F2 for the next step.

NOTE Confidence: 0.94360876

fad5059d-e32b-4d40-b8fe-fe29a4a27e7c
00:42:40.370 --> 00:42:40.940
OK.

NOTE Confidence: 0.9249457

d097ca8d-113d-4d7f-a292-c59574b047e4
00:42:42.580 --> 00:42:45.247
There is one thing you can see

NOTE Confidence: 0.8709861

b1ad1f02-5184-4a60-9d04-6fb93aa11730
00:42:45.247 --> 00:42:51.930
so, this logic circuit or
this sequential logic can go to

NOTE Confidence: 0.85292464

ac2458b1-c75e-4463-b787-910a1326d94f
00:42:51.930 --> 00:42:57.142
the zero. When it goes, when
the current step is both 0, it can

NOTE Confidence: 0.85292464

38b541cb-daeb-4436-b07a-baa4f09672a1
00:42:57.142 --> 00:42:59.326
go to the zero. Also, it can go

NOTE Confidence: 0.92812824

983b4d75-81f2-4e9c-b497-2f5d58cd0f37
00:42:59.326 --> 00:43:03.358
to the one. So it changes
between zero and one.

NOTE Confidence: 0.8081782

450a7efc-15b7-45d1-b50e-6c1e940298dd
00:43:04.240 --> 00:43:11.228
And. Uh, we'll see what happens
if the next step changes. If the

NOTE Confidence: 0.8081782

fa1fd8c4-a45f-4822-a915-938184a7a0f1
00:43:11.228 --> 00:43:16.556
current step are other values,
but as long as the current step

NOTE Confidence: 0.8081782

398d8df5-1a17-45b4-a877-d060a23288e8
00:43:16.556 --> 00:43:19.664
is zero, it can go to 0.

NOTE Confidence: 0.7592319

ca88fa19-888c-4ad9-ac73-3f4201b25226
00:43:21.030 --> 00:43:23.040
And it can go to one for the F1.

NOTE Confidence: 0.8808848

a0cfe043-7e9c-4095-9e2f-efb754edd443
00:43:24.140 --> 00:43:25.300
Also for the F2.

NOTE Confidence: 0.93462455

1b722ad5-bc9f-4e71-84ed-ccb9d1f013cc
00:43:26.780 --> 00:43:27.390
So.

NOTE Confidence: 0.8721071

692cf9ce-ff11-4176-b681-938ae2a95156
00:43:29.020 --> 00:43:33.156
Two nice properties happens in
this truth table. The first one

NOTE Confidence: 0.9330389

be70f5bf-fb44-4762-9066-fa18d6113116
00:43:33.156 --> 00:43:35.349
isY, you called this

NOTE Confidence: 0.8180627

7e83ccac-f9e0-4da4-9f2c-21c70cc096e7
00:43:36.030 --> 00:43:39.300
combination of X&Y a reset action.

NOTE Confidence: 0.9352841

0001f3d2-7b72-468d-bab2-3c2f7c6a9cae
00:43:40.030 --> 00:43:41.080
The reason is.

NOTE Confidence: 0.9338692

aeee6856-eff5-42b1-ad7f-6e76a0be515b
00:43:41.710 --> 00:43:43.860
Y is 0, X is 1.

NOTE Confidence: 0.90235233

5bbe0a6b-a956-4c86-8889-fc43712c86a7
00:43:44.770 --> 00:43:51.088
And it changes the F1, the first
output to zero, and the second

NOTE Confidence: 0.8802565

7f924374-a4e0-4169-a053-bb13710a0fa3
00:43:51.088 --> 00:43:57.200
output one. So if we assume that,
we always consider the F1 the

NOTE Confidence: 0.8802565

2b96e9d7-6f16-4185-a2f6-96d604854589
00:43:57.200 --> 00:44:02.120
main output of the sequential
logic, and F2 the secondary or

NOTE Confidence: 0.8802565

9eb26337-124e-486d-8d63-f44be653dd74
00:44:02.120 --> 00:44:04.990
kind of not the main one.

NOTE Confidence: 0.882072

64ad70fa-e24a-4e6c-884f-d9142b93b19d
00:44:05.960 --> 00:44:11.448
So if we always want to see what
is going to be memorized by this logic

NOTE Confidence: 0.882072

b2ee1d15-4509-4583-bd4f-b52f1c782cc6
00:44:11.448 --> 00:44:16.544
circuit, we only consider the F1
for now. Just for now. You could

NOTE Confidence: 0.882072

7ee22f51-7ad6-4ac9-aa22-45ff78eec162
00:44:16.544 --> 00:44:17.720
say that by

NOTE Confidence: 0.8666058

a1d46fb3-691b-447f-9931-e9b2396fb9cb
00:44:18.380 --> 00:44:24.594
Injecting the one to the X
and zero to the Y, we can

NOTE Confidence: 0.8666058

09f59890-fbab-4a14-a208-369091c666f8
00:44:24.594 --> 00:44:27.940
convert this sequential
logic to output 0.

NOTE Confidence: 0.8967949

0680c6b7-5b71-4dc4-9f00-884bfc684fb4
00:44:29.680 --> 00:44:31.588
So this is called the reset

NOTE Confidence: 0.84874076

1230a0a0-4b49-4901-b1d0-949aa772f624
00:44:31.588 --> 00:44:36.096
action. And it makes this
sequential logic to output zero

NOTE Confidence: 0.84874076

946795ed-aae8-4619-953c-5d1117de782c
00:44:36.096 --> 00:44:40.416
for the next step. So we call
this a reset state.

NOTE Confidence: 0.8882897

f4f18888-277d-4353-aad1-74c145b53c41
00:44:42.190 --> 00:44:46.150
And as you can see here, the
zero is the complement of

NOTE Confidence: 0.8882897

d71adfd7-0252-4a08-b5fa-0e10d97f2339
00:44:46.150 --> 00:44:49.780
this one. So F1 and F2 in
this case are acting as

NOTE Confidence: 0.8882897

40407623-ad16-4066-bf25-bcb938619128
00:44:49.780 --> 00:44:51.100
complements of each other.

NOTE Confidence: 0.8543868

48d453c3-261d-4af3-96cc-1b477feae79d
00:44:54.690 --> 00:44:59.497
The next one is this. You
could say that this logic

NOTE Confidence: 0.8543868

ad993773-85b9-4abf-bcae-fa3a727dd8d1
00:44:59.497 --> 00:45:04.304
circuit can go to state
one, the output. The main

NOTE Confidence: 0.8543868

553867ad-6b5d-4bd5-b975-af79778a02a4
00:45:04.304 --> 00:45:09.111
output F1 becomes one. If the
Y becomes one and X

NOTE Confidence: 0.8543868

2f60da2f-0994-430f-9afa-2edde1d1a380
00:45:09.111 --> 00:45:09.985
becomes 0,

NOTE Confidence: 0.8345475

d259c304-3ea3-48a1-a163-e25a06eebfa0
00:45:11.680 --> 00:45:16.003
we call this combination of 
the X and Y a set action,

NOTE Confidence: 0.8345475

70bacd48-e52c-4dff-8de5-9f29cfd8831a
00:45:16.003 --> 00:45:21.112
meaning that we want to set the
logic circuit and when we do

NOTE Confidence: 0.8345475

76fe9313-55e6-4cd8-a1c2-44aaacf8db04
00:45:21.112 --> 00:45:25.828
that, this logic circuit from
the 01 state goes to the 10

NOTE Confidence: 0.8345475

8656ffa6-3367-4cfd-ad33-885574bdc50a
00:45:25.828 --> 00:45:30.544
state. So the main output is 1,
the secondary output or the

NOTE Confidence: 0.8345475

e2397b6f-00b0-47fa-b7ba-db487c8b73c2
00:45:30.544 --> 00:45:32.509
other F2 becomes 0.

NOTE Confidence: 0.8333827

22a22637-e038-44d5-b03d-96b851bd64db
00:45:33.420 --> 00:45:37.083
And as you can see here,
these two again, they are

NOTE Confidence: 0.8333827

ff11acc3-d834-4605-851a-3da82b4c2196
00:45:37.083 --> 00:45:39.747
complements of each other.
So we have reset action

NOTE Confidence: 0.88143367

8447f01a-b68f-47ba-8f89-ab5ae615ac0a
00:45:41.140 --> 00:45:43.666
That brings the F1 to 0.

NOTE Confidence: 0.8183095

e8564022-66cd-4816-83a6-bc4dcecd86fd
00:45:44.850 --> 00:45:50.146
We have set action that
brings the sequential

NOTE Confidence: 0.8183095

7d2ad234-80d8-47f5-945f-704750dadd79
00:45:50.146 --> 00:45:53.456
circuit to one.

NOTE Confidence: 0.9113617

744bf0c2-9a49-47d3-86c4-a14419fdced1
00:45:55.250 --> 00:45:59.246
But there are other problems
here, so you can see

NOTE Confidence: 0.9113617

38c21fe8-4012-4434-96f7-cdfa94065e13
00:45:59.246 --> 00:46:00.911
that whenever we have 00,

NOTE Confidence: 0.87120926

4219c480-c8b5-4cc0-aab2-2463e9ca184f
00:46:02.470 --> 00:46:05.908
F1 and F2 are NOT
complements of each other and

NOTE Confidence: 0.87120926

d7630b43-84a7-4a11-bf59-d7a0c7825ff7
00:46:05.908 --> 00:46:10.874
there are in state one, so
what do we call this

NOTE Confidence: 0.87120926

f4f2efa0-5e23-4f46-89f1-bf431dbf2c2d
00:46:10.874 --> 00:46:16.222
and how can we solve this if
it is a problem? Also we have

NOTE Confidence: 0.87120926

1d4402f1-afd4-47b8-bb03-e8b10d3a053e
00:46:16.222 --> 00:46:20.806
another one. If X&Y are both
one, it goes to zero and the

NOTE Confidence: 0.87120926

a6931707-7884-4ea5-8a39-67ba0575d4f3
00:46:20.806 --> 00:46:24.626
state is at 0. So is it
possible to fix this?

NOTE Confidence: 0.87012964

798d7625-781f-4bdc-8da3-061fc8f87021
00:46:28.330 --> 00:46:33.325
So again as you can see here,
the set and the reset states are

NOTE Confidence: 0.87012964

b56f4099-fe63-466f-a53a-81a4737d6c7c
00:46:33.325 --> 00:46:37.987
complements of each other for the
F1 and F2, so the value of F1 is the

NOTE Confidence: 0.87012964

a71e7f0e-e22f-4b8e-a73f-6361c85f8104
00:46:37.987 --> 00:46:42.316
complement of the F2 and
for the set state, it's the same.

NOTE Confidence: 0.88536507

bdb48eec-e72a-4776-bfb1-68e494879013
00:46:44.690 --> 00:46:50.007
So all these happens when the
current state is 0. So let's see

NOTE Confidence: 0.88536507

1086c477-8dbc-488d-b688-62f3a560e99f
00:46:50.007 --> 00:46:53.279
what happens when the current
state is 1.

NOTE Confidence: 0.912293

687a58a8-e540-4e1f-9f3a-82ecd3d598ce
00:46:54.140 --> 00:46:56.610
OK so far, any questions?

NOTE Confidence: 0.88720065

420d1e60-446f-4a5f-8ae5-bba5d5296a39
00:46:58.880 --> 00:47:03.104
So all these are I mean analysis
when the current state of

NOTE Confidence: 0.88720065

cbea687d-9118-4329-8ec4-31457436ba08
00:47:03.104 --> 00:47:05.216
the sequential logic is at 0.

NOTE Confidence: 0.8964414

029e47b1-883f-4402-b5c0-fc6b82034a77
00:47:07.550 --> 00:47:12.659
So now we want to explore what
happens if the current state is

NOTE Confidence: 0.8964414

0fdc3528-0d3a-4753-8d00-f5ec0aae3d91
00:47:12.659 --> 00:47:15.017
1 for both F1 and F2.

NOTE Confidence: 0.86849135

c8a00023-870a-49a2-b835-d1dff4fd718a
00:47:16.660 --> 00:47:17.480
Any questions?

NOTE Confidence: 0.9239833

efd23bf2-043d-409f-a936-2e94f7cffeac
00:47:21.660 --> 00:47:22.250
So.

NOTE Confidence: 0.90151477

e4a01246-6e10-49ac-9019-b82d8799b1d2
00:47:23.470 --> 00:47:24.800
For the.

NOTE Confidence: 0.8755092

5647f937-aac5-4c7c-b02d-f4948f889d37
00:47:26.130 --> 00:47:32.220
If the current step for both
F1 and F2 is 1, so this is the

NOTE Confidence: 0.8755092

930fb285-c558-4fdb-a3fe-86b67902855d
00:47:32.220 --> 00:47:36.280
truth table or this is the
value we calculated regardless

NOTE Confidence: 0.8755092

19437241-d880-4a62-b753-4ac32264a686
00:47:36.280 --> 00:47:37.904
of the current state.

NOTE Confidence: 0.8379644

2ae12d72-bf9d-41f5-95c4-39d1f493d7c6
00:47:39.230 --> 00:47:44.354
If the current state or the
current value of F1 is 1 and 1,

NOTE Confidence: 0.8379644

b262eab6-7e21-4b74-acc4-5496bc259dcd
00:47:44.354 --> 00:47:50.210
so you can see that the the F1
in the next step is the F2 bar,

NOTE Confidence: 0.8379644

3cca8b25-a8fe-4a77-9dcb-32814e659d51
00:47:50.210 --> 00:47:55.334
and F2 is F1 bar, so both are
one. So if this one becomes

NOTE Confidence: 0.8379644

1385ad4b-2875-4fcd-bf58-b65a151ebc74
00:47:55.334 --> 00:47:59.360
zero, this one becomes zero. Also
this one becomes zero and this

NOTE Confidence: 0.91226155

8e4de689-9ca6-45b2-9bd8-94b3fc196e66
00:47:59.360 --> 00:48:04.466
one. So you can see that if
the current state of

NOTE Confidence: 0.91226155

0e8c26b5-8a46-4b48-b99f-7e8d2b0ffcbd
00:48:04.466 --> 00:48:05.890
this logic is 1,

NOTE Confidence: 0.8827688

8f95619a-5c28-4872-ba78-7550afec3870
00:48:06.970 --> 00:48:12.052
It goes to this zero state, and
this is the default state as we

NOTE Confidence: 0.8827688

dd88a90d-d25f-4638-b0e5-c3e961070dfa
00:48:12.052 --> 00:48:14.230
just explained that.

NOTE Confidence: 0.8581827

71dbb99d-d252-4e73-966e-94d1c206bee6
00:48:14.230 --> 00:48:19.874
So. If the current step is
zero, it goes to the set and

NOTE Confidence: 0.8581827

78afd8fc-0236-497f-99c0-42110e9f0369
00:48:19.874 --> 00:48:24.515
reset state, but if
the current state is 1, it

NOTE Confidence: 0.8581827

8b97fb28-36a4-4824-81e6-648b5f31bde5
00:48:24.515 --> 00:48:28.799
goes to the zero, so it always
outputs 0, which is the

NOTE Confidence: 0.8581827

7e4253a6-f82e-4efa-9e33-060792934dc8
00:48:28.799 --> 00:48:30.941
default state. It is this
state.

NOTE Confidence: 0.9326404

c84e5b22-ff1a-4b43-9478-793af98a4976
00:48:33.770 --> 00:48:36.182
So you can imagine what happens

NOTE Confidence: 0.87732965

65321c18-3408-4d3d-85ff-a8abf84e0099
00:48:36.182 --> 00:48:43.440
if I wait for another time, so
if the T + 1 becomes T + 2,

NOTE Confidence: 0.87732965

a27fff39-5f0e-49ba-b5ec-28bddc59ca54
00:48:43.440 --> 00:48:44.685
what happens? Anybody?

NOTE Confidence: 0.8593315

56352163-ac9f-4007-85e7-7dd7c3a2fbe1
00:48:47.840 --> 00:48:51.440
So at time T, we are at the state

NOTE Confidence: 0.89122975

2369df94-ea7c-4042-909c-daf45d5cf8fb
00:48:51.440 --> 00:48:55.126
11. At time T + 1 it goes

NOTE Confidence: 0.9130904

89141a0d-d67c-46b4-8288-ff962a1c7457
00:48:55.126 --> 00:48:58.520
to 00. What happens at
time T + 2?

NOTE Confidence: 0.920784

46c1445f-0dd6-441b-9b07-b2864d0df926
00:49:01.550 --> 00:49:02.250
Anybody?

NOTE Confidence: 0.9219278

b36f8543-59e9-460e-b4e7-057cef353af1
00:49:11.250 --> 00:49:13.578
As I said, I mean this is the

NOTE Confidence: 0.85333556

0509eb83-4a09-4019-b950-a2bebc26d935
00:49:14.350 --> 00:49:19.646
exact state as we have
F(T) all as 0.

NOTE Confidence: 0.8990202

caa1fb27-92f6-4442-a6be-7211f55d3fd2
00:49:20.260 --> 00:49:24.290
So at time T + 2, it
behaves like this.

NOTE Confidence: 0.92233884

ee8d5dd9-89d0-47cb-9eda-970ad5e843b3
00:49:31.840 --> 00:49:32.510
So.

NOTE Confidence: 0.8961607

56f4efef-7101-4ee3-bff5-e7899ff742f0
00:49:33.790 --> 00:49:39.740
If the current step is 11, it
goes to 00 regardless of the

NOTE Confidence: 0.8961607

377e9490-ea4a-4e75-87dc-fba6950cff0f
00:49:39.740 --> 00:49:41.015
value of X&Y.

NOTE Confidence: 0.89265454

08f206ef-7140-4387-90b9-e3d8f8cc2c13
00:49:41.580 --> 00:49:45.130
And this is exactly the
default state, at time T

NOTE Confidence: 0.89265454

0d9fb034-ce60-4cab-86ec-3fc872213ae0
00:49:45.130 --> 00:49:47.260
+ 2, it acts like this.

NOTE Confidence: 0.9065015

864921ff-18b3-48e6-95d1-be0b88e47702
00:49:48.710 --> 00:49:49.500
Like this.

NOTE Confidence: 0.8231412

3d7d185e-acda-4d9e-9e19-9fd5079ed665
00:49:50.820 --> 00:49:52.864
Assume that this is T + 1.

NOTE Confidence: 0.8602997

5a855207-ecd5-40da-b6e1-4e71536c5b47
00:49:54.530 --> 00:49:56.306
And this is T + 2.

NOTE Confidence: 0.94159675

a12f8c53-036b-46b5-93aa-c0357dc675d5
00:49:58.200 --> 00:49:58.770
OK.

NOTE Confidence: 0.9333471

9e9131d3-1b30-4f4e-ac72-fbc09c65ebc3
00:50:03.030 --> 00:50:04.428
So if it goes to the

NOTE Confidence: 0.8815675

df5214c4-b86a-4636-ad29-a38c538225f4
00:50:05.420 --> 00:50:10.306
State 11, it goes to the zero and
then you have to wait for

NOTE Confidence: 0.8815675

7769f44d-20b4-4f51-b618-4dcedce4d7c3
00:50:10.306 --> 00:50:12.400
another T, it goes to the.

NOTE Confidence: 0.8827336

1f1572ea-fc01-40fa-8721-6f9b8b388cae
00:50:16.670 --> 00:50:21.152
Sorry. This step. So it
goes to here and then it goes

NOTE Confidence: 0.8827336

6cc11253-15af-4115-9bd7-88c7b065bee1
00:50:21.152 --> 00:50:21.998
to this state.

NOTE Confidence: 0.8428571

23e70723-880e-450e-af38-4d9867981816
00:50:25.650 --> 00:50:32.046
So you can see that if this
sequential logic goes to the 11

NOTE Confidence: 0.8428571

c12c1fd2-4257-4f1e-8658-b3c173ced761
00:50:32.046 --> 00:50:37.458
state, it can easily
recover to the normal set and

NOTE Confidence: 0.8428571

74a79862-ced4-4eac-bf05-e3dfa846e047
00:50:37.458 --> 00:50:43.362
reset actions. So we have to
just wait for another time step.

NOTE Confidence: 0.8437832

a2f71a8a-837e-432f-bd8e-18e311f85823
00:50:44.560 --> 00:50:48.512
Because at first, it goes to the
default state and then when they

NOTE Confidence: 0.8437832

53aed904-ac98-44b9-9c4d-6adddbebdfbf
00:50:48.512 --> 00:50:52.464
are in the default set, it can
recover to set and reset states.

NOTE Confidence: 0.93914086

473d21f2-b691-407d-ba95-55ebf30c2fac
00:50:54.800 --> 00:50:55.928
So the next

NOTE Confidence: 0.8994212

4ffef315-7103-4443-8f67-4bcd92bf8728
00:50:56.590 --> 00:51:01.738
possibility for the current
state is that F1 is 1.

NOTE Confidence: 0.87475836

f1948a91-f1c2-425d-afdd-178c681181b0
00:51:02.410 --> 00:51:03.798
And F2 is 0.

NOTE Confidence: 0.91049147

a40cec9b-b10d-45d8-a1ca-e70ee24c71a6
00:51:05.590 --> 00:51:09.121
And this is the value we already
calculated regardless of the

NOTE Confidence: 0.91049147

d501f524-7f50-4230-9e0a-0153390149b6
00:51:09.121 --> 00:51:11.047
current value of F1 and F2.

NOTE Confidence: 0.85293716

af4c4471-4537-4c61-9640-a58f4d9c638b
00:51:11.930 --> 00:51:16.640
Now we want to see what happens
for the next step, for the F1 and

NOTE Confidence: 0.85293716

0dbd7484-0854-41dd-8e77-ba0aec05311f
00:51:16.640 --> 00:51:20.722
F2, if the current step of F1 and F2
is this. The current

NOTE Confidence: 0.85293716

f2473a8d-c895-496f-9ba3-d0efe5a43ab4
00:51:20.722 --> 00:51:22.606
state of the F1 is 1.

NOTE Confidence: 0.8320779

baa114f4-3f8b-4614-a472-362c66151d40
00:51:23.950 --> 00:51:25.990
And the current state of F2 is 0.

NOTE Confidence: 0.8827832

c8ec80c8-a55d-444a-ae85-af68918c7e4c
00:51:27.180 --> 00:51:33.056
So again, we already know that
the F1 for the next step is going

NOTE Confidence: 0.8827832

32790acb-b1e5-408e-a8e1-773c838cab76
00:51:33.056 --> 00:51:40.288
to be F2 followed by the NOT, and
F2 is F1 followed by the NOT, and

NOTE Confidence: 0.8827832

94cf4263-24ed-40be-a99b-8a551b48657d
00:51:40.288 --> 00:51:46.164
etc. So if F1 is one, F1 followed
by the NOT becomes 0.

NOTE Confidence: 0.8477303

bd30d9a5-7688-4abe-b41d-e47c7ab1538a
00:51:47.350 --> 00:51:53.410
If F2 is zero, F2 followed by
the NOT becomes one. So F1 in

NOTE Confidence: 0.8477303

a6de39b8-c685-4ea6-9a90-4c967ad33f8e
00:51:53.410 --> 00:51:55.430
the next step becomes one.

NOTE Confidence: 0.8672323

0ef3c25b-086f-4036-bd56-16c4e09537bc
00:51:57.150 --> 00:51:58.790
This one, F1 bar.

NOTE Confidence: 0.87784225

ea968b83-a6cd-4be8-92d1-d18f159417f5
00:51:59.950 --> 00:52:01.738
1 becomes 0 here.

NOTE Confidence: 0.7558808

2dc56c59-c8a6-4293-b68e-31b821ecd255
00:52:02.420 --> 00:52:05.895
F2 bar. F2 bar becoms

NOTE Confidence: 0.4028793

4df87f4d-983f-41eb-bcaf-5292306bec68
00:52:05.895 --> 00:52:07.940
one. And

NOTE Confidence: 0.84297186

a813f820-03d9-4e9b-9fea-b703942fee9c
00:52:09.350 --> 00:52:14.888
Again, when the F1 is 1
and F2 is zero, we are in

NOTE Confidence: 0.84297186

4a8687f0-8d61-410a-88cf-3ecc890ed1f1
00:52:14.888 --> 00:52:19.148
these set state and the
set state goes to here.

NOTE Confidence: 0.9474208

c3c218d9-030f-4e66-98d5-de46a1a80d84
00:52:20.860 --> 00:52:21.640
So again.

NOTE Confidence: 0.7123628

112ef4bc-e319-4b87-83c2-8ae95cd93383
00:52:22.780 --> 00:52:25.330
This. Becomes this.

NOTE Confidence: 0.92680514

00e83077-71d7-4118-9a01-8f751080f12b
00:52:27.460 --> 00:52:28.820
Well, you can see that,

NOTE Confidence: 0.8529553

12465cd0-88ce-4428-9c6e-1d7d0b177076
00:52:29.550 --> 00:52:34.590
When the F1 is 1 and F2 is zero,
we already said that this is the

NOTE Confidence: 0.8708266

ad6a7018-0c91-48a0-acd0-fbce0b55e31a
00:52:34.590 --> 00:52:40.114
set state. The main output of
the F1 is 1. The next time

NOTE Confidence: 0.8708266

a52f4554-f10a-4c32-96ed-911a37c8ec46
00:52:40.114 --> 00:52:43.237
step or the next state is going to
change like this.

NOTE Confidence: 0.89328325

45441e20-6085-4c39-8c9d-d9aa142175cc
00:52:43.890 --> 00:52:49.620
So 10 becomes 10 in the next
step, so you can repeat the 10.

NOTE Confidence: 0.8626928

f60de501-42a5-46dc-9895-44e3f94f1e27
00:52:50.320 --> 00:52:54.010
10 goes to the 00 if

NOTE Confidence: 0.827537

ea240e0c-8d1a-407b-a31d-f5fbf4ab8f89
00:52:54.700 --> 00:52:56.770
X is one and Y is 0.

NOTE Confidence: 0.79264593

264e4f51-df88-4a46-98f5-12fb2952bd9e
00:52:58.690 --> 00:53:04.010
10 or set state goes to this
again, set state. If Y is 1

NOTE Confidence: 0.79264593

bb29cef2-b8e9-4959-93e2-0f4ff7a17c02
00:53:04.010 --> 00:53:09.330
and X is zero, and if X&Y are
both one, the set state goes to

NOTE Confidence: 0.79264593

ece2065c-829f-4309-ad30-88a767f8f574
00:53:09.330 --> 00:53:10.470
the default state.

NOTE Confidence: 0.84168804

269de027-76d7-428c-b535-0afb952efc44
00:53:11.910 --> 00:53:15.126
So you can see that if you are
in the set state,

NOTE Confidence: 0.8337769

7366b5a5-0113-4a58-bb23-44568cd81e0e
00:53:16.490 --> 00:53:20.170
With the value 00, you remain as
the set state.

NOTE Confidence: 0.91630447

04672478-c29a-430f-8bf4-9cc496b560a2
00:53:21.210 --> 00:53:23.150
With the value 10,

NOTE Confidence: 0.87223953

048ca584-8ddd-4c09-aa0d-36a7efbdd3c9
00:53:23.990 --> 00:53:29.810
Again, you're in the set state.
However, in these two cases, you

NOTE Confidence: 0.87223953

18026538-45ac-4a9e-9635-3040a3561203
00:53:29.810 --> 00:53:31.750
changes both to 00.

NOTE Confidence: 0.8574513

dacb1dff-2449-419d-b258-41005f286266
00:53:33.630 --> 00:53:38.874
So. The first one where you keep
your set state is called store

NOTE Confidence: 0.8576059

1c0ec71a-3a81-4f58-958b-3315458effe9
00:53:38.874 --> 00:53:46.350
or hold. You already know that
01 is the reset, 10 is the set,

NOTE Confidence: 0.8576059

78dfdcd2-9524-4183-b094-755b54138655
00:53:46.350 --> 00:53:52.170
and now the 00, because it keeps
the set current state, we call

NOTE Confidence: 0.8576059

4f7e6531-2fac-4e3f-a3ac-4f8ed77ecb19
00:53:52.170 --> 00:53:55.080
this a store or hold for this action.

NOTE Confidence: 0.821496

096cd552-73b6-4541-894a-260f73328292
00:53:55.890 --> 00:53:58.290
Because 10 becomes still 10.

NOTE Confidence: 0.9445922

3e6a64e1-0d46-4352-a7cd-92f210ee5f16
00:53:59.060 --> 00:54:00.248
And this one.

NOTE Confidence: 0.8115369

7db88e7b-e3ee-41ca-95a0-d9b1b6d3f205
00:54:01.330 --> 00:54:02.359
The set action.

NOTE Confidence: 0.8260928

d7ebed00-3c2f-4ad1-8347-e50de0ebcb5f
00:54:03.130 --> 00:54:07.596
Although it keeps the current
set state, we call this again

NOTE Confidence: 0.8260928

b580656b-3123-47e1-af63-071a19188ae2
00:54:07.596 --> 00:54:12.874
set action because you are kind
of setting the set state, so you are kind

NOTE Confidence: 0.8260928

fbeca2d9-746d-4165-a452-16a228a346c5
00:54:12.874 --> 00:54:17.746
of overwriting the set state. So
the only difference here is that

NOTE Confidence: 0.8260928

c1427a31-82c4-4b87-9f25-6f1b1a1c11de
00:54:17.746 --> 00:54:22.618
in here, we say that we want to
preserve the previous state,

NOTE Confidence: 0.8260928

a4351a12-d50b-4168-8f8d-d4ab5e39ad1c
00:54:22.618 --> 00:54:28.302
which is the set state. In this one,
we say that we want to set this

NOTE Confidence: 0.8260928

e93ffc16-7d82-4367-a373-eec50806189a
00:54:28.302 --> 00:54:33.580
state. The current state is set.
We want to set the set state.

NOTE Confidence: 0.8647869

67cb37b4-fd68-4628-bf70-85b48b1e6385
00:54:35.640 --> 00:54:37.010
So kind of overwriting.

NOTE Confidence: 0.57637876

b4d14a0f-6fe8-4234-861c-d39052855963
00:54:38.590 --> 00:54:40.838
However this

NOTE Confidence: 0.8904538

f82c1d00-3489-4415-97d2-c66832e46f48
00:54:41.470 --> 00:54:45.364
truth table has one problem
and the thing is, if the

NOTE Confidence: 0.8904538

9af9d337-4388-4cb4-ad0f-8613df565b7a
00:54:45.364 --> 00:54:46.072
current step

NOTE Confidence: 0.8322047

64ba8467-d3e6-407a-b841-52b1b80dff4a
00:54:47.290 --> 00:54:51.460
or current state is 10,
maning that it is the set

NOTE Confidence: 0.8322047

258ad4f2-24f5-4741-aa6e-670175fc29ae
00:54:51.460 --> 00:54:55.213
state, you are in the current
state of set.

NOTE Confidence: 0.88541377

a24296cf-477b-4c6a-8037-8bead8a00322
00:54:56.500 --> 00:55:00.189
And if you do reset action 01.

NOTE Confidence: 0.90576196

d94bc028-5b7a-492b-a1b4-68708b073011
00:55:01.260 --> 00:55:03.618
F1 becomes 0.

NOTE Confidence: 0.8456826

771ac17a-4986-4e42-a2b2-f5f16afa2f38
00:55:04.420 --> 00:55:10.660
But F2 becomes 02, and these two
are not complements of each other.

NOTE Confidence: 0.84654

9f2143b3-c632-4a78-b05e-63e9a9958b90
00:55:13.340 --> 00:55:18.128
So we cannot say that the recent
action goes to the reset state

NOTE Confidence: 0.84654

cbf11c9f-5431-471e-b544-a50a523da102
00:55:18.128 --> 00:55:22.916
because although the F on the
output is zero,

NOTE Confidence: 0.84654

dd065b86-efc8-4f72-924a-075843c044ec
00:55:22.916 --> 00:55:25.709
the F2 is not a complement of F1.

NOTE Confidence: 0.9418774

fb44b520-75b0-4d15-bfa4-b7d6fa88ba51
00:55:27.300 --> 00:55:28.010
So.

NOTE Confidence: 0.80330265

730dd5b4-b7d6-432f-bdcf-79b2ad723e51
00:55:29.020 --> 00:55:33.040
The thing is, this is NOT a
problem because

NOTE Confidence: 0.9403705

1f4cc5f9-99c8-49f7-9ecf-7a4e1469fc8f
00:55:34.020 --> 00:55:36.570
if you are at 10,

NOTE Confidence: 0.8868682

4c719b81-e269-422b-903d-14b4862c05a5
00:55:37.280 --> 00:55:41.669
and you keep the reset action,
it goes to the 00.

NOTE Confidence: 0.9079935

ba9618f8-548f-465e-b406-1232dd2017e3
00:55:42.490 --> 00:55:44.786
And if we wait for another time

NOTE Confidence: 0.92367935

65054bb8-c258-401b-8c1c-e86f2aad066c
00:55:44.786 --> 00:55:49.051
step, it means that if we go to
the T + 2

NOTE Confidence: 0.9096191

43e33ddf-ab43-4794-a9d9-0fc545955f22
00:55:50.150 --> 00:55:54.245
and if we are in the 00
state, what happens?

NOTE Confidence: 0.9076858

9fe011a5-79cf-4f5c-9bb3-8e6ae6c5be0a
00:55:58.340 --> 00:56:03.674
We already said that if the
current step of F1 and F2 is 00,

NOTE Confidence: 0.8582952

1ce664b2-4cb0-4730-9060-667d730116b2
00:56:04.300 --> 00:56:10.845
and we do this reset action,
it goes to the 01.

NOTE Confidence: 0.85936904

e88f7e63-6060-42d7-9645-23a271acfffa
00:56:12.960 --> 00:56:16.920
We already saw this in the
default states, so let's come

NOTE Confidence: 0.85936904

7ff41519-5fc0-415f-be82-31f81bf3fb1e
00:56:16.920 --> 00:56:19.080
back to the default state here.

NOTE Confidence: 0.8684639

5fd1c15f-157d-4eca-9c9e-271f8ae60a88
00:56:20.350 --> 00:56:26.258
When the current step is both 0 for
the F1 and F2, if you are in

NOTE Confidence: 0.8684639

a609db1e-c5b8-467f-a975-d65f8d1e714f
00:56:26.258 --> 00:56:27.524
the reset action,

NOTE Confidence: 0.90401405

3a60e5cc-8bd8-41a7-ab39-607b21fd4c4e
00:56:29.140 --> 00:56:30.768
we do the reset.

NOTE Confidence: 0.80037594

a707cc7c-0d5d-428c-a536-92d51090cb92
00:56:31.560 --> 00:56:35.223
And F1 and F2
becomes the complement of each

NOTE Confidence: 0.89795125

00305722-40c9-4c31-9c32-cbae71fd3a47
00:56:35.223 --> 00:56:39.020
other. So let's go back to
the problem.

NOTE Confidence: 0.78423715

3b81590d-5aff-4a77-8fe6-1e57a0d6efee
00:56:41.010 --> 00:56:46.379
Here, if you are in a set
state, F1 is 1 and F2 is 0, and

NOTE Confidence: 0.78423715

c396105d-df13-4c13-9b15-af92b8ce3e7b
00:56:46.379 --> 00:56:48.031
we do the reset,

NOTE Confidence: 0.9090995

6f05296b-5403-424c-97f1-6d13a92d07f4
00:56:49.430 --> 00:56:54.500
It goes to the 00, but if you
wait for another time interval,

NOTE Confidence: 0.9090995

5cedac4a-8fbe-4c6e-b4f4-d3583082696f
00:56:54.500 --> 00:57:00.350
00 and are still doing the reset, it
goes to the 01, so we can solve

NOTE Confidence: 0.9090995

1ada5a6b-5ce6-46e1-b289-b8fe34df6d37
00:57:00.350 --> 00:57:03.860
the problem by just waiting for
another time step.

NOTE Confidence: 0.9387511

ea5d4346-8768-4db8-a7b1-a07f7603632b
00:57:07.520 --> 00:57:10.640
So if the current is 1

NOTE Confidence: 0.83627033

12c3128a-b735-403a-84d0-56935f613621
00:57:11.540 --> 00:57:15.427
for the F1 and zero for the F2
meaning the set state, you

NOTE Confidence: 0.83627033

2f59ce31-88a5-4f20-aef1-ee4e01d86224
00:57:15.427 --> 00:57:19.314
have to instead of just waiting for one
time interval, you have to wait

NOTE Confidence: 0.83627033

a1012dcf-a61a-4ded-9ba7-2f68f439d8af
00:57:19.314 --> 00:57:20.510
for two time intervals.

NOTE Confidence: 0.80941314

124bdc7b-08d9-4040-b71b-56a40af85151
00:57:22.260 --> 00:57:26.096
And then the reset
action resets the

NOTE Confidence: 0.9259887

71169d99-f0b8-4631-998a-3aa890f41dbc
00:57:27.830 --> 00:57:28.490
state.

NOTE Confidence: 0.916004

8a1fb4a7-c247-407d-82c9-bc1541113a9b
00:57:30.990 --> 00:57:33.998
So there's another
possibility that we have to

NOTE Confidence: 0.916004

1d579090-961f-4fc5-b27b-ef2b0b49d951
00:57:33.998 --> 00:57:35.126
see what happens.

NOTE Confidence: 0.36889267

d14d6f7b-87d6-46f7-9a00-9b8ba9b162e6
00:57:37.930 --> 00:57:39.950
In, oh.

NOTE Confidence: 0.86317503

19139b59-14ea-4ceb-9773-a4bc5bf2d3e9
00:57:41.260 --> 00:57:45.781
This is the possibility. So the
other possibility is

NOTE Confidence: 0.86317503

8c4c771a-2e55-4262-9d72-671a6b6a02ac
00:57:45.781 --> 00:57:49.480
what happens when the current
state is a reset?

NOTE Confidence: 0.8619847

9658b78c-68be-4809-a9ef-81d3242a5d8f
00:57:50.200 --> 00:57:53.520
So if the current state
of F1 this time becomes

NOTE Confidence: 0.8619847

d2836497-150c-438f-9f5b-1b797b2636ec
00:57:53.520 --> 00:57:55.180
zero and F2 becomes one.

NOTE Confidence: 0.88035023

8a931e4f-002f-4863-917f-9156c1e3e349
00:57:56.210 --> 00:57:59.534
So again, we already knew that
based on the current step, we know what

NOTE Confidence: 0.88035023

1bc4ffc5-4810-42a1-9fe0-c76db88c29fe
00:57:59.534 --> 00:58:01.473
happens to the next step of the

NOTE Confidence: 0.8556644

ea325125-fbfe-4013-85d7-1b55214f85b4
00:58:01.473 --> 00:58:06.410
F1 and F2. So if the current
step OR the current state is

NOTE Confidence: 0.81937504

d7535b32-05ea-48f7-a5a0-42cb79d2906f
00:58:06.410 --> 00:58:09.841
this. F1 becomes F2

NOTE Confidence: 0.7869657

48ba4680-3e82-436c-acd8-8509e3c31941
00:58:09.841 --> 00:58:15.123
bar. F2 bar, this time, F2 is
one. F2 bar becomes

NOTE Confidence: 0.75285923

c43f9a3e-af89-4ff3-b7e3-9b454aba76ce
00:58:15.123 --> 00:58:21.274
zero. F1
is zero, F1 bar becomes one, so it becomes

NOTE Confidence: 0.8238794

e5d5040f-19f9-4377-b202-ec474c094083
00:58:21.274 --> 00:58:26.176
01, and etc. So if the current
step is 01,

NOTE Confidence: 0.7556746

539026c2-b86d-4915-923d-da4216507680
00:58:27.410 --> 00:58:29.850
meaning that we are
in a reset state,

NOTE Confidence: 0.8735287

8336c687-f9d5-4e30-9d84-aa8098b85f1b
00:58:31.820 --> 00:58:32.900
we go to this.

NOTE Confidence: 0.9150497

8989933b-2dbe-4a91-a606-e0259b0eb366
00:58:34.580 --> 00:58:37.286
01 01 00 and

NOTE Confidence: 0.9354941

95c6ae67-c2d4-4e40-8a71-a67617cc74f4
00:58:37.286 --> 00:58:40.590
00. So you see that

NOTE Confidence: 0.8405458

f22f2f40-6a87-4cd2-acd4-bbb003e9fd6c
00:58:41.620 --> 00:58:48.280
00, if we are in the reset state,
goes to the reset state, so it

NOTE Confidence: 0.8405458

94f26a0e-2d6a-4229-a895-f746073d0c44
00:58:48.280 --> 00:58:52.720
means that again you're holding
or storing the reset state.

NOTE Confidence: 0.85343945

28d12241-063d-4c29-8078-fa4fb76b206d
00:58:54.680 --> 00:59:00.335
If we do the reset action and we are
in the reset state, we are kind

NOTE Confidence: 0.85343945

ba037f63-8c7f-4459-8510-f47e9d1d90e8
00:59:00.335 --> 00:59:04.482
of resetting the reset state, so
it goes to the 01.

NOTE Confidence: 0.85205656

f4f47161-58db-4434-8c8f-bbb1a23a4799
00:59:05.290 --> 00:59:09.274
The same, but the first one
we call it hold or store.

NOTE Confidence: 0.85205656

e38f69b6-ed04-4a57-a1a7-3dab10a17b1e
00:59:09.274 --> 00:59:12.594
The second one we call
it the reset action or

NOTE Confidence: 0.85205656

b3147aa2-3e60-4661-9469-780c3ab90ca6
00:59:12.594 --> 00:59:13.922
resetting the reset state.

NOTE Confidence: 0.9198927

79faf74b-f727-46a7-a1f0-4e34c9516125
00:59:15.330 --> 00:59:16.980
Again, as you can see here.

NOTE Confidence: 0.8158346

fd3ec730-1a2c-4479-a7e5-928c3596a616
00:59:17.770 --> 00:59:20.890
When you do the set action
and during the reset state,

NOTE Confidence: 0.8158346

41bf8ff2-5f1a-4599-a98f-19644e95c265
00:59:20.890 --> 00:59:24.010
meaning that you are storing
zero in the first input

NOTE Confidence: 0.8158346

0c57d71e-bc85-456e-b53b-9e65b04a3837
00:59:24.010 --> 00:59:26.194
and you want to make it 1,

NOTE Confidence: 0.8050323

3665fa22-8b49-446c-a7df-126c5fd994b4
00:59:27.210 --> 00:59:31.773
by set action, it doesn't go to
the one, it goes to the 00.

NOTE Confidence: 0.9314651

2c467b91-2304-47f4-9306-35ca9f62d711
00:59:34.430 --> 00:59:38.489
This is the same as the previous
I mean problem so,

NOTE Confidence: 0.8039627

7437c46d-0f5a-46bf-b4b7-18c7a4fec904
00:59:39.500 --> 00:59:43.592
F1 is zero, F2 is 0. They are NOT
complements each other and they

NOTE Confidence: 0.8039627

10922983-840a-41b3-9f87-b5b4094165b9
00:59:43.592 --> 00:59:45.638
are not in the set state.

NOTE Confidence: 0.8945728

f99c4f10-2fcd-42d0-a1e0-c9d3ab404922
00:59:46.320 --> 00:59:50.110
However, you already knew that
if you reach the 00,

NOTE Confidence: 0.8661273

e9962ba0-f655-4f22-951a-63ac29171cf9
00:59:51.040 --> 00:59:56.288
and you go on in the set action,
by next step it goes to the set

NOTE Confidence: 0.7539399

2752ce31-b1b3-4349-bbf2-e35a39ba4b22
00:59:57.430 --> 00:59:59.650
state, so you already knew

NOTE Confidence: 0.8502743

50d1dc66-cc9c-4cc3-800c-1b27be94fcd3
00:59:59.650 --> 01:00:06.172
that if the current value of F1
and F2 is 00 and it is a set

NOTE Confidence: 0.8502743

a47803d3-74f2-4bf6-9ac1-f16bb9381c00
01:00:06.172 --> 01:00:11.068
action, it goes to the set
state. So the problem can be

NOTE Confidence: 0.8502743

dd3b5355-0be4-4ac0-b119-b2f6908eebba
01:00:11.068 --> 01:00:12.700
solved by just waiting.

NOTE Confidence: 0.8598683

23de0880-6ec8-4f2b-a412-44682f82f62d
01:00:14.330 --> 01:00:19.634
So if you do wait for another
time interval, the 00 becomes 10,

NOTE Confidence: 0.8598683

eee4f53f-211e-4721-b03d-0d9aaca8c9fe
01:00:19.634 --> 01:00:23.306
meaning that the set action goes
to the set

NOTE Confidence: 0.5956881

88faaaca-07ee-4aa0-80e2-270610c8f6e1
01:00:24.130 --> 01:00:25.620
state.

NOTE Confidence: 0.81913793

7d5dc0d4-ce00-4349-9796-3ebc58308e52
01:00:27.330 --> 01:00:30.634
The only problem remains

NOTE Confidence: 0.81832445

4735a620-e0fb-49cb-a401-97f56b4bce8a
01:00:33.020 --> 01:00:38.942
when you are in the set
state and you wait for two time

NOTE Confidence: 0.81832445

0fac9c87-2f33-4e2a-827e-9704175dea09
01:00:38.942 --> 01:00:40.634
intervals. You can hold.

NOTE Confidence: 0.8539853

6da8643b-e99c-4c89-b265-d1c7a0d2d059
01:00:41.300 --> 01:00:46.438
You can reset. You can set, but
in this time even if you wait,

NOTE Confidence: 0.8539853

2d3986b9-99b6-4d68-8156-812291265f16
01:00:46.438 --> 01:00:51.943
you always go to zero and when
you go to the zero in this step,

NOTE Confidence: 0.8539853

c3c05ada-221e-4af0-8e2a-aed4c917ada4
01:00:51.943 --> 01:00:53.778
you always remain at 0.

NOTE Confidence: 0.932724

951f4ce2-1e2e-4f19-b5b3-df32943bacae
01:00:55.090 --> 01:00:56.990
The same is happening here.

NOTE Confidence: 0.8511117

fac52eb0-1597-4b81-84e4-db5b1b7af41e
01:00:57.790 --> 01:00:59.218
When you are in the reset, the

NOTE Confidence: 0.8135068

37274a22-7883-4e8d-a8c4-eef81832a1aa
01:01:00.290 --> 01:01:04.635
hold state or the hold action, you
keep the reset state. With

NOTE Confidence: 0.8135068

17aca456-5a5f-49e0-8ca0-fa63b0d47132
01:01:04.635 --> 01:01:09.375
the reset state, you can reset.
With the set state or with the

NOTE Confidence: 0.8135068

3da4e9c8-520e-4135-80df-bead60d7b6d1
01:01:09.375 --> 01:01:14.510
set action, you can reset, so it goes to
the set. However, for the 11,

NOTE Confidence: 0.8135068

13186d54-5171-40f0-b127-3b2eafaaa983
01:01:14.510 --> 01:01:20.435
it goes to the 00, and even
if you wait for, I mean more

NOTE Confidence: 0.8135068

593606a9-dcda-4ed6-9c32-ca814d0bbecf
01:01:20.435 --> 01:01:23.200
time intervals, it keeps
remaining at the 00.

NOTE Confidence: 0.88611066

d76924d6-38da-4804-b779-8fe9439009f9
01:01:25.350 --> 01:01:26.810
So let's do a recap.

NOTE Confidence: 0.8907729

dd2976f5-710c-49a4-b5be-37c951b374b1
01:01:29.030 --> 01:01:32.060
So if your current step

NOTE Confidence: 0.8092328

7228816d-e2b5-4070-8614-aa9a3313f7dc
01:01:33.420 --> 01:01:36.178
Is in the 00, the default step.

NOTE Confidence: 0.86494386

3992f4e4-5b45-4099-9471-6037f23e40db
01:01:37.310 --> 01:01:38.798
By the 00,

NOTE Confidence: 0.92108375

c2c433ec-73cf-43d7-b7e2-eb006e188e69
01:01:39.690 --> 01:01:41.118
You go to the 11.

NOTE Confidence: 0.8863177

2eb9a79f-dbe6-485d-a102-1ca34858955c
01:01:42.490 --> 01:01:45.388
01, you go to the reset.

NOTE Confidence: 0.8342211

91d0e955-7bd3-43bd-9932-5b29e3c912e2
01:01:46.260 --> 01:01:51.751
By 10 you go to the set, and by
11, you go to the 00, so these two

NOTE Confidence: 0.8342211

a4ce5038-3be2-4997-b909-f007c2a783a8
01:01:51.751 --> 01:01:55.627
are not complements of each other
and we have to handle these

NOTE Confidence: 0.8385744

e984e18e-f25a-4ad6-863a-b120af7ea360
01:01:55.627 --> 01:02:01.068
two. For these, for the first
one, if it goes to the 11,

NOTE Confidence: 0.8385744

deed1902-bbac-4fc6-b19d-8627f7e76bc7
01:02:01.068 --> 01:02:04.528
if you wait for another time
interval, it come backs to

NOTE Confidence: 0.9315286

65fc55f0-20c5-4087-9fbe-197b984eb2af
01:02:06.160 --> 01:02:06.960
here.

NOTE Confidence: 0.83852094

11cffa3e-768f-40ce-96bf-c5f11a40d50b
01:02:08.140 --> 01:02:16.092
OK, 11 and then if you
keep the 00, it goes to

NOTE Confidence: 0.83852094

cb5ca7a6-b98d-43a3-8f80-c45c3485576f
01:02:16.092 --> 01:02:17.796
the 00 again.

NOTE Confidence: 0.8740079

26735f6d-ff27-4abd-a5a5-9faa57843f0e
01:02:18.660 --> 01:02:25.428
00 goes the 11. If we keep
00, it goes to the 00, so it's

NOTE Confidence: 0.8740079

99906d27-6cd1-4ae1-b51f-f359fedfeee7
01:02:25.428 --> 01:02:26.697
circulates between 01 01.

NOTE Confidence: 0.8750838

76156107-fa78-461b-a401-986b04c15bfb
01:02:29.290 --> 01:02:36.010
And if you go to the 11
and you change the set and reset,

NOTE Confidence: 0.8750838

a90c4d0f-cff0-4c35-b046-ac3da3cde5d8
01:02:36.010 --> 01:02:41.386
So 11 reset. For the time
interval one, it goes to 00. But if

NOTE Confidence: 0.8750838

0b83a71f-1112-40b1-87e2-475cb8681999
01:02:41.386 --> 01:02:45.866
you wait for another time
interval, it goes to the

NOTE Confidence: 0.82403535

615ccdb4-145c-411e-b5b1-a1c1b61ae2e9
01:02:46.660 --> 01:02:47.560
reset.

NOTE Confidence: 0.8355108

734f3eea-bd03-4eea-b14a-887f7919f017
01:02:50.430 --> 01:02:56.159
If you are at 11 and you do
set, first it goes to 00 and then

NOTE Confidence: 0.8355108

d8bb2296-7c0d-42f8-8ef6-267b4279431c
01:02:56.159 --> 01:02:59.529
you wait for another time
interval, it goes to the set state.

NOTE Confidence: 0.81244683

f03bd712-61ea-4322-acb9-6b435300908b
01:03:02.620 --> 01:03:07.828
And if you are inputting 11, it
always remains at 0.

NOTE Confidence: 0.86777276

f8f776f2-393b-46c7-af8a-1c82248c2060
01:03:10.230 --> 01:03:14.982
So one problem is that
if you are at 11 and

NOTE Confidence: 0.86777276

a2233c8a-ad69-466b-9fbe-2b3378e86687
01:03:14.982 --> 01:03:18.546
you keep inputting 11,
it always remains at 00.

NOTE Confidence: 0.8861069

684a17fc-064d-4267-b6ca-efd4dbf72716
01:03:20.660 --> 01:03:26.500
And also if you are at zero, if
you input 00 and you are at 11,

NOTE Confidence: 0.8861069

e641775a-7c41-4461-b587-adc9909886fd
01:03:26.500 --> 01:03:31.610
it goes to 01, and come backs to
10 again, it circulates. So

NOTE Confidence: 0.8861069

1e10e676-a71a-4c9e-9802-adab560b990f
01:03:31.610 --> 01:03:35.260
the only two states that are actually
working is 01 and 10.

NOTE Confidence: 0.8572859

a5a35121-8256-4424-bf20-c5e0824ab69d
01:03:38.070 --> 01:03:41.814
So, and also if you are in the

NOTE Confidence: 0.94209343

b97e99a3-9c47-4401-bccd-c3dd7ffd85b5
01:03:41.814 --> 01:03:44.640
reset state, you can hold it.

NOTE Confidence: 0.7965323

7dfe1b43-d74d-4f35-b473-3a722b7c752e
01:03:45.800 --> 01:03:50.384
You can reset the reset. Also
you can set, meaning that from

NOTE Confidence: 0.7965323

3e74ee20-b8c8-402b-803a-418de5c8529f
01:03:50.384 --> 01:03:53.440
the 10, it goes to the.

NOTE Confidence: 0.8370809

c43e313e-12dc-488b-a224-97486a11aecb
01:03:54.140 --> 01:03:57.948
Uh, sorry if you are in the
set state, you can do a reset,

NOTE Confidence: 0.8370809

0c8af6e6-8ceb-45a2-a6f8-fda9028257d7
01:03:57.948 --> 01:03:59.852
you can hold it. You can set

NOTE Confidence: 0.90669805

aad8e7de-0c0d-4903-8855-fb64bb8a7b41
01:03:59.852 --> 01:04:03.432
the set state. But
again, in this state, you

NOTE Confidence: 0.90669805

c7d48920-32ca-4bd7-b86f-f1ef904d6f00
01:04:03.432 --> 01:04:04.800
are remaining at 00.

NOTE Confidence: 0.85719055

851d935a-1000-4ec9-bcc3-f73dc77cf624
01:04:06.430 --> 01:04:09.290
If you are at the reset state,
you can hold it.

NOTE Confidence: 0.85656196

d00bcc63-1c27-48ee-b14a-a624947da231
01:04:10.090 --> 01:04:12.460
You can reset the reset state.

NOTE Confidence: 0.92518175

4b483dca-7ae5-4eaa-b7c7-3b48e9bbd375
01:04:13.370 --> 01:04:14.690
You can set

NOTE Confidence: 0.83326703

4e76b18d-242a-4c44-ace4-96a0bffd82b7
01:04:16.010 --> 01:04:21.028
10. This is the reset state, it goes
to the set state. But if you are at

NOTE Confidence: 0.83326703

1927032f-3410-43b4-b47f-54c4ca0028af
01:04:21.028 --> 01:04:23.344
11, you go to the 0.

NOTE Confidence: 0.9031343

0288d78d-434a-44cc-9075-ce68ead9ecbd
01:04:25.530 --> 01:04:29.538
The thing is, as you can
see in all these truth tables,

NOTE Confidence: 0.9031343

25902fee-e4b3-4bf9-9340-42c1effd6957
01:04:29.538 --> 01:04:30.540
at any point,

NOTE Confidence: 0.90573174

5f995c81-4679-4662-99df-268f5e06fa4f
01:04:31.730 --> 01:04:38.562
with the 00, the next
step of the F1 is the previous

NOTE Confidence: 0.90573174

6a3e1363-2414-4fd9-ab6a-661fae0bcfd6
01:04:38.562 --> 01:04:40.514
value of the F1.

NOTE Confidence: 0.9040702

275c60aa-5325-4606-be42-72169d32e7d3
01:04:41.330 --> 01:04:45.686
The next step of F2 is the
previous value of F2. Whatever

NOTE Confidence: 0.9040702

e3f6c8a3-60e3-49ed-91b0-78a8ca136d80
01:04:45.686 --> 01:04:50.042
we are, we have the F1 and F2.
We are just holding them.

NOTE Confidence: 0.8957755

bbcfcc51-4606-4dc7-b544-14db2c99a0c3
01:04:52.340 --> 01:04:56.942
If you do the 01 in the input,
whatever they output of the previous

NOTE Confidence: 0.8957755

039a91bf-f515-439d-a520-46479d77a51e
01:04:56.942 --> 01:05:00.836
step is, we just reset them so
it goes to 01.

NOTE Confidence: 0.8710374

a0e36e8b-594d-4ecb-ba3c-2eb5bc5a6461
01:05:02.000 --> 01:05:05.852
If you input 10 in the set
action, whatever the previous

NOTE Confidence: 0.8710374

7cb311ca-f64a-4b69-a9bf-064993dda2c2
01:05:05.852 --> 01:05:10.025
step is, we just put it in the
10 or set state.

NOTE Confidence: 0.87916476

e00ae55d-1d2e-4e5b-8517-4745bb815232
01:05:10.860 --> 01:05:16.782
However, if you input 11
, it goes to the 00. So the thing is

NOTE Confidence: 0.87916476

741fa0ad-c7e3-4440-aca9-d4c3d03cac17
01:05:16.782 --> 01:05:21.012
because 00, they are not
complements of each other, so we

NOTE Confidence: 0.87916476

5e0df3ff-f2e7-41e1-9733-07d763c0ed82
01:05:21.012 --> 01:05:26.511
say that we can control the
X&Y so that it never goes to the 11.

NOTE Confidence: 0.88002884

df48df2d-41c1-47e2-a2dd-8e223e87c5b7
01:05:27.120 --> 01:05:31.334
Or whenever it goes to 11, we
just simply say that do not look

NOTE Confidence: 0.88002884

f3e16805-08ca-45db-a45f-7a711ff1e895
01:05:31.334 --> 01:05:34.946
at the F1 and F2, the state of
the sequential logic doesn't

NOTE Confidence: 0.88002884

c671a0ee-2255-4c33-9a8f-4f24951e9cc5
01:05:34.946 --> 01:05:36.150
actually have a meaning.

NOTE Confidence: 0.9195299

2aa5b245-19a9-466b-9e18-1adf2f88fc17
01:05:36.870 --> 01:05:41.238
In other cases, we could say
that if the input is 00,

NOTE Confidence: 0.8280393

a15b4ce0-bd55-4b9b-958b-c5c085c7aea3
01:05:41.810 --> 01:05:45.240
F1 and F2 outputs whatever

NOTE Confidence: 0.874489

8ab9bf1f-5e4b-4afe-9747-df47a313d51a
01:05:46.110 --> 01:05:50.610
is in the previous time
interval, F1 and F2, meaning

NOTE Confidence: 0.874489

1474b99c-f6e4-492a-a645-ef53950a9c10
01:05:50.610 --> 01:05:52.410
holding OR storing.

NOTE Confidence: 0.89972764

f14a4814-d0e6-4762-8079-4926dd9f20fb
01:05:53.120 --> 01:05:58.790
If you put 01 in the input, you are
doing the reset action. As a

NOTE Confidence: 0.89972764

329c703f-e438-4941-bec2-f5c6bf75ed57
01:05:58.790 --> 01:06:00.815
result, you reset the state.

NOTE Confidence: 0.86995685

2892f1a4-651f-448e-a0a9-1ff03f7763c5
01:06:01.490 --> 01:06:07.119
If you do this set action, you
make the F1 = 1 and F2 = 0, you're kind of

NOTE Confidence: 0.86995685

b0ba833e-8603-4a53-8788-bb60cd765aac
01:06:07.119 --> 01:06:08.418
setting the state.

NOTE Confidence: 0.89873874

0d2bfc3f-3383-4b2a-9853-b265846b35b0
01:06:10.590 --> 01:06:14.910
This is the most famous, I mean
one of the most famous

NOTE Confidence: 0.89873874

d05413a6-9b44-48a7-8db0-5e60fdec1063
01:06:14.910 --> 01:06:17.070
sequential logic that is able to

NOTE Confidence: 0.85768765

a5bb985a-24a8-4a72-9e94-f1c153bb2496
01:06:17.070 --> 01:06:24.011
store 0 and 1, and also that is able
to go from any state to the

NOTE Confidence: 0.85768765

e3692202-ece2-4559-a921-aa3e797a3a40
01:06:24.011 --> 01:06:26.246
reset state, meaning that it is

NOTE Confidence: 0.8689448

6de980ac-8bb1-4d41-b1e9-42f6c0813d22
01:06:26.246 --> 01:06:32.154
storing 0. Also, it is able to
go from any state

NOTE Confidence: 0.8689448

1f0211d6-eab4-4912-9a1c-febaff2965c8
01:06:32.154 --> 01:06:34.296
to the set state or one.

NOTE Confidence: 0.83094794

d044ac40-db0c-4fbe-b62d-e3a110f8e3d9
01:06:35.000 --> 01:06:38.910
Meaning that you ask the
sequential logic to store one.

NOTE Confidence: 0.9243393

fee932f5-0d32-4cd2-ac14-f58ac276210d
01:06:39.730 --> 01:06:41.398
And because of this,

NOTE Confidence: 0.8157848

3874ac43-127b-4f07-84b9-73e1e52cf3f5
01:06:42.900 --> 01:06:48.132
the X input, which does the reset,
we call it R for reset.

NOTE Confidence: 0.77414566

0a6eb93f-a0d9-4cc7-b9fe-0ebff817ffca
01:06:48.880 --> 01:06:52.792
The Y input makes this
set and we call it S.

NOTE Confidence: 0.87050056

f393dad4-44c9-4670-b3ff-6fffb93000cc
01:06:53.610 --> 01:06:58.286
And as long as S&R are both 0,
meaning that we are not going

NOTE Confidence: 0.87050056

996c8b59-6ee5-43db-a512-7e488e97ca79
01:06:58.286 --> 01:07:02.628
to do reset, we are not going
to set. So just keep whatever

NOTE Confidence: 0.87050056

6f51b8f6-9767-4a74-a2ad-8c3b19982d69
01:07:02.628 --> 01:07:03.630
you already have.

NOTE Confidence: 0.8264068

1ccb4799-db32-419a-935d-d4443a300d33
01:07:04.810 --> 01:07:08.619
Whenever you do reset, meaning
that R is 1 and S is 0, we

NOTE Confidence: 0.8264068

7779fb03-441f-46d5-a180-1442ea440f51
01:07:08.619 --> 01:07:09.791
are doing the reset.

NOTE Confidence: 0.8519802

d7f55c02-1bf3-4bb1-9f63-aa7724371de9
01:07:10.600 --> 01:07:14.681
We make the F1 = 0. And F2 is the
NOT of that, which equals one.

NOTE Confidence: 0.8253886

1fd7c8b5-513d-4756-ab94-a1efc038306c
01:07:16.190 --> 01:07:19.853
We are doing it set,
S is 1 and R is 0.

NOTE Confidence: 0.83825976

39a615ee-a992-4dff-ae1e-2e3a7e9d17bc
01:07:20.990 --> 01:07:27.654
We make this set one and we never
assume that we both do the reset

NOTE Confidence: 0.83825976

cba63504-ffd8-49d6-affa-e4f2b73f59bc
01:07:27.654 --> 01:07:32.890
and set, so this combination is
forbidden, or we just output

NOTE Confidence: 0.83825976

175ae7bf-7461-4985-8263-9803fb2fdb21
01:07:32.890 --> 01:07:34.318
don't care condition.

NOTE Confidence: 0.8429867

7d886f2e-b3b8-439e-9b01-68487a7f83d8
01:07:35.690 --> 01:07:42.540
And this is called RS
sequential logic. Reset, set, and

NOTE Confidence: 0.8429867

8e3abbe7-12bd-465b-9e0a-48e6c18f7028
01:07:42.540 --> 01:07:45.965
store if both are zero.

NOTE Confidence: 0.83147985

3b426f24-ce45-4461-bea9-e3d10c7ce507
01:07:46.620 --> 01:07:52.356
And the F1 is called Q. The
output, the primary output. And

NOTE Confidence: 0.83147985

61035ff9-9cd5-4c70-9d5e-e23e5fc3025d
01:07:52.356 --> 01:07:57.614
the second output F2 because it
always exceptional in this

NOTE Confidence: 0.83147985

5ba62759-e03b-400e-a83f-e836de1b892a
01:07:57.614 --> 01:08:02.394
case, otherwise it always actually
keeps being the complement of the

NOTE Confidence: 0.83147985

9583007b-b67a-4be4-b365-658888b494dc
01:08:02.394 --> 01:08:05.740
Q. That's why we call it Q

NOTE Confidence: 0.5921698

c5d401bf-1228-4796-8ff1-cd2a8d42e205
01:08:05.740 --> 01:08:08.769
prime.

NOTE Confidence: 0.88359714

bb7dd107-5740-4120-868b-ebdda8832734
01:08:10.080 --> 01:08:15.969
If you are 00, you keep whatever
you already are outputting or you

NOTE Confidence: 0.88359714

cd08fa7e-3634-4765-992e-2eedfae66b1f
01:08:15.969 --> 01:08:18.234
already have in the previous

NOTE Confidence: 0.8502235

f1ce3d2a-dd09-45ea-8eab-cceb599d4799
01:08:18.234 --> 01:08:23.464
steps. So Q in the next step
is going to be QT in the previous

NOTE Confidence: 0.79629976

d52757eb-d530-447c-8fed-16d3e9e69ad1
01:08:23.464 --> 01:08:28.900
step. Q Prime, is going to be the Q prime
from the previous step. So

NOTE Confidence: 0.79629976

bbf62c01-3ef6-471f-800a-b26e5ffd0079
01:08:28.900 --> 01:08:31.315
these two are always
complements of each other.

NOTE Confidence: 0.74606293

54e2374b-c0c3-4d57-b8b4-00990ae098b7
01:08:32.070 --> 01:08:34.500
Reset and set.

NOTE Confidence: 0.8834753

2c89d32f-443b-4491-a827-7e86133c0d16
01:08:35.230 --> 01:08:39.421
So you have to memorize this,
whenever you are given this

NOTE Confidence: 0.8834753

814ddc6d-2444-4afe-a802-4961db7c0888
01:08:39.421 --> 01:08:40.183
sequential logic,

NOTE Confidence: 0.8547767

6c83e371-7cd0-42ab-aabb-bb68ea541a03
01:08:41.280 --> 01:08:46.701
R = 1, S = 0. It goes to the
sequential logic to the state of

NOTE Confidence: 0.8038623

777010f0-340a-40c6-b95f-3ca1fd403fc3
01:08:46.701 --> 01:08:52.882
reset. R = 0, S = 1, it brings the
sequential logic to this

NOTE Confidence: 0.8038623

4e309b91-4dd1-4952-8652-1346559459b5
01:08:52.882 --> 01:08:54.799
step of set, the set state.

NOTE Confidence: 0.8957179

81c0d43f-73aa-48e6-8259-5b36cf3e5351
01:08:55.970 --> 01:08:57.329
Both are zero.

NOTE Confidence: 0.80989224

61a14b42-ac50-462e-b172-b585ad702879
01:08:58.010 --> 01:09:02.294
Always keep whatever you
already stored and you never

NOTE Confidence: 0.80989224

0b9acc9e-df51-4242-9535-33d266b63044
01:09:02.294 --> 01:09:07.054
input both R and S with one
because it goes the sequential

NOTE Confidence: 0.80989224

f00db7da-165b-425f-a6a0-1e51cd846b4a
01:09:07.054 --> 01:09:09.434
logic to the indeterminate
state.

NOTE Confidence: 0.83643556

48b620da-dece-488f-9e74-dae0a7253990
01:09:10.980 --> 01:09:14.976
It goes 00 and the 00 are not
compliments of each other

NOTE Confidence: 0.83643556

349c0e75-cf4e-443e-8f33-275c45b1c8b0
01:09:14.976 --> 01:09:16.974
and it never actually recovers
from this.

NOTE Confidence: 0.833808

bd6378f4-b185-4713-b96d-ce640b5f7ed9
01:09:18.790 --> 01:09:24.719
So let's practice this. One
thing is that the block diagram

NOTE Confidence: 0.833808

7d27e9c5-74d0-473a-af3e-953893d44ea6
01:09:24.719 --> 01:09:27.953
for the RS sequential logic is

NOTE Confidence: 0.77026963

6aed1f39-7a71-44ca-90f3-16b1717ef336
01:09:27.953 --> 01:09:33.514
this. And, in order to show the
Q prime, we just do this. This is

NOTE Confidence: 0.77026963

e2749834-558e-4afc-87b8-33992b974a4f
01:09:33.514 --> 01:09:37.078
the Q and this is the Q prime, we
just put this R S.

NOTE Confidence: 0.94263417

0d95b464-a70f-4f96-89bf-807e1d11956f
01:09:38.010 --> 01:09:39.048
This is the

NOTE Confidence: 0.895052

66a58646-5641-4524-98eb-8db0d65944ad
01:09:39.650 --> 01:09:45.436
most famous and most basic
sequential logic that is able to

NOTE Confidence: 0.895052

0703cdc1-2208-4933-a823-8599bf71a685
01:09:45.436 --> 01:09:47.540
store only one bit.

NOTE Confidence: 0.86690605

d96a57d1-9f4f-4b31-bb7b-c4c3129f4ee7
01:09:48.980 --> 01:09:54.188
So when you think about the
solid states, I mean hard drives

NOTE Confidence: 0.86690605

f6f54ca5-c394-4f98-8ea3-fa5787edcb56
01:09:54.188 --> 01:09:56.358
that has for instance 2

NOTE Confidence: 0.817899

b324ec7b-3555-4f3f-8c3f-6cabbf7db0e8
01:09:56.358 --> 01:10:00.460
terabytes. Two terabytes means 2
to the power of 10 multiplied

NOTE Confidence: 0.86100286

17c5e2f5-e1b5-42cf-8f68-4916d98f5bcd
01:10:00.530 --> 01:10:07.376
by 10 multiplied by 10. It means that
that solid state has that amount

NOTE Confidence: 0.86100286

9928d238-6ec4-4c32-ad30-4b34c8785507
01:10:07.376 --> 01:10:09.332
of this sequential logic.

NOTE Confidence: 0.86556226

9473555a-9f27-4aa2-8d8e-6cf0e7de81be
01:10:09.890 --> 01:10:12.578
Just to store one
bit: zero or one.

NOTE Confidence: 0.7711108

2154c583-7663-4807-b96a-07ee63c124ba
01:10:14.880 --> 01:10:19.489
Ah, and this is the block
diagram and this is called

NOTE Confidence: 0.7711108

207a0c98-0a0c-4c55-9144-afbf47127966
01:10:19.489 --> 01:10:20.746
RS sequential logic.

NOTE Confidence: 0.8343729

e030f380-a3b8-4ad5-8ad7-ee3a790a28b9
01:10:23.880 --> 01:10:30.036
So if you practice what's the
state of this RS based on

NOTE Confidence: 0.8343729

bf78824b-17cb-4c05-bf87-e20f50833d09
01:10:30.036 --> 01:10:36.705
different value of RS within the
time, so we can review the truth

NOTE Confidence: 0.8343729

e80b3da3-c1fd-4dc9-99ca-7fac248b182f
01:10:36.705 --> 01:10:39.783
table by time in this diagram.

NOTE Confidence: 0.8312196

1b238577-c47f-49d3-a042-087563047350
01:10:40.770 --> 01:10:46.575
So this is the RS we designed. So
inside this RS, we

NOTE Confidence: 0.8778401

ff703128-04c1-4f68-b655-3c47952df38b
01:10:46.575 --> 01:10:50.410
have this. I want to see
what happens based on this

NOTE Confidence: 0.8778401

034f655b-5834-4194-8261-d76f8bf5d0b2
01:10:50.410 --> 01:10:50.970
truth table.

NOTE Confidence: 0.846335

cc09ac8d-5752-4fb8-acb7-7ec48ab54237
01:10:53.530 --> 01:10:58.002
Only we consider here the Q, the
main output, and this is always

NOTE Confidence: 0.846335

74bcf1b3-919d-4b84-9769-d89aa652bc16
01:10:58.002 --> 01:11:02.130
considered as the Q prime or
the NOT of the first output.

NOTE Confidence: 0.939869

fef17639-29ec-462d-82b2-ae45d5ae84c4
01:11:03.760 --> 01:11:04.480
So.

NOTE Confidence: 0.85662913

20ee4e89-5c08-4d7d-b5d8-6e9527320d6b
01:11:05.840 --> 01:11:10.004
We have to see what happens with
the R and S, because whenever

NOTE Confidence: 0.85662913

b8f86f3a-ebd2-4964-b5c1-904aa6badd75
01:11:10.004 --> 01:11:14.515
the R&S changes, the state is going
to be changed. If both are zero, the

NOTE Confidence: 0.85662913

227d71ff-a3fc-4b18-a2b4-56626fb46b1e
01:11:14.515 --> 01:11:18.679
states remains. If there are non
0, the state is going to be changed.

NOTE Confidence: 0.9364396

b42e405f-f1c7-4e91-b961-d0fc7a126115
01:11:19.700 --> 01:11:21.280
So at the first step,

NOTE Confidence: 0.8682314

0713f1e9-67af-42c9-ae34-a4bd5dc2bc3b
01:11:21.850 --> 01:11:25.930
initially, you assume that you
are in the default step, so the

NOTE Confidence: 0.8682314

a1b232f0-d908-4488-bd3c-03e334dc5eb6
01:11:25.930 --> 01:11:30.010
output is 0. So at this time the
output is 0.

NOTE Confidence: 0.90101355

bc63b97b-4396-45ee-b7b6-e8aada765a67
01:11:32.200 --> 01:11:34.560
So if both are one.

NOTE Confidence: 0.86302316

2b7665ac-033a-42d6-bfd1-5dcb56eac817
01:11:36.750 --> 01:11:42.690
R and S are both one. We say that if
both are one, you say that the

NOTE Confidence: 0.86302316

50922069-5d74-40bd-8012-c082246a7d6e
01:11:42.690 --> 01:11:47.442
state is a don't care, you don't
have to look at the output

NOTE Confidence: 0.86302316

f1ef26da-f671-4cbe-a7f9-919fc7fac35b
01:11:47.442 --> 01:11:51.006
because it goes to the
indeterminate or bad state.

NOTE Confidence: 0.8483226

83429bf4-a5bf-4d6d-96d3-496871b78280
01:11:52.580 --> 01:11:58.355
The next one is this. R becomes
zero. And S becomes

NOTE Confidence: 0.8507457

f4dea60c-ccf0-4e08-bc84-e0cd7a5084d2
01:11:59.030 --> 01:12:04.782
1. So this is the set action,
meaning that we do this setting.

NOTE Confidence: 0.8507457

1398f45c-81be-418d-a3fe-33539cdb26e0
01:12:04.782 --> 01:12:08.442
Whatever the state is in the
previous step, which was

NOTE Confidence: 0.8507457

b5e1d493-bddd-4cad-a981-646e9c347538
01:12:08.442 --> 01:12:12.468
indeterminate, it goes to the
set state one, so the Q

NOTE Confidence: 0.8507457

4b4ac3d9-a0c3-494d-a361-866d85050aee
01:12:12.468 --> 01:12:14.298
output is going to be 1.

NOTE Confidence: 0.86628115

71b63056-4564-4fae-9cd1-32329642c95e
01:12:15.810 --> 01:12:21.318
In the next step, R becomes
zero, and S becomes 0. 00 means

NOTE Confidence: 0.86628115

74734164-42c0-4553-8451-fb2b9405dbcd
01:12:21.318 --> 01:12:26.367
that you preserve or restore
whatever you already have. So it

NOTE Confidence: 0.86628115

133fb1b0-8270-48f3-a4ab-89ec9d675e5b
01:12:26.367 --> 01:12:30.957
means that you store. You already
have one, you store 1.

NOTE Confidence: 0.74500376

e80b320f-7c11-47e2-a804-084b42d78282
01:12:32.960 --> 01:12:36.920
At this very I mean

NOTE Confidence: 0.8314984

c78ef822-c751-4086-9fe0-1cc8dcc95d80
01:12:36.920 --> 01:12:43.306
short period, R becomes one
and S is still 0.

NOTE Confidence: 0.8887046

a76b1ecb-385a-42ca-a492-5d3bfab4950d
01:12:44.130 --> 01:12:49.187
So R = 1, S = 0, meaning that it is in the reset
state. It means that whatever

NOTE Confidence: 0.8887046

ebd16d75-df19-4da3-97f4-ee598de22cf8
01:12:49.187 --> 01:12:53.855
you already have, you have to
bring it to the reset state,

NOTE Confidence: 0.8887046

f76e5f31-5cc4-4e26-b03e-2293e7995fc4
01:12:53.855 --> 01:12:55.411
meaning that it becomes zero.

NOTE Confidence: 0.8991126

163d9219-17aa-47c1-b20f-91c8835fa86e
01:12:56.880 --> 01:13:00.996
So it drops from one to zero
because of the reset action.

NOTE Confidence: 0.93703747

9be00019-9075-4b70-920b-e624ff24eb97
01:13:02.480 --> 01:13:04.300
And then after this point,

NOTE Confidence: 0.85604984

020bdd47-6cce-4fe5-aefe-83c482e069d6
01:13:05.170 --> 01:13:10.588
both R and S becomes one. So
if both R and S becomes one,

NOTE Confidence: 0.85604984

36a74046-23b6-40bb-84bf-36def09e09a5
01:13:10.588 --> 01:13:15.619
we say that we are in a
forbidden state so we don't have

NOTE Confidence: 0.85604984

76ffb40d-eef0-4c7b-873b-c5aa146fdb14
01:13:15.619 --> 01:13:17.554
to look at the output.

NOTE Confidence: 0.8074269

b50e3135-4963-410d-806c-e232822541e1
01:13:18.970 --> 01:13:22.853
So as long as R and S are
both one, you are in the

NOTE Confidence: 0.8074269

d9d8c334-ace6-4174-b7b1-abb7741b912f
01:13:22.853 --> 01:13:23.912
indeterminate states, so it's
forbidden.

NOTE Confidence: 0.85622644

05c10933-4551-4aa5-a06a-e28a8f61c97c
01:13:25.000 --> 01:13:30.499
So what happens next. Next, S
becomes one, and R becomes zero.

NOTE Confidence: 0.85622644

5552dac4-8c15-4bd4-ba42-b4c5700afc6b
01:13:30.499 --> 01:13:34.729
It means that whatever you
already preserved, bring it to

NOTE Confidence: 0.85622644

9bfeea44-dc1b-4422-aa0f-b3abed752b3f
01:13:34.729 --> 01:13:35.998
this set state.

NOTE Confidence: 0.9166687

7fefaee0-d200-4032-afd5-0d3980c6dc12
01:13:37.160 --> 01:13:38.120
It goes to 1.

NOTE Confidence: 0.87987286

34712203-a9c8-4523-b6e7-101050a9df52
01:13:40.470 --> 01:13:45.042
The next is R is zero, S
is 0, meaning that in

NOTE Confidence: 0.87987286

f86019d8-7c25-47d8-98e1-dc8f29a02b9f
01:13:45.042 --> 01:13:48.471
whatever you already have,
hold it or store it.

NOTE Confidence: 0.88707125

9834c280-e3b6-486a-a595-a2584e352f46
01:13:50.750 --> 01:13:55.258
So you can assume that this is
going to be one and you can

NOTE Confidence: 0.88707125

cba6d27a-ee34-42ba-b30f-fdc2421b8720
01:13:55.258 --> 01:13:58.478
check at home what happens to
the next time intervals.

NOTE Confidence: 0.91047806

815e9bec-7a8b-4677-918d-26e58364d79a
01:14:02.070 --> 01:14:03.550
So any questions so far?

NOTE Confidence: 0.8488092

190783bf-ea32-492b-990f-2261b11585f8
01:14:06.640 --> 01:14:07.966
Oh, we're running out of time.

NOTE Confidence: 0.9409004

1445a287-1cec-4b85-b233-585f75be5d98
01:14:09.480 --> 01:14:10.250
So.

NOTE Confidence: 0.8663293

06b1f3d8-e390-470e-b2ce-2c545063a148
01:14:14.080 --> 01:14:14.960
Any questions?

NOTE Confidence: 0.76774925

54c0bc11-0d51-4d16-b44e-733b7e66c288
01:14:36.710 --> 01:14:38.710
There's no questions. Sean?

NOTE Confidence: 0.9281593

b6dbb470-3d0b-4afe-b916-a73faffd4978
01:14:40.370 --> 01:14:41.450
Not that I see.

NOTE Confidence: 0.91041934

7f10d6d3-0427-41a9-bad7-5e034114848b
01:14:42.090 --> 01:14:43.398
OK.

NOTE Confidence: 0.8984133

f7e65e3e-66ed-4d21-b6a9-3e4c0f4d2e63
01:14:44.190 --> 01:14:50.690
So we're running out of time, so
next week we're going to explain

NOTE Confidence: 0.8984133

f7bf721b-3145-4335-a763-bfa19bb17ec4
01:14:50.690 --> 01:14:52.190
more about the

NOTE Confidence: 0.7926885

f3cafc7c-1339-440f-9a62-9712ae2fd660
01:14:52.750 --> 01:14:58.522
RS dequential logic that is able
to store 1 bit that is just zero

NOTE Confidence: 0.80372614

187a7ce7-2a90-491b-a830-3658100eb525
01:14:58.522 --> 01:15:04.472
or one. And, uh, I'm going to
be in the office hour to take

NOTE Confidence: 0.80372614

3a37bae5-47c7-4da6-84d4-be8ea9de3ac4
01:15:04.472 --> 01:15:05.956
your questions, if there's any.

NOTE Confidence: 0.9435289

5e7adb53-6502-423d-8505-447ad3f2c098
01:15:06.760 --> 01:15:07.550
So.

NOTE Confidence: 0.9051349

f824a4d3-6c31-476d-8691-61d3d666cc92
01:15:08.930 --> 01:15:10.866
Thank you so much. Have a
great day.

NOTE Confidence: 0.8445931

d56b8c92-7d0f-4be1-aab0-1695c110759b
01:15:19.580 --> 01:15:20.590
Thanks Justin.

NOTE Confidence: 0.7590939

ede274d1-f0f9-4933-b74a-bebd49afffcd
01:15:33.340 --> 01:15:39.038
I just wait for others to leave
the session.

