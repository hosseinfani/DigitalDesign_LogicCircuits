WEBVTT

NOTE duration:"01:21:28.2160000"

NOTE language:en-us

NOTE Confidence: 0.8084839

8b41bc72-a493-4133-8ae0-14313813a4cb
00:00:12.040 --> 00:00:16.408
So good morning everyone. Let's
start.

NOTE Confidence: 0.76799315

74f62898-e890-47fe-a4a0-22b20b9d1b0d
00:00:20.170 --> 00:00:24.993
First of all, actually have you
had the chance to see this movie?

NOTE Confidence: 0.76799315

6871133f-445f-4cee-a6d9-90382ca9312e
00:00:24.993 --> 00:00:26.477
Memento by Christopher Nolan.

NOTE Confidence: 0.83188516

7aa17ff2-9a3c-4763-822b-a64d8aaa93a3
00:00:37.120 --> 00:00:42.076
Trust me, I mean, if I
have one movie I'm going to

NOTE Confidence: 0.83188516

3172add9-3a28-4913-8c3c-62007f69c436
00:00:42.076 --> 00:00:44.554
suggest to a friend of mine or

NOTE Confidence: 0.82491815

1d461411-3277-4712-a328-844369b64227
00:00:44.554 --> 00:00:48.542
from Christopher
Nolan. Trust me. Watch this

NOTE Confidence: 0.82491815

6e36e24b-0771-4eed-90df-b6f95d8b205f
00:00:48.542 --> 00:00:53.339
movie. I mean it's worth it to
watch this movie two or three

NOTE Confidence: 0.9135084

08c78ac5-8f7a-40e4-8899-7d2a38871423
00:00:53.339 --> 00:00:58.672
times. So although it's an old
movie, I know, but,

NOTE Confidence: 0.92587507

090e3fff-9f1a-40c3-bd62-c252ee377ac2
00:00:59.880 --> 00:01:02.659
It's one of the best movies and

NOTE Confidence: 0.63519675

dfb17f63-cc97-42f7-939f-4bd752800cac
00:01:04.070 --> 00:01:06.716
actually it's a symbol of, I

NOTE Confidence: 0.71615124

9295910f-9851-4e36-9335-77c9038d5332
00:01:06.716 --> 00:01:13.174
mean postmodernism
in cinema actually, which

NOTE Confidence: 0.71615124

8fe36272-ccac-4d8b-8007-4b9c8ebd9926
00:01:13.174 --> 00:01:16.390
is started by

NOTE Confidence: 0.7776083

1aa1588a-5a30-4dbe-b874-7d1b5670422e
00:01:17.300 --> 00:01:23.526
Tarantino in Pulp Fiction,
and Christopher Nolan because of

NOTE Confidence: 0.7776083

0536a74e-7d5e-468d-a35b-457574fa2917
00:01:23.526 --> 00:01:31.450
the form and playing
with the time. So it's one of

NOTE Confidence: 0.7776083

495a7cf3-38f3-4b10-ab80-638d72086c39
00:01:31.450 --> 00:01:34.280
the archetype in this

NOTE Confidence: 0.878948

bf40c47a-1e01-4bb6-875d-08b068269dc3
00:01:34.280 --> 00:01:40.228
genre so, before we start
today's lecture first of all.

NOTE Confidence: 0.81096154

deef72d2-58cb-4d3e-831c-f3fb891cb4f7
00:01:41.850 --> 00:01:46.437
So we are going to continue our
lecture on sequential logic.

NOTE Confidence: 0.8693911

18057732-5c8e-4f83-bdf5-28e4b8201465
00:01:47.020 --> 00:01:53.092
And we said that sequential
logic is a digital unit or

NOTE Confidence: 0.8693911

a32f4b67-5aa2-48b6-af20-c7a6c005ff05
00:01:53.092 --> 00:01:58.612
a logic circuit that has
feedback from the output to

NOTE Confidence: 0.8693911

067f4264-7f8b-4751-beee-7fb74bea3819
00:01:58.612 --> 00:02:04.132
the input. So we're kind of
really using what we've.

NOTE Confidence: 0.061597705

95884055-1d01-4dc2-b389-e9fed0b04c69
00:02:05.340 --> 00:02:06.310
Um.

NOTE Confidence: 0.8484516

96375629-b17d-4180-acc1-b1dcce8a1c3c
00:02:07.620 --> 00:02:11.602
What we output in the previous
step or previous time interval

NOTE Confidence: 0.8484516

80b9f51d-ea76-4fa7-accc-e2bc9492475b
00:02:11.602 --> 00:02:15.584
to reuse it for another, I mean
input to this system.

NOTE Confidence: 0.8314514

b90b3493-f727-414b-a4d0-ccb223d5087b
00:02:16.600 --> 00:02:21.328
Uh, I'm going to continue, but
before that, I just wanted to

NOTE Confidence: 0.82579505

f56c2bb3-0a8a-46aa-92db-2d479e307eae
00:02:23.410 --> 00:02:28.390
Mention about SET. I mean, the
student evaluations of teaching.

NOTE Confidence: 0.82579505

21d32e03-d863-454c-9360-a31d6132019c
00:02:28.390 --> 00:02:33.868
We already perform an informal
survey, but this is the formal

NOTE Confidence: 0.82579505

d6a96adb-5e7d-485b-a340-57cec68b451d
00:02:33.868 --> 00:02:38.848
survey from the school. It
starts this Thursday up until

NOTE Confidence: 0.82579505

3223424a-c92f-432d-8c5a-e56693624b62
00:02:38.848 --> 00:02:44.824
two weeks until December 9th. So
if you have any questions, you

NOTE Confidence: 0.82579505

534c80f6-0fbd-450e-8ea7-36b769f72263
00:02:44.824 --> 00:02:51.298
can go to this link about this.
Please, I mean, I'm going to

NOTE Confidence: 0.82579505

278502a1-53c3-4dfc-8e57-3bad3c4238c8
00:02:51.298 --> 00:02:53.290
remind you about this

NOTE Confidence: 0.7829928

c44e4cfd-d647-48ad-80ae-32b57ac8b658
00:02:53.420 --> 00:02:57.074
this Wednesday too.
And also next week so

NOTE Confidence: 0.7829928

7cb4b936-4210-47c9-b0cc-c7cefb22fe5a
00:02:57.074 --> 00:02:58.698
please go through this.

NOTE Confidence: 0.72895056

96afb158-bc3d-4b3c-8ee4-e5d872c3a609
00:03:00.210 --> 00:03:05.378
Uh, you on UWinsite Student
and then evaluate

NOTE Confidence: 0.8663507

8225490a-a140-422e-9ad3-6662afa1b76e
00:03:06.800 --> 00:03:10.319
this course, my teaching
slides, whatever. Actually all

NOTE Confidence: 0.8663507

83924098-e60a-473d-a7f3-b5de801aad4e
00:03:10.319 --> 00:03:13.838
the parts of this course, the
assignments and etc.

NOTE Confidence: 0.8921871

9f2a3d9c-41fc-4e73-b395-0cb30c101787
00:03:15.380 --> 00:03:19.010
So this is one note. Another
note is about

NOTE Confidence: 0.8781153

a572336a-2908-4dca-b5ef-a00705796805
00:03:21.060 --> 00:03:26.364
The problem or an issue that
raised by one of the students

NOTE Confidence: 0.88687706

1e3b4c97-bfde-4bd4-b704-30955c187848
00:03:26.364 --> 00:03:31.750
and I'm happy that these students
actually found this, and this is

NOTE Confidence: 0.7665288

8e746ec6-1f67-40d9-82b2-c749ad2dca63
00:03:31.750 --> 00:03:37.418
the issue. So basically, uh,
according to the

NOTE Confidence: 0.89255816

6b0bc5ea-b880-4567-96f7-93fdf6ea9692
00:03:39.820 --> 00:03:41.670
school's policy.

NOTE Confidence: 0.85253596

90b28a1c-ed8d-4c09-84aa-7f96fc6a39b5
00:03:43.810 --> 00:03:48.617
Oh yes, according to the
school's policy, as I said here,

NOTE Confidence: 0.85253596

5cdf0ae4-e734-4356-a064-60764e1cdb24
00:03:48.617 --> 00:03:53.424
within the last week of the
classes and also after that,

NOTE Confidence: 0.85253596

41c2d95a-4e57-4184-bc9d-2eaeff83b483
00:03:53.424 --> 00:03:58.231
during the exam period, no
assignments can be due, so we

NOTE Confidence: 0.85253596

1f2a16d7-1b3a-4414-a048-f20ea2f5eaf0
00:03:58.231 --> 00:04:03.038
cannot ask the students to do
some assignments within the last

NOTE Confidence: 0.85253596

a69e6337-279c-4e91-8dc8-cbf3aabdbe6e
00:04:03.038 --> 00:04:05.223
week and also the after the

NOTE Confidence: 0.90200984

dc0d9630-0421-446e-ab55-b84d72af3946
00:04:05.900 --> 00:04:10.108
exam week. This is one
thing, so

NOTE Confidence: 0.82033676

f7818d28-b76d-4f3d-871f-cd90c72dea50
00:04:11.570 --> 00:04:16.685
because of the two weeks
extension to the assignments,

NOTE Confidence: 0.82033676

3de1daeb-cd26-479a-8181-99414a37ef32
00:04:16.685 --> 00:04:21.800
the lab for this week and also the
lecture assignment this

NOTE Confidence: 0.82033676

92922e93-4e21-4ff3-aa80-c918a337c27b
00:04:21.800 --> 00:04:27.380
week and next week has a deadline that is
is gonna I mean conflict with this

NOTE Confidence: 0.85638684

a1b661f9-7f5d-4b6c-bc0f-2f59df56201d
00:04:27.380 --> 00:04:32.800
policy. Another thing is that, uh, we
cannot remove these lecture

NOTE Confidence: 0.85638684

f2489cc6-4116-41c1-8f1b-4a5838665745
00:04:32.800 --> 00:04:36.661
assignments and the lab
assignments for this week and

NOTE Confidence: 0.85638684

e84c5476-a4ab-4503-951d-e2498dbd7065
00:04:36.661 --> 00:04:41.380
next week because it changes the
marking scheme in the course

NOTE Confidence: 0.85638684

e4ba2ec8-7f2f-4b22-ac66-8ea994723c83
00:04:41.380 --> 00:04:46.099
outline. And there is another
policy for this school that you

NOTE Confidence: 0.85638684

bfbfb443-9f3a-4c61-a821-d0b9fa7d9ec5
00:04:46.099 --> 00:04:51.247
cannot change the course outline
after the first 2 weeks of

NOTE Confidence: 0.85638684

8cf51b96-8d60-484e-b90e-44b0befcfa88
00:04:51.247 --> 00:04:55.966
classes, so we cannot change
that too. So the only solution

NOTE Confidence: 0.85638684

4b020f5c-0a80-42af-b56d-db4033fa3e11
00:04:55.966 --> 00:04:57.253
actually is this.

NOTE Confidence: 0.8617901

ed39b77e-01df-44c9-aaba-915534215c99
00:04:57.830 --> 00:05:01.669
I will put the official
deadline or due date up until

NOTE Confidence: 0.8617901

460ecd53-cff9-4eef-8dac-fb1a82c8d915
00:05:01.669 --> 00:05:05.508
before the last week, meaning
that the December 2 next week.

NOTE Confidence: 0.87976754

eee57c5d-b5a2-43d8-a0cf-bee96e9e5dcc
00:05:06.210 --> 00:05:07.920
One week before the last week.

NOTE Confidence: 0.90664494

46f888ca-50c2-446d-a9a9-5a67ec217484
00:05:08.520 --> 00:05:11.280
And then, uh, we offer an

NOTE Confidence: 0.8301061

7a8e95ac-bc7f-4efe-8407-28e9d4ad8140
00:05:11.280 --> 00:05:16.902
extension. Uh, as I as you see
here, we offered the extension for

NOTE Confidence: 0.8301061

4ae3dd5d-be91-47eb-bc46-5e01acb37c68
00:05:16.902 --> 00:05:20.430
this week's assignment, one week
extension for all the

NOTE Confidence: 0.8301061

cddfecad-507c-4b98-a7e4-b6cfb76e9183
00:05:20.430 --> 00:05:23.566
students. So basically the
official deadline is gonna be

NOTE Confidence: 0.8301061

7f02bb16-12c1-4b9c-93f9-a4975c2ab1bf
00:05:23.566 --> 00:05:27.878
December 2nd, but we accept a
one week extension for

NOTE Confidence: 0.8301061

28f0f7f3-5201-4943-9f7d-4db079d96a44
00:05:27.878 --> 00:05:32.582
this week and also for the next
week. We accept two week

NOTE Confidence: 0.8828585

71c2a4f4-8b2f-4a7a-be42-127aec784f8f
00:05:32.582 --> 00:05:36.734
extensions. So by the
extension with me, we mean

NOTE Confidence: 0.8828585

3e837a2b-fedf-45c9-b4b7-9b07e4df3440
00:05:36.734 --> 00:05:40.564
that we accept all the late
submissions for these two

NOTE Confidence: 0.8651304

e5cb791c-09c6-4933-bf16-d2caa6af9213
00:05:41.700 --> 00:05:45.884
assignments. For this week's
assignments and next week's

NOTE Confidence: 0.88495356

d192ae84-2b77-4572-8d53-f2677ca153f4
00:05:45.884 --> 00:05:50.425
assignments. So I will explain
this clearly I mean in the

NOTE Confidence: 0.88495356

1c717de9-2621-43f9-a037-fadbee2f72a5
00:05:50.425 --> 00:05:54.660
first part of this week's
lab, and also I will explain

NOTE Confidence: 0.88495356

7608814e-d729-43e6-8dbf-a54dc809cada
00:05:54.660 --> 00:05:58.125
it in the lecture assignment
documents. So any

NOTE Confidence: 0.88495356

caf83d37-3503-4838-94be-26eaf518fd8b
00:05:58.125 --> 00:05:59.665
questions in this regard?

NOTE Confidence: 0.8802251

b2240928-e4fc-4eae-8fbd-d7793b8f0f55
00:06:09.570 --> 00:06:14.176
So. Since there's no
question, so let's.

NOTE Confidence: 0.9399744

03acab4e-3463-4c22-a506-4589a6d900d4
00:06:15.210 --> 00:06:15.940
Continue.

NOTE Confidence: 0.51023996

390e34dd-6bf2-410d-a74c-f61a81cc42f0
00:06:25.920 --> 00:06:27.800
...

NOTE Confidence: 0.93124187

c582ce22-a6ad-46cc-8b6a-71fd18fa8ae6
00:06:30.520 --> 00:06:31.120
OK.

NOTE Confidence: 0.09059962

42f6aa52-77bd-4353-8502-9a61b5790bd5
00:06:32.820 --> 00:06:33.530
Um.

NOTE Confidence: 0.8414061

c6a0a635-bfac-486c-b6bd-6a5968f94929
00:06:38.770 --> 00:06:44.870
So. We tried to create some
feedback by the simplest logic

NOTE Confidence: 0.8414061

6c889885-425b-4588-a459-42c00c8e3934
00:06:44.870 --> 00:06:50.850
circuits using a single
AND and a single OR and we said that

NOTE Confidence: 0.8414061

f2129c84-a0c9-4db5-aa21-f61c98bfd81c
00:06:50.850 --> 00:06:56.370
they have some problems in order
to memorize just one bit. Then

NOTE Confidence: 0.8414061

2190f616-dc01-4f5d-ac6a-f685afd3e149
00:06:56.370 --> 00:07:01.890
we use two NOR gate with cross
feedbacks and by analyzing this

NOTE Confidence: 0.8414061

4268f23e-3510-4d56-9fc2-f458ba3ee93d
00:07:01.890 --> 00:07:06.950
unit, we figured out that this
unit is able to

NOTE Confidence: 0.8406538

1698abd9-d3eb-4600-87c0-f6f54ab8d011
00:07:07.670 --> 00:07:13.706
Store zero and one whenever we
changed the X&Y, the two inputs of

NOTE Confidence: 0.8559617

5bc8558d-5c9b-4dc9-9466-02962bd85257
00:07:13.706 --> 00:07:19.222
that. And this logic circuit had
two inputs and two outputs F1 and F2.

NOTE Confidence: 0.8559617

82b6b51f-29ed-4eae-9a9c-3666c49a96de
00:07:19.222 --> 00:07:24.712
We said that the F1 is going to
be the main output and we like

NOTE Confidence: 0.8559617

b91c49ce-2fde-4fd7-ad95-ccf7332c9ecd
00:07:24.712 --> 00:07:29.104
this circuit because F2
in most cases is the complement

NOTE Confidence: 0.8530285

8fe94a45-ac2f-47c1-8804-61f40c475602
00:07:29.104 --> 00:07:34.275
of F1. So we start with
considering the current state of

NOTE Confidence: 0.8530285

61a0c6da-4eab-47a1-87d5-a29bc0efbd2c
00:07:34.275 --> 00:07:39.670
the logic circuit at time T, and
we wanted to predict or see

NOTE Confidence: 0.8530285

fc97a8c2-924f-47b4-9e23-7e0062448037
00:07:39.670 --> 00:07:45.895
what's going to be the output
for F1 and F2 at time T + 1.

NOTE Confidence: 0.8452119

da3815e7-b69b-4508-ae43-d6eb7ea0c0cf
00:07:47.360 --> 00:07:53.665
So whenever X&Y are both 0, so
the NOR gate depends on the other

NOTE Confidence: 0.8452119

ed6cc3a6-eba5-4b3a-85fc-d6b168faa192
00:07:53.665 --> 00:07:59.485
input, so F1 at next time is gonna
be F2 at current time,

NOTE Confidence: 0.7829819

60269687-82f9-4a1e-9af0-e93fa3954f3e
00:08:00.140 --> 00:08:04.396
Followed by the not. F2 is
is gonna be F1 followed by

NOTE Confidence: 0.7829819

c6ee0c59-a67e-41db-a52e-3cbbc107ac0b
00:08:04.396 --> 00:08:06.551
the not at current time.

NOTE Confidence: 0.8224966

e40b1354-5929-4154-9b4c-284446744534
00:08:07.590 --> 00:08:13.174
If X is 1 and Y is 0, because
in the NOR gate, if one input is

NOTE Confidence: 0.8224966

fd3f3602-5a66-4c96-951b-c784386be2e8
00:08:13.174 --> 00:08:18.409
1, so we don't have to look
for the other

NOTE Confidence: 0.8224966

a1ff9fea-93b4-4b8f-8c0b-ebd4c19c54ff
00:08:18.409 --> 00:08:23.644
input, it becomes one followed
by the not zero. So if X is one,

NOTE Confidence: 0.8224966

36d0ea24-743e-427e-a133-6ece9a8cc8d7
00:08:23.644 --> 00:08:25.389
F1 is gonna be always 0.

NOTE Confidence: 0.8577015

c7b75f32-15ca-49fd-9428-b17100268079
00:08:26.630 --> 00:08:32.180
As you can see here, X is one, F1 is
going to be 0. However, Y

NOTE Confidence: 0.8577015

240baa36-b619-4c97-a32d-55877f06d43b
00:08:32.180 --> 00:08:36.620
because it's zero, it depends on
the current state of F1 followed

NOTE Confidence: 0.8577015

5cfc9fb2-8e3a-47c2-aebc-e86e769c8f2a
00:08:36.620 --> 00:08:37.730
by the not

NOTE Confidence: 0.85873294

a16eed57-3714-4dcf-bbd6-52d80691d403
00:08:38.470 --> 00:08:45.832
for the F2. And also for when
a Y is 1 and X is 0. So

NOTE Confidence: 0.85873294

434bcc74-89c5-4d25-b684-4fc14c673b96
00:08:45.832 --> 00:08:48.568
again this time F1, because Y

NOTE Confidence: 0.72620684

1d40cf82-dcd3-417a-91d8-7c9d2600c1aa
00:08:48.568 --> 00:08:55.893
is 1, comes here, so F1 followed by
the not is 0, so F2 is gonna be 0

NOTE Confidence: 0.72620684

c4b647db-706f-4435-98bd-69ddd52542c2
00:08:55.893 --> 00:09:00.103
and X waits for the F2 followed
by the not.

NOTE Confidence: 0.869717

153e7eb6-1b32-4cf0-b901-6776ef38b0a8
00:09:01.660 --> 00:09:05.599
And if both are one, we
don't have to look at the

NOTE Confidence: 0.869717

a872cae5-e91d-4350-b60f-09b21b93973f
00:09:05.599 --> 00:09:08.932
current state of the logic
circuit and both are is gonna be 0

NOTE Confidence: 0.869717

dbfffea0-bc36-4558-9996-ff52d11857cb
00:09:08.932 --> 00:09:12.265
for the next time interval,
because this one is

NOTE Confidence: 0.869717

9a44f959-9524-4633-9e43-8a3551d1dc5b
00:09:12.265 --> 00:09:16.204
is gonna be one, this is going to
be one followed by not, 00.

NOTE Confidence: 0.9084236

93360a8e-38e8-417b-98c1-d35be3ae8cdb
00:09:17.360 --> 00:09:19.944
And we said that if we wait for

NOTE Confidence: 0.8433263

1eb7365e-c99f-437a-b594-2dee15aa7223
00:09:19.944 --> 00:09:24.172
another time interval. T + 2,
so basically if we

NOTE Confidence: 0.8433263

d697e760-8449-445e-b65e-4cdbe2394705
00:09:24.172 --> 00:09:29.333
assume that the T + 2 is gonna be
the next time interval, the

NOTE Confidence: 0.8433263

9b373caf-277e-447d-aa7b-ad0fc8cfadaa
00:09:29.333 --> 00:09:34.097
previous time interval is gonna be
T + 1. So basically it is

NOTE Confidence: 0.8433263

8be8d2e2-4f8c-4c83-8f51-fd2aca5e6607
00:09:34.097 --> 00:09:39.655
exactly the same as this truth
table T, T + 1. This one T +

NOTE Confidence: 0.8433263

a962df40-43ee-4440-91ba-b624829a8f5d
00:09:39.655 --> 00:09:43.228
2 is on the previous step T + 1.

NOTE Confidence: 0.787187

914ce41b-e3ad-4260-b266-25d71c779396
00:09:43.870 --> 00:09:49.876
So again, the same. F1 at T + 2
is gonna be F2 followed by the not

NOTE Confidence: 0.787187

f537c7ec-5513-42c2-89e2-c191161444ee
00:09:49.876 --> 00:09:55.024
and T + 1 when X is zero and Y
is zero.

NOTE Confidence: 0.8549939

422594b9-6eb8-4fe3-81e2-33f996a0c23e
00:09:55.980 --> 00:09:59.670
F2 at T + 2 is gonna be F1 at T +

NOTE Confidence: 0.78353274

d1b2512a-f8a8-4323-ab8f-86e80cee0634
00:09:59.670 --> 00:10:00.950
1. Followed by the not.

NOTE Confidence: 0.8462761

7007d872-737f-4629-a837-8208e3accaea
00:10:01.800 --> 00:10:05.846
And all the same for the other
rows. So this is exactly as the

NOTE Confidence: 0.8462761

6ad8775d-5416-450c-8c53-4dc1efb5c8fa
00:10:05.846 --> 00:10:10.759
way that T become T + 1
and T + 1 becomes 2 + 2.

NOTE Confidence: 0.87625146

0b5bccfd-98dc-4776-a0e1-d07f9a479aee
00:10:12.350 --> 00:10:17.043
So if you put all these two
together and wait for two time

NOTE Confidence: 0.87625146

4aacc6ec-a113-4664-a5e4-daa61425b187
00:10:17.043 --> 00:10:19.209
intervals, so if the current time

NOTE Confidence: 0.87159175

936d8f41-f9b4-4bc2-ba17-c8825e9d957c
00:10:19.209 --> 00:10:24.944
is T, we wanted to see what's
the output of F1 and F2 at time

NOTE Confidence: 0.842031

46c8d6f1-c33f-476b-a94f-4fb10dcd1538
00:10:24.944 --> 00:10:31.910
T + 2. And we see that
F1 at time T + 2 based on the

NOTE Confidence: 0.842031

24ca4792-6963-4928-803b-ac3384b9d61c
00:10:31.910 --> 00:10:37.460
previous truth table is F2 at
time T + 1 followed by the not.

NOTE Confidence: 0.842031

9839bbf7-c5a5-4337-b506-0ee7a5a8050b
00:10:37.460 --> 00:10:42.640
So what's the value of F2 at time
T + 1? F2 at time T + 1

NOTE Confidence: 0.842031

266a6ba3-e760-4d3f-8bb6-3aa174615760
00:10:42.640 --> 00:10:45.230
is F1 at time T, followed by

NOTE Confidence: 0.83595467

65b61e22-6a0d-4838-8ee5-d675617e0912
00:10:45.230 --> 00:10:51.503
the not. So if you replace it
here, it becomes F2 followed by

NOTE Confidence: 0.83595467

c516668e-2c9e-4130-a20d-be1212a8b4a6
00:10:51.503 --> 00:10:57.705
two nots, so it becomes F1, not
not. So it becomes F1. So you see

NOTE Confidence: 0.83595467

00aad955-d2ce-4d75-88bb-5298320a10db
00:10:57.705 --> 00:11:04.350
that if we wait for two time
interval, if X is zero and Y is

NOTE Confidence: 0.83595467

a60fc3c8-066e-4a88-bd72-306f3ce3f817
00:11:04.350 --> 00:11:08.337
zero, F1 is gonna be F1 at two
previous time intervals.

NOTE Confidence: 0.8270159

16ef6f5c-ff1d-4aba-8d53-375c8cda6f95
00:11:09.370 --> 00:11:16.248
F1 at T + 2. The same is with
F2. F2 at time T + 2 is F1

NOTE Confidence: 0.8486931

dd837b72-f937-45f2-a79b-f6b770122405
00:11:16.910 --> 00:11:22.238
at time T + 1 followed by the
not, and if you look at the F1

NOTE Confidence: 0.8486931

11a4b553-72a4-435e-83b5-87be6b52c835
00:11:22.238 --> 00:11:27.566
at time T + 1, F1 at time T
+ 1 is F2 at time T

NOTE Confidence: 0.8486931

9a6fb38a-d367-4fd1-8c54-a5c9f27736fb
00:11:27.566 --> 00:11:31.895
followed by the not. So if we
replaced it here, it becomes F2 at

NOTE Confidence: 0.8486931

6016dc78-7476-4f68-8e71-ec9bfe7b9981
00:11:31.895 --> 00:11:33.893
time T followed by two nots.

NOTE Confidence: 0.92500854

9cdfc4ef-d600-426e-b5bd-24edae59b000
00:11:34.580 --> 00:11:36.000
So it becomes F2.

NOTE Confidence: 0.8245724

12e9cb97-cab5-4d99-809e-44ff478e1b73
00:11:36.720 --> 00:11:39.447
You see that if X is zero and Y

NOTE Confidence: 0.802113

7e6877b1-8471-46cd-8140-6401936e4cdb
00:11:39.447 --> 00:11:44.230
is 0. After two time
intervals, the logic circuit

NOTE Confidence: 0.802113

b21be94d-b333-4ead-a75c-2795ce06be50
00:11:44.230 --> 00:11:48.850
is gonna come back to the
current state. F1 is gonna be F1

NOTE Confidence: 0.802113

24a673cd-df7a-49b2-a9ee-61de346e1a71
00:11:48.850 --> 00:11:51.370
at time T. F2 is going to be F2 at time T.

NOTE Confidence: 0.8455951

811c19c2-971f-4331-9fe0-ad720b925d4c
00:11:52.850 --> 00:11:58.402
If you check with other rows, if
X is 1 and Y is zero, F1 is gonna

NOTE Confidence: 0.8455951

552d10dd-27eb-4886-90a0-0c31f942c5d0
00:11:58.402 --> 00:12:01.525
be 0 and this is because X is 1

NOTE Confidence: 0.70071167

9f134f81-4ff2-419f-9f5c-077e49dcae8b
00:12:02.880 --> 00:12:04.389
At the NOR gate.

NOTE Confidence: 0.84641385

dbba77d3-f792-4942-98ab-eb6c99c0ffe5
00:12:05.200 --> 00:12:10.060
However, F2 is F1 followed by
the not for the previous time

NOTE Confidence: 0.84641385

0bab0206-4bf0-479d-be32-f06c0f78aa32
00:12:10.060 --> 00:12:13.300
interval T + 1 and the F1 at T + 1

NOTE Confidence: 0.82237524

e764e726-92e6-4842-83ba-1f4765aead3c
00:12:13.300 --> 00:12:18.410
is zero, followed by the
not, becomes one. And this was

NOTE Confidence: 0.82237524

dc551531-de8d-42f1-8f29-2917806d5043
00:12:18.410 --> 00:12:24.346
because we said that if X is 1 and Y
is 0, there it is a reset action

NOTE Confidence: 0.82609355

bb07e719-4089-4baf-b0f5-ef7e71f03c76
00:12:25.040 --> 00:12:28.700
which makes the logic circuit
goes to the main output zero and

NOTE Confidence: 0.82609355

39f1828e-a0fb-422b-9c28-485c28bff9c2
00:12:28.700 --> 00:12:32.055
the complement of that one. So
this is the reset state.

NOTE Confidence: 0.84295154

a408013f-2060-4dd5-b2d3-e552e555947d
00:12:34.370 --> 00:12:39.890
The 2nd row is when X is zero
and Y is 1. The set action and as

NOTE Confidence: 0.84295154

de070a23-a97a-4fcc-8c02-4d244cd3a318
00:12:39.890 --> 00:12:44.030
you can see here, for after two
time interval, it becomes 10

NOTE Confidence: 0.84295154

8099bfe2-9092-4305-b1c8-6f1217429cdb
00:12:44.030 --> 00:12:48.170
which is this set state, meaning
that we set the logic circuit.

NOTE Confidence: 0.839631

55f7aad9-3335-4858-b9cd-e10d17e5d0b7
00:12:49.060 --> 00:12:54.976
The only case when we do not
like that is when the X is 1 and

NOTE Confidence: 0.839631

5043ac92-7c8c-4b22-864b-90acd0340c5e
00:12:54.976 --> 00:12:58.108
Y is 1, which goes to zero and

NOTE Confidence: 0.8141495

7344992b-6dd2-45dc-985d-a7c86de30730
00:12:58.108 --> 00:13:04.178
stays there. As long as the X is
1, and Y is 1, both of F1 and

NOTE Confidence: 0.8141495

ef5c8723-a71c-41ee-b6ed-d445cf9a7239
00:13:04.178 --> 00:13:07.922
F2 are is gonna be zero. They are not
complemented each other and we

NOTE Confidence: 0.8141495

07faf91f-c660-4777-b74d-11c21efbf771
00:13:07.922 --> 00:13:11.666
said that we assume that this is
a forbidden state and don't

NOTE Confidence: 0.8141495

083dd9d6-235c-4a8b-8548-45bb7aa8e0a7
00:13:11.666 --> 00:13:15.410
care. So we try not to put 1
in X and 1 in Y.

NOTE Confidence: 0.77066106

50c3d953-1b7c-4dfe-86b4-546485fec48e
00:13:17.460 --> 00:13:23.024
And then, uh, in order to
summarize this, so based on the wait for two

NOTE Confidence: 0.8319367

b6471785-7038-4e9d-887a-f2edb0178e13
00:13:23.024 --> 00:13:28.500
time intervals, 00 is the store, so the
action in the store. What we

NOTE Confidence: 0.8319367

b37b7c43-c3dc-410f-9635-a52cdfa4c473
00:13:28.500 --> 00:13:33.276
have already in the logic
circuit, F1 is going to be F1 at

NOTE Confidence: 0.8319367

acff3eb3-8a18-438e-b0bc-4b2f080fab15
00:13:33.276 --> 00:13:35.664
time T. F2 is gonna be F2 at time T.

NOTE Confidence: 0.7809093

d241de71-5619-4195-89fd-b0e28cc6ddcf
00:13:37.510 --> 00:13:42.382
10 meaning that the reset action
goes to the reset state, the

NOTE Confidence: 0.7809093

483cdeb9-2fc0-4eb8-8692-53d25f784211
00:13:42.382 --> 00:13:46.848
main state of the largest
circuit is gonna be reset or zero. The set

NOTE Confidence: 0.7809093

e86257e8-8d18-46c6-8356-1c1a17664c2e
00:13:46.848 --> 00:13:50.908
action, 10, so the main output
is gonna be 1, the compliment

NOTE Confidence: 0.7809093

7258f8dc-9b0b-43ef-a893-17bef9ded2b6
00:13:50.908 --> 00:13:57.404
going to be 0 so we set them. We
make it 1 and this is the

NOTE Confidence: 0.7809093

8e8a75c9-d856-4a2c-9be3-83a4250e9e46
00:13:57.404 --> 00:14:02.276
Forbidden State. So we said that
whenever the X&Y is one, you

NOTE Confidence: 0.7809093

2c78fc39-2ef1-4cf1-b76b-43c962ddaf13
00:14:02.276 --> 00:14:04.712
just go to the don't care condition.

NOTE Confidence: 0.80931854

39f2b600-5817-4eaf-adc7-21e148dd6753
00:14:05.990 --> 00:14:11.210
Because when X is 1 and Y is
zero, we do the reset action and

NOTE Confidence: 0.80931854

e527d964-52d3-4b29-9daa-de3fde1fedf8
00:14:11.210 --> 00:14:15.386
make the logic circuit go to
the reset state. We call X = R.

NOTE Confidence: 0.7712554

1e0b6c57-1ee0-4ed4-8ca9-afe7a7ca8cee
00:14:16.250 --> 00:14:22.060
And whenever Y is 1 and X is 
0, we go to the set state.

NOTE Confidence: 0.7712554

ae1c94d9-d19f-4834-aa1e-66f44e3c76e8
00:14:22.060 --> 00:14:27.870
We've renamed the Y to S, set,
so then we said that this is the

NOTE Confidence: 0.7712554

3860ed4f-2add-4ea2-838c-aad1157dc70e
00:14:27.870 --> 00:14:34.510
RS logic circuit. Whenever R is 1 and
S is 0, reset, or when R is 0 and S is 1,

NOTE Confidence: 0.7712554

ae6b249b-10a8-42bf-bd03-a36cccb2c41a
00:14:34.510 --> 00:14:40.320
set. Both are zero, meaning that
we do not want to do reset or

NOTE Confidence: 0.7712554

b709f44e-c2af-4309-926b-2a01d4ddb9db
00:14:40.320 --> 00:14:41.980
set, meaning we store.

NOTE Confidence: 0.8403972

613f38d0-8951-48cd-be6b-cf8a7ee17ebe
00:14:42.570 --> 00:14:47.190
We keep the status of the logic
circuit, whatever it is.

NOTE Confidence: 0.8196602

53bf044a-4cf4-46f1-8c69-ebf707f661e6
00:14:47.770 --> 00:14:50.388
And if both are one, we just
simply say that this is

NOTE Confidence: 0.8196602

f6d7f115-3d39-4c27-98f5-5d9e3055e6fd
00:14:50.388 --> 00:14:52.530
the don't care condition
and we don't like that.

NOTE Confidence: 0.7702042

ccf126db-165d-46ec-9702-63b069d3f5d4
00:14:54.350 --> 00:14:59.355
And in order to show it as a
block diagram, you usually show

NOTE Confidence: 0.7702042

c05ac915-fc42-45bd-83b5-73477896dfcd
00:14:59.355 --> 00:15:04.745
the RS logic circuit like this. R S
as two inputs. Main output Q,

NOTE Confidence: 0.82164454

57167dfe-b0a4-46c2-aacf-5db5241f98c5
00:15:06.000 --> 00:15:09.696
which shows the current state
of the logic circuit, and the

NOTE Confidence: 0.82164454

8b42786c-94c2-4165-b471-7a16d7e5a250
00:15:09.696 --> 00:15:13.056
second output is gonna be the
complement of the Q, Q prime.

NOTE Confidence: 0.82164454

6894cae7-9d53-417d-8861-5cd241b371c3
00:15:13.056 --> 00:15:17.088
And as you can see here there
is an inversion bubble here.

NOTE Confidence: 0.86509126

ad1a1d80-d13a-42bb-bf8b-b6497d978cc6
00:15:18.490 --> 00:15:23.938
This is the block diagram for
the RS sequential logic, and we

NOTE Confidence: 0.86509126

c0ee549c-094a-471f-9b7d-166039d9fc6c
00:15:23.938 --> 00:15:28.478
said that we can see what's
happening

NOTE Confidence: 0.86509126

12a013e5-d252-4a08-8342-04af79d63f7e
00:15:28.478 --> 00:15:30.748
inside the logic circuit within

NOTE Confidence: 0.8516862

e73eba86-f5b3-452c-bc79-b704f951509b
00:15:30.748 --> 00:15:37.178
the time, based on different
value of RS. So when they RS are

NOTE Confidence: 0.86425376

e1c518a7-5010-484d-84a0-cc20ded4b55d
00:15:37.178 --> 00:15:41.815
both one, it is forbidden.
We have don't care condition. We don't

NOTE Confidence: 0.86425376

5300132c-46cd-4299-a07f-7b95cdd5efbb
00:15:41.815 --> 00:15:46.300
have to look at the main output
Q because both are zero and

NOTE Confidence: 0.86425376

00b4028d-a526-4577-bb15-f4023e6259cb
00:15:46.300 --> 00:15:47.680
we don't like that.

NOTE Confidence: 0.8495041

af25e231-5803-4f8e-9d67-e63998f3df97
00:15:48.530 --> 00:15:53.262
And then when the R and S
changes as you can see, the

NOTE Confidence: 0.8495041

28024064-4e2c-4964-94b1-8aaa499c9df2
00:15:53.262 --> 00:15:58.722
R changes here. It goes to
zero and S is 1. So this is the

NOTE Confidence: 0.8495041

94fc1318-d799-4907-b361-8d36e873e26c
00:15:58.722 --> 00:16:03.090
set action. So it brings the
status of the logic circuit to

NOTE Confidence: 0.8647999

b6eeef3d-5647-4edb-a442-ccf952d5f42e
00:16:03.090 --> 00:16:09.680
one. As long as the R is zero,
and S is 1, it keeps one.

NOTE Confidence: 0.7675992

06bbbcb3-d578-4f7a-8eeb-f2fd7619c5c3
00:16:10.440 --> 00:16:16.446
And suddenly, if R is still
zero, and S becomes 0, so 00 is

NOTE Confidence: 0.7675992

e69e0acd-543f-4ca3-95f6-c81a4a4a96e1
00:16:16.446 --> 00:16:20.604
the store. Whatever you already
have, just keep it.

NOTE Confidence: 0.840615

67d5a96d-a75f-467e-bf5c-52a8b8b63605
00:16:22.220 --> 00:16:27.272
And at this time, you see that
R becomes one very shortly.

NOTE Confidence: 0.840615

ef4ea0cf-aa0f-4055-b1bf-d291113f469e
00:16:27.272 --> 00:16:31.903
R becomes one here. And S
remains zero. This is the reset

NOTE Confidence: 0.840615

1736f240-9599-4558-a2e3-aa708392cafb
00:16:31.903 --> 00:16:37.376
action. So we reset the internal
state of the logic. If it was

NOTE Confidence: 0.840615

c392b63e-346b-4fec-9728-d0d574508fbf
00:16:37.376 --> 00:16:39.060
one, it becomes 0.

NOTE Confidence: 0.89906514

ef2be424-5085-4575-b2b1-8f0b2b569532
00:16:40.000 --> 00:16:42.652
And then suddenly, S becomes

NOTE Confidence: 0.8554209

e2a49e0f-6e70-400e-8283-0cb1242cd201
00:16:42.652 --> 00:16:48.533
one. R is 1, so as long as
both are one, the whole state

NOTE Confidence: 0.8554209

44d78330-70af-4f02-b70b-1a01f8471e05
00:16:48.533 --> 00:16:51.501
is going to be don't care condition
or invalid condition.

NOTE Confidence: 0.7818896

5d8f8680-e84f-44a1-9b79-e4f4419f090c
00:16:52.230 --> 00:16:58.950
And suddenly R drops to 0, S is
still one. So this is the set

NOTE Confidence: 0.7818896

8ee8ec79-1e05-4aaa-9021-c1af21882a6f
00:16:58.950 --> 00:17:01.638
action, so it recovers to the

NOTE Confidence: 0.80682474

417c9694-7b11-4daa-930f-c7503da83c1e
00:17:01.638 --> 00:17:07.916
set state. It remains at the set
state because both R and S are

NOTE Confidence: 0.80682474

73948e13-b51b-4b0d-a4b1-6d999ac689d8
00:17:07.916 --> 00:17:10.898
00. It is in the store action.

NOTE Confidence: 0.82149035

f28a7e81-d38b-48f1-9f78-986bd695ebfc
00:17:11.520 --> 00:17:14.268
And R becomes one, S becomes

NOTE Confidence: 0.8487877

0f6dcdb9-587c-4443-9db1-131d21be20e7
00:17:14.268 --> 00:17:18.621
zero. This is the reset
action, so it drops the

NOTE Confidence: 0.8487877

86f8e851-3ee5-4b85-8457-00d8b411d40e
00:17:18.621 --> 00:17:20.466
states to zero and etc.

NOTE Confidence: 0.79274875

fb1e08e1-54a0-49c5-9487-ef8635eeeb8c
00:17:21.510 --> 00:17:26.270
So we already I mean, uh,
considered this

NOTE Confidence: 0.8156003

632fa81e-36c4-4521-8a8b-55758e374283
00:17:28.860 --> 00:17:33.524
To just see what's the behavior
of this sequential logic based

NOTE Confidence: 0.8156003

19249a64-b635-4be7-af00-e59ddd8fe331
00:17:33.524 --> 00:17:35.644
on different value of RS.

NOTE Confidence: 0.91455173

e4eae67e-afdb-4487-95b3-afe7ad87781e
00:17:36.360 --> 00:17:40.986
In this diagram, one problem or
issue is that

NOTE Confidence: 0.8645457

f783adfc-bf6c-4bde-aeb1-9798e522ec0d
00:17:41.600 --> 00:17:46.270
Whenever the R and S,
the input of the sequential

NOTE Confidence: 0.8645457

14d69414-df42-4f87-af55-6641b5c484df
00:17:46.270 --> 00:17:50.473
logic changes, the value
inside the sequential

NOTE Confidence: 0.8645457

90923b73-80a1-4832-bb9c-719af42b74c1
00:17:50.473 --> 00:17:51.874
logic changes too.

NOTE Confidence: 0.94239146

dc54e0ba-0e89-4d0d-baf2-25478afe5c76
00:17:53.500 --> 00:17:56.378
OK. So as you can see here.

NOTE Confidence: 0.7446415

ac16120f-311f-4eeb-9e9d-844ef76026bd
00:17:57.340 --> 00:18:00.980
Whenever the RS changes,
the status changes.

NOTE Confidence: 0.93255836

21d49fe5-8169-4f15-b308-73d53f5d5a05
00:18:02.400 --> 00:18:03.250
So.

NOTE Confidence: 0.80396223

3431ef9c-4cb2-4ff1-b41d-921130aee001
00:18:04.780 --> 00:18:08.300
In the next slide,
we want to just

NOTE Confidence: 0.82438475

10e79bb8-9eeb-4191-86f7-8fdb9466d76a
00:18:09.990 --> 00:18:12.000
See that is it possible

NOTE Confidence: 0.8073608

6f2cc1c1-b724-48f9-b80d-68cd2b1b4275
00:18:12.820 --> 00:18:17.055
To have a control on when the
changes happen? The RS

NOTE Confidence: 0.8073608

de021d29-9d83-45e2-a175-06d61bf7243c
00:18:17.055 --> 00:18:20.520
controls how the change inside
the sequential logic is gonna

NOTE Confidence: 0.8073608

a3f20474-cec7-4f90-a131-4786974f75cd
00:18:20.520 --> 00:18:25.140
happen. So whenever we store,
RS are both are zero, so we

NOTE Confidence: 0.8073608

73eb12c9-0e9a-40f0-a8d1-eaa919b88143
00:18:25.140 --> 00:18:30.145
store. If R becomes 0 and S
becomes zero, it means that you

NOTE Confidence: 0.8073608

1525bd42-fa71-4811-9197-f688f010a571
00:18:30.145 --> 00:18:36.305
want to do the reset. If S is 1
R is zero, we wanna do the set,

NOTE Confidence: 0.8073608

ae5e72df-ad2c-48d9-839f-a8771a490ab4
00:18:36.305 --> 00:18:38.615
meaning that we want to memorize

NOTE Confidence: 0.8459714

e0103dac-d166-4af5-82c1-38710f8be37b
00:18:38.615 --> 00:18:43.532
one. And we never put the RS
both as one because it

NOTE Confidence: 0.8459714

c0479ba5-b1c4-4642-9e8e-2c46e17b68a2
00:18:43.532 --> 00:18:46.876
goes to
the don't care condition.

NOTE Confidence: 0.9212302

2893258c-1233-4e25-bc6f-bbce3fb46b43
00:18:48.000 --> 00:18:52.752
So this is the way we control
how the state changes, but

NOTE Confidence: 0.91009545

84538f99-0d74-483a-9b11-6aa48090cf8f
00:18:53.580 --> 00:18:58.233
Is it possible to control when
the changes happen?

NOTE Confidence: 0.8219584

d8cff74d-3440-4028-81e2-61eae926cc80
00:18:59.150 --> 00:19:03.934
So we want to build a sequential
logic with the latch, so latch

NOTE Confidence: 0.8219584

a960dedc-116a-40e3-b514-9be54cbc627c
00:19:03.934 --> 00:19:06.878
as you know is a lock. So we

NOTE Confidence: 0.69915414

82cb9170-1369-4bfe-b238-8fee26ce7fbc
00:19:06.878 --> 00:19:10.820
want to kind of create a

NOTE Confidence: 0.86795735

048739f0-7ca7-42d4-8661-b7ae9e721875
00:19:10.820 --> 00:19:17.350
lock on the sequential logic,
in order to accept the change

NOTE Confidence: 0.86795735

756890b7-9d99-44ca-ac91-cfb244c07bda
00:19:17.350 --> 00:19:19.402
whenever we unlock the

NOTE Confidence: 0.8451547

54d43304-a23f-416b-94f0-ff3ef0012b59
00:19:19.402 --> 00:19:23.950
sequential logic. So it's kind
of a door with a lock, so

NOTE Confidence: 0.8451547

ee610584-f81d-416e-9505-0537fe84bdbe
00:19:23.950 --> 00:19:27.454
whenever we open the door of the
sequential logic, we accept the

NOTE Confidence: 0.8451547

676b215c-fc2f-4440-8811-6d3921699109
00:19:27.454 --> 00:19:31.250
change. We look at the
S and R in front of the door.

NOTE Confidence: 0.8372959

fd0a01d9-683f-493c-b15b-4721b2581d71
00:19:31.830 --> 00:19:35.769
However, as long as the door is
closed or the latch is locked,

NOTE Confidence: 0.8372959

991d7110-6644-44d2-acca-c4bf469879a9
00:19:35.769 --> 00:19:39.405
we don't look at the R and S.
Whatever the value behind the

NOTE Confidence: 0.8372959

ba0f3bdf-07b5-4485-b351-c93f2807f295
00:19:39.405 --> 00:19:43.344
door is, the door is closed as
we don't accept the change from

NOTE Confidence: 0.820491

425cfe5b-681f-4a67-8b06-923ad9c0683b
00:19:43.344 --> 00:19:48.724
the R and S. This sequential
logic is called RS or SR latch,

NOTE Confidence: 0.820491

c621775d-8f05-45f3-8925-a2ed1c71476e
00:19:48.724 --> 00:19:53.284
meaning that we have a latch in
the sequential logic.

NOTE Confidence: 0.8427352

8916bcfd-3073-434f-a73f-cd758facea6c
00:19:54.930 --> 00:19:59.370
So by the latch, we are going to
control when the changes

NOTE Confidence: 0.82332236

c45e7c2e-7999-420c-b15f-ff48cb4cd20c
00:19:59.370 --> 00:20:00.996
actually applies to the

NOTE Confidence: 0.8589611

6b3aa3c9-6c64-45c1-b093-ffdc8cfb8e18
00:20:00.996 --> 00:20:06.935
sequential logic. So basically
we already did such a thing for

NOTE Confidence: 0.85556054

cfcbe1be-35a0-4ba2-936c-34a82fc35127
00:20:06.935 --> 00:20:10.976
the encoders. For the
encoders, we said that

NOTE Confidence: 0.85556054

8ea63c9a-95e0-4e39-a417-e3ae68d1c605
00:20:10.976 --> 00:20:15.668
sometimes we need to turn on
or turn off the encoders. When

NOTE Confidence: 0.85556054

5be09585-f114-4720-8327-9c67b555e280
00:20:15.668 --> 00:20:19.578
it is turned off, meaning
that the output always is gonna

NOTE Confidence: 0.85556054

e1b7da19-34ff-42ce-83a6-5adab1811393
00:20:19.578 --> 00:20:24.270
be 0, it means that the
device is turned off. It acts

NOTE Confidence: 0.85556054

1ad3bf4e-544d-408d-aefb-6805611c2a21
00:20:24.270 --> 00:20:27.398
like it doesn't accept any
input. When the

NOTE Confidence: 0.85719943

2f478f70-836e-4bd5-b5ba-3a7574b2d580
00:20:29.510 --> 00:20:33.338
encoder becomes enabled, it means
that now it's turned on and it

NOTE Confidence: 0.85719943

4f45786c-622a-434e-9e5e-368ca96610d4
00:20:33.338 --> 00:20:36.528
accept the changes from the
input in order to create

NOTE Confidence: 0.85719943

1e4545bb-6b89-4b1e-94c3-983732eac9a8
00:20:36.528 --> 00:20:41.313
output. The same is here. So we
want to kind of turn on or off

NOTE Confidence: 0.85719943

79831dba-e4a1-4c08-9d18-2348dd151086
00:20:41.313 --> 00:20:45.779
or put a lock on the sequential
logic SR in order to accept

NOTE Confidence: 0.85719943

85ac43b0-4af7-437c-b145-9c949bae284e
00:20:45.779 --> 00:20:49.288
the changes or turn it off, do
not accept the change.

NOTE Confidence: 0.83489436

c831db84-772b-4767-acd7-fa70c22005af
00:20:50.130 --> 00:20:51.505
And store whatever you

NOTE Confidence: 0.849717

58c1d247-b01f-4ee6-876f-ac244dbec112
00:20:51.505 --> 00:20:57.080
already have. So this is enable
input, we can do this by

NOTE Confidence: 0.849717

3a25b9f1-da63-4422-9121-d92047acf0d0
00:20:57.080 --> 00:20:58.740
introducing an additional input

NOTE Confidence: 0.8703498

278568ed-6c9b-4006-a051-65baec55e02b
00:20:58.740 --> 00:21:04.000
enable input. Let's see, let's
see what's up. How can we build

NOTE Confidence: 0.8703498

f1460c2f-18f2-4bf9-bcc6-fa00a0561cb8
00:21:04.000 --> 00:21:08.202
that? So basically this is the
normal RS or SR sequential

NOTE Confidence: 0.8328091

12487c50-cc4b-4c7d-afc1-4ede62748986
00:21:08.202 --> 00:21:10.868
logic. Q and your Q prime.

NOTE Confidence: 0.8689946

de3babbb-8c9f-4e0b-82cc-64139f2ed048
00:21:11.500 --> 00:21:17.464
So as you can see here, if I
introduce a AND gate before the

NOTE Confidence: 0.8689946

d5a430be-4e8c-466d-b87b-6cd0c7d332f2
00:21:17.464 --> 00:21:18.742
internal RS.

NOTE Confidence: 0.804432

36666436-dfcb-422e-ae73-4046ef0de534
00:21:19.790 --> 00:21:23.374
And add an additional
input enable E.

NOTE Confidence: 0.88865656

0930f6bf-faa5-4d32-944a-c4f1a766dfee
00:21:24.470 --> 00:21:26.708
As long as E is 0,

NOTE Confidence: 0.85917914

7a9eaf00-c809-4ff8-bdd1-82393b4fd82f
00:21:28.250 --> 00:21:32.906
it goes to the one input of the
AND, so when we have zero in one

NOTE Confidence: 0.85917914

4507618f-00fc-42cf-99b2-84e75687c665
00:21:32.906 --> 00:21:36.689
input of the AND, we don't have
to look at the other inputs,

NOTE Confidence: 0.8442306

88976f9c-d1ec-482c-97aa-bf614462f000
00:21:36.689 --> 00:21:41.974
simply output 0. So as long as
E is 0, the output of these

NOTE Confidence: 0.8442306

036caf5c-e277-4022-a68f-ffa02b6d97ea
00:21:41.974 --> 00:21:46.510
ANDs is gonna be 0, meaning that
the RS are both is gonna be 0,

NOTE Confidence: 0.8442306

def75fb4-14ba-44a0-a2c9-5801d6d39861
00:21:46.510 --> 00:21:48.454
the internal RS, the black

NOTE Confidence: 0.8814651

4757cd16-150f-4edf-8178-f481949531bb
00:21:48.454 --> 00:21:54.031
one. So as long as E is zero,
the external RS,

NOTE Confidence: 0.8690447

a28cf40a-a909-4bcb-8cf6-9eb7ead903ee
00:21:54.810 --> 00:21:57.276
whatever the values are, we don't

NOTE Confidence: 0.8615391

105ac22f-4298-4243-a490-606fe7ac042c
00:21:57.276 --> 00:22:02.320
care. The internal RS is
is gonna be 00, meaning that we

NOTE Confidence: 0.8615391

b21e2d7a-721b-4206-bf03-f1712e812ca6
00:22:02.320 --> 00:22:04.160
store whatever we already have.

NOTE Confidence: 0.86524534

6ee46ebd-da5d-45dc-a984-763c77623482
00:22:05.720 --> 00:22:09.956
So this means that in practice,
it implies that we don't accept

NOTE Confidence: 0.86524534

93ebde8f-5ebe-40d7-95ff-dcdae354ce45
00:22:09.956 --> 00:22:14.192
the changes to the external
RS, we always put the 00 in the

NOTE Confidence: 0.86524534

ed1d0908-eb1a-4938-af54-008b45e946c4
00:22:14.192 --> 00:22:18.075
internal RS and we keep
whatever we already have.

NOTE Confidence: 0.83118564

b6f0db40-da15-46d4-82c3-d2080803e05b
00:22:21.070 --> 00:22:25.295
However, when the E becomes one
in the AND gates, it means that

NOTE Confidence: 0.83118564

3b8e6c48-87f5-495b-8a09-8a7f099bc51a
00:22:25.295 --> 00:22:29.520
now we have to see what's going
on with the RS.

NOTE Confidence: 0.6851267

8a078f2a-deb2-4252-b9b1-6f2e3f33b342
00:22:30.090 --> 00:22:36.450
So then it works like a
normal RS sequential logic

NOTE Confidence: 0.8299869

38a5af33-7206-49df-88b8-e477a814f774
00:22:36.450 --> 00:22:42.960
If 00, the same. As you can
see here, 00 connects to the R&S

NOTE Confidence: 0.89108956

868e57cf-c446-40f1-8ac6-979e77b1753e
00:22:42.960 --> 00:22:47.930
and stores. If it is 01, so

NOTE Confidence: 0.8464142

1d671918-df6a-49ff-b3ad-9e4637e96402
00:22:48.590 --> 00:22:51.590
1 goes to the R. 0 goes to the

NOTE Confidence: 0.8764027

70989068-c5c1-4adb-9d02-df40e4e75251
00:22:51.590 --> 00:22:53.728
S. This is the reset.

NOTE Confidence: 0.81780887

d6a0a24b-812d-4078-8b9e-e9651382c760
00:22:54.640 --> 00:22:58.948
If S is 1, R is zero.
External the blue one, so S = 1

NOTE Confidence: 0.81780887

8c957195-64f3-47b3-adcd-117020138010
00:22:58.948 --> 00:23:03.256
comes here. 1 and 1,
enable is 1, one and one

NOTE Confidence: 0.81780887

969e6862-d70b-41fb-832b-d1dc852c1815
00:23:03.256 --> 00:23:07.564
becomes one. So one goes to
the internal S, zero goes to

NOTE Confidence: 0.81780887

971ed536-f34b-4c79-b0b2-be031c711094
00:23:07.564 --> 00:23:10.795
the internal R, so it becomes
the set action.

NOTE Confidence: 0.82037103

e7a4ee2e-d168-4c42-925f-40bc85ada91e
00:23:12.740 --> 00:23:17.626
And if it is one and
one, the internal S and R becomes

NOTE Confidence: 0.82037103

e085453a-08c5-409e-a29e-98d4d16f2503
00:23:17.626 --> 00:23:20.767
one and one, which is forbidden, the
don't care condition.

NOTE Confidence: 0.82453334

5ea00529-4804-4b20-876d-ecf9440465c4
00:23:21.610 --> 00:23:24.837
So basically by just
introducing additional AND

NOTE Confidence: 0.82453334

917182cb-18a7-4901-932a-d8be27efe74a
00:23:24.837 --> 00:23:29.447
gates before the internal
R&S and ending the R&S with

NOTE Confidence: 0.82453334

7a117989-9906-462f-8c25-06c7a415ce0f
00:23:29.447 --> 00:23:33.135
the Enable, we create a
sequential logic with a

NOTE Confidence: 0.82453334

86e67f40-381e-4e2b-b5c2-a0c44cd26b3c
00:23:33.135 --> 00:23:39.128
latch. So as long as E is
zero, we don't look at the

NOTE Confidence: 0.82453334

0f0bc464-7549-4c17-a581-329c69553e89
00:23:39.128 --> 00:23:40.972
external R and S.

NOTE Confidence: 0.80659074

30e3bc94-e3cd-44f3-87d4-2c96afad2609
00:23:42.330 --> 00:23:46.470
The internal RS is gonna be
00, which means that store

NOTE Confidence: 0.80659074

77a5a5b7-1ffc-45a4-802a-65a19e8e4d74
00:23:46.470 --> 00:23:47.850
whatever you already have.

NOTE Confidence: 0.86213505

40d24475-0d5a-4a9d-b2ad-bfd8adf93155
00:23:48.550 --> 00:23:53.230
But if E becomes one, it works.
It accept the changes from the

NOTE Confidence: 0.86213505

7aaa5ac9-c3ec-4b72-87de-79c6b0742b27
00:23:53.230 --> 00:23:56.470
external RS and based on the
value of R&S, it determines

NOTE Confidence: 0.881274

72f7d492-5907-4ac2-81ef-f53856e1ca7f
00:23:57.030 --> 00:24:00.460
whether it stores or changes
to zero or one.

NOTE Confidence: 0.76944065

ef1567c6-fe2e-4ddf-9708-3df03de80dec
00:24:02.420 --> 00:24:08.768
So this is called SR or RS latch,
meaning that we have a RS

NOTE Confidence: 0.76944065

f53b3c60-7653-40c1-bc34-ff95c64d5c5a
00:24:08.768 --> 00:24:10.884
sequential logic with Enable input.

NOTE Confidence: 0.78415966

c4f1e9ef-5745-467b-9c2c-7c83c010afb7
00:24:12.370 --> 00:24:18.246
And let's see what happes
when we add a enable a input to

NOTE Confidence: 0.78415966

926e5451-c23a-483c-91cd-b7afb5a20a08
00:24:18.246 --> 00:24:19.602
the sequential logic.

NOTE Confidence: 0.8835829

ee55a6fc-c67b-4982-9054-ac848033a7bb
00:24:20.720 --> 00:24:25.621
So we have R and S, the
external changes to the R&S as

NOTE Confidence: 0.8835829

a8c650b9-bf42-4b2b-974b-4eb9b8a45ed3
00:24:25.621 --> 00:24:29.768
you can see within the time.
Also, we have additional enable

NOTE Confidence: 0.8835829

eef7ff32-5a1d-4482-9800-b5275b564403
00:24:29.768 --> 00:24:34.292
input and the value is as you
can see here, a very regular

NOTE Confidence: 0.8835829

071755c5-40e4-4ba1-86b2-926b38e76225
00:24:34.292 --> 00:24:36.177
pattern of zeroes and ones.

NOTE Confidence: 0.897731

6300fb4f-5f26-4f3f-9598-149f07bf0c13
00:24:36.860 --> 00:24:40.580
So 0 1 0 1 etc.

NOTE Confidence: 0.85531867

a561e9d8-969e-47e0-aae4-14b731ceec1b
00:24:42.000 --> 00:24:47.313
So basically, because of the
enable input, we just unlock the

NOTE Confidence: 0.85531867

82a0d250-d0d1-4386-9b7a-0ad0834ef433
00:24:47.313 --> 00:24:51.177
sequential logic when the enable
input becomes one.

NOTE Confidence: 0.83646303

8080af62-0986-4054-9fcf-ee64c66bd31c
00:24:52.450 --> 00:24:57.130
At times that the enable input
is zero, we don't have to look

NOTE Confidence: 0.83646303

e5080f0f-5fc1-4050-b3d0-e35d8aa370dd
00:24:57.130 --> 00:25:02.890
at the value of R&S. The value
of R and S is gonna have I

NOTE Confidence: 0.83646303

fc069652-fc1e-4c8d-8afe-846230ae5d9c
00:25:02.890 --> 00:25:07.210
mean no changes to the internal
state, and we keep whatever we

NOTE Confidence: 0.83646303

e9212e5b-d157-41c0-a313-2b62ed6cc58f
00:25:07.210 --> 00:25:09.010
already have in the sequential

NOTE Confidence: 0.9220514

d6aa46f7-8715-421f-83f6-50243082e7b8
00:25:09.010 --> 00:25:12.530
logic. So let's see
what's happened.

NOTE Confidence: 0.90721464

34e3f7fb-a117-49a0-814a-3131fe5b58c0
00:25:13.570 --> 00:25:14.818
So at first.

NOTE Confidence: 0.8692655

0d530260-ebdd-4f4b-aefe-f32f1770977b
00:25:15.830 --> 00:25:20.252
At initial time, we assume that
everything is in an initial

NOTE Confidence: 0.8692655

4dbd0ff8-e916-4e4d-9f14-ce7d6cdb5bc5
00:25:20.252 --> 00:25:25.076
state, so the current state of
at time zero is zero and

NOTE Confidence: 0.8692655

e4a30f24-82d2-4889-b883-31696211b22f
00:25:25.076 --> 00:25:29.900
because the Enable is zero, we
said that we keep whatever the

NOTE Confidence: 0.8692655

83987151-c1e6-4033-9c3a-bb2dc39d2c66
00:25:29.900 --> 00:25:31.910
state of the sequential logic

NOTE Confidence: 0.9204898

82a0092e-6c26-4600-a3f4-9aaf6ef595fc
00:25:31.910 --> 00:25:34.870
is. So the door is locked.

NOTE Confidence: 0.8102596

75a162f9-b14d-4a1e-84c2-e58244ef155f
00:25:35.730 --> 00:25:39.492
The R and S from the
external, we do not look at them,

NOTE Confidence: 0.8102596

9b9453e1-8ed7-41a3-bc85-5f259dfab84d
00:25:39.492 --> 00:25:43.596
so we keep just the initial
state zero, up until when the

NOTE Confidence: 0.8102596

25f4d5a8-b868-4add-817e-7d6b61a3f353
00:25:43.596 --> 00:25:44.964
enable input becomes one.

NOTE Confidence: 0.81466395

e74952e1-f595-4f8d-a344-7544bb1daefb
00:25:47.100 --> 00:25:51.445
When the enable input is one,
we look at the external

NOTE Confidence: 0.81466395

62551eca-bf23-4225-aafb-3c33eb73786a
00:25:51.445 --> 00:25:56.975
R and S, so R is zero and S is
1. It is the set action and

NOTE Confidence: 0.81466395

d3ac8cc3-f7da-49da-b5b4-6f5089141f5e
00:25:56.975 --> 00:25:58.950
we go to the set action.

NOTE Confidence: 0.81004465

9f5e0c54-6363-480e-aea2-c194e76fcdf4
00:26:00.050 --> 00:26:05.266
As long as the Enable is
1, the R is zero and S is one,

NOTE Confidence: 0.81004465

e3e7b34c-744b-4f44-b955-7f899a26a4ca
00:26:05.266 --> 00:26:09.830
we keep this state to be one
because we are in the set

NOTE Confidence: 0.8138576

d0a0538e-fe71-4bd3-a1bb-bfe056c0918b
00:26:09.830 --> 00:26:14.490
action. And when
the Enable becomes zero, it

NOTE Confidence: 0.8138576

3aa68c73-8668-45a2-8c2c-27d340ca4695
00:26:14.490 --> 00:26:18.570
means that now we close the door,
we lock the sequential logic

NOTE Confidence: 0.8138576

44e70f91-ae19-460d-bbfe-74e152964a4f
00:26:18.570 --> 00:26:21.630
and we don't accept any change
from the R and S.

NOTE Confidence: 0.8811792

4a678281-4d75-4004-a86f-c4daa6ea2e71
00:26:23.060 --> 00:26:24.722
So we keep whatever we already

NOTE Confidence: 0.88865936

ea9765c1-f28c-40de-a887-327ce25628b1
00:26:24.722 --> 00:26:27.986
have. As you can see
here, within this time

NOTE Confidence: 0.88865936

4f91bba4-a95d-4806-9350-b08c7bed034d
00:26:27.986 --> 00:26:29.054
the R and S changes.

NOTE Confidence: 0.84219015

84adc5fd-34fd-4b2b-bd34-30f77cc020c0
00:26:30.100 --> 00:26:34.468
The R goes from zero to one
and S goes from one to zero.

NOTE Confidence: 0.84219015

f82c8a1a-fb5a-4d57-a205-dcd1fb35c0c8
00:26:34.468 --> 00:26:38.212
But because the Enable is 0,
the door is locked. We don't

NOTE Confidence: 0.84219015

ba11208b-3cca-4ecd-84d2-238bd59d60d8
00:26:38.212 --> 00:26:41.020
look at them, just restore
whatever we already have.

NOTE Confidence: 0.923236

f2a2cf1d-277a-43c1-a2af-acb7ecfe69ea
00:26:42.290 --> 00:26:44.130
And then at this time.

NOTE Confidence: 0.8391655

52b08a4b-b25f-43d1-a19f-0b5bd0fd71c6
00:26:45.010 --> 00:26:50.050
E becomes one. We mean that we
open the door and now we see

NOTE Confidence: 0.8391655

cb443227-0dd8-4ecb-bf97-97b2a9fc7e3e
00:26:50.050 --> 00:26:55.090
what's the R&S. R is 1, S is 1.
It brings the sequential logic

NOTE Confidence: 0.8391655

b1bb8fe4-9e88-48ca-8659-904083990b52
00:26:55.090 --> 00:26:56.170
to indeterminate state.

NOTE Confidence: 0.8409885

fb264819-3788-411c-bd4e-901ce75077c5
00:26:57.830 --> 00:27:04.280
And then we close
the door, because we were in the

NOTE Confidence: 0.8409885

979ed3ca-cb31-4c45-8ba5-f7d6c7720f55
00:27:04.280 --> 00:27:09.010
indeterminate state. So when
we close the door, we still

NOTE Confidence: 0.8409885

a1528a85-0fe4-4bfc-9934-f020fb7cda8a
00:27:09.010 --> 00:27:11.160
are in the indeterminate state.

NOTE Confidence: 0.87821263

30642c39-192f-4e12-b761-6dd01751f149
00:27:12.200 --> 00:27:13.550
E becomes one.

NOTE Confidence: 0.83239424

18e1d3fd-e8c2-43e7-803c-9917d0347ecc
00:27:14.170 --> 00:27:18.454
Now we open the door and we see
what's going on with the R&S.

NOTE Confidence: 0.83239424

d83c1761-057b-4675-a432-f04f1027dc78
00:27:18.454 --> 00:27:22.432
So R is 1, S is 1. Again, it goes
to the indeterminate state.

NOTE Confidence: 0.9104522

4a453253-4280-4578-8df7-45462132b6ca
00:27:23.760 --> 00:27:25.552
As you can see here, we close

NOTE Confidence: 0.78806454

718741cf-d1c9-4c28-8fdc-5f5abea65edd
00:27:25.552 --> 00:27:31.163
the door. E is 0, the changes to
the RS doesn't matter. We

NOTE Confidence: 0.78806454

5b3f0be5-7ef8-47ee-969b-cefda2dd74ef
00:27:31.163 --> 00:27:33.228
keep whatever we already have.

NOTE Confidence: 0.8106554

a442e684-dd6e-4857-b585-e75841012c7f
00:27:35.110 --> 00:27:42.570
Again now. Enable become one. We
see our R is 0, S is 0. This is

NOTE Confidence: 0.8106554

e743baf8-007f-4135-af00-6ac690209769
00:27:42.570 --> 00:27:47.220
the valid state pr valid action,
meaning that we store. But

NOTE Confidence: 0.8106554

aef6bbc0-56b2-4992-a31f-d5df76ea751c
00:27:47.220 --> 00:27:51.870
because we already were in the
indeterminate state, we stored

NOTE Confidence: 0.8106554

cbee81dc-7f49-46db-9e78-4afd4201d929
00:27:51.870 --> 00:27:55.125
indeterminate state. Valid action
but invalid state.

NOTE Confidence: 0.731926

05508c23-f234-4af2-b9d9-420bcdc9af6b
00:27:57.480 --> 00:28:01.536
When enable is zero, we
closed the door. When we close

NOTE Confidence: 0.731926

eddf4561-45f7-4138-8ccd-cdc4502c5fcc
00:28:01.536 --> 00:28:05.592
the door, we keep whatever we
already have, so this is the

NOTE Confidence: 0.731926

2fd4aaf5-e9f8-49fa-8941-e8862f3a4f3b
00:28:05.592 --> 00:28:06.944
next state.

NOTE Confidence: 0.8809621

f8cbe129-01f1-47f2-8449-8119621c6bd7
00:28:08.970 --> 00:28:15.270
And an interesting thing happens
here. So we open the door. The

NOTE Confidence: 0.8809621

3201b9bb-a019-4354-b29e-22b17e1570f1
00:28:15.270 --> 00:28:22.095
E is 1. Within this time period,
R still is 1. However, S

NOTE Confidence: 0.8809621

25baf96c-b623-4d20-a77b-639b959ce39b
00:28:22.095 --> 00:28:27.870
changes from zero to one. As
long as S is 0,

NOTE Confidence: 0.7535195

e2a05f77-74a2-42a5-b9b6-d5b103327907
00:28:29.470 --> 00:28:33.837
and R is 1, the
sequential logic goes to 0

NOTE Confidence: 0.7535195

c37218e8-6cfa-4a19-995b-87a6c93d1ad7
00:28:33.837 --> 00:28:38.601
instead, because this is the
reset

NOTE Confidence: 0.7535195

4ab9c899-92fc-42a5-a411-219e3116100e
00:28:38.601 --> 00:28:43.762
action. R is 1 and S is 0,
so we reset the internal state

NOTE Confidence: 0.7535195

4818ba84-d7e0-4c58-8a8b-3fa5833bc92f
00:28:43.762 --> 00:28:45.350
of the sequential logic.

NOTE Confidence: 0.8251346

32742193-ebc2-4125-87d2-af57d5abe497
00:28:46.140 --> 00:28:51.024
However, suddenly, the
door is still open. The S changes to

NOTE Confidence: 0.7793429

c4c5ecb8-8384-4c1f-b11c-7e1a23897d29
00:28:51.024 --> 00:28:54.085
one. So it brings the 0

NOTE Confidence: 0.7547304

8e12f0c4-6877-4d96-b036-4845468064fa
00:28:54.085 --> 00:28:56.702
state to the forbidden

NOTE Confidence: 0.8889359

834751c3-6868-4f52-aa72-2a78e71aa20f
00:28:56.702 --> 00:29:00.770
state. So 11 is not a
valid action and brings

NOTE Confidence: 0.8889359

ef72b435-a92f-42ca-b9fb-e12a5cba7969
00:29:00.770 --> 00:29:02.280
the internal state to 0.

NOTE Confidence: 0.86338174

6ee0db96-ad24-48ab-bc76-3740ee6949d1
00:29:03.560 --> 00:29:09.755
So you see that, I mean, you can
continue all I mean to the end

NOTE Confidence: 0.86338174

4e746f55-547d-444c-8b89-59ff4eb2a522
00:29:09.755 --> 00:29:15.124
of this I mean time interval.
But in this flow you can see

NOTE Confidence: 0.86338174

1d6001df-831c-458e-8aad-9d9534c56b25
00:29:15.124 --> 00:29:20.080
that we could control when the
changes to the R&S propagate to

NOTE Confidence: 0.86338174

8d694cad-bf3f-4b5c-91ac-3292e6564c6e
00:29:20.080 --> 00:29:22.145
the inside of the sequential

NOTE Confidence: 0.88885355

53865a0d-cae7-4f26-b36d-6803f560baa4
00:29:22.145 --> 00:29:24.578
logic when the E is 1.

NOTE Confidence: 0.81943333

1d60c3b8-c544-4139-9c4b-f85e82669751
00:29:27.500 --> 00:29:32.274
So at times when the E is zero, we
don't have to look at the

NOTE Confidence: 0.81943333

22cad2c3-31c5-4863-bfd4-f587b055ef72
00:29:32.274 --> 00:29:35.343
R and S, it's kind of a
controlling the propagation of

NOTE Confidence: 0.81943333

66b901f7-5830-41ad-a275-ed006704092d
00:29:35.343 --> 00:29:37.730
the external RS inside
the sequential logic.

NOTE Confidence: 0.87500226

48f8761c-901f-467a-be00-18289d7b34e8
00:29:38.320 --> 00:29:43.552
However, even within this time
interval when the E is 1, the

NOTE Confidence: 0.87500226

c748895d-fd03-4f9b-a802-55eee458ebfc
00:29:43.552 --> 00:29:47.912
R&S has the chance to change
from zero to 1.

NOTE Confidence: 0.83533055

0d1242f8-5914-48e6-90c0-e9be88eab4ae
00:29:48.620 --> 00:29:55.146
There's kind of, I mean, multiple
changes when the door is open

NOTE Confidence: 0.83533055

ac2b43cc-1f52-4ec3-94a3-e73abf9b2782
00:29:55.146 --> 00:29:59.162
and this causes some
inconsistencies inside the

NOTE Confidence: 0.8193005

ac4d6e55-eb5e-4248-ad88-0b6a4d8c993e
00:29:59.162 --> 00:30:03.734
sequential logic. Uh, and
changes the state even

NOTE Confidence: 0.8193005

989ee670-d20c-431b-9709-1494bdba835f
00:30:03.734 --> 00:30:07.622
within this short period when
the door is open.

NOTE Confidence: 0.8824032

da9ee452-05be-4b27-ba70-e27dc56252a3
00:30:09.650 --> 00:30:14.438
So the question is that is it
possible to reduce this time

NOTE Confidence: 0.8824032

80596cee-086d-457d-89a7-fc0738e37f29
00:30:14.438 --> 00:30:18.827
interval, to reduce the time that
the sequential logic is unlocked,

NOTE Confidence: 0.8824032

f1ac3dff-5127-4697-afee-14d3bf29b70a
00:30:18.827 --> 00:30:24.413
or the door is open, in order to
give the very little chance to

NOTE Confidence: 0.8824032

11061ea3-fcad-4829-82a5-dabfd6e062e8
00:30:24.413 --> 00:30:29.201
the R&S to change? To the change
the internal state of the

NOTE Confidence: 0.8296313

596838ea-64c2-45d1-9620-072d90c85e65
00:30:29.201 --> 00:30:35.080
sequential logic? So the answer
is yes, and in the ongoing slide

NOTE Confidence: 0.8296313

b6c9172b-b5ad-4063-aae1-d745778592a9
00:30:35.080 --> 00:30:39.612
we are going to describe how
can we solve these situations

NOTE Confidence: 0.8296313

5057b2f7-57c2-405d-b735-3cbd8e5c257a
00:30:39.612 --> 00:30:44.144
when the Enable is one and R
and S, actually for instance here, R and S

NOTE Confidence: 0.8296313

e4681c29-b313-4e82-b1cc-2bc5c07aa6f6
00:30:44.144 --> 00:30:45.380
changes multiple times.

NOTE Confidence: 0.90943176

ba7dfae7-5b9e-40b8-9911-600e2db61f69
00:30:48.080 --> 00:30:49.949
So before that.

NOTE Confidence: 0.80254716

fff1bcb2-b3a2-45f4-b147-497b83b90d65
00:30:51.410 --> 00:30:56.250
Just going to introduce a
concept called Clock. Clock is also I

NOTE Confidence: 0.80254716

386f972d-32a0-4118-b262-970e587adfda
00:30:56.250 --> 00:30:58.890
mean shortened as CLK or Clock.

NOTE Confidence: 0.9246144

ddf1124f-6b64-469a-867c-47240826f52a
00:30:59.680 --> 00:31:02.080
And the thing is, as you can see

NOTE Confidence: 0.8830789

e4061917-3486-4661-bec9-f297493c8b9a
00:31:02.080 --> 00:31:09.760
here, the E has a regular pattern
0 1 0 1 and the time period for the

NOTE Confidence: 0.8830789

e3442ce7-eb9e-48aa-911a-81c714dda96b
00:31:09.760 --> 00:31:17.460
zero and the time period was for
the one is similar, and it keeps

NOTE Confidence: 0.8830789

6b4f4fc6-6d49-4334-9da1-db2e783892e8
00:31:17.460 --> 00:31:19.660
continuing very similarly, 0 1 0 1 0 1.

NOTE Confidence: 0.85688794

0d241f19-e903-485d-aec1-402185a65703
00:31:20.580 --> 00:31:26.521
So a device that generates such
a pattern, I mean, a train of the

NOTE Confidence: 0.85688794

74ff0db8-5527-4dec-80f7-f87ef16ee2fc
00:31:26.521 --> 00:31:29.263
zeroes and ones is called a Clock.

NOTE Confidence: 0.80712503

bdffeb2f-1b49-4144-94db-30d749c2abf9
00:31:30.490 --> 00:31:31.939
In digital units,

NOTE Confidence: 0.8088911

e32d24e8-d3de-4ec2-a5a4-d76843872491
00:31:32.610 --> 00:31:37.131
Uh, we create this system. I
mean, this device

NOTE Confidence: 0.8088911

f15f9bbe-0577-4186-9716-dafc945ceead
00:31:37.131 --> 00:31:40.830
just to generate this pattern
of zero and one.

NOTE Confidence: 0.83185947

84df41fb-635b-45ed-bcd7-b04c8afd7feb
00:31:41.850 --> 00:31:45.724
This pattern which is
called train of pulses.

NOTE Confidence: 0.69040483

fc96e584-84f2-4ee4-a186-245d264485c0
00:31:46.500 --> 00:31:52.560
Each period of this zero
and one is called a pulse.

NOTE Confidence: 0.8122951

6e56ea11-7168-4da0-89f2-8be207a0a65e
00:31:53.410 --> 00:31:57.118
So basically, a device that
generates these regular pulses

NOTE Confidence: 0.8122951

9e5ca31c-3173-41c0-8a04-01f230901f82
00:31:57.118 --> 00:32:02.062
is called a Clock. It's very
similar to the heart beats in a

NOTE Confidence: 0.8122951

345cf928-46bd-4555-a111-fb9c827736ca
00:32:02.062 --> 00:32:07.418
human being, so the heartbeat or
the pulses of the heart is a

NOTE Confidence: 0.8122951

ff374c2a-a11c-4440-8883-62b7957d57df
00:32:07.418 --> 00:32:08.654
Clock in terms of

NOTE Confidence: 0.87687814

c4af7957-b38b-43dd-9dbf-5cfc80f66404
00:32:10.160 --> 00:32:13.966
digital units like
a heart. It just creates

NOTE Confidence: 0.87687814

f47a90ac-af6a-4502-9c85-a245d570081d
00:32:13.966 --> 00:32:17.426
some pulses of zero and
one in the digital system.

NOTE Confidence: 0.8659634

811283a1-b175-466f-b5b6-aca9bfd2790e
00:32:20.150 --> 00:32:25.948
So what's the purpose of the
lock? The lock is usually in a

NOTE Confidence: 0.8659634

e6858fcb-0389-4f35-b2a7-d43147df2a87
00:32:25.948 --> 00:32:30.854
digital unit. We don't have only
one sequential logic just to

NOTE Confidence: 0.8659634

424f514f-5d69-404c-8461-4ce48e9f72f0
00:32:30.854 --> 00:32:33.530
store 1 bit, zero and one.

NOTE Confidence: 0.82993597

424ed9a7-00ee-4f04-ba57-85a6b56fc126
00:32:34.170 --> 00:32:38.322
We usually have, I mean more
than one bit. For instance, in

NOTE Confidence: 0.82993597

8f920e39-6924-4c07-a3e9-e149c888f7f8
00:32:38.322 --> 00:32:43.166
the lab assignments, you already
saw that we have, for instance 8

NOTE Confidence: 0.82993597

0bba361f-4f98-4256-8fca-4180f3f5478e
00:32:43.166 --> 00:32:47.664
bits, which is called a byte, or
more than that. I mean usually

NOTE Confidence: 0.82993597

2eaf971f-3615-4c4c-8b4a-614ba70030f0
00:32:47.664 --> 00:32:51.470
in a digital unit, we
is gonna store for instance 16 bits,

NOTE Confidence: 0.82993597

fc6308e8-9fbd-4690-a621-16044effccec
00:32:51.470 --> 00:32:52.854
32 bits and etc.

NOTE Confidence: 0.89206266

caa88bba-5104-4071-b3b7-1e3e40f37113
00:32:53.610 --> 00:32:59.538
So if we have more than one
bit, we want to synchronize all

NOTE Confidence: 0.89206266

db5a077d-d29e-4049-9017-e11e70bace1c
00:32:59.538 --> 00:33:00.906
these memory units

NOTE Confidence: 0.86509925

a643171b-70b7-48d2-bdb9-799b7714e73c
00:33:01.520 --> 00:33:06.368
all at once except the changes
in order to avoid any

NOTE Confidence: 0.86509925

c6f5e31e-878f-4f66-8949-80533b4aa86c
00:33:06.368 --> 00:33:10.408
inconsistencies. Imagine you
have 8 SR latches, and we

NOTE Confidence: 0.86509925

9926fa61-e9ec-4e2d-899b-9f9ac9419c8f
00:33:10.408 --> 00:33:15.660
store a binary number, which
can represent a decimal number,

NOTE Confidence: 0.86509925

1b31c181-bdf4-464b-8d2c-0f8b57a4ef01
00:33:15.660 --> 00:33:20.508
and then you want to change that
decimal number or binary number

NOTE Confidence: 0.86509925

c34c965c-b114-4968-8903-35b7b1c9b1ae
00:33:20.508 --> 00:33:26.568
to a new number. In order to do
that, you have to kind of

NOTE Confidence: 0.86509925

32da727f-9cd6-45cc-a6da-9fa1ad1d42a8
00:33:26.568 --> 00:33:30.608
synchronize all these bits
together to accept the change in

NOTE Confidence: 0.86509925

7bf77c89-698e-4fac-9f39-99afa5bae26f
00:33:30.608 --> 00:33:33.436
order to come up with the stable

NOTE Confidence: 0.79262733

81964d80-21ec-499b-b8b1-dfe9f5d550ba
00:33:33.436 --> 00:33:39.805
state altogether. So the main
purpose of the Clock is this.

NOTE Confidence: 0.79262733

0172b1f0-2186-43a4-a30f-b18d12a2622a
00:33:39.805 --> 00:33:45.980
Generate the pulses of zero and
one and give this pulse to the enable

NOTE Confidence: 0.79262733

e8fe470a-0c86-40a6-a5b2-0b513ed656ae
00:33:45.980 --> 00:33:48.355
input of the SR latches.

NOTE Confidence: 0.9061747

72fb01d1-da7a-4c88-a88b-d8c702186a61
00:33:52.540 --> 00:33:54.589
In the practice,

NOTE Confidence: 0.8648859

4e9b7670-98d7-4ecb-b7c1-fd8c7720e3d8
00:33:55.440 --> 00:34:00.564
by default, when the
memory units or when the SR

NOTE Confidence: 0.8648859

e95697c8-c3e1-45a9-a73b-9ca4f8155b42
00:34:00.564 --> 00:34:05.688
latch is enabled when the Clock
is one, it is called positive level.

NOTE Confidence: 0.86682785

415a566b-bdcb-4175-a4e7-86e96bbb8068
00:34:06.280 --> 00:34:10.490
So basically when the Clock
becomes one, the Enable becomes

NOTE Confidence: 0.86682785

7f94d607-1b8c-497a-8cf1-60d5f802793f
00:34:10.490 --> 00:34:14.279
one and all the memory units
accept the changes.

NOTE Confidence: 0.93276227

ecb04657-6c72-4c16-ab3b-7d037e444c54
00:34:15.020 --> 00:34:16.200
This is the default.

NOTE Confidence: 0.8089277

aeb590f3-fdf4-43da-8a67-c65d8af233b5
00:34:17.020 --> 00:34:21.820
And we call this active high. So
basically what we've said so

NOTE Confidence: 0.8089277

ca34089a-dd86-4c4f-9104-ddf2725c953c
00:34:21.820 --> 00:34:26.620
far. We put a latch which
becomes open when

NOTE Confidence: 0.8089277

a12f1147-5ef1-44d8-a57f-7b4346269d47
00:34:26.620 --> 00:34:31.020
the Clock becomes one or the
enable input becomes one. This

NOTE Confidence: 0.8089277

4b8a98ec-c6fc-4724-92d3-edb13d7b2e6e
00:34:31.020 --> 00:34:34.620
SR latch is called active high
SR latch.

NOTE Confidence: 0.7255324

5fda744a-e018-4fc5-aab8-d6a01cf6d7f0
00:34:35.650 --> 00:34:38.994
Basically,
when the enable becomes

NOTE Confidence: 0.7255324

4c21395e-12a6-4d78-8430-e8fe7ac2ebb2
00:34:38.994 --> 00:34:42.756
one or becomes high, the
latch is gonna be open.

NOTE Confidence: 0.87724054

55fdd657-c0f0-4a74-a11f-9e95b32c6225
00:34:44.240 --> 00:34:49.176
However, there are some systems
that works negatively.

NOTE Confidence: 0.8210312

a3405a02-3944-4b9e-bf15-be5b21638c06
00:34:49.750 --> 00:34:53.831
We call this negative level,
meaning that when the Enable

NOTE Confidence: 0.8210312

6cd2f5c5-c6f3-4c6e-9cda-e18ff8ef18e7
00:34:53.831 --> 00:34:58.283
becomes zero, they open the
door. So we call this type of

NOTE Confidence: 0.8210312

7340858a-8d32-4ae8-9bae-5fd27bfa923a
00:34:58.283 --> 00:35:02.735
latch active low, and in
order to make a difference, we

NOTE Confidence: 0.8210312

d50e763e-165e-431d-9c22-d5217527fe7d
00:35:02.735 --> 00:35:07.187
just put the inversion bubble in
the enable input. So when you

NOTE Confidence: 0.8210312

a3a49e68-eb0f-4ab0-8848-3896c0b91475
00:35:07.187 --> 00:35:10.526
see this block diagram with
enable with the inversion

NOTE Confidence: 0.8210312

e9662e92-c74d-47ac-9347-c3995cf68d52
00:35:10.526 --> 00:35:15.349
bubble, it means that it becomes
active or it opens the door and

NOTE Confidence: 0.8210312

9bbce636-5864-485f-906a-9a3b77c59b87
00:35:15.349 --> 00:35:17.946
you see R and S when the Clock is 0.

NOTE Confidence: 0.9303797

0080c562-c5a4-4cf6-8f65-62950a112c4d
00:35:19.160 --> 00:35:21.470
Active low. So again.

NOTE Confidence: 0.7641022

76006bd6-2309-47cd-83ce-2af296d8222f
00:35:22.240 --> 00:35:24.048
Here the active high.

NOTE Confidence: 0.728831

3f5c8224-5f05-4df5-ba19-cd18636f6a86
00:35:25.770 --> 00:35:27.129
Here active low.

NOTE Confidence: 0.82048005

050f9d3b-8e71-454e-a7e8-fe439ba02112
00:35:30.110 --> 00:35:36.468
So let's have more focus on the
other property of the Clock.

NOTE Confidence: 0.8683955

48ea0169-e304-4fa2-94ad-b7230a3253f9
00:35:37.470 --> 00:35:42.078
Actually, the Clock
can be a metric in order

NOTE Confidence: 0.8683955

743d03ea-d686-4b19-b9c0-cd8b4e8c56ab
00:35:42.078 --> 00:35:46.302
to measure the speed of a
digital unit or a digital

NOTE Confidence: 0.78300077

2d9eadb5-6438-4361-ade3-868e8c511d00
00:35:46.302 --> 00:35:53.006
system. So. Oh this
guy. I mean, Heinrich Hertz, he's

NOTE Confidence: 0.78300077

f4a9e064-fecd-4e28-b72d-7d130ec67de8
00:35:53.006 --> 00:35:57.826
a famous. He was a famous
physicist. Actually he proved

NOTE Confidence: 0.78300077

6482a320-5d96-4a1a-bb72-bbd816875724
00:35:57.826 --> 00:36:01.682
that the electromagnetic field
actually exists. So basically

NOTE Confidence: 0.78300077

e6893d87-fa02-4c9b-8487-a80e8ca50e38
00:36:01.682 --> 00:36:06.502
when there is an electric
magnetic field, we can create

NOTE Confidence: 0.78300077

329e41ed-3ae7-48fe-ac41-cf8c1fad84aa
00:36:06.502 --> 00:36:07.948
electricity in the back.

NOTE Confidence: 0.79730856

9d2bf2bc-1f3d-42c7-a609-c95fc5c5086e
00:36:08.580 --> 00:36:13.356
So I'm not talking about that
invention in this slide, but

NOTE Confidence: 0.79730856

1f4fe00e-b28f-4c3f-969e-4f4623b40cee
00:36:13.356 --> 00:36:18.530
I'm saying that his name becomes
a metric, which

NOTE Confidence: 0.79730856

a12e7a02-b741-49e9-acf7-ef31827ef3e0
00:36:18.530 --> 00:36:20.520
we are is gonna explain it in thr

NOTE Confidence: 0.8441656

dbb0f3a1-9984-469f-9f5b-7d039ffa8455
00:36:22.110 --> 00:36:22.840
next slide.

NOTE Confidence: 0.92860746

2331d0cd-a0e8-47dc-9076-274f76ede280
00:36:24.380 --> 00:36:25.170
So.

NOTE Confidence: 0.8275748

36c1fe57-77f5-48cd-9a3e-354a6586790a
00:36:27.220 --> 00:36:30.986
This is our normal
train of pulses.

NOTE Confidence: 0.9232831

db83deea-b48d-41b8-95ba-1282791041ae
00:36:32.280 --> 00:36:32.970
So.

NOTE Confidence: 0.819513

b8e6893e-ce45-4b56-98cc-b46b7b1822f5
00:36:34.210 --> 00:36:39.142
We could generate the pulses in
slower manner, I mean within the

NOTE Confidence: 0.819513

79d681f4-2da8-4453-8c98-0703b510d05d
00:36:39.142 --> 00:36:44.074
same time as you can see here,
the difference within the first

NOTE Confidence: 0.819513

ea2797ee-22af-4460-ae1b-1f4c83263ad1
00:36:44.074 --> 00:36:46.540
train of pulses and the second

NOTE Confidence: 0.8966441

21953666-a122-44e4-8afb-f3c2cd7776fe
00:36:46.540 --> 00:36:51.994
one. The first one, it seems that it
generates the pulses of zero and

NOTE Confidence: 0.8966441

b34c813a-c5cd-4f3e-a847-7b8f3ef02ba0
00:36:51.994 --> 00:36:54.598
one in one period. It takes

NOTE Confidence: 0.84896076

def81ac4-c52c-460f-a500-78b9e9f818f3
00:36:54.598 --> 00:37:00.749
longer time. As a result, it has
longer time for positive

NOTE Confidence: 0.84896076

c8d3a626-1357-450a-b44e-f7f7cadbaaa7
00:37:00.749 --> 00:37:02.505
level and negative level.

NOTE Confidence: 0.8299451

65334121-9c39-4ff4-85e7-83a9689bfe67
00:37:03.620 --> 00:37:07.372
However, the second one
within the same time

NOTE Confidence: 0.8299451

09678dd2-4c08-404b-bc93-8017df74a944
00:37:07.372 --> 00:37:09.248
interval produce two pulses.

NOTE Confidence: 0.8303137

9d0d65c8-9312-4ff4-8533-7af171eb32f5
00:37:10.290 --> 00:37:14.976
If you compare this
one with the third train of

NOTE Confidence: 0.8303137

075073e6-41af-4b8e-8842-cd98793774b2
00:37:14.976 --> 00:37:19.662
pulses, the third one, within
the same amount of time, you

NOTE Confidence: 0.8303137

aa9bc3f3-c5b6-4d87-8e1c-6437a276ebd7
00:37:19.662 --> 00:37:21.366
can create three pulses.

NOTE Confidence: 0.8482033

274e35d8-f230-48a3-8a2e-c14f40037430
00:37:22.570 --> 00:37:26.970
So the question is that
how many pulses can I

NOTE Confidence: 0.8482033

775f7525-e9ef-4f29-bb7f-c6bc19337cc4
00:37:26.970 --> 00:37:28.730
create in one second?

NOTE Confidence: 0.8372235

806ab431-1bb6-444f-9398-09eed78e9039
00:37:31.840 --> 00:37:36.949
If you assume that this amount
of time is 1 second for the

NOTE Confidence: 0.8372235

479adfbc-5f9b-4045-b256-12794495bc54
00:37:36.949 --> 00:37:41.272
first Clock, we can create only
one pulse in one second.

NOTE Confidence: 0.80394816

8306eca2-ec41-4a75-8a5a-c6b2669c5af9
00:37:42.000 --> 00:37:45.460
So one pulse in one second is
called 1 Hertz.

NOTE Confidence: 0.83128005

1a92c738-d329-45a7-9ace-060b5102c72b
00:37:46.390 --> 00:37:50.332
And this name comes from the
Heinrich Hertz physicist.

NOTE Confidence: 0.87235993

cc2e75b6-c5e3-4dc9-8bc7-5bb5c4dc391a
00:37:51.560 --> 00:37:55.762
So basically, the amount of
pulses in one second is the

NOTE Confidence: 0.87235993

0a2f6386-bb3f-41c6-91c9-7128a6d64dbc
00:37:55.762 --> 00:38:01.110
number of Hertz or the speed of
the Clock. In the second one, we

NOTE Confidence: 0.87235993

8b6cbc7b-fd8a-4cdb-977e-b5c5c0a205f3
00:38:01.110 --> 00:38:05.312
could create two pulses within
one second. So we called the

NOTE Confidence: 0.87235993

118a90a5-4053-41eb-b103-d5c21a726b9f
00:38:05.312 --> 00:38:09.132
speed of the Clock as 2 Hertz.

NOTE Confidence: 0.7882709

ffa48be4-30f4-43ad-b572-2fc67eba252d
00:38:09.900 --> 00:38:11.748
We speed up the production of zero

NOTE Confidence: 0.7889522

1f545742-dc34-4d80-a0a5-bd61bfb001c6
00:38:11.748 --> 00:38:17.006
and one. The third one
creates about more than

NOTE Confidence: 0.7889522

e4101cf9-5776-49ec-b8e4-ac2fac7e5569
00:38:17.006 --> 00:38:23.857
3 pulses within a second, so it's
about 3 Hertz, so this is kind

NOTE Confidence: 0.7889522

3672864d-a0de-4a72-8612-54052e8e2315
00:38:23.857 --> 00:38:25.438
of a measure to

NOTE Confidence: 0.8415235

45232b1c-61b5-4f9c-8429-5db5bbb7fb88
00:38:26.420 --> 00:38:30.658
calculate the speed of the Clock
based on the number of pulses it

NOTE Confidence: 0.8415235

54a1491d-1296-4624-8d56-814086a6651c
00:38:30.658 --> 00:38:31.962
generates in one second.

NOTE Confidence: 0.8109053

b3878d53-62ec-474f-a485-d21f5cafbaa4
00:38:33.340 --> 00:38:37.782
So. What's the relationship
between this and our course?

NOTE Confidence: 0.8109053

aeaa12c5-c999-45bc-ac94-2a05a5a0ac21
00:38:37.782 --> 00:38:39.150
The relationship is

NOTE Confidence: 0.8670304

d9fd764d-6bfd-450d-99aa-f1bd3519063d
00:38:40.470 --> 00:38:44.920
as long as I create more pulses
within one second,

NOTE Confidence: 0.8722443

c9d5fc3a-eaed-4b3a-986e-e8c6c64735ba
00:38:46.210 --> 00:38:51.380
I'm able to change the state of
my memory units faster.

NOTE Confidence: 0.87876576

64eae5e7-e848-41ca-bbd2-4e93194e2e96
00:38:52.580 --> 00:38:58.456
If I'm going to, for instance, I
do a calculation based on the

NOTE Confidence: 0.87876576

833d3b78-ab11-499f-b93c-4430ffb63d37
00:38:58.456 --> 00:39:02.976
memory states, I can do the
calculations much more faster

NOTE Confidence: 0.87876576

bd5e5e8a-a276-4db8-9fb5-d210714be283
00:39:02.976 --> 00:39:07.496
because I'm allowing the memory
units to accept changes very

NOTE Confidence: 0.8552881

f33b9305-3dbb-4a78-ba70-6e5910401b5c
00:39:07.496 --> 00:39:13.165
often. So for instance, if I
have a system that accepts this

NOTE Confidence: 0.8552881

7d5a5bee-e6f1-4e9f-8ef0-feb97988c78c
00:39:13.165 --> 00:39:17.785
Clock, 3 pulses in one second,
I'm trying to change the state

NOTE Confidence: 0.8552881

7a2601d9-8e1c-452b-b9c4-cbd22b503178
00:39:17.785 --> 00:39:21.635
of the memory unit 3 times
faster than this one.

NOTE Confidence: 0.7954646

c7683e84-6c5e-4c94-926b-63e6721d2482
00:39:23.850 --> 00:39:27.738
So basically, if I could
design a digital system

NOTE Confidence: 0.7954646

0500b4c2-d42a-44d6-b5c2-a09678ffad96
00:39:27.738 --> 00:39:32.058
that works with a faster
Clock, it means that the

NOTE Confidence: 0.7954646

ea8876bb-0127-40bb-9d9a-e66056154d0b
00:39:32.058 --> 00:39:33.786
digital system is faster.

NOTE Confidence: 0.82013935

0b680e16-395e-4572-a31f-9b3e368adae1
00:39:35.770 --> 00:39:41.451
And this is called a Hertz. You
can see the problem in the

NOTE Confidence: 0.82013935

3e6357d6-5bb7-42f4-a31a-51d83e006b1b
00:39:41.451 --> 00:39:47.132
reverse order. We could say that
how long does it take to produce

NOTE Confidence: 0.82013935

9078f045-001e-4bc9-bc66-c0452c104155
00:39:47.132 --> 00:39:52.813
one pulse. For the first one, it
takes 1 second, for the second

NOTE Confidence: 0.8569655

76d5306b-08c6-4493-b7eb-4b169ba2d39f
00:39:52.813 --> 00:39:59.290
one, in one second, we produce
two pulses. So how

NOTE Confidence: 0.80293727

35222a34-361c-4aeb-93c1-eb6334b3b5da
00:39:59.290 --> 00:40:05.101
long does it take to only
create one pulse? One divided by the

NOTE Confidence: 0.80293727

c600e203-2b6f-4702-a350-7cd4625ba763
00:40:05.101 --> 00:40:10.973
Hertz or the speed of the Clock.
1 / 2 so it takes half a second

NOTE Confidence: 0.80293727

3becdf6d-da51-4680-a2b4-37c37399638f
00:40:10.973 --> 00:40:12.441
to get one pulse.

NOTE Confidence: 0.8221687

9ac8ed11-27e1-4dbc-a4c9-4899b0207d19
00:40:13.220 --> 00:40:18.290
For the third one, it created.
It takes only third of a second

NOTE Confidence: 0.8221687

091583be-bd16-464a-9c07-3d8291371442
00:40:18.290 --> 00:40:19.850
to produce one pulse.

NOTE Confidence: 0.7990904

2c824362-940f-4a73-b93f-48f55c7d3668
00:40:21.010 --> 00:40:25.144
So one over the Hertz or the
speed of the Clock is the

NOTE Confidence: 0.7990904

e6a6fd55-e947-4a5a-9ea3-790127afc9db
00:40:25.144 --> 00:40:28.642
how long it takes
to only produce one pulse.

NOTE Confidence: 0.89154947

ec5358d9-b228-4c15-9988-64d1dc550934
00:40:31.190 --> 00:40:36.410
So if you go to the market and
buy a CPU for a computer system,

NOTE Confidence: 0.8055443

b8cf3816-89e0-4f17-81fd-0c64d6c8a86d
00:40:36.990 --> 00:40:42.970
an important metric for that is
the speed of the CPU, which is

NOTE Confidence: 0.8055443

08159cdb-d6e8-4fbd-b8d3-ebdf7c45330d
00:40:42.970 --> 00:40:48.490
expressed as this. For instance,
for this Intel CPU you can see

NOTE Confidence: 0.8055443

2c7e3af3-bd47-4af9-b7a0-24417d8a3b7d
00:40:48.490 --> 00:40:54.470
it says 2.9 GHz. GigaHertz means,
1 billion GHz means 1 billion.

NOTE Confidence: 0.8055443

ac8af371-28ff-448b-acca-f3f4c21c4aa1
00:40:54.470 --> 00:40:57.230
Basically said it says that this

NOTE Confidence: 0.9127302

20ed7502-326a-4f87-927e-30c2080ac4a7
00:40:57.230 --> 00:40:59.770
CPU. Can generate.

NOTE Confidence: 0.8833039

a98fb475-34f1-4208-aefa-bcd022b9aded
00:41:00.380 --> 00:41:05.972
22.9 * 1 billion
Hertz or 1 billion

NOTE Confidence: 0.8833039

63b06bd9-c430-4830-8c31-f78182c696c1
00:41:05.972 --> 00:41:08.069
pulse per second.

NOTE Confidence: 0.862341

6e6f1ce6-4de3-4c24-911b-5a825188d4d3
00:41:10.350 --> 00:41:14.862
So you can imagine how fast
the Clock speed in this in

NOTE Confidence: 0.862341

de1fe6f0-d882-4bb7-a568-8ffcabd3b931
00:41:14.862 --> 00:41:18.998
CPU is and how fast the
calculation can be done by

NOTE Confidence: 0.862341

95984961-7647-438d-b4eb-a45d064b4e82
00:41:18.998 --> 00:41:23.886
this CPU. I choose this is
the state of the our CPU. I

NOTE Confidence: 0.862341

91e918b6-fc73-4dec-9f02-f4d6f42db2ae
00:41:23.886 --> 00:41:25.390
believe in today's market.

NOTE Confidence: 0.86735225

e4226aa3-0f1c-4d7e-8230-4c7f2618989d
00:41:27.430 --> 00:41:33.358
And if you go to this link in
Wikipedia, you can see the

NOTE Confidence: 0.86735225

e3d55ba6-5e1a-4c09-a371-2be147160e78
00:41:33.358 --> 00:41:37.006
progress of manufacturing
digital units to do the

NOTE Confidence: 0.86735225

90ffa96d-0bc3-40dd-84c0-87b388bc31f8
00:41:37.006 --> 00:41:42.022
calculation based on the number
of pulse the Clock can generate

NOTE Confidence: 0.86735225

e799ca75-bcab-413e-964b-0fee70519a9c
00:41:42.022 --> 00:41:48.406
and the calculation can be done.
So as you can see here today in

NOTE Confidence: 0.8030626

e9b1388b-4c1f-4920-9801-aad1ce4313e1
00:41:48.406 --> 00:41:55.028
2016. Uh, this is 28 billion
pulses within a second. This is

NOTE Confidence: 0.8030626

ceab8f58-513d-478b-85a3-53a09b114780
00:41:55.028 --> 00:41:59.420
experimental. It's not
commercial, but it means that we

NOTE Confidence: 0.8030626

524a593b-c88c-4c6b-9541-8a5c7f0d6fc5
00:41:59.420 --> 00:42:04.788
could create this amount of
pulses in a second in a.

NOTE Confidence: 0.7163421

e64fd0d7-cd39-450b-85ea-3ebaa9b918f7
00:42:05.410 --> 00:42:08.980
Laboratory is not in
a commercial trend.

NOTE Confidence: 0.8761132

024b006c-9992-4400-bb9c-a8a1551ccaf6
00:42:10.470 --> 00:42:13.510
Also, for other devices of a
computer system, for instance,

NOTE Confidence: 0.8761132

350782f6-24e6-4adc-bf26-5eda01998acd
00:42:13.510 --> 00:42:17.462
if you go and buy a memory
module, the speed of the memory

NOTE Confidence: 0.8761132

5e3a89b2-08d5-43c6-b3e9-1f16bd16883a
00:42:17.462 --> 00:42:21.110
module is expressed as a number
of pulses within a second, so.

NOTE Confidence: 0.8560492

dedadd43-adb8-4e93-bd0b-b645eff438b6
00:42:22.300 --> 00:42:26.268
2666 meaning that 2.6.

NOTE Confidence: 0.79959583

20d4ce95-ca50-48c0-8776-e5fc3510ef38
00:42:26.970 --> 00:42:32.214
Giga Hertz or Mega I mean
1000 Mega becomes 1 gig so

NOTE Confidence: 0.79959583

0d088551-cdcc-4e0c-b679-5bd80a1b4e7a
00:42:32.214 --> 00:42:36.584
the speed of this memory
module is 2.6 giga Hertz.

NOTE Confidence: 0.74413246

1cce7d33-5b55-43c9-9236-1486126a99a6
00:42:37.810 --> 00:42:40.398
Clock cycle per second.

NOTE Confidence: 0.7896607

95f16951-5805-49ca-b760-1aa92a80819f
00:42:42.090 --> 00:42:45.128
And if you build a
computer system.

NOTE Confidence: 0.8108822

1710d315-ee6e-47a8-97ec-2a8969070d4a
00:42:46.620 --> 00:42:51.024
Uh, you have to buy a main
board, installed a CPU and

NOTE Confidence: 0.8108822

677b34c2-ea16-44b1-8170-1aad0377be44
00:42:51.024 --> 00:42:54.327
memory module in order to
process your for instance

NOTE Confidence: 0.8108822

2c91bca5-7f5e-4f9a-85ed-8745ccb6b7ac
00:42:54.327 --> 00:42:58.731
program and etc. So your program
goes to the memory module and

NOTE Confidence: 0.8108822

1cf5668e-c78e-4dfa-a3f6-0978d481c555
00:42:58.731 --> 00:43:01.300
your program going to be run by

NOTE Confidence: 0.78572

a150abf5-6513-46e0-8c2f-0dfabe00c6f9
00:43:01.300 --> 00:43:07.308
the CPU. So if the CPU speed
is X Hertz, meaning that the

NOTE Confidence: 0.78572

3696a2c8-d59d-4d0a-940e-c9bf3dad87eb
00:43:07.308 --> 00:43:12.016
Clock can be can generate X
number of pulses within a

NOTE Confidence: 0.78572

0ae67473-c3e1-4db5-8c8b-abe6b11a140a
00:43:12.016 --> 00:43:16.296
second and if memory has the Y
speed. y Hertz? Meaning

NOTE Confidence: 0.78572

84fa4c53-72e8-47e6-829a-c2412420442a
00:43:16.296 --> 00:43:20.148
that it can generate y
pulses within a second?

NOTE Confidence: 0.7666201

a571cbe1-0c68-431b-a377-4c6e90d3684a
00:43:21.560 --> 00:43:26.411
The main board has all its
own speed, meaning that it

NOTE Confidence: 0.7666201

cc494203-b2eb-4943-b685-e39197e0d951
00:43:26.411 --> 00:43:29.939
can support up until Z
pulses per second.

NOTE Confidence: 0.90572876

56cea14e-4b98-494b-80c4-394af4e6fd83
00:43:31.210 --> 00:43:35.412
So what would be the final speed
of this whole system?

NOTE Confidence: 0.88016844

e7066fa7-5af6-4d28-acec-92ac6e6b38a7
00:43:37.810 --> 00:43:40.015
Anybody in the class can
answer this?

NOTE Confidence: 0.808723

4d3b5793-cbcb-4fe9-ba3d-d43ba52bee35
00:43:43.580 --> 00:43:49.768
for instance we bought an Intel
with the 2.9 GHz and then we

NOTE Confidence: 0.808723

79dd8a38-7419-42fb-beb1-876014644d19
00:43:49.768 --> 00:43:55.004
bought a memory module with the
speed of 2.6 giga Hertz.

NOTE Confidence: 0.8593702

073f138c-dbc0-4b21-a894-8b59c65ccc02
00:43:55.680 --> 00:44:01.515
And we go to the market and in
order to buy a main board to

NOTE Confidence: 0.8593702

a7ee4cd7-7c9d-49c2-a946-8190e4d2fbb0
00:44:01.515 --> 00:44:05.794
install the memory module and
CPU and the memory module says

NOTE Confidence: 0.8593702

6abfca73-bed8-403e-92a6-5c1bdc4f656e
00:44:05.794 --> 00:44:10.462
that the speed is for instance
2.3 GHz. So we have three

NOTE Confidence: 0.8593702

6f6641a6-be59-4c94-b2b0-213867b2534f
00:44:10.462 --> 00:44:15.130
different speed. But we when we
start our program to run the

NOTE Confidence: 0.8593702

58558206-a9e0-4692-8eca-81d44d4db302
00:44:15.130 --> 00:44:19.409
program or do the calculation,
what would be the final speed?

NOTE Confidence: 0.8538674

b4bcf10f-2d1d-4836-9f30-2f0a0807179f
00:44:25.480 --> 00:44:29.216
Correct, actually paul and
Nicholas actually said it

NOTE Confidence: 0.8538674

79f0117c-5886-4758-bc00-ff012fe63a5f
00:44:29.216 --> 00:44:33.886
correctly. Yes, because The
thing is as long as the

NOTE Confidence: 0.8538674

966f47f7-d6da-4270-b4b1-379f9b4d78a8
00:44:33.886 --> 00:44:38.556
information are inside each
device, they can act based on

NOTE Confidence: 0.8538674

71de5721-1e55-40e2-a373-e302a235815d
00:44:38.556 --> 00:44:43.226
the internal Clock of that
device. So if the information

NOTE Confidence: 0.8538674

315415fd-a54e-4098-9e2c-3f7e90f4e17b
00:44:43.226 --> 00:44:45.094
are inside the CPU.

NOTE Confidence: 0.8158935

4062332d-7f5b-45c7-b41f-e3dfd7f612c3
00:44:46.450 --> 00:44:51.286
Calculation can be done by the
CPU so X Hertz if the

NOTE Confidence: 0.8158935

ffb572fc-d859-4c19-8a54-e4892ad300ad
00:44:51.286 --> 00:44:54.913
information are inside the
memory module inside the memory

NOTE Confidence: 0.8158935

29ad231c-bffc-4963-add8-dfec36745021
00:44:54.913 --> 00:44:59.749
module we can do processing by
y Hertz but if the processing

NOTE Confidence: 0.8158935

3d366ca9-9716-4d0c-852b-b8540914806f
00:44:59.749 --> 00:45:04.182
depends on the communication
with two devices so CPU wants to

NOTE Confidence: 0.8158935

76c07e5b-6a07-4063-867d-99d3aa6581c5
00:45:04.182 --> 00:45:08.615
talk with memory and memory
wants to talk with CPU it

NOTE Confidence: 0.8158935

71e74c05-35a4-40d3-ad4c-98d9554515d0
00:45:08.615 --> 00:45:11.033
downgrades the speed to the main

NOTE Confidence: 0.9292387

137e5ded-5b91-43fc-aea3-10b3a67c9a9d
00:45:11.033 --> 00:45:16.026
board. Because the main board is
the communication platform.

NOTE Confidence: 0.7988249

a50b4ba9-c0a7-4825-9f05-f91125a2b9da
00:45:16.710 --> 00:45:21.354
So this is the bottom like
as the Nicholas says, so all

NOTE Confidence: 0.7988249

256a9fa3-f69b-4390-b462-beeb7b694a57
00:45:21.354 --> 00:45:23.676
these speeds actually
downward to Z.

NOTE Confidence: 0.79961646

922d646e-ec71-4283-84ca-1ec7b6cd307a
00:45:25.800 --> 00:45:30.252
At market usually technology for
the CPU is much more higher, so

NOTE Confidence: 0.79961646

74d2bd08-252c-4281-b289-77ad3d5a58b5
00:45:30.252 --> 00:45:32.849
the speed of the CPU's is much

NOTE Confidence: 0.792731

9b86a267-424e-4af2-8200-48e7c67cdbf8
00:45:32.849 --> 00:45:39.820
more higher. However, I usually
the speed of the main board an

NOTE Confidence: 0.792731

4f16ae42-64d7-40f0-b4c4-34bb61f6fc55
00:45:39.820 --> 00:45:42.540
memory module are the same.

NOTE Confidence: 0.89721304

6bca45ce-dddf-4910-beda-5de5b84d547a
00:45:43.290 --> 00:45:46.730
Usually the main board
manufacturers actually wants to

NOTE Confidence: 0.89721304

b21bd6fa-c4c1-4f6f-94d3-e6bead73cd28
00:45:46.730 --> 00:45:49.310
keep up the speed with the memory.

NOTE Confidence: 0.84993184

c48114ac-aad7-444b-873c-78ddbb3ad801
00:45:50.350 --> 00:45:53.925
And as long as they supported
memory speed, they are good.

NOTE Confidence: 0.837409

c943bd27-0608-4f67-8abf-d071089a44b4
00:45:54.800 --> 00:45:59.506
But the CPU are much more faster
than the memory and main board.

NOTE Confidence: 0.837409

b9ec70c6-9b54-491a-a180-6a292b8406ea
00:45:59.506 --> 00:46:05.298
So if you have a CPU with 2.9
 GHz and if you buy a

NOTE Confidence: 0.837409

ca8e7591-b147-4aec-8ec7-a855441a7808
00:46:05.298 --> 00:46:09.642
memory module 2.6, you're kind
of wasting the. Your CPU it's not

NOTE Confidence: 0.837409

b376377b-c37e-4163-bf47-53a951b7354c
00:46:09.642 --> 00:46:13.986
a total waste because as long as
the information or inside the

NOTE Confidence: 0.837409

65c82242-aa79-41c5-b76a-793fbec58308
00:46:13.986 --> 00:46:16.520
CPU they can work at this Clock.

NOTE Confidence: 0.8580112

5dc01c76-0aa2-4220-8b7f-bcb26238bb3d
00:46:17.210 --> 00:46:22.046
However, if your information or
outside the CPU, it drops to the

NOTE Confidence: 0.8492552

48dbffb9-8ee8-4d70-9514-b869b95d9c22
00:46:22.046 --> 00:46:28.000
this Z. So this idea actually
helps you when you do the

NOTE Confidence: 0.8492552

efd60fe8-6141-49fa-9e70-c06a8fafe193
00:46:28.000 --> 00:46:32.650
programming, you try to keep
your information or your data

NOTE Confidence: 0.8492552

1b466a13-6647-4a3d-ad85-ea4b85279ccd
00:46:32.650 --> 00:46:38.695
inside the CPU instead of inside
the memory. This way in the next

NOTE Confidence: 0.8492552

60694794-f19a-47d7-be2e-5083ea568a77
00:46:38.695 --> 00:46:42.415
course computer architecture
two. Also there's another course

NOTE Confidence: 0.8492552

98e170d4-3f38-4a9d-bf1c-9c8dc6a87a9b
00:46:42.415 --> 00:46:47.995
assembly language. You learn how
to keep your data inside the CPU

NOTE Confidence: 0.8492552

942deb6b-60b4-4505-be82-1d3734848e84
00:46:47.995 --> 00:46:52.180
in order to take advantage of
the CPU speed.

NOTE Confidence: 0.8718743

40f764ee-2c12-41ff-9c07-2c5e1abd7fc4
00:46:54.610 --> 00:46:58.370
So there's another topic called
Overclock I remember at the

NOTE Confidence: 0.8718743

15de7b84-5b39-4515-935b-34e860bb5ec7
00:46:58.370 --> 00:47:02.882
first class of this course. One
of these student asked me about

NOTE Confidence: 0.8718743

f3ad251d-aa07-492e-963f-1a2a06d591a5
00:47:02.882 --> 00:47:04.386
what is over clocking.

NOTE Confidence: 0.8000063

efc4b6b5-b099-4ff3-82f0-75cd00668de5
00:47:05.300 --> 00:47:08.982
So now we know what is Clock. So
Clock is a device that generate

NOTE Confidence: 0.8000063

ca06af8e-4580-4a29-a8ed-868e596da6d7
00:47:08.982 --> 00:47:12.138
pulses and the speed of the
Clock depends on the number of

NOTE Confidence: 0.8000063

212d50b3-6878-466a-98bc-318a0d899330
00:47:12.138 --> 00:47:13.190
pulses within a second.

NOTE Confidence: 0.83916605

0b1055e9-3e75-4b81-b97f-653d34f59c21
00:47:14.320 --> 00:47:20.638
So the overclock means that we
allow the CPU or we allow the

NOTE Confidence: 0.83916605

0667a3e4-5588-4b4c-b635-9d34bb65d8ab
00:47:20.638 --> 00:47:25.984
memory the lower speed device
memory and also the main board.

NOTE Confidence: 0.8095064

2f15ffc5-8a48-4b77-bb12-cf89949e2a5b
00:47:26.880 --> 00:47:33.516
To be free out of it, it's
standard speed to catch up with

NOTE Confidence: 0.8786673

88d4f0ff-2e82-42ff-91ee-6afb6af45ba4
00:47:33.516 --> 00:47:38.536
the CPU. So whenever we allow
dynamic speed, meaning that the

NOTE Confidence: 0.8786673

2b335226-c67a-4bf2-89c8-f16ebc95ffa0
00:47:38.536 --> 00:47:43.144
device can changes the Clock
from a minimum to maximum, it is

NOTE Confidence: 0.8786673

937d6d91-6353-42b8-a771-8458aff7e4bb
00:47:43.144 --> 00:47:47.752
called over clocking. You can do
the research on this at home,

NOTE Confidence: 0.8786673

444b913c-1e62-4837-a62c-61183cf405e9
00:47:47.752 --> 00:47:53.128
but this is the general idea. So
if we buy in memory module with

NOTE Confidence: 0.8786673

b28aa099-f496-484b-a09a-9a77ff8ec7cf
00:47:53.128 --> 00:47:57.736
over clocking or if we buy a
main board with over clocking,

NOTE Confidence: 0.8786673

e7d6255c-4a26-4246-8d38-5154468db1f1
00:47:57.736 --> 00:48:01.576
it means that the main board or the
memory module can.

NOTE Confidence: 0.8493502

f5334153-e299-46ad-b3df-6e9d1603212a
00:48:02.150 --> 00:48:07.078
Adjust the speed in order to
catch up with the highest

NOTE Confidence: 0.8493502

f424601c-4948-457b-82c6-d9b475fd7406
00:48:07.078 --> 00:48:12.006
maximum speed, which is usually
catch up to the CPU speed.

NOTE Confidence: 0.8345572

6a5a63ba-4935-48e9-9598-ee4c42d6db9d
00:48:14.450 --> 00:48:18.714
So this is just a short history
about the Clock and the speed

NOTE Confidence: 0.8345572

8586113f-ec99-4eab-bf51-24cd8ba75d8d
00:48:18.714 --> 00:48:23.306
and what we when we go to market
and buy digital units. We have

NOTE Confidence: 0.8345572

47489b78-c31e-4010-86ef-e833effab58d
00:48:23.306 --> 00:48:27.242
to think about the speed which
is expressed as the number of

NOTE Confidence: 0.8345572

e24a92d3-84f8-424f-ae53-11e9575f9e7e
00:48:27.242 --> 00:48:28.554
pulses within a second.

NOTE Confidence: 0.7576557

d2e431fe-31e1-4528-88c8-652ff9634a65
00:48:29.520 --> 00:48:31.150
And the metric is Hertz.

NOTE Confidence: 0.8385778

46f7bbd4-7ee9-41af-bee4-107bf8a7465f
00:48:32.490 --> 00:48:37.000
So let's back to our basic
digital unit, the only

NOTE Confidence: 0.8385778

526f118c-5a0c-40b1-8396-a79fae30deb4
00:48:37.000 --> 00:48:41.961
memory unit which can store
just one bit zero and one.

NOTE Confidence: 0.8385778

d940e14b-11b8-4b7e-bb34-35168821d8a0
00:48:41.961 --> 00:48:43.765
The S R latch.

NOTE Confidence: 0.8171751

0bc8f06e-8c00-40c3-9223-6b1892e4075a
00:48:45.380 --> 00:48:50.672
There are different ways to
build SR latch the way we

NOTE Confidence: 0.8171751

dddb06c9-a9fc-42fe-ab6d-bfdd9dd88b40
00:48:50.672 --> 00:48:55.964
design it. It was just using two
NOR gates and plus two

NOTE Confidence: 0.8171751

d042143c-3582-4df5-87af-9b7aa53c2765
00:48:55.964 --> 00:48:59.933
additional and gate for the R&S
with enable input.

NOTE Confidence: 0.82388306

f8e94309-05d2-484b-8056-c033c39125f9
00:49:01.040 --> 00:49:05.629
Uh, in the book there is a
better design and the reason is

NOTE Confidence: 0.82388306

fa261714-a832-4707-ae60-6e4f33549692
00:49:05.629 --> 00:49:10.218
that because all the gates is gonna
be NAND so there's a new design

NOTE Confidence: 0.82388306

dd439432-2bfd-4602-a5d8-a17f4c13d4d5
00:49:10.218 --> 00:49:14.807
with the NAND gate and the
beauty of this design is that it

NOTE Confidence: 0.80398166

072c6cd2-c006-48fd-9ddf-c429ebc1c71c
00:49:14.807 --> 00:49:21.420
uses. only NAND gates in our
design we used NOR gate here an

NOTE Confidence: 0.80398166

bea31639-ccd4-455f-8ed2-a7fc8f41d9bf
00:49:21.420 --> 00:49:26.880
and gate here, but with the SR
latch with the NAND gate, all

NOTE Confidence: 0.80398166

494d7d31-d2ca-40cf-9c84-2f7ed6d0153e
00:49:26.880 --> 00:49:31.080
the gates are now that's the
beauty of the design.

NOTE Confidence: 0.8444622

69b1d744-06d7-4f6c-9215-79aeb7f9602e
00:49:32.540 --> 00:49:38.228
But the thing is, this is
exactly the same as the our

NOTE Confidence: 0.8444622

bd5ec749-492e-4ac9-b18e-bc68dae1fdbb
00:49:38.228 --> 00:49:42.968
design. So if enable IS0SR
doesn't matter, we just keep

NOTE Confidence: 0.8444622

645156b7-e3fb-4d29-9000-edd489b11c95
00:49:42.968 --> 00:49:47.708
whatever we already have. If
enable is 100 store action,

NOTE Confidence: 0.8444622

02eec398-c167-481f-827c-381b9d4079b5
00:49:47.708 --> 00:49:52.448
no change, 01 or is 1 S 0
reset action.

NOTE Confidence: 0.80326134

31448c0a-7906-401e-9944-fc8fb53450c8
00:49:53.610 --> 00:49:59.258
We bring the state to the reset
state as is 1, or is zero goes to

NOTE Confidence: 0.80326134

98c3e485-d00d-4ce2-bdd2-28190f1f69c4
00:49:59.258 --> 00:50:00.317
the set state.

NOTE Confidence: 0.83724755

5ef96f0b-a83c-4244-8eb2-c63012d8266d
00:50:00.390 --> 00:50:05.864
And one one indeterminate. So the
truth table for both design are

NOTE Confidence: 0.83724755

5137c859-8d98-4796-8d2c-46693ea21fa3
00:50:05.864 --> 00:50:10.556
the same. Actually whatever gates
you used to design the SR latch,

NOTE Confidence: 0.83724755

c9a1b1df-d20c-4e1c-aaec-eb745b8a3d47
00:50:10.556 --> 00:50:15.248
you have to follow this standard
truth table for the SR latch.

NOTE Confidence: 0.8226818

e1d3feb8-8f5c-4963-900e-fbd4d73db096
00:50:18.810 --> 00:50:23.518
One thing you have to pay
attention with this design is

NOTE Confidence: 0.8226818

1e0ba465-2b9e-4b37-b252-c009d7e75940
00:50:23.518 --> 00:50:29.082
that in this design S comes
first and R comes next. So S

NOTE Confidence: 0.8226818

eda9a42d-e6a0-41f1-9e39-3fb6e18db65e
00:50:29.082 --> 00:50:35.074
is attached to a path to Q&R is
attached to a path to Q prime.

NOTE Confidence: 0.8004004

fe2db43f-1f0a-4885-b11d-bba5d0179185
00:50:35.700 --> 00:50:41.368
In our design it was reversed,
so R was attached to the Q& S

NOTE Confidence: 0.8004004

fabc6eab-4293-4b73-941b-e1033c26c2c8
00:50:41.368 --> 00:50:46.600
was attached to the Q' so be
careful about this. I mean

NOTE Confidence: 0.8004004

03b7095a-0e97-46ee-9126-cc191e8bde25
00:50:46.600 --> 00:50:51.832
change, so within and it S
comes first R comes next for the

NOTE Confidence: 0.8004004

75825151-c5cc-454d-a366-c93a4d25e349
00:50:51.832 --> 00:50:54.448
Nor gate R comes first and S

NOTE Confidence: 0.7592217

d7f3d751-db65-41c4-9c95-fa03f2338b72
00:50:54.448 --> 00:50:59.916
comes next. This is the only 
thing you have to pay attention.

NOTE Confidence: 0.8540515

10cb9044-9308-41f4-a438-015b34b5506a
00:51:02.210 --> 00:51:07.394
What, however, as long as they
show a block diagram of SR

NOTE Confidence: 0.8540515

794e38d4-3be1-46cf-b657-a4256c2f3d31
00:51:07.394 --> 00:51:11.714
latch, you don't care about
what's going on inside. We

NOTE Confidence: 0.8540515

139b245f-d981-42e5-a394-df7887321c8e
00:51:11.714 --> 00:51:17.330
just see that if R&S is 00,
store 10, reset, 01 set, and

NOTE Confidence: 0.8540515

943866ae-a7fb-4d0d-bcfc-7b3e754ff1a4
00:51:17.330 --> 00:51:19.058
one one is forbidden.

NOTE Confidence: 0.8503031

2c3aabbc-7e09-46e3-8813-bf02f0271965
00:51:21.070 --> 00:51:26.278
So this is the if you go to the
Wikipedia you can see different

NOTE Confidence: 0.8503031

12b464ed-55b8-408f-af3c-24ef5a5395a2
00:51:26.278 --> 00:51:28.510
design of the SR latch too.

NOTE Confidence: 0.73046154

394377cc-b7ca-4440-9d57-281ef55c80b6
00:51:29.390 --> 00:51:30.610
With different Gates.

NOTE Confidence: 0.6187888

599f2f8f-1a21-4294-8213-26d1cd7ecf71
00:51:31.690 --> 00:51:32.540
I.

NOTE Confidence: 0.9166438

f9cc7cdf-1d4b-48fe-8917-cc0215f43826
00:51:34.150 --> 00:51:35.698
Is there any questions so far?

NOTE Confidence: 0.7817152

2c65d594-1299-4566-af00-50f3178c71ca
00:51:49.720 --> 00:51:52.376
Oh well, let's go
back to the slide.

NOTE Confidence: 0.85326785

9fbb2ec2-9be4-4851-b220-13dccf108e11
00:51:53.780 --> 00:51:57.752
As long as we do the reset
and set yes, but sometimes

NOTE Confidence: 0.85326785

b2f093cb-1eb9-4fc4-a8ea-dcb3b57a442a
00:51:57.752 --> 00:51:59.407
R and S both are zero.

NOTE Confidence: 0.85082614

ca262a51-cba6-4d73-9af0-b6e04ca7fb71
00:52:00.810 --> 00:52:03.890
So they are not not of each
other, they're not complementing

NOTE Confidence: 0.85082614

114d269e-a393-4025-9d5b-20db6808bc1c
00:52:03.890 --> 00:52:05.570
each other. It means that you

NOTE Confidence: 0.7947246

9417797b-8cbf-4c69-8dbb-9c300b98dc70
00:52:05.570 --> 00:52:10.382
don't want to. Neither reset
Nor set the state. It means that

NOTE Confidence: 0.7947246

b16773d9-8b57-41c9-82d5-52c9f9cc0c58
00:52:10.382 --> 00:52:16.517
just store so the only case that
the R&S are the same is here 00

NOTE Confidence: 0.7947246

aaa2ccce-94b8-4d90-aa85-e7001b2c2957
00:52:16.517 --> 00:52:21.016
in that storing in reset the
complement each other one zero

NOTE Confidence: 0.7947246

78ab92a9-b851-409f-b24d-b22264e14709
00:52:21.016 --> 00:52:26.742
and in the set here S becomes
one R become zero and when both

NOTE Confidence: 0.7947246

c8501351-655f-43e6-a878-3395dd7ee42d
00:52:26.742 --> 00:52:32.059
becomes one this is forbidden.
We never put both to one. So to

NOTE Confidence: 0.7947246

760347e8-ff9b-44e9-bdd8-206cf993fa8f
00:52:32.059 --> 00:52:36.558
answer your question there are
compliments of each other in the

NOTE Confidence: 0.7947246

d4afb0d0-89a6-4c81-aae4-258f74cca29f
00:52:36.558 --> 00:52:38.194
reset and set action.

NOTE Confidence: 0.92798865

952f8cd5-8639-4ea8-be8a-cf3442a64186
00:52:38.260 --> 00:52:39.680
But they are the same.

NOTE Confidence: 0.80725765

d94208f5-0cf4-4554-a446-a44f9c2557b7
00:52:40.230 --> 00:52:43.904
When we is gonna store these
things, this is the only case

NOTE Confidence: 0.80725765

b63c11c9-0999-48d7-9816-cb85eb299657
00:52:43.904 --> 00:52:45.240
they become both 0.

NOTE Confidence: 0.86531293

3317b994-2e5c-48fd-b9f2-04c70c0ae76a
00:52:48.430 --> 00:52:49.528
Any other questions?

NOTE Confidence: 0.90046763

5cd66749-6ad3-4c8a-8397-1c220681cf03
00:52:56.080 --> 00:52:56.770
So.

NOTE Confidence: 0.84297234

9ba9c28b-a6c5-4390-a162-a26ddbff2334
00:52:57.790 --> 00:53:03.763
Let's work more on the SR latch,
so remember I mean.

NOTE Confidence: 0.67152953

1c414f1e-aa09-44c3-9fb9-7a143d1f858c
00:53:04.520 --> 00:53:07.100
Be careful about, uh, let me

NOTE Confidence: 0.832906

9e5beb07-eca0-4c00-b213-990de7b43af7
00:53:07.100 --> 00:53:12.504
come back. So you have let
me come back here.

NOTE Confidence: 0.8326953

77c8e104-1822-49ff-8e8b-96af024b6a37
00:53:14.140 --> 00:53:16.419
Yes. Is truth table.

NOTE Confidence: 0.8093184

7dbb19eb-7acc-41b7-8b06-828991c85f34
00:53:17.220 --> 00:53:21.708
Work you have to kind of
mastered this truth table for

NOTE Confidence: 0.8093184

30c29e38-9bbc-464a-9981-3767b7f0a921
00:53:21.708 --> 00:53:26.604
the SR latch. I kind of
memorizing so this is the single

NOTE Confidence: 0.8093184

1c8c3dc7-5a93-4e62-b555-fad18da6b649
00:53:26.604 --> 00:53:29.868
unit. This is a kind of I mean.

NOTE Confidence: 0.85246325

f542003e-ef3b-4000-9ade-e228f4e1ebe5
00:53:31.350 --> 00:53:37.081
Invention so we could create a
sequential logic. Or we could

NOTE Confidence: 0.85246325

7ddae362-9c92-4755-a003-4141d8cbe24e
00:53:37.081 --> 00:53:41.770
create a digital unit or logical
circuit that can

NOTE Confidence: 0.7970989

c4fde475-d3d3-4fc6-904c-85b1798d26f2
00:53:43.960 --> 00:53:49.875
Store 1 bit. This is an
important. I mean 

NOTE Confidence: 0.7970989

58f676de-7085-437a-8754-c27b48c3fcbe
00:53:49.875 --> 00:53:52.605
creation so the SR latch can

NOTE Confidence: 0.81750464

aab72c4f-ab96-4346-95b2-1ca06d591aaf
00:53:52.605 --> 00:54:00.052
store. Reset set so this is not
an easy task, so this is kind of

NOTE Confidence: 0.81750464

8f5031de-dd8a-43cf-8cc9-d28cbb37b3c0
00:54:00.052 --> 00:54:02.217
a I mean genius invention.

NOTE Confidence: 0.820771

cf5af722-7e16-4e57-bd81-e24204a08cc0
00:54:02.870 --> 00:54:06.918
So try to memorize this truth
table and try to memorize

NOTE Confidence: 0.820771

70399102-2ae0-4619-a160-7d70bf91c3bf
00:54:06.918 --> 00:54:10.598
different. Try to work with
different design of the SR

NOTE Confidence: 0.8690763

58eda8f5-8186-44fa-b7ea-b587a3d6aa84
00:54:10.598 --> 00:54:14.398
Latch. Our design or the
books design and remember

NOTE Confidence: 0.8690763

9bfa5b64-fc3d-4850-920f-73e97acda3e5
00:54:14.398 --> 00:54:15.466
the truth table.

NOTE Confidence: 0.82310957

045c186a-3511-46f5-b6e8-9dbcaa75ff77
00:54:17.050 --> 00:54:21.769
So this is a huge invention
for the digital units. We

NOTE Confidence: 0.82310957

efce0433-9263-47c6-8413-d550e10d2ba3
00:54:21.769 --> 00:54:27.775
could store 1 bit and we if we
stack multiple SR Latch we

NOTE Confidence: 0.82310957

e38bdf87-6338-4b4e-ba6d-21584ae923e8
00:54:27.775 --> 00:54:32.494
can store multiple bits. So we
are trying to build an

NOTE Confidence: 0.82310957

e70f2cd9-2baa-4712-8462-786bd52bf477
00:54:32.494 --> 00:54:35.926
assistant that can store
information by combination of

NOTE Confidence: 0.82310957

0c8c8277-c0fd-43fe-b8c4-6878686877e1
00:54:35.926 --> 00:54:37.642
logic with additional
feedbacks.

NOTE Confidence: 0.7983693

c704c106-7d72-4b54-92ca-0bc8b5ca139d
00:54:39.330 --> 00:54:45.196
So let's play with this unit SR
latch. I mean more work more with

NOTE Confidence: 0.8168879

370d3890-fc5a-48e4-9ddd-b793cd209db5
00:54:45.196 --> 00:54:51.147
this unit. So The thing
is, as Marco said, if you

NOTE Confidence: 0.8168879

f40ce2ea-94e9-4207-a562-d8cb2ef10d78
00:54:51.147 --> 00:54:55.777
try to avoid the forbidden
State for the R&S, there's

NOTE Confidence: 0.8168879

a39f7180-9e97-4178-9547-923cb6b54138
00:54:55.777 --> 00:54:59.944
a forbidden state for R&S,
when both becomes one.

NOTE Confidence: 0.92875594

fe3ad9d3-6586-4a2a-ac2d-55ac468ee6ff
00:55:01.220 --> 00:55:02.560
How can we avoid that?

NOTE Confidence: 0.92216647

5d589450-5376-49a6-821a-0d8a59392615
00:55:03.110 --> 00:55:04.578
One way is that.

NOTE Confidence: 0.8664266

0eeff43a-fff8-400e-a793-3c321e6bbfee
00:55:05.240 --> 00:55:07.864
You always make them
compliment of each other.

NOTE Confidence: 0.8288602

7147c33d-d1dc-4bd3-a652-19fd6b9f3cfd
00:55:09.180 --> 00:55:14.715
So we create a new input X
and we put X to the R and

NOTE Confidence: 0.8288602

3de341d8-2e4e-42fd-98c1-9f48a1f07ebf
00:55:14.715 --> 00:55:19.143
not of X to the S. This way
always the R&S are

NOTE Confidence: 0.8288602

80dbbf60-3ab8-4cc1-8b12-80ee05d386df
00:55:19.143 --> 00:55:20.619
complements of each other.

NOTE Confidence: 0.89980274

a4a4f05c-e3c9-432e-acb5-39ca28031a2f
00:55:22.040 --> 00:55:26.176
So let's see what's happened.
What happens if we do that?

NOTE Confidence: 0.8545619

7ad6d29c-a7ab-481e-95a7-56a47a41d78e
00:55:26.870 --> 00:55:31.630
So as long as enable is zero, we
said that the SR latch is

NOTE Confidence: 0.8545619

74617a60-5b80-4cff-9d36-34f9dd82f716
00:55:31.630 --> 00:55:33.670
locked. We don't look at the

NOTE Confidence: 0.7184342

8ea65914-bb06-4cb5-bae7-8f3710592e50
00:55:33.670 --> 00:55:37.360
input. So it just preserved the,

NOTE Confidence: 0.80257845

b573d04e-f0a7-4bfe-b885-17dea3bfe53c
00:55:37.360 --> 00:55:42.810
uh. Previous state, whatever it
is already stored inside the

NOTE Confidence: 0.80257845

45af9c38-8475-4415-920c-b5f5ae04ca86
00:55:42.810 --> 00:55:44.250
sequential logic restore it.

NOTE Confidence: 0.85842735

04d00bbc-f263-4037-9938-c2fabd6fab1c
00:55:45.250 --> 00:55:50.318
So doesn't matter the value of
X, either zero or one E is 0.

NOTE Confidence: 0.8491642

42876284-7d60-4ff9-9589-28dfe26988a6
00:55:51.010 --> 00:55:53.260
However, when the
E becomes enabled.

NOTE Confidence: 0.80258673

37c52967-ea1e-44c9-b3f4-76a85888d3e5
00:55:54.780 --> 00:55:59.161
Now the value of X matters
because the door is open and we

NOTE Confidence: 0.80258673

05375f9b-2ae9-4dbf-bc8a-86d0bcd27d4a
00:55:59.161 --> 00:56:00.846
accept the change from R&S.

NOTE Confidence: 0.83598226

7233cdd0-fafd-442c-9964-92c3adbfd949
00:56:01.600 --> 00:56:06.215
If X is 0 ,X goes to the R.
As you can see here,

NOTE Confidence: 0.83598226

4d19118a-a073-4651-a6a0-62a900c386bd
00:56:06.215 --> 00:56:07.635
X goes to the R.

NOTE Confidence: 0.844797

808147a6-17ac-4322-8ae0-cdcbd93d9b48
00:56:10.240 --> 00:56:15.179
R becomes zero, an S
becomes one, so this is the.

NOTE Confidence: 0.844797

81225f68-b6de-4bf0-b480-05a3bc4c4c53
00:56:15.179 --> 00:56:17.424
This is the set action.

NOTE Confidence: 0.82845473

5bf6d08d-1294-446c-98cf-ddd79b0ee055
00:56:18.730 --> 00:56:25.926
So if X is zero, which changes
the state to one set action, so

NOTE Confidence: 0.82845473

fe1911d8-aac4-4f91-84a9-66c0d5b741b0
00:56:25.926 --> 00:56:31.580
X is 0, R beocmes 0, S 1, which makes
it to this set state.

NOTE Confidence: 0.87019074

a1def38e-19a7-4711-8d6f-0bdfecd6a197
00:56:33.530 --> 00:56:36.128
However, if you change X to 1.

NOTE Confidence: 0.8408206

408f34a5-38f1-48a4-96cc-a94fb0bce08a
00:56:39.480 --> 00:56:44.208
R becomes one and S becomes
zero. This is the reset action.

NOTE Confidence: 0.8408206

6d9c806c-d138-4a5c-aed8-1461bf6e197a
00:56:44.208 --> 00:56:48.542
So what the reset action would
bring the state of the.

NOTE Confidence: 0.805431

d2910ef4-6f09-41d3-988d-0e13e8f112ad
00:56:50.010 --> 00:56:52.149
R&S latch to 0.

NOTE Confidence: 0.729112

1466d1c9-9866-4592-8f18-04b42138a037
00:56:52.880 --> 00:56:54.060
So reset this state.

NOTE Confidence: 0.89818877

b92f6cff-096c-4864-8b6b-092c404c3147
00:56:55.780 --> 00:57:01.548
So based on the value of X, we
can set and reset and never.

NOTE Confidence: 0.56990856

0c7a0256-1b0e-4eb1-990c-04c66c546dac
00:57:02.210 --> 00:57:05.000
R&S becomes equal to
each other.

NOTE Confidence: 0.7787377

6cc83dd1-0d9f-4f9b-99b5-ae4532bafe36
00:57:07.050 --> 00:57:11.241
So we kind of avoid the
forbidden value of the R&S,

NOTE Confidence: 0.7787377

e36cdcdc-8537-4735-9418-4c6ecbad5dd3
00:57:11.241 --> 00:57:13.146
which was both becomes one.

NOTE Confidence: 0.8137667

6f63c73b-45a8-447d-864c-51c2304c15cc
00:57:14.360 --> 00:57:18.897
This design has it. I mean, kind
of acting or behaving kind of

NOTE Confidence: 0.8137667

51e78114-fd54-4126-a49e-9a106c0cf546
00:57:18.897 --> 00:57:24.132
complement of the X. So if X is
0, this state becomes one. If X

NOTE Confidence: 0.8137667

61e83ad0-eeb5-47cc-86c2-271fed4fc55e
00:57:24.132 --> 00:57:25.877
is 1, state become zero.

NOTE Confidence: 0.7333006

b9f4bdb8-9180-4fa6-a314-ab3731bb727e
00:57:26.640 --> 00:57:31.428
So if we do the reverse, I mean
if we attach X the S

NOTE Confidence: 0.79850125

b00cc2f7-19b5-408b-bcab-0aa8fad0a0b5
00:57:32.370 --> 00:57:36.990
And then a not of X to R the
reverse behavior is gonna happen.

NOTE Confidence: 0.84164727

12215324-3a85-4566-9fd5-c9bf245f82c0
00:57:37.550 --> 00:57:40.540
So if X becomes 0.

NOTE Confidence: 0.8159375

c3336d6e-8104-46e3-b606-2967b93b739a
00:57:41.890 --> 00:57:46.840
x goes to the S becomes zero 
Zero and not goes to the R, R

NOTE Confidence: 0.8159375

1557cb7b-3c63-462a-a68d-981400461548
00:57:46.840 --> 00:57:51.130
becomes one. So if X is zero it
brings the state to 0.

NOTE Confidence: 0.8038227

9b845ba4-7505-4adb-b604-6b8298ef5259
00:57:52.600 --> 00:57:58.555
If X is 1, it brings the state
to the set action and makes it

NOTE Confidence: 0.8038227

02341ca3-4985-4442-b177-cec87700d1df
00:57:58.555 --> 00:57:59.746
set so set state.

NOTE Confidence: 0.809675

970e2a78-11fe-4b8d-9e9d-3831e8a44462
00:58:00.970 --> 00:58:05.506
So. Based on these two different
designs, I mean attaching.

NOTE Confidence: 0.7693277

ed282507-e3a7-4a1c-95cb-677a874d81b4
00:58:06.990 --> 00:58:12.736
X to R This design attaching X
to R and not of x to S this

NOTE Confidence: 0.7693277

6ebbaf6a-f5c7-45df-9e37-eeeb3abde82f
00:58:12.736 --> 00:58:14.062
is 1 design.

NOTE Confidence: 0.78414464

878f5049-0969-43f5-9869-4d8df8ef6875
00:58:15.080 --> 00:58:20.975
Another design is this attaching
X to S and the not of X to R.

NOTE Confidence: 0.84820914

b18f5cfe-2649-4ca4-a942-b268b77e9d82
00:58:22.590 --> 00:58:27.231
I prefer the second one, and the
reason is because in the second

NOTE Confidence: 0.84820914

b522e97a-5774-4d18-aac3-53527c9c60ed
00:58:27.231 --> 00:58:32.586
one, if X is zero, it makes the
inside zero. If X is 1, the

NOTE Confidence: 0.84820914

bb8a2af0-e65f-49aa-b00e-4e8b8de19307
00:58:32.586 --> 00:58:37.227
states becomes one, so it's kind
of I mean in align with each

NOTE Confidence: 0.84820914

bfff9f3e-4405-4966-a345-8cd7c3601df2
00:58:37.227 --> 00:58:40.797
other. So the second design
is gonna be selected and it's

NOTE Confidence: 0.84820914

722fdbac-59e6-491d-964f-cb52c3a004a5
00:58:40.797 --> 00:58:41.868
called D latch.

NOTE Confidence: 0.81569415

e5c23586-8fe1-4636-90d8-b0557df9b8cd
00:58:42.810 --> 00:58:45.450
So I renamed the X to D.

NOTE Confidence: 0.82370263

93370508-cda1-4184-8a7f-ca5933bb854b
00:58:46.670 --> 00:58:52.018
And whenever D is 0, D
attached to the S and the not of

NOTE Confidence: 0.82370263

96200cbd-e79b-4734-99db-a5b0d209215c
00:58:52.018 --> 00:58:55.838
D attached to the OR so
whenever D becomes 0.

NOTE Confidence: 0.826485

9abee963-ab80-4625-adee-e21def20d309
00:58:56.450 --> 00:59:01.040
It makes the inside the
sequential logic, the SR latch

NOTE Confidence: 0.826485

481c504d-38c9-4cda-89b6-ffdea20b1cde
00:59:01.040 --> 00:59:03.335
0. If D becomes one.

NOTE Confidence: 0.7575148

9b4bed9b-a426-47f5-9eff-b44789e7abd9
00:59:03.900 --> 00:59:07.446
It becoms it makes the
inside of the SR one.

NOTE Confidence: 0.85266083

d1052e95-7abe-4e24-84df-1ffa053c8198
00:59:09.080 --> 00:59:10.808
As long as E is 1.

NOTE Confidence: 0.86552864

75ce51b8-c33c-4bac-8909-77c1ab891dcd
00:59:12.400 --> 00:59:17.995
So if he is 0 to S or internal
SR latches closed so it keeps

NOTE Confidence: 0.86552864

9116a776-89f3-4196-bc2f-a46232b640cc
00:59:17.995 --> 00:59:20.233
this state if it becomes one.

NOTE Confidence: 0.81290597

f2d86a67-f3a6-4170-aa33-5858b7ed4d1a
00:59:21.120 --> 00:59:26.760
D0 makes it 0 D1 makes it 1, so
this D latch is the

NOTE Confidence: 0.81290597

1a7890c3-1f34-4c20-ac8a-1e8b606b580c
00:59:26.760 --> 00:59:28.640
same exactly as this.

NOTE Confidence: 0.8470257

c5f8ebb0-b11a-4c4f-bca2-ccc95a8342de
00:59:29.970 --> 00:59:34.068
So X. We change
to D and then.

NOTE Confidence: 0.7696895

5de414aa-5362-434a-947f-8d2c618d895d
00:59:35.120 --> 00:59:37.576
attach to S the not
attached to R.

NOTE Confidence: 0.74574417

7380e996-817e-4b7f-90bc-fc5eb3b888d5
00:59:40.030 --> 00:59:44.608
So D latch is SR latch when
the R&S as a complement of

NOTE Confidence: 0.74574417

2880c6ce-885a-4c38-90da-8b8e8e4f621d
00:59:44.608 --> 00:59:48.205
each other and the input is
attached to the S input.

NOTE Confidence: 0.85897547

a8527880-9385-4593-a4aa-8a55a0ff73a6
00:59:49.900 --> 00:59:54.112
So usually we do not show the
enable column anymore in the

NOTE Confidence: 0.85897547

fdcbc0cd-297f-4a17-8c5f-ea8126196f13
00:59:54.112 --> 00:59:59.026
truth table because we know that
when E is zero it means that the

NOTE Confidence: 0.85897547

fef5027d-1ab8-43f1-ba17-3ece6cd0454d
00:59:59.026 --> 01:00:00.079
latch is closed.

NOTE Confidence: 0.82979465

3ccf1779-a307-438f-a0a0-db062b727798
01:00:00.630 --> 01:00:06.398
E is 1 the lattice open, so it
depends on the value of input.

NOTE Confidence: 0.82979465

1567d9e2-2bd5-482a-8041-bbc6d6f91152
01:00:06.398 --> 01:00:12.166
So we usually do not show any
column for the E enable input. So

NOTE Confidence: 0.82979465

806e37e9-6506-4fd5-a41d-48915f5491df
01:00:12.166 --> 01:00:18.346
this is the D latch D0 makes it 0,D1
makes one. So in the D latch you

NOTE Confidence: 0.82979465

8d37a81b-6e30-48db-a758-914a71008fb6
01:00:18.346 --> 01:00:23.290
can see that we avoid the
forbidden Action 11 for the

NOTE Confidence: 0.82979465

c9316e7f-1fe5-4a58-985a-40adb09345ba
01:00:23.290 --> 01:00:28.646
SR but also we lost the store
state which means that when the

NOTE Confidence: 0.82979465

fc25af5e-8ac4-4a10-9b39-57916f1ba672
01:00:28.646 --> 01:00:30.294
R&S become zero.

NOTE Confidence: 0.8392742

83c8f3fd-6783-47b3-b5ee-3ff20c8673ba
01:00:31.240 --> 01:00:36.219
So this is a tradeoff. We lost
the store action, but also we

NOTE Confidence: 0.8392742

fb64f5c0-8c0c-4a17-b40d-b4705f22f8b9
01:00:36.219 --> 01:00:37.751
avoid the forbidden action.

NOTE Confidence: 0.63375956

e615b93e-f499-4b11-a408-d09a5515873b
01:00:38.640 --> 01:00:39.678
In the D latch.

NOTE Confidence: 0.7764211

359a6692-8fee-4556-bd36-c7b3ea1cb0f1
01:00:40.720 --> 01:00:44.860
And again, this is the D latch
RS with enable input

NOTE Confidence: 0.7764211

4953c824-e8f3-47fe-ad73-b9bce16b9511
01:00:44.860 --> 01:00:50.380
R S this is the RS latch and
if you attach D to the to the S

NOTE Confidence: 0.7764211

92b90f2c-2a4c-450c-abbe-1d1ecf6c15c9
01:00:50.380 --> 01:00:54.520
and the not of D to the R it
becomes D latch.

NOTE Confidence: 0.8068391

7ed4da96-4e31-452e-bfad-5c08f46f0c9c
01:01:00.010 --> 01:01:04.736
And in order to show the deal as
we show it by the D as you can

NOTE Confidence: 0.8068391

bfffe69d-07fb-4101-8145-c9b91175d2f2
01:01:04.736 --> 01:01:09.184
see here, this is the Q. This is
the Q prime as the SR latch. But

NOTE Confidence: 0.8068391

c9fac6ec-6bf4-41f5-b7c8-9f293baae0f4
01:01:09.184 --> 01:01:12.242
here it shows D, means that
this is a D latch.

NOTE Confidence: 0.7995089

e52bd84a-a1c6-467e-a60e-274393b6176c
01:01:13.620 --> 01:01:18.210
So in order to do their recap,
so for the SR latch. So when we

NOTE Confidence: 0.7995089

ff3e6c74-2b7a-4989-b20f-c15e742a979c
01:01:18.210 --> 01:01:20.658
see the E means that this is the

NOTE Confidence: 0.79399496

e45550ca-1651-45b6-a948-eec61861890a
01:01:20.658 --> 01:01:27.876
latch. So for the
SR 00 store 01 reset 10

NOTE Confidence: 0.79399496

193b2575-2ada-4a95-a402-01254a59ea41
01:01:27.876 --> 01:01:30.252
set. 11 forbidden.

NOTE Confidence: 0.6441955

293b2b82-99b1-4c61-b6d9-6e31675739ec
01:01:31.040 --> 01:01:32.328
For the D latch.

NOTE Confidence: 0.60590947

4ca605b9-1200-4bc5-9edc-584e3b673ad9
01:01:33.210 --> 01:01:36.708
0 makes it reset.

NOTE Confidence: 0.6664938

6c660593-e352-4537-b0ac-7b61ec1afaff
01:01:37.390 --> 01:01:40.778
Set when D is one. It
makes it set state.

NOTE Confidence: 0.75770366

1ea0fc47-c57d-44e2-b29e-efdeabf6e105
01:01:42.620 --> 01:01:46.943
So shorter I mean a truth
table, but in order to

NOTE Confidence: 0.75770366

f96e36ea-3e03-4deb-99d4-5ede0108941c
01:01:46.943 --> 01:01:48.122
avoid the forbidden.

NOTE Confidence: 0.8104582

e2ce82b6-d4ad-4ae9-bd86-5ff75442a863
01:01:49.350 --> 01:01:54.628
Value for the R&S. But it lost
this action store action too, so

NOTE Confidence: 0.8104582

46fd26bc-b73c-4f0c-b6e1-158bb7a15890
01:01:54.628 --> 01:01:59.906
for the D latch, in order to
store, we can make the Enable

NOTE Confidence: 0.8285597

3bd005ee-5923-4ed3-b5f9-a6227265112c
01:01:59.906 --> 01:02:06.170
input 0. That's the way to
simulate the store action for

NOTE Confidence: 0.8285597

cbb23aa1-f0ea-40e2-b7f1-df10d1fe7dd5
01:02:06.170 --> 01:02:07.790
the D latch.

NOTE Confidence: 0.60599923

105c4fce-a892-461c-ac66-77addb3b16ca
01:02:09.880 --> 01:02:12.508
So let's, uh.

NOTE Confidence: 0.73416203

106a6c6d-6dd2-4e55-ad75-ab1c0384e183
01:02:14.620 --> 01:02:20.780
Create a let's redesign the SR
latch in order to.

NOTE Confidence: 0.76123893

498e8b00-7e6c-4547-a6c2-99bba53ff9d0
01:02:22.600 --> 01:02:27.397
Avoid the forbidden action. 1
1 for the RS.

NOTE Confidence: 0.9359903

f009a4c2-16ec-48ea-9c53-58436fb3f18a
01:02:28.370 --> 01:02:30.770
In another way. So.

NOTE Confidence: 0.80773526

e791c416-6ac8-492b-b0e8-9191b1c1fb8d
01:02:31.390 --> 01:02:32.658
This is the D latch.

NOTE Confidence: 0.81590617

92289662-ff4b-4e25-82f4-c7a52fc72e67
01:02:34.380 --> 01:02:36.940
Sometimes in practice of.

NOTE Confidence: 0.85909516

56ec1079-0bca-4801-a5c6-e494c03d2880
01:02:37.870 --> 01:02:42.550
Not sometimes. Actually most of
the times, as you can see, so

NOTE Confidence: 0.85909516

bc9b2c48-44fd-4f65-8226-ee102d3a5d30
01:02:42.550 --> 01:02:46.840
far the most prevalent gate in
all our design in the

NOTE Confidence: 0.85909516

92cc7181-1579-4183-b121-19899a7eb99c
01:02:46.840 --> 01:02:49.960
combinational logic or
sequential logic is the

NOTE Confidence: 0.76873

3e814f46-a41b-490d-b8e5-70474c647be7
01:02:49.960 --> 01:02:55.370
Not gate. So notting a value
is the most prevalent action or

NOTE Confidence: 0.76873

93168156-7fa2-4ce8-9d27-bdecf6c14845
01:02:55.370 --> 01:02:57.098
the most common action.

NOTE Confidence: 0.8219777

269794f0-c15e-4373-b412-7eb0b2ee6e76
01:02:57.850 --> 01:03:04.298
So the question is that is it
possible to build a SR latch?

NOTE Confidence: 0.82486266

97096b4d-5a9d-4950-87c3-12311dfd38d2
01:03:04.880 --> 01:03:10.018
That whenever we want to apply
the nots, we ask the latch to do

NOTE Confidence: 0.82486266

b56b1445-bcf4-4edb-98be-38959ac1480c
01:03:10.018 --> 01:03:12.587
the not or to do the compliment.

NOTE Confidence: 0.90607536

537da8d8-181d-4bd2-bd25-431755931706
01:03:13.370 --> 01:03:18.282
So if the value is zero, we want
to make it 1. If the value is

NOTE Confidence: 0.90607536

8ca78dff-7535-455d-83be-14fed1e7fbcf
01:03:18.282 --> 01:03:20.431
one, we want to make it 0.

NOTE Confidence: 0.86690265

3fe909eb-3695-4ca8-9184-a0bd9967bc22
01:03:21.000 --> 01:03:25.648
Normally we have to do that with
the set and reset action, so we

NOTE Confidence: 0.86690265

6b1a5c66-54d0-463f-a661-e968491bdf4c
01:03:25.648 --> 01:03:30.628
have to check the inside of the
said if it is zero we put the

NOTE Confidence: 0.86690265

f0c647f1-ac9b-4a8d-9b4c-b3ee96e5c211
01:03:30.628 --> 01:03:34.944
set action in the input, if it
is one, we put their reset

NOTE Confidence: 0.86690265

88ac059c-8e2c-4987-a1ce-f9482484680e
01:03:34.944 --> 01:03:39.260
action in the input to make a
compliment or not. Of each bit

NOTE Confidence: 0.86690265

6fcaddc2-ad4b-4517-af1e-aab8b79b1907
01:03:39.260 --> 01:03:41.584
we are stored in the SR latch.

NOTE Confidence: 0.8356108

ac542560-07f7-4e0f-a460-38886de7db02
01:03:42.680 --> 01:03:46.472
What the question is that, is
it possible to build a latch

NOTE Confidence: 0.8356108

4b2cafb9-d03d-43a9-8771-67c6189aee83
01:03:46.472 --> 01:03:49.948
that does that based on the
input? Whenever we ask the

NOTE Confidence: 0.8356108

f2eb8cd0-f5ad-41e0-a7d7-7f332f1c714f
01:03:49.948 --> 01:03:52.792
latch to do a compliment that
does the complement fully

NOTE Confidence: 0.8356108

79438412-ab57-465d-8d1f-7245d565f55c
01:03:52.792 --> 01:03:53.108
inside.

NOTE Confidence: 0.85647076

55c02308-08b2-4dfa-a27a-21311ab447ab
01:03:54.590 --> 01:03:59.234
The question is yes, the answer
is yes, and here's the design.

NOTE Confidence: 0.82585895

f7a8787a-e47e-4ec2-ba57-780054083304
01:04:00.020 --> 01:04:04.364
First of all, although we know
that in the first output of

NOTE Confidence: 0.82585895

4385ca06-0d7b-4bcf-89e3-335c58cbb678
01:04:04.364 --> 01:04:09.070
the latch we have the Q and
the second output, we have the

NOTE Confidence: 0.82585895

82fed2e4-bb21-42bc-9b3b-1bdb8a339ac9
01:04:09.070 --> 01:04:12.690
Q prime, so we always have the
compliment, but this

NOTE Confidence: 0.82585895

d1978781-c27a-4e16-9d4d-c6c9362de287
01:04:12.690 --> 01:04:15.586
compliment is the complement
of the current state.

NOTE Confidence: 0.61735725

33625d40-68e3-44a1-a7fa-d0989cf6adc6
01:04:17.150 --> 01:04:20.860
This complement is the Q
prime of the Current state

NOTE Confidence: 0.81122583

505607d4-af71-4f49-ba76-33d13e37c9e9
01:04:20.860 --> 01:04:26.360
Q'(T). However, we want to
store the Q prime of the T

NOTE Confidence: 0.81122583

0b0cf1f7-fdf9-4ae7-a6be-7262b4aa424d
01:04:26.360 --> 01:04:31.040
you want to not only generate
the Q', meaning that the not

NOTE Confidence: 0.81122583

2d9260dc-a63c-4fa7-9676-42ac6949f900
01:04:31.040 --> 01:04:35.330
have the current state, but
also we want to store it.

NOTE Confidence: 0.7838154

3362e7b3-74af-4b1c-ba8c-814aca1e24ed
01:04:37.140 --> 01:04:41.592
So we want this. You want
to make the Q ,Q at

NOTE Confidence: 0.7838154

87ecc773-88b2-4f14-914f-b92efbad2668
01:04:41.592 --> 01:04:46.044
time T to store Q' of T
at the next time interval.

NOTE Confidence: 0.932451

054b1ad0-7782-479b-96d9-cd496e62f38a
01:04:48.040 --> 01:04:49.420
This is possible.

NOTE Confidence: 0.8917693

0fc90a02-0e31-4b33-a37c-40b44472cc2f
01:04:51.300 --> 01:04:56.430
With this design, so if
you look at the lecture

NOTE Confidence: 0.8917693

dbbc42a3-3e57-458b-a336-e406373d12a1
01:04:56.430 --> 01:04:57.969
assignment last week.

NOTE Confidence: 0.9132151

01de8e49-1674-4707-b709-f73c55693ad9
01:04:58.980 --> 01:05:04.236
There is a nice property of
exclusive or and which is this.

NOTE Confidence: 0.8310008

6a22c07f-555a-4028-8dff-2f8ebab28b47
01:05:05.030 --> 01:05:09.672
A binary variable, exclusive or
with one, generates the not of

NOTE Confidence: 0.8310008

da7241bc-34e8-4658-848e-6de36267ac4b
01:05:09.672 --> 01:05:10.938
the binary variable.

NOTE Confidence: 0.8911374

8586c724-0926-45e3-bc27-5cbe013e2ce7
01:05:11.730 --> 01:05:16.180
However, if you exclusive or
with zero, it creates the.

NOTE Confidence: 0.8389803

704c648a-1a0f-4a4e-965c-3b91cf7da6c4
01:05:17.440 --> 01:05:19.064
Binary variable without any

NOTE Confidence: 0.80088013

7f4f1e06-25b9-4700-9755-3fbb2d776506
01:05:19.064 --> 01:05:25.840
change. So in order to store
the complement of a bit in SR

NOTE Confidence: 0.80088013

e763a3d5-7490-4b84-9504-5fbb0cf6234a
01:05:25.840 --> 01:05:31.300
latch or in a D latch, we can
employ the exclusive or.

NOTE Confidence: 0.82019025

5f2fbc48-0d69-4cb4-80f8-03782f4e39ab
01:05:32.170 --> 01:05:33.978
And here's the design.

NOTE Confidence: 0.78616726

8f8081d9-bf79-4509-a571-6dfcd86fc95c
01:05:35.150 --> 01:05:37.808
So basically we attach the Q.

NOTE Confidence: 0.7962432

e2221ae1-1ad7-4793-84d1-59021a036cf4
01:05:40.040 --> 01:05:47.040
From the output to the input of
the D latch with an exclusive or

NOTE Confidence: 0.85795486

1dcb4505-9e39-4460-ae2b-729f17f9412a
01:05:47.040 --> 01:05:52.741
gate. As you can see here, if
you are currently at time T and

NOTE Confidence: 0.85795486

e32c0409-0e65-430b-aa4c-f7b6d5ec141d
01:05:52.741 --> 01:05:55.030
state of the D latch is Q.

NOTE Confidence: 0.884623

67efee93-645d-4ef9-b05d-91a5ffb6d446
01:05:55.800 --> 01:06:00.981
The next time interval when they
enable becomes one. Q comes

NOTE Confidence: 0.8860605

e8913574-3133-41ae-a2d0-290daf323f61
01:06:00.981 --> 01:06:03.860
here. and Q exclusive or

NOTE Confidence: 0.6339757

1928b780-8063-473f-a79c-f0ffec65f9f6
01:06:03.860 --> 01:06:09.432
with one. Becomes Q' and
the Q' goes to the D.

NOTE Confidence: 0.7952055

1cabe884-48f8-4b38-b52c-8fee7e204cd7
01:06:10.100 --> 01:06:17.060
OK, if the Q is zero, Q'
becomes one and in the D latch, D

NOTE Confidence: 0.7952055

f5d65786-7125-46e7-97cc-a4165b862141
01:06:17.060 --> 01:06:22.280
becomes one, makes it one so
compliment if the Q is 0.

NOTE Confidence: 0.66376376

305032a1-c7c6-4468-a930-61e690c395b9
01:06:23.080 --> 01:06:27.777
Here becomes Q', which makes
it sorry if Q is 1.

NOTE Confidence: 0.7734177

8262c151-af1e-45bb-9d7a-89472a2f7548
01:06:28.390 --> 01:06:33.161
Q' becomes zero and the D
becomes zero in the D latch. If

NOTE Confidence: 0.7734177

05387817-c82f-402b-b3c5-9aa017e439fa
01:06:33.161 --> 01:06:37.198
the D becomes zero, it's reset
the internal and next 0.

NOTE Confidence: 0.774106

0062aeeb-fe3c-4d5a-b222-7668268dec7b
01:06:38.330 --> 01:06:43.140
So basically by an exclusive or
in inside in front of the D

NOTE Confidence: 0.7590574

b1319c81-db1c-4da8-bcc3-652973e1788d
01:06:43.140 --> 01:06:49.648
latch. With one we can create a
compliment state for a D latch

NOTE Confidence: 0.7590574

d1afabfe-73f3-4198-8269-b98ebe0d1299
01:06:49.648 --> 01:06:50.980
or SR latch.

NOTE Confidence: 0.83226764

3b597621-8b94-4849-8909-638c2bd9cd36
01:06:53.650 --> 01:06:58.872
However, as long as the T or one
input up exclusive or is zero,

NOTE Confidence: 0.83226764

b96776cd-8844-43e7-b6af-d88ce474a9da
01:06:58.872 --> 01:07:03.721
we could say that no change to
the internal state. It's kind of

NOTE Confidence: 0.83226764

64dc0669-1943-4238-8caa-403a5ee6b0dc
01:07:03.721 --> 01:07:08.943
storing, so by this design we
can ask the D latch either to do

NOTE Confidence: 0.83226764

641b74d9-725c-434d-b639-b88673c1d0a8
01:07:08.943 --> 01:07:12.300
the compliment or to a store
without any change.

NOTE Confidence: 0.83664864

debce84d-87f7-4694-b91a-06f89196884c
01:07:14.990 --> 01:07:20.968
So here is the truth table for
this design with a D latch. So

NOTE Confidence: 0.83664864

90f93fe8-1517-409f-a0d2-57945ffe767e
01:07:20.968 --> 01:07:22.676
if T is 0.

NOTE Confidence: 0.8248963

271ca904-3b7c-40cf-8677-ce3fe8376951
01:07:23.750 --> 01:07:28.814
The input of the D is Q, the
current state exclusive or

NOTE Confidence: 0.8248963

1d65e30b-f24b-410f-ae49-d1adc0e44eba
01:07:28.814 --> 01:07:33.034
with zero. Anything exclusive
or with 0 doesn't have any

NOTE Confidence: 0.8248963

6af12a7c-08c8-4b9e-b2e4-e0f46fc6effe
01:07:33.034 --> 01:07:34.300
impact, so Q.

NOTE Confidence: 0.8961059

d2e00e89-e7c4-42da-bc82-e6e5f68ae4df
01:07:35.320 --> 01:07:37.504
So as long as T is 0.

NOTE Confidence: 0.83327335

08f95f24-8153-4c63-86af-6f09b121fe6e
01:07:38.300 --> 01:07:44.086
D is gonna be the same state as
in the previous state.

NOTE Confidence: 0.76208925

a43e6c7c-6e9d-48cd-bd32-6e082981edd0
01:07:45.510 --> 01:07:46.320
Gonna be Q.

NOTE Confidence: 0.9281538

1c8bf5e3-9e5b-4747-9c0a-4a1bde90c11e
01:07:47.430 --> 01:07:49.760
However, if T becomes one.

NOTE Confidence: 0.72243106

15f87577-a47f-473b-aec1-7cbf3b6799be
01:07:50.950 --> 01:07:56.423
Q exclusive or with one becomes
Q Prime. So at the next time

NOTE Confidence: 0.72243106

bad8e614-b7fc-49ef-85c0-358fee154dd6
01:07:56.423 --> 01:08:01.475
interval Q' is gonna be at
the D latch  which is the

NOTE Confidence: 0.72243106

4ef1131c-39d8-4b2e-baab-05ce433508c3
01:08:01.475 --> 01:08:03.580
complement of the current state.

NOTE Confidence: 0.82206964

a1ee7d65-df54-4412-a9ba-a6a6c023b83d
01:08:08.300 --> 01:08:15.860
So in this new design we have
a store state or a store action,

NOTE Confidence: 0.82206964

33452181-2ded-4847-ab6a-7a6da5404ed4
01:08:15.860 --> 01:08:17.480
an compliment action.

NOTE Confidence: 0.7587997

a04b97dd-f18a-4f9a-b13d-fd10c186ac6b
01:08:18.470 --> 01:08:24.336
And here is the design just to
do the recap. So we start

NOTE Confidence: 0.7587997

d51c1f0a-061f-4435-b5e2-391f17aed788
01:08:24.336 --> 01:08:29.783
with the RS sequential logic. We
build an RS latch we build then

NOTE Confidence: 0.7587997

029cf8bd-73b3-493b-9a40-d408a8bf3b91
01:08:29.783 --> 01:08:35.649
the latch and by reusing the D
latch we could build a new latch

NOTE Confidence: 0.7587997

ac0bcbbe-e98f-47c7-b7bc-e09333df8834
01:08:35.649 --> 01:08:41.096
which is called T latch in order
to store or compliment the bits

NOTE Confidence: 0.7587997

eb603b84-9f1d-4deb-a14b-5e0859055866
01:08:41.096 --> 01:08:42.353
inside the latch.

NOTE Confidence: 0.78650343

bb32d420-c769-4fb6-8e45-24727cb41fb1
01:08:43.830 --> 01:08:46.970
And this is the block diagram
for the T latch.

NOTE Confidence: 0.74462664

60fa4398-fe00-4abe-be04-e79a54f32fa9
01:08:47.520 --> 01:08:52.889
So we have enabled its a latch and
also we have here this alphabet.

NOTE Confidence: 0.74462664

8875cbfc-3fae-4503-b10c-2e4d23d1320d
01:08:52.889 --> 01:08:56.193
T means that this is a T latch.

NOTE Confidence: 0.62192494

00378636-d397-45c5-a207-df5cb198592f
01:08:57.180 --> 01:08:58.920
Q and q'.

NOTE Confidence: 0.76438177

e3fb3650-3cfc-40bd-a02b-47842bc20067
01:09:00.530 --> 01:09:06.386
So for the T latch, as long as
T is 0,  we store as long

NOTE Confidence: 0.76438177

77cbef27-3fc5-4d5f-8e13-116cd984b7d9
01:09:06.386 --> 01:09:08.582
as T is one we compliment.

NOTE Confidence: 0.7335751

3b592742-651b-4133-82d3-ccc73336f1aa
01:09:09.430 --> 01:09:11.356
So again, in the T latch.

NOTE Confidence: 0.8798203

5f4a8b01-d9ad-4281-b670-107b03aae41f
01:09:12.980 --> 01:09:18.328
We tried to do we keep this
store is the action so we can

NOTE Confidence: 0.8899376

a1fcf487-444a-4c35-8af1-eb3639c7b02b
01:09:18.328 --> 01:09:23.800
store. What we cannot set or
reset the only action possible

NOTE Confidence: 0.8899376

0ebbcdb0-6942-4d33-8a10-7cb631a18906
01:09:23.800 --> 01:09:25.078
is the complement.

NOTE Confidence: 0.8329293

d0f48c77-8480-4e03-93f5-52f11737e03d
01:09:26.910 --> 01:09:31.746
So please work on these latches
and try to master these truth

NOTE Confidence: 0.8329293

5dbab76d-dcc6-4f3a-9e1d-cf23d6735819
01:09:31.746 --> 01:09:36.179
table so it's kind of. I mean,
memorizing the binary number,

NOTE Confidence: 0.8329293

0e1db25e-e64a-44f1-a23d-2568e5635309
01:09:36.179 --> 01:09:41.821
for instance for 123. So you all
up to now you all all this you

NOTE Confidence: 0.8329293

c138e531-1135-4d79-b1cc-d250cb684674
01:09:41.821 --> 01:09:46.657
must know, for instance, was the
binary #4 four, which is 0100.

NOTE Confidence: 0.8329293

84ab9959-dfcc-4abb-b6f5-09471bb3e4bd
01:09:46.657 --> 01:09:51.493
The same is here. After this
course, all of you should know

NOTE Confidence: 0.8329293

adfc17d1-b690-4738-87bc-b458ecff92b3
01:09:51.493 --> 01:09:55.926
the truth table for different
latches, RS latch. These are the

NOTE Confidence: 0.8329293

9ba55d5e-5c3f-4147-ada4-526d1a76f701
01:09:55.926 --> 01:09:59.553
action and these are the
consequences of the action.

NOTE Confidence: 0.7758808

66252bc7-d5f6-470a-b4f6-1dec89045c96
01:10:00.530 --> 01:10:05.882
for D latch these are the action
only second reset for the T

NOTE Confidence: 0.7758808

68c0b019-53f4-49b8-aaf2-f0d75add3a89
01:10:05.882 --> 01:10:07.220
latch store compliments.

NOTE Confidence: 0.7990228

87f8d192-72b6-468b-8eb8-7acb612668c3
01:10:09.600 --> 01:10:14.402
So you can see that the RS latch
has store set reset but doesn't

NOTE Confidence: 0.7990228

1583847f-c354-4cc6-bcd0-07ccbe994cbc
01:10:14.402 --> 01:10:15.774
have the complement action.

NOTE Confidence: 0.7839205

617b6d59-825c-4c6b-ad2b-1e2c00cff267
01:10:19.460 --> 01:10:24.641
So we're going to introduce 
another final latch which is

NOTE Confidence: 0.7839205

02042594-2f18-4c03-b7fe-4f563308e44a
01:10:24.641 --> 01:10:30.293
called Jack Kelvin. The idea is
that in all these three latches.

NOTE Confidence: 0.84641254

2e18b513-c615-419e-9d3f-7aadb64dade8
01:10:31.350 --> 01:10:36.700
We could set, reset and
compliment, but we don't have

NOTE Confidence: 0.78113663

5ffe3645-a639-47a3-9784-e256b55f24d7
01:10:36.700 --> 01:10:42.408
one single. Latch that can do
all these actions together.

NOTE Confidence: 0.78113663

c3132c7a-4de8-47c2-9caa-07e6f4159440
01:10:42.408 --> 01:10:47.919
The RS latch can do their
store reset set but cannot

NOTE Confidence: 0.78113663

9bb95a7e-0241-43ab-975f-86ae8cbefa3f
01:10:47.919 --> 01:10:52.929
compliment. So the ideal latch
would be reused the 11.

NOTE Confidence: 0.7663645

bafe730b-94fe-49fa-bcbf-1d8e22a87adb
01:10:54.400 --> 01:11:00.087
Action instead of just forbidden
reuse this values for doing the

NOTE Confidence: 0.7663645

eaf891f0-d17a-470c-9062-7d3913ebfb3b
01:11:00.087 --> 01:11:06.291
compliment in the T latch, so
then I would have a complete

NOTE Confidence: 0.7663645

901e2183-8129-4aed-8133-2fb160300412
01:11:06.291 --> 01:11:11.461
latch doing store reset set and
complement action. All four

NOTE Confidence: 0.7663645

dc8fa586-f786-48f5-a4ed-1ab198971b1b
01:11:11.461 --> 01:11:14.046
essential action on the latch.

NOTE Confidence: 0.66833603

e13d4e96-b108-48c8-aa92-6ea2ebc268ca
01:11:15.070 --> 01:11:19.032
And this I that is designed by

NOTE Confidence: 0.88877356

7ee92359-724d-477c-bd8f-4317dcfe8159
01:11:19.032 --> 01:11:24.400
Jack Kilby. He's a famous. I
mean, he was a famous electrical

NOTE Confidence: 0.8507465

736ef987-e2c1-415f-b75a-5c8d699faced
01:11:24.400 --> 01:11:29.402
engineer actually. This is
surprising because an electrical

NOTE Confidence: 0.8507465

bc11b667-908c-49c5-8d54-876fee4966a7
01:11:29.402 --> 01:11:32.137
engineer won Nobel Prize in

NOTE Confidence: 0.8833927

a77e5180-fe9e-45f7-ae6e-545e06649b05
01:11:32.137 --> 01:11:38.380
physics. in 2000 actually go to the
Wikipedia page and read about

NOTE Confidence: 0.8833927

c8b45847-897b-4744-aeab-9da3e2c5226c
01:11:38.380 --> 01:11:43.924
this person. He did a lot of
contribution. This is the.

NOTE Confidence: 0.7517007

83f0df88-eb98-46f4-a7f2-ba1457e77015
01:11:45.700 --> 01:11:51.454
First IC or the first latch
which is able to store 1 bit

NOTE Confidence: 0.7517007

6be1e928-05e3-450d-9919-20ed3aba63f7
01:11:51.454 --> 01:11:57.619
which is called JK Latch and in
order to see the scale. This is

NOTE Confidence: 0.7517007

cd070ee8-85f8-492d-85c9-9fe407e98013
01:11:57.619 --> 01:12:03.373
the scale. I mean if you scale
it to the hand of a person.

NOTE Confidence: 0.9180117

8f47cc10-9e4b-495a-b8ef-e0f36d2514b4
01:12:05.260 --> 01:12:08.410
So he could build a handheld.

NOTE Confidence: 0.6314467

ed1f1b33-e36f-4a27-937f-e3756a7581b0
01:12:10.040 --> 01:12:15.496
Calculator by using this latch
or JK latch.

NOTE Confidence: 0.83232343

5711847e-e7b5-42a0-a3eb-860871ce43c2
01:12:17.660 --> 01:12:23.790
That's why he is considered
as the inventor of the

NOTE Confidence: 0.83232343

d209f6c9-81cf-44a0-8cd5-dc12a404a38f
01:12:23.790 --> 01:12:25.016
handheld calculators.

NOTE Confidence: 0.8195829

7c11a976-18c7-4937-84fe-a450a4ad2e4e
01:12:27.660 --> 01:12:32.340
So if you want to see the I mean
physical, the first physical

NOTE Confidence: 0.8195829

b84035ff-1f7f-496b-aa8f-e1bcd9e8d59e
01:12:32.340 --> 01:12:34.500
appearance of latch, this is the.

NOTE Confidence: 0.8732736

5fd2452e-9bd8-4cc2-bbd8-19d2946958bf
01:12:35.320 --> 01:12:36.110
one?

NOTE Confidence: 0.56997985

ea81c0f0-b6e9-45f2-ae32-ba52245e0255
01:12:37.380 --> 01:12:39.480
So let's see what is JK latch?

NOTE Confidence: 0.8717203

13231b09-c37b-4b65-ba09-516962002f9a
01:12:41.520 --> 01:12:43.396
Let's see, you have
enough time, yeah?

NOTE Confidence: 0.7047014

333a3cfb-a7db-443f-b0ae-6f8b414e5e28
01:12:44.880 --> 01:12:47.340
So for the SR latch.

NOTE Confidence: 0.830602

00dd339b-7910-4ec6-8e6f-c23413bc53eb
01:12:48.630 --> 01:12:53.442
We have a store reset and set
action. The only possible the

NOTE Confidence: 0.830602

96419c4e-861a-4007-a854-7b07a6db85c8
01:12:53.442 --> 01:12:58.655
only forbidden state is both are
one. So the question is that can

NOTE Confidence: 0.830602

37bbd6a2-f9cc-4e93-8a84-a39f768ef514
01:12:58.655 --> 01:13:00.660
I use that forbidden action?

NOTE Confidence: 0.8490446

94b00699-7d33-480d-adc6-4725388eb738
01:13:01.340 --> 01:13:06.330
To do the compliment and make it
a permissible action.

NOTE Confidence: 0.78736776

7b8bfd37-e560-497f-a4d6-24013cb814e2
01:13:07.290 --> 01:13:11.644
So in order to do the compliment
in the D latch, we saw that we

NOTE Confidence: 0.78736776

62d0b284-773d-4929-be23-9aefde06296d
01:13:11.644 --> 01:13:13.821
can do feedback out of the latch.

NOTE Confidence: 0.68051606

3be67ae3-e468-4f04-827a-6b297087467a
01:13:14.380 --> 01:13:19.612
So from the T latch, we build
the D latch by the feedback on

NOTE Confidence: 0.68051606

4bcab963-f6c1-455a-a97e-9a45d53e3699
01:13:19.612 --> 01:13:24.844
the D latch. So is it
possible to do the same for

NOTE Confidence: 0.68051606

b49aa37e-5ce5-4e84-9039-73668f6c4435
01:13:24.844 --> 01:13:27.024
the SR latch with feedbacks?

NOTE Confidence: 0.6302849

f611f41a-9e6d-4f6b-8840-397f49d2698c
01:13:29.950 --> 01:13:36.620
We I and do something
on the R&S based on

NOTE Confidence: 0.6302849

6418c45a-b992-4d98-a7f0-52f09bfb7085
01:13:36.620 --> 01:13:37.954
the feedbacks.

NOTE Confidence: 0.77380735

01bd1f34-947c-4b86-b38f-2020f5435c40
01:13:39.270 --> 01:13:44.110
to allow normal action on
the SR latch, meaning that

NOTE Confidence: 0.77380735

3bfbdb80-30af-4276-a31c-201f2e247506
01:13:44.110 --> 01:13:48.466
store reset an set action
plus a compliment action.

NOTE Confidence: 0.7797654

f75b7137-f033-47e7-bf81-3c346e5eb112
01:13:50.260 --> 01:13:54.250
The competent action was just. I
mean if you have Q and then next

NOTE Confidence: 0.7797654

beca03be-6d6e-4d48-a309-e52963dabf62
01:13:54.250 --> 01:13:56.245
time interval make it Q prime.

NOTE Confidence: 0.886898

15733c95-f482-43bc-a213-5b2fe0ea2b89
01:13:57.490 --> 01:14:00.788
If it is zero, we wanted to make
it 1. If it is one, we want to

NOTE Confidence: 0.6272164

cd3ee25f-b441-4836-978a-3ff94e526687
01:14:00.788 --> 01:14:05.420
make it 0. We did that for the
T latch, but didn't get feedback.

NOTE Confidence: 0.8979562

4150eafa-2449-457e-bf5c-e9c233d0c63b
01:14:07.210 --> 01:14:13.039
So. The answer is yes, and the
answer actually is very simple.

NOTE Confidence: 0.7961422

aa813c0e-d8fa-493b-b1e1-240582455b2d
01:14:13.600 --> 01:14:16.348
If you attach an AND gate.

NOTE Confidence: 0.8295886

f00de1c5-3fa5-4900-80a5-7cb2f3565ced
01:14:17.220 --> 01:14:20.825
On the SR latch and AND the

NOTE Confidence: 0.90169597

18366911-a550-461b-89c4-30c7fe24eb43
01:14:20.825 --> 01:14:23.350
SR with. The.

NOTE Confidence: 0.7384686

e5130de3-c106-4cf5-a2da-1563cfe9efb7
01:14:24.320 --> 01:14:29.945
output of the SR latch. If you
AND the S with the Q prime

NOTE Confidence: 0.7384686

11a5ea8d-f32b-47a5-bc78-27e8f3186372
01:14:29.945 --> 01:14:33.695
output an if you and the R
with the Q.

NOTE Confidence: 0.5681772

b1523dd5-40a2-4a9a-bc7f-c0a8ed1dcccf
01:14:35.130 --> 01:14:36.510
Uh, output?

NOTE Confidence: 0.8499545

8499832f-423a-424a-867c-f3d313406c8a
01:14:37.700 --> 01:14:43.424
You not only preserve the store
reset and set action, but also

NOTE Confidence: 0.8499545

e90dd588-6501-4613-9a1a-0561fae0faa3
01:14:43.424 --> 01:14:49.625
you avoid the 11, the forbidden
state, and you can do the one

NOTE Confidence: 0.8499545

f7b46e9b-de7e-446f-b4f1-b4e7b36c9aca
01:14:49.625 --> 01:14:52.010
one for the compliment action.

NOTE Confidence: 0.919217

4da20881-5c99-4433-870f-05f0a69cbb4f
01:14:53.600 --> 01:14:57.716
And here is the truth table. So
let's see what's going on.

NOTE Confidence: 0.8553943

4a78f2a2-05e8-445c-85cf-7defb42106b8
01:14:58.740 --> 01:15:04.110
So the red R&S are the external
R&S, as you can see here and the

NOTE Confidence: 0.8553943

9455ea8b-f029-4bb5-bea9-769134afbd0f
01:15:04.110 --> 01:15:07.690
blue one or the internal R&S for
the SR latch.

NOTE Confidence: 0.8570119

40f8216c-6171-45e6-85c2-5e9f80927a49
01:15:09.280 --> 01:15:14.138
So again, as long as E is 0,
meaning that the SR latch is

NOTE Confidence: 0.8570119

30d86246-bc71-4855-b5bb-55bb33e492fb
01:15:14.138 --> 01:15:17.261
locked store, so we don't look
at the input.

NOTE Confidence: 0.7940119

92a3e97c-2386-4c6f-97fe-335c7f2030db
01:15:17.890 --> 01:15:21.784
So we don't include it in this
truth table. It's trivial.

NOTE Confidence: 0.7940119

c1ab607a-ed23-493f-9f26-ff602d9a36e6
01:15:21.784 --> 01:15:27.448
However, if E is 1, if E is 1,
so we accept the input from R&S.

NOTE Confidence: 0.7940119

5424565b-9806-4712-b210-412ed2b15b9d
01:15:27.448 --> 01:15:29.926
But what is the input for the

NOTE Confidence: 0.79907006

df786d09-edc2-45e1-9edf-eac2ad75865c
01:15:29.926 --> 01:15:34.794
blue R&S? if, the external
R&S  is 00.

NOTE Confidence: 0.82634515

b0ea3d95-9879-468e-9a1e-4ad69992c868
01:15:36.130 --> 01:15:39.325
In the AND gate,  we have 0 so R&S

NOTE Confidence: 0.9229244

5a67f088-582d-46b6-9d20-29bce21849ad
01:15:39.325 --> 01:15:41.410
becomes 00. So.

NOTE Confidence: 0.7917959

e1877e38-2217-4ded-8fd3-50b86ff5ef39
01:15:42.040 --> 01:15:45.678
Store. The same action store.

NOTE Confidence: 0.8614363

0938d999-4d20-46b0-aa79-065f4f4fef76
01:15:47.140 --> 01:15:53.620
However, if R becomes one and S
still remains at 0, so S is 0,

NOTE Confidence: 0.8614363

a63466e4-a32c-4463-a670-1dc4435cd060
01:15:53.620 --> 01:15:56.644
so the internal S is still 0.

NOTE Confidence: 0.86171526

30ca6195-8f56-4ab0-b623-4662871d6746
01:15:57.740 --> 01:16:02.976
However, if R becomes one, so
in and gate we have to wait for

NOTE Confidence: 0.86171526

bf312264-b522-4c7a-ae94-04cc7281aa84
01:16:02.976 --> 01:16:06.716
the other input and the other
input comes from Q.

NOTE Confidence: 0.7973352

7bf7cafd-ee5e-4cef-9177-03ae73729f28
01:16:07.850 --> 01:16:09.050
At the current state.

NOTE Confidence: 0.75449175

21069492-ec21-48ef-b253-5ee231728fcc
01:16:09.600 --> 01:16:13.024
So they are becomes Q
at current state.

NOTE Confidence: 0.80904335

5bee5f04-f7c8-405d-afda-81db09f22e4a
01:16:15.340 --> 01:16:21.220
If S becomes one and R is 0 this time
R the internal R is gonna be 0

NOTE Confidence: 0.80904335

1c56924c-73b6-4028-bb31-49ea7451102b
01:16:21.220 --> 01:16:26.708
and the internal S, waits as you
can see here, if S becomes one,

NOTE Confidence: 0.80904335

97e7b34c-b357-4083-bd7e-e82c702503e4
01:16:26.708 --> 01:16:28.668
it waits for Q prime.

NOTE Confidence: 0.8277899

c5e71b37-63ee-4f8c-b23e-f44fcd69355d
01:16:29.810 --> 01:16:32.169
So the QT followed by the not.

NOTE Confidence: 0.900464

d47cbf41-58e7-4131-babf-8f6637cbb174
01:16:33.230 --> 01:16:35.220
And if both are one.

NOTE Confidence: 0.71104634

7e463861-e86c-45ed-8c6c-297caa12c2e7
01:16:36.350 --> 01:16:41.264
Both input is gonna be waited for
the Q&Q prime, so S waits for

NOTE Confidence: 0.71104634

aa91a3eb-f71f-4dde-8e9c-e8eed1b93189
01:16:41.264 --> 01:16:45.800
the Q' at current time, an
R is gonna be Q at current time.

NOTE Confidence: 0.86976737

976dcbeb-0f67-4a5f-b3d8-501fdb335bb2
01:16:46.960 --> 01:16:52.196
So let's see based on the
current value of QT. What's

NOTE Confidence: 0.86976737

483aa2fc-33c3-4ae3-bf15-2f9b40d2aca3
01:16:52.196 --> 01:16:54.576
happened with these truth table?

NOTE Confidence: 0.90059894

6acf6f95-5a3d-46d3-889e-ff64119cbb18
01:16:56.100 --> 01:16:58.170
If the current value is 1.

NOTE Confidence: 0.8750744

528e7b46-155e-4215-92f0-d49c42d2aa81
01:17:00.880 --> 01:17:04.120
External if 01 internal

NOTE Confidence: 0.73251146

a7b5cad0-da62-4e63-946c-919ce825f7a3
01:17:04.120 --> 01:17:09.468
becomes 01. The same
reset action.

NOTE Confidence: 0.80389154

29c1b4b5-05d6-4382-abf1-be1881e8c7e1
01:17:11.140 --> 01:17:13.324
If the external is the set

NOTE Confidence: 0.866858

f9a6ade4-6c9f-447a-9ece-ae42f6c5202c
01:17:13.324 --> 01:17:18.634
action. The internal becomes 00,
which is the store action.

NOTE Confidence: 0.866858

6c908c83-5656-419c-9a58-0494840b701c
01:17:18.634 --> 01:17:23.650
What's the current value is 1,
so we try to set.

NOTE Confidence: 0.8352692

4fd91e2d-e09a-4178-96e4-04d7b7a80ed0
01:17:24.750 --> 01:17:27.516
the one, but internally we store

NOTE Confidence: 0.7504044

a8fd318a-791a-4715-a08e-542d432e42c4
01:17:27.516 --> 01:17:34.279
it. So the same I mean,
output set makes it one because

NOTE Confidence: 0.7504044

7230215d-9a1e-4c3e-966b-10550dd5a7d9
01:17:34.279 --> 01:17:36.315
it's stored in one.

NOTE Confidence: 0.8394644

229bfe9f-4d99-4553-a2a3-176a572f40e7
01:17:37.230 --> 01:17:42.820
If it is both one for the
External R&S. It makes it 01

NOTE Confidence: 0.8394644

5fe71258-324b-473f-afa2-7309d6c8f301
01:17:42.820 --> 01:17:46.690
for the internal when the
internal state is 1.

NOTE Confidence: 0.83270663

bf513daa-b647-4672-a6ec-205a2d5e4147
01:17:47.740 --> 01:17:53.464
When the internal state is 1 and
the external R&S 11, the

NOTE Confidence: 0.83270663

97d8ba5f-b581-4b87-975c-c7b924ac4873
01:17:53.464 --> 01:17:58.711
internal R&S depends 00 01 
which is the reset. The reset

NOTE Confidence: 0.83270663

c72a2d9b-fb65-4ea3-bd64-af7a14a178ce
01:17:58.711 --> 01:18:03.481
makes the 0 = 1, so it's a complement
of the Qt.

NOTE Confidence: 0.8908003

663b5c49-823f-4f72-bbaf-d844fcafb989
01:18:06.350 --> 01:18:07.820
So 00.

NOTE Confidence: 0.7797686

24eb115d-a02b-4e47-8c15-67dd8fc68783
01:18:08.850 --> 01:18:11.658
Keep this state Store
1. The current state

NOTE Confidence: 0.7797686

9761d240-55a4-4c61-878a-d0ca295ae6e0
01:18:11.658 --> 01:18:13.764
is 1, so you store it.

NOTE Confidence: 0.777662

7d7cf96b-aa44-4c96-b6a9-2c738d50c8de
01:18:14.860 --> 01:18:18.738
External reset makes the
internal reset.

NOTE Confidence: 0.8308444

6b2d88f2-a00f-4daf-bed7-c0f10dafd8f5
01:18:19.980 --> 01:18:23.640
External set makes
this store internal.

NOTE Confidence: 0.84238666

41d76822-71c7-44d9-b2f7-b0ad5fd67a68
01:18:24.920 --> 01:18:32.372
So we store one so set
is 1 and external 11 makes

NOTE Confidence: 0.84238666

531d0f4f-f019-4386-95d7-4dc41e27f9c6
01:18:32.372 --> 01:18:34.235
it 0 compliments.

NOTE Confidence: 0.81054527

258ec5a5-d3d6-4c9a-b324-10e028d054f8
01:18:35.770 --> 01:18:39.650
The same is with when
the time is. When they

NOTE Confidence: 0.81054527

d1a06eed-9637-45bb-b915-d48082092f79
01:18:39.650 --> 01:18:41.202
current state is 0.

NOTE Confidence: 0.8713191

4b554ffa-b0b8-4a0a-b785-98637e623143
01:18:43.550 --> 01:18:49.460
So if the current state is 0,
the QT is 0 here, so the reset.

NOTE Confidence: 0.78881705

e7295adb-e4d5-4c30-b07d-71b81e7290cb
01:18:50.060 --> 01:18:56.416
Store 0, which is the 0 value
for the next time interval the set.

NOTE Confidence: 0.78881705

10734010-1dce-4f1e-8f08-50e02248717f
01:18:56.416 --> 01:19:02.772
Action makes it set makes the 0 1
and the 11 makes it set mean

NOTE Confidence: 0.78881705

fa32af48-8de7-48b4-b06c-69a0ea338bde
01:19:02.772 --> 01:19:05.042
that makes 0 to one.

NOTE Confidence: 0.9375806

f6707da7-b86d-4f8f-98ba-51dc29e7e29f
01:19:08.230 --> 01:19:09.070
So.

NOTE Confidence: 0.65365946

21eb780f-276d-42b5-994e-d4b8804d46e9
01:19:10.230 --> 01:19:14.340
You can see that the SR latch
becomes the JK.

NOTE Confidence: 0.6833401

fdad1421-fc90-4df5-a7af-7387da1b453e
01:19:15.130 --> 01:19:20.506
J attach to S, K attached to
R. The JK is the name after

NOTE Confidence: 0.6833401

3a48307b-5b49-458a-aa9e-8ef960e40604
01:19:20.506 --> 01:19:22.042
the Jack Kilby.

NOTE Confidence: 0.7933318

7cdad390-4d24-410a-9347-07e2a2cf267f
01:19:23.440 --> 01:19:31.252
So if J K 00 acts
like as the R&S 00 store.

NOTE Confidence: 0.8122469

d3a1f95d-bae8-40c5-aef8-e713e928d3c1
01:19:32.140 --> 01:19:35.871
If J is zero and R,K is

NOTE Confidence: 0.72128195

eafe10c0-0c85-4931-ad04-8b8600dbf17d
01:19:35.871 --> 01:19:43.414
1. The reset if S is
1 or J is 1 and K is zero the

NOTE Confidence: 0.8893316

91166559-7e0f-4a67-8ec7-7b8ba3dd2f0f
01:19:43.414 --> 01:19:46.060
set. And if both or one.

NOTE Confidence: 0.7568316

7e7b77e9-dbee-4fce-b9d5-0e2ada916ee5
01:19:47.000 --> 01:19:48.950
It complements the
current state.

NOTE Confidence: 0.6476955

f5a4d6bf-6775-4bec-ad2d-9a4834ca3168
01:19:51.000 --> 01:19:58.440
So this is the complete
latch store reset set and

NOTE Confidence: 0.6476955

c2a5b9d0-a0a0-4b57-9a36-a7ba94d753d7
01:19:58.440 --> 01:19:59.184
compliment.

NOTE Confidence: 0.9079094

c7a03e2b-f75e-4884-9c77-6b3adb49e58c
01:20:02.660 --> 01:20:07.043
So I guess we are running
out of time.

NOTE Confidence: 0.8293932

8faf9287-5a8d-4cab-9e32-8379c666e745
01:20:09.500 --> 01:20:14.570
We can continue. I mean next. I
mean the Wednesday for the next

NOTE Confidence: 0.8293932

377eb68c-af05-43e6-bebc-ff8605421bba
01:20:14.570 --> 01:20:18.080
slide, but please work on these
four essential latches.

NOTE Confidence: 0.6145001

ee8fd06e-1b03-4b24-a96d-4f6de73c9768
01:20:18.710 --> 01:20:26.075
At RS latch, D latch, T latch
and JK latch. the JK is

NOTE Confidence: 0.6145001

5b84df8e-b832-4f00-9bf1-b6500087233f
01:20:26.075 --> 01:20:29.021
the most complete latch we have.

NOTE Confidence: 0.84922814

a204e2d3-2798-4d28-80d5-4695b55916ce
01:20:30.620 --> 01:20:37.112
So thank you so much everyone
and will continue working on the

NOTE Confidence: 0.84922814

e67a0a6e-8ce1-43ad-92a7-c65b1adb4e0c
01:20:37.112 --> 01:20:43.063
latches on Wednesday. So but for
now we have four different

NOTE Confidence: 0.84922814

8740daf6-b18d-4177-9a24-67189070e1a5
01:20:43.063 --> 01:20:49.014
latches and we are not going to
introduce more latches. So

NOTE Confidence: 0.84922814

4ad1a086-731e-4b82-a5aa-8ee13a5152e4
01:20:49.014 --> 01:20:54.965
because we have the complete
latch JK latch and if

NOTE Confidence: 0.90979886

adbe53e6-b5f5-443a-b8a9-c6090969fb6d
01:20:55.620 --> 01:20:57.960
There is any question,
I'm happy to take that.

NOTE Confidence: 0.9115689

0d73ac8f-372b-4526-bc93-8b5877d97e80
01:21:07.110 --> 01:21:08.030
Any questions?

NOTE Confidence: 0.87891096

ef460bfc-2ebb-4b64-bd6f-9574aba03d9e
01:21:15.870 --> 01:21:16.479
Yeah, go ahead.

