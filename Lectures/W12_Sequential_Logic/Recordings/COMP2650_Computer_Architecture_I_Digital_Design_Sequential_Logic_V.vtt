WEBVTT

NOTE duration:"01:19:20.4500000"

NOTE language:en-us

NOTE Confidence: 0.814397

ab9423b8-c88f-4185-bb36-555def724220
00:00:36.030 --> 00:00:40.810
So although there are few
students, let's start, and while

NOTE Confidence: 0.814397

d93fd078-5625-43d1-bd3f-b0bddad08d2f
00:00:40.810 --> 00:00:45.590
we do a recap on previous
lecture, the other students

NOTE Confidence: 0.814397

381c54e8-e0b6-411c-9803-6a5ef0084bdb
00:00:45.590 --> 00:00:47.980
actually can join this session.

NOTE Confidence: 0.9237119

4d97f151-77c9-407b-97a0-2479e854e8db
00:00:49.570 --> 00:00:53.830
So I already started the
recording.

NOTE Confidence: 0.86342704

12d68e14-98b9-40a2-a665-48c0c03c526e
00:00:55.430 --> 00:01:00.158
Before I start, I mean I I
decided to change the first

NOTE Confidence: 0.86342704

aca4bd41-7477-4a0b-be71-97f9f0c5257c
00:01:00.158 --> 00:01:01.734
slide to another movie.

NOTE Confidence: 0.937128

0c4e0e62-5e58-4798-b39c-d14b5c9b8039
00:01:03.820 --> 00:01:05.160
Have you seen this movie?

NOTE Confidence: 0.898009

c3d34812-359a-4c69-90ed-691b6fd8a811
00:01:05.750 --> 00:01:06.470
Any of you?

NOTE Confidence: 0.27577403

7b239371-66d1-4ba6-ad63-9fe1a0a3775a
00:01:13.890 --> 00:01:14.660
Oh

NOTE Confidence: 0.8866669

0513f668-a89a-471b-a48d-2720ab11bd8a
00:01:15.790 --> 00:01:21.620
so this movie actually is it?
I mean from Germany.

NOTE Confidence: 0.88394487

8a372516-fe19-4b7f-8cbe-289a611e5a36
00:01:22.200 --> 00:01:26.840
It's a very famous movie
regarding the form.

NOTE Confidence: 0.8038711

fbf0bb61-3f8d-4414-b666-c07b770c0c39
00:01:27.440 --> 00:01:31.265
It's called run Lola Run and
this is the.

NOTE Confidence: 0.7844151

65427d2d-f23d-4f28-9bb9-6248aede5175
00:01:32.230 --> 00:01:36.442
I mean Dutch in those
language or in German

NOTE Confidence: 0.7844151

60562036-0199-4082-90c4-ff9ac6b279f9
00:01:36.442 --> 00:01:41.122
language, run Lola Run and
basically the one of the

NOTE Confidence: 0.7844151

28f1f926-b1de-4a7a-9cd5-4badead95fed
00:01:41.122 --> 00:01:45.334
main theme of this movie is
how can you?

NOTE Confidence: 0.6418948

23629376-c3b4-46ed-ab28-574094d68a34
00:01:46.880 --> 00:01:50.336
How a different initial

NOTE Confidence: 0.86527777

e22db51e-fa2d-42dc-af85-5954865c7923
00:01:50.336 --> 00:01:56.480
state? Of your life, it can
have some consequences that end

NOTE Confidence: 0.86527777

44bb592e-2f81-411a-8f58-6de24574475f
00:01:56.480 --> 00:01:58.805
up with a totally different

NOTE Confidence: 0.874723

ed1641d7-e655-40f8-b851-297346453fb1
00:01:58.805 --> 00:02:05.810
destiny. So I mean, there
are 3 time that this girl

NOTE Confidence: 0.874723

05f8b865-d230-427d-8cf9-71b9dd413250
00:02:05.810 --> 00:02:12.289
come back to the initial state
and then start doing some

NOTE Confidence: 0.874723

d78df583-9247-455a-9cd1-902d043f8208
00:02:12.289 --> 00:02:17.590
actions and then finally end
with some destiny so.

NOTE Confidence: 0.8736359

0c2c4172-d09b-4b83-9afa-271cf1588542
00:02:18.190 --> 00:02:23.434
I put this movie here because
today we are going to study

NOTE Confidence: 0.8736359

581ef0a8-daf9-43d7-8d95-0ce4cb2e5009
00:02:23.434 --> 00:02:28.241
sequential logic that depends on
the value of the inputs and

NOTE Confidence: 0.8736359

7d8fd701-9c21-4f2e-b4f7-277cee385ced
00:02:28.241 --> 00:02:29.552
based on the.

NOTE Confidence: 0.9100643

3c85a06d-5bb5-450c-af3e-713906330de1
00:05:53.320 --> 00:05:56.308
Sorry about that, I hope
that's the last one.

NOTE Confidence: 0.84424955

c527001b-df0b-4123-b837-9b69693c8204
00:05:57.700 --> 00:06:01.946
So yes, I mean today we're gonna
continue as sequential logic

NOTE Confidence: 0.84424955

4d1024c1-0f82-4a0d-9d61-aa13d151e51c
00:06:01.946 --> 00:06:06.192
based on adding some inputs to
the sequential logic to control

NOTE Confidence: 0.84424955

e4106a1e-ce95-415e-b11f-da87a2e39c9c
00:06:06.192 --> 00:06:10.438
the behavior of the sequential
circuit. And also we're going to

NOTE Confidence: 0.84424955

49d2662b-b3df-4cc4-ae4c-4019d525b530
00:06:10.438 --> 00:06:12.754
extract some output out of the.

NOTE Confidence: 0.8231341

d3af825e-f9ab-4851-b549-54e6cd1a0135
00:06:14.210 --> 00:06:18.962
Sequential circuit, so very
similar to one of the main theme

NOTE Confidence: 0.8231341

a0d89ca7-a932-4886-b1d0-c4477a1bb5d0
00:06:18.962 --> 00:06:23.714
of this movie. I highly suggest
to see movie this movie

NOTE Confidence: 0.8231341

b9b86dcc-81f0-46c7-bff1-8c450baa70a4
00:06:23.714 --> 00:06:25.010
its a great movie so.

NOTE Confidence: 0.82215613

270f37fa-e33c-442f-a80d-5132ec7fc2fd
00:06:25.840 --> 00:06:30.625
Let's continue so so far we
discussed a sequential logic can

NOTE Confidence: 0.82215613

67338c8d-4554-415c-af1c-7f05bb981cdd
00:06:30.625 --> 00:06:35.410
be categorized into three main
groups based on the design. The

NOTE Confidence: 0.82215613

39b7ab6c-7604-4e7c-b65e-bf460c7985a0
00:06:35.410 --> 00:06:40.195
circuit design. First of all
those that only have flip flops.

NOTE Confidence: 0.86611545

cec6cecd-1a8e-4633-b9ee-711405dee0de
00:06:41.330 --> 00:06:46.986
We discussed it last lecture and
then we said that now we want to

NOTE Confidence: 0.86611545

c3c738ad-0f7e-4c15-8971-71b1984e5914
00:06:46.986 --> 00:06:51.430
add some input to the whole
circuit instead of just having

NOTE Confidence: 0.86611545

62d51f46-1113-4ebd-ab95-8a9d388b99e8
00:06:51.430 --> 00:06:53.450
inputs to the flip flops.

NOTE Confidence: 0.62347114

fc0bb598-7afc-4501-ad5b-e8d6c8e026f6
00:06:54.020 --> 00:06:55.469
And then, uh.

NOTE Confidence: 0.83183503

ed35b0df-7411-4b7f-a73d-7855eea6dc6e
00:06:57.160 --> 00:07:01.901
We're gonna add output and
input to the circuit. So today

NOTE Confidence: 0.83183503

106697a6-8aa5-417a-a0db-889c002a79fb
00:07:01.901 --> 00:07:06.642
I'm going to explain this
because this if we know how

NOTE Confidence: 0.83183503

c520351d-214c-4c83-b308-f4e33e88b3fd
00:07:06.642 --> 00:07:11.814
this circuit works we covered
this one as well. So I'm going

NOTE Confidence: 0.83183503

1e56a087-d00f-4ef6-a45a-a8f05251c8d9
00:07:11.814 --> 00:07:16.124
to continue with this one.
Having the circuit that has

NOTE Confidence: 0.83183503

d8dde3b0-d198-4163-9402-d25ff0c1d620
00:07:16.124 --> 00:07:19.572
flip flops having inputs and
also having outputs.

NOTE Confidence: 0.8516548

22ffac59-4a58-4001-b5ba-df466d69eb75
00:07:20.930 --> 00:07:25.584
So in this category, like the I
mean when we have only flip

NOTE Confidence: 0.8516548

17306ec1-7e2b-4a7d-aa51-0ac37f175c00
00:07:25.584 --> 00:07:29.880
flops, we have two main tasks.
First of all the analysis and

NOTE Confidence: 0.8516548

81474896-ea85-41c5-b50f-15305fbaa8c3
00:07:29.880 --> 00:07:34.176
then design. So in the analysis
you're given the circuit and you

NOTE Confidence: 0.8516548

e4ef6cc9-6fe7-4e3f-98a0-d798d47e9fa3
00:07:34.176 --> 00:07:38.830
have to see how many flip flops
you have, how many input you

NOTE Confidence: 0.8516548

0d6beab0-4cd0-492c-a0ff-2cb7a7675feb
00:07:38.830 --> 00:07:42.768
have, how many output you have.
You have to analyze the

NOTE Confidence: 0.8516548

881be8e9-6dbb-4846-b6e4-63ae85cbd49d
00:07:42.768 --> 00:07:46.706
behavior. However, in the design
you are given a problem or

NOTE Confidence: 0.8516548

48d0dcd1-3762-4f66-9d59-9c9cd26d9adf
00:07:46.706 --> 00:07:50.286
behavior and you have to
implement or design A circuit

NOTE Confidence: 0.8555118

76480c2a-25bc-46b1-aac1-128dd238f7bf
00:07:50.286 --> 00:07:55.068
that acts. Or behave like the
given behavior in the problem.

NOTE Confidence: 0.8555118

b3a19d76-0d54-430d-acf5-19c7ae0b748e
00:07:55.068 --> 00:07:59.930
So between these two the
analysis task is simpler. So we

NOTE Confidence: 0.8555118

4fbde8ad-5bfe-492d-a92b-d4b822866c1b
00:07:59.930 --> 00:08:01.698
saw with the analysis.

NOTE Confidence: 0.87962866

d6283d9d-96e7-48c0-815c-2a831132f115
00:08:03.240 --> 00:08:04.790
When we are dealing a.

NOTE Confidence: 0.79400545

164578e3-7dcc-4e30-8fb1-90abf80694e8
00:08:05.380 --> 00:08:10.312
With the circuit that has a flip
flops, an inputs plus outputs

NOTE Confidence: 0.79400545

a866a27b-79d9-45bc-990b-b3d5a23e1070
00:08:10.312 --> 00:08:14.833
there are two different models based
on the type of outputs will

NOTE Confidence: 0.79400545

5af24db9-7049-42c2-bb75-c59e05688f7a
00:08:14.833 --> 00:08:20.176
explain this in the few slide,
but based on the output there are two

NOTE Confidence: 0.79400545

a4e88bb7-5668-4731-9d78-8bdb90c670be
00:08:20.176 --> 00:08:24.286
models. Either the outputs are
based on the Mealy model.

NOTE Confidence: 0.83909786

d99971a6-bed4-4b4c-956b-c1487e71a6dd
00:08:24.840 --> 00:08:26.898
Or based on the moore model.

NOTE Confidence: 0.8221825

f29a7fc8-d395-442d-93ed-f4a0f69b3548
00:08:27.770 --> 00:08:31.634
So basically Mealy George.
Mentally he wasn't mathematician

NOTE Confidence: 0.8221825

46c1e404-3e78-4115-8017-6f1c7e37a05e
00:08:31.634 --> 00:08:36.947
and computer scientist. And one
interesting fact is that he was

NOTE Confidence: 0.8221825

379c0bf4-d4d1-42bb-aa8d-417018e3fd8d
00:08:36.947 --> 00:08:42.260
the pioneer for the modular
programming. So in the lab we

NOTE Confidence: 0.8221825

e9761cfa-07c5-4a14-8adf-af8635f463da
00:08:42.260 --> 00:08:48.539
suggest you to write modular. So
in the function so he is the

NOTE Confidence: 0.8221825

850eaa53-46d1-4b8c-9447-e99e92cd4a5c
00:08:48.539 --> 00:08:50.471
pioneer of this pattern.

NOTE Confidence: 0.8855389

d72a7b35-d177-4dbc-b1f4-51fa53a890a1
00:08:51.970 --> 00:08:57.790
Basically what he says is that
he says the output of a

NOTE Confidence: 0.8855389

84e3881d-7553-4c58-9de9-d967cbd1f809
00:08:57.790 --> 00:09:02.640
sequential circuit is a function
of the current state, meaning

NOTE Confidence: 0.8855389

daa7c1c1-d62f-4b2d-91fc-013454ab9ef5
00:09:02.640 --> 00:09:08.460
that the flip flops in the
circuit and the value of the

NOTE Confidence: 0.8672039

a207ef87-11b7-4696-96d8-7a8ff76ee614
00:09:08.460 --> 00:09:14.638
inputs. So we'll see this in
few slides, but moore. He was

NOTE Confidence: 0.8672039

bb89095f-adc5-4486-af86-6209e17e109a
00:09:14.638 --> 00:09:18.760
also a mathematician and
computer scientist. He said that

NOTE Confidence: 0.8672039

dd8e8ce6-b7e9-4808-974d-4988451e20a3
00:09:18.760 --> 00:09:24.256
in order to come up with this
simplest and also better design,

NOTE Confidence: 0.8672039

2dda1b1d-a81c-4dbe-850a-ae0c0b64bf7d
00:09:24.256 --> 00:09:29.752
it's better to make an output
only a function of the current

NOTE Confidence: 0.8672039

4991b424-6e2b-4858-a49a-8d96f6d1f37f
00:09:29.752 --> 00:09:32.042
state or the flip flops.

NOTE Confidence: 0.83661026

bf1c8d4e-25c4-452f-b400-75a482664c5a
00:09:32.620 --> 00:09:37.306
So we'll see this in our example
today. What's the difference?

NOTE Confidence: 0.83661026

2f81c931-9640-4c6b-ac45-594974539cba
00:09:37.306 --> 00:09:42.844
And you'll see that the moore is
right. Actually, if the output is

NOTE Confidence: 0.83661026

eb12be60-161d-4dc9-bd8b-21980e4c73ea
00:09:42.844 --> 00:09:47.956
only a function of the memory
units or flip flops, it's a

NOTE Confidence: 0.83661026

7193e36d-9009-424a-9ef4-3ffacf726844
00:09:47.956 --> 00:09:50.086
better design. However, if the

NOTE Confidence: 0.8439091

bb9c9be8-c274-419d-8eb9-a600a86706ef
00:09:50.086 --> 00:09:53.510
output is. Considers the.

NOTE Confidence: 0.76266956

e4b63ea5-9eae-449c-b104-5b7d604a7e1e
00:09:54.160 --> 00:09:59.506
Memory units and also the
inputs. It is kind of more

NOTE Confidence: 0.84474516

5e600281-2fbf-4f17-a155-7f4881814be5
00:09:59.506 --> 00:10:04.646
complex. And introduce some. I
mean behaviors that we don't

NOTE Confidence: 0.84474516

1d78b2f0-308f-47eb-b928-ccf093600935
00:10:04.646 --> 00:10:10.190
like that. So let's continue.
Here is the difference based on

NOTE Confidence: 0.84474516

5f1478eb-cd0c-422e-a0d7-3d62d5feb049
00:10:10.190 --> 00:10:15.734
the I mean block diagram for a
circuit. So basically what

NOTE Confidence: 0.84474516

440d8b55-309d-40e0-900d-af11aad5038d
00:10:15.734 --> 00:10:21.278
Mealy says that if you have
some outputs plus some flip

NOTE Confidence: 0.84474516

9f6f2a12-1551-43b4-8d3a-4b1f87a6d19c
00:10:21.278 --> 00:10:26.822
flops here, so these are the
flip flops, memory states or

NOTE Confidence: 0.84474516

1a13d702-66ff-42b4-b885-58e10a4ffb8f
00:10:26.822 --> 00:10:29.342
memory units working with the

NOTE Confidence: 0.93014973

bfa0a727-e63b-4d41-a000-e8c66c8321af
00:10:29.342 --> 00:10:32.500
Clock. So basically it
says that.

NOTE Confidence: 0.854958

ec4a2be2-cc89-4a66-9676-2599cf9f45da
00:10:34.790 --> 00:10:39.410
The output not only can have
inputs from the memory states,

NOTE Confidence: 0.854958

202490a2-02b7-4c58-b300-0ed58d8067de
00:10:39.410 --> 00:10:44.870
but also can accept the value of
inputs. So there are two sources

NOTE Confidence: 0.854958

ccb124f2-bb94-455e-a828-0e565594de59
00:10:44.870 --> 00:10:49.490
plus some combinational circuit
or combination of. I mean logic

NOTE Confidence: 0.854958

cb19ad58-a828-4af2-bea0-747467a3a4a0
00:10:49.490 --> 00:10:54.110
to produce the value of the
output. However, moore says that

NOTE Confidence: 0.854958

4ccb82fb-08ff-417a-95b0-f85e8da9ca6c
00:10:54.110 --> 00:10:59.150
it's better to limit the output
only a function of the memory

NOTE Confidence: 0.854958

8e029b8c-1c72-45ed-8aa9-ae5ebfd9e6a1
00:10:59.150 --> 00:11:04.190
units. So you see that there is
no direct connection from the

NOTE Confidence: 0.854958

7ffc37e3-ea59-491a-bde9-963cd6762081
00:11:04.190 --> 00:11:05.870
inputs to the circuit.

NOTE Confidence: 0.8604803

1ca4582a-9276-41ec-bcfe-ff3f5c975453
00:11:06.450 --> 00:11:11.949
For the output, so this is the
main difference and will see in

NOTE Confidence: 0.8604803

c3c552bf-454d-4e93-9413-2ab8eef69870
00:11:11.949 --> 00:11:14.487
our example what does this mean?

NOTE Confidence: 0.84617895

278c438a-42e1-4f34-9384-185f9f74c2e1
00:11:16.640 --> 00:11:21.330
So basically we start our
example with the moore model,

NOTE Confidence: 0.84617895

dad9dca8-f984-458d-8046-deff87c92c0e
00:11:21.330 --> 00:11:26.489
which is a simpler embedded
design and then will extend it

NOTE Confidence: 0.84617895

afff7e88-d3f3-46cb-bc01-b02f1223bf7c
00:11:26.489 --> 00:11:32.117
to the Mealy and see what
happens if we follow the Mealy

NOTE Confidence: 0.84617895

bd6a60b7-a958-40b4-9979-6cf0f9a510f8
00:11:32.117 --> 00:11:37.745
model. So the Mealy and moore is
only about the type of the

NOTE Confidence: 0.84617895

4c511880-7c42-4ada-abe3-a62288ff3597
00:11:37.745 --> 00:11:42.435
output of the circuit. However,
regarding the design for the

NOTE Confidence: 0.84617895

29a05861-7880-44d2-9d8f-6cbfa76e1f18
00:11:42.435 --> 00:11:45.249
flip flops and the inputs, it

NOTE Confidence: 0.8723599

be30eab7-3678-4d94-b392-3102c41e24a1
00:11:45.249 --> 00:11:48.078
doesn't matter. In both models
they are the same.

NOTE Confidence: 0.85202175

5fdfdf27-4652-4f2c-a140-c2d687963786
00:11:50.320 --> 00:11:54.640
So let's start an analysis task
by an example. When we have

NOTE Confidence: 0.85202175

b0940d46-fa99-49b8-8289-5543052de204
00:11:54.640 --> 00:11:58.960
input an output and the output
is based on the moore model.

NOTE Confidence: 0.8492684

3f2c92d2-28a5-4ff0-b42a-e5f37641abaa
00:12:00.490 --> 00:12:05.334
So here is the recap of what we
did when we only have memory

NOTE Confidence: 0.8492684

9304e788-17e4-4f55-8cb6-2205339dec14
00:12:05.334 --> 00:12:09.832
units or flip flops. So when we
you're here are the steps. So

NOTE Confidence: 0.8492684

054bd5be-e228-48d3-b4a2-67c5a15c6a40
00:12:09.832 --> 00:12:13.292
basically we have to see
whether the given circuit you

NOTE Confidence: 0.8492684

e10ee97e-7bc5-419c-8574-7616d808b457
00:12:13.292 --> 00:12:17.444
are given a circuit to analyze
that. So you have to see

NOTE Confidence: 0.8492684

0ddf7c90-61ea-4db2-a35f-a08715e30fe5
00:12:17.444 --> 00:12:20.558
whether the given circuit is a
sequential or combinational.

NOTE Confidence: 0.8343312

9b3f81e8-6229-4464-a27f-a0d7bf1423e7
00:12:21.920 --> 00:12:27.016
If you see a flip flop or feedback
it means that that's a

NOTE Confidence: 0.8343312

5ce8f0d6-cbae-4be3-95c3-3ad7328317d1
00:12:27.016 --> 00:12:31.020
sequential. If the circuit is
sequential, you have to see what

NOTE Confidence: 0.8343312

1034ce41-a787-46e3-90c8-b712f0ac447c
00:12:31.020 --> 00:12:35.752
are the flip flops. The type of
flip flops RS ,D ,T , JK. You

NOTE Confidence: 0.8343312

cfb25ece-2aac-40e9-81ca-faf48fe2859a
00:12:35.752 --> 00:12:38.664
have to recall the
characteristic table for each

NOTE Confidence: 0.69009095

ccd6c1f5-e56f-442d-bdb6-daf3001648a2
00:12:38.664 --> 00:12:44.760
flip flops. Or or are they are a
mixed for instance 2 JK one RS

NOTE Confidence: 0.8590981

62b232cc-82f8-495a-8fcd-a94240d41a99
00:12:44.760 --> 00:12:49.318
etc. And then you have to
see how many different is that

NOTE Confidence: 0.8590981

4b06cf68-0214-4e59-a78d-b374c9fba8d4
00:12:49.318 --> 00:12:52.598
you're gonna have. So
basically 2 to the power of

NOTE Confidence: 0.8590981

21412d9c-8c20-4482-b950-5363e65ae8c1
00:12:52.598 --> 00:12:56.534
number of flip flops you have
to form this state table. This

NOTE Confidence: 0.8590981

6060d336-30e0-410a-98b6-7942c66978a5
00:12:56.534 --> 00:13:00.142
table for each flip flop has
two columns, one for the

NOTE Confidence: 0.8590981

b2f75262-06a5-4bba-a315-8909842f3097
00:13:00.142 --> 00:13:03.750
current state of that Flip
flop, one for the next state

NOTE Confidence: 0.8590981

41eb387d-a862-440a-a1a8-8611dfc0381f
00:13:03.750 --> 00:13:07.686
and also the number of rows
are based on the number of

NOTE Confidence: 0.8590981

bbf4660c-138f-468d-ab78-0b9429e3ac98
00:13:07.686 --> 00:13:10.310
combinations we did calculate
in the item 2.

NOTE Confidence: 0.8393529

b330adc6-87f2-41e9-931f-f2e7d30ec450
00:13:12.030 --> 00:13:17.334
And then you have to fill out
the state table and then form the

NOTE Confidence: 0.8393529

f69dd836-eb0f-4bbb-b605-d681f7d3f8e6
00:13:17.334 --> 00:13:21.822
state transition diagram, which
is a I mean pictorial way to

NOTE Confidence: 0.8393529

4eeaed73-d77e-4d9b-a538-c1e434e9cda3
00:13:21.822 --> 00:13:25.494
show the lifecycle of the
circuit and then optionally

NOTE Confidence: 0.8393529

c82b9647-5c5e-45c6-838e-de3a5e0d9938
00:13:25.494 --> 00:13:29.166
finally you can analyze the
different paths between these

NOTE Confidence: 0.8393529

0b66844c-8cbe-4798-aa10-828d95ab8b78
00:13:29.166 --> 00:13:33.654
states. In this state transition
diagram. So when we add input

NOTE Confidence: 0.8393529

f1f568da-53b3-4186-ba5d-ba06639a15c4
00:13:33.654 --> 00:13:38.550
and output based on the moore
model, some steps we have to

NOTE Confidence: 0.8393529

b5f0e4dc-2bae-460a-8908-7945e731f123
00:13:38.550 --> 00:13:40.998
adjust or revise some steps. So

NOTE Confidence: 0.7803088

e431cf60-841e-47bb-8af3-b294f2e3dccb
00:13:40.998 --> 00:13:46.345
we'll see. How we have the same
step but with different I mean

NOTE Confidence: 0.46925968

377d86fe-0d72-4183-8e6e-ff1854e3eb90
00:13:46.345 --> 00:13:49.640
uh? Uh, calculations.

NOTE Confidence: 0.81582487

1c84dbc1-772e-4c0c-9b67-bacaf6acb27a
00:13:51.070 --> 00:13:55.308
So basically the number of
states is not a 2 to the power

NOTE Confidence: 0.81582487

c5812dd2-fe50-43a7-bebb-d3b1c88ea711
00:13:55.308 --> 00:13:58.568
of number flip-flop anymore. The
state table have more columns.

NOTE Confidence: 0.8825145

4a9743bb-d817-414f-847a-46e1b7b6f967
00:13:59.140 --> 00:14:03.964
And also filling out this table
you have to consider the value

NOTE Confidence: 0.8825145

3bb95df0-2813-4e62-9014-c7eb9f48b231
00:14:03.964 --> 00:14:08.386
of inputs and outputs and also
in this state transition diagram

NOTE Confidence: 0.8825145

1453c517-700d-44ef-be94-a2a47d529503
00:14:08.386 --> 00:14:12.406
there are some additional
elements, so we'll see what are

NOTE Confidence: 0.8825145

1f8b2046-05ab-40ac-a586-0e75e6d65a84
00:14:12.406 --> 00:14:17.632
these changes when we have input
on outputs. So the first one is

NOTE Confidence: 0.8825145

e03a3557-74f4-4440-a600-adb3380a9eae
00:14:17.632 --> 00:14:22.858
exactly the same. You are given
a circuit and you have to see

NOTE Confidence: 0.8825145

cfd7c8a5-339e-48dc-bfcb-8006308f323a
00:14:22.858 --> 00:14:26.878
whether the second is sequential
or combinational. You have to

NOTE Confidence: 0.8825145

95ad4c83-862d-479c-92c5-ab023c6bf5f5
00:14:26.878 --> 00:14:29.290
look at whether you have just.

NOTE Confidence: 0.81202084

6182cc74-2369-4788-a8d4-29447c9a24ff
00:14:29.410 --> 00:14:34.438
At least one flip flop or at
least one feedback from output

NOTE Confidence: 0.81202084

791de169-39dc-4d64-8690-cbedf577dbd9
00:14:34.438 --> 00:14:39.466
to the input. And then you say
that this is a sequential

NOTE Confidence: 0.81202084

c166dd4c-3f95-4232-b953-4844d373affa
00:14:39.466 --> 00:14:43.656
circuit. I have to follow the
sequential an analyzing a

NOTE Confidence: 0.81202084

0c20caea-d4ed-424e-9fb0-3c565938171e
00:14:43.656 --> 00:14:47.846
sequential circuit. This steps
for that if this combinational

NOTE Confidence: 0.81202084

8398cd1d-77f4-4b8d-9248-35b82200130d
00:14:47.846 --> 00:14:53.293
it's like the I mean three weeks
ago when we have only logic

NOTE Confidence: 0.81202084

52dc272b-5ec3-4d90-8e47-8645a23f1422
00:14:53.293 --> 00:14:56.226
gates. Input value determines
the output values.

NOTE Confidence: 0.8331575

3b61b787-efdb-4b3c-914d-69f067c684c9
00:14:57.710 --> 00:15:02.906
So here is the given sample.
Given a circuit, you see that

NOTE Confidence: 0.8331575

913899b9-988c-4408-b0a6-615fc5095e7b
00:15:02.906 --> 00:15:08.102
in this circuit you have two
flip flops, one of them JK

NOTE Confidence: 0.8331575

002acc8c-9bb3-43b5-8f08-2c87ff1c2696
00:15:08.102 --> 00:15:12.865
one of them T. So definitely
this is a sequential circuit.

NOTE Confidence: 0.8331575

133a7f76-032e-435d-9cf5-fb0b3f6b3558
00:15:12.865 --> 00:15:16.762
Also you see that there is
additional input X.

NOTE Confidence: 0.8237051

faffe15f-cb0d-456e-bdef-7e4319ee78f1
00:15:17.990 --> 00:15:22.346
Also additional output Y, so
that's the sequential circuit

NOTE Confidence: 0.8237051

a8b54b65-4e29-4a5b-8bb3-47fd20cac9ed
00:15:22.346 --> 00:15:27.670
that has one input binary
variable in the input and one

NOTE Confidence: 0.8237051

347334e1-e627-4d96-a61a-abf7b5b56f1e
00:15:27.670 --> 00:15:30.090
binary output in the circuit.

NOTE Confidence: 0.7846674

2ba424ef-99d2-4cf3-bbee-84c415effffc
00:15:31.970 --> 00:15:37.378
So the next question like before
is that what are the flip flops?

NOTE Confidence: 0.7846674

661c50a1-89e0-433c-87ec-133b33553aff
00:15:37.378 --> 00:15:43.202
So one is the JK. So you have
to recall the behavior of the

NOTE Confidence: 0.7846674

e7b9526f-dcf1-44f9-8b77-7dc304e1050f
00:15:43.202 --> 00:15:45.282
JK flip flop JK 00 stores.

NOTE Confidence: 0.78318715

b8903614-ea07-4550-b9da-6fa790db903f
00:15:45.920 --> 00:15:52.424
J1 K Zero set J0 K1.
Reset and 11 compliment.

NOTE Confidence: 0.83545995

e9764c50-7ea7-4975-b432-2cf5054de26c
00:15:53.090 --> 00:15:58.258
The T flip flop if the T is
zero it stores. If T is 1

NOTE Confidence: 0.83545995

5c5d95a7-53af-48bf-ba05-4336e6bdc152
00:15:58.258 --> 00:16:01.488
it complements the current
state. So you have to recall

NOTE Confidence: 0.83545995

9ef21d2f-3ced-496c-91d7-f63b99510cf3
00:16:01.488 --> 00:16:02.457
the characteristic table.

NOTE Confidence: 0.87685144

68ce1b66-41bf-4735-8075-9d2ee7fba158
00:16:04.280 --> 00:16:09.584
And we have two flip flops here.
So basically the number of

NOTE Confidence: 0.87685144

983d02ac-b0e1-43dc-81b5-cd922123e804
00:16:09.584 --> 00:16:14.446
different states that this
circuit gonna have is 2 to the

NOTE Confidence: 0.87685144

cd39ac88-14b9-4da5-a9bb-6d673de84123
00:16:14.446 --> 00:16:19.308
power of number of flip flops.
Plus because we have input.

NOTE Confidence: 0.83903754

c7b24d13-0139-498f-8fd8-3f49b7622dca
00:16:20.160 --> 00:16:25.360
So basically here we have an
input, so the input we have only

NOTE Confidence: 0.83903754

eaaf667c-ddb7-4e7a-9798-3e520d1294ec
00:16:25.360 --> 00:16:29.760
one binary variable, so with .1
binary variable we can have

NOTE Confidence: 0.83903754

916431e9-c6e4-4cc9-a8d1-f961c8624cb2
00:16:29.760 --> 00:16:35.360
either X is 0 or X is 1. So two
different directions for this

NOTE Confidence: 0.8811321

8e98b797-6de3-4db0-a20b-f619024ff936
00:16:35.360 --> 00:16:40.036
circuit so. You have to consider
the different values of the

NOTE Confidence: 0.8811321

c9bdceb4-589a-43fc-9741-cf9a043a0dfe
00:16:40.036 --> 00:16:44.712
input as well. So 2 to the power
of inputs. The number of inputs.

NOTE Confidence: 0.8811321

61a7e877-ce1b-478e-a7f2-ad2db37175cb
00:16:44.712 --> 00:16:48.720
Here we have only one by new
variable, so that when you're

NOTE Confidence: 0.8811321

727ff8dd-6821-4d0e-ac23-e7a03e185e2a
00:16:48.720 --> 00:16:53.396
ready we can be 0 or 1 two
states. If you have two input

NOTE Confidence: 0.8811321

73c42b5c-0501-4fce-9f58-bf7e1e4dd697
00:16:53.396 --> 00:16:57.404
variables, we're gonna have four
or two to the power of two

NOTE Confidence: 0.8811321

f1fb1d4c-e859-4515-8f9a-9ff7bcfe7a0b
00:16:57.404 --> 00:17:01.078
different values for the input.
So in total the whole circuit

NOTE Confidence: 0.8811321

7538bf98-a8ea-4ce1-9eaf-7a7ac3bcfc15
00:17:01.078 --> 00:17:05.086
gonna have two to the power of
number of flip flops, plus

NOTE Confidence: 0.8811321

b0bd7efb-9f76-4f23-a151-01acc2c83b26
00:17:05.086 --> 00:17:06.088
number of inputs.

NOTE Confidence: 0.87961066

0a42cefe-1aa0-4594-aa5b-e9b9f568fca8
00:17:07.640 --> 00:17:09.896
For instance, here we have two

NOTE Confidence: 0.89360654

33c697fa-8bee-4f62-935f-6973f946a469
00:17:09.896 --> 00:17:13.360
flip flops. So 2 to the power of

NOTE Confidence: 0.877775

829c4db1-f1ae-42e1-8eca-f29ede3c8436
00:17:13.360 --> 00:17:18.954
2. Multiplied by ther are 2 different
states for X as a binary input.

NOTE Confidence: 0.877775

c7458af5-8e7a-408f-8f15-2e22200fc4a9
00:17:18.954 --> 00:17:24.750
So 2 to the power of 2 + 1.
Eight combinations for the whole

NOTE Confidence: 0.877775

3fa5cdb0-c50e-43fa-928f-2478f57cdcfb
00:17:24.750 --> 00:17:29.304
circuit, not only the flip flops
but also the input variables.

NOTE Confidence: 0.89523655

ce98183c-bc39-4db5-92b8-96f39b70d17a
00:17:30.480 --> 00:17:33.496
This is the change to our
analysis step.

NOTE Confidence: 0.82910377

efacaea7-368c-4dd1-ba15-54a71bb3909b
00:17:34.680 --> 00:17:36.240
You have to consider the number

NOTE Confidence: 0.87832415

7cc38797-5a57-45c1-b5af-2b75d9b799be
00:17:36.240 --> 00:17:40.820
of binary inputs. And then after
that you have to form this state

NOTE Confidence: 0.85569096

c06fad05-5849-4eb3-8182-8fac8fa13689
00:17:40.820 --> 00:17:45.570
table. So this table have the
same element as we already

NOTE Confidence: 0.85569096

5cc6f57a-3927-4080-a6a2-e94722d419f8
00:17:45.570 --> 00:17:49.827
discussed when we only have
memory units for each flip flop

NOTE Confidence: 0.85569096

9cdc4eb4-4140-4b04-9c0a-269e75571ec2
00:17:49.827 --> 00:17:55.245
we have to add 2 columns, one of
them for the current state, one

NOTE Confidence: 0.85569096

71f99d5a-7889-4dce-adb5-1c19b8b45b90
00:17:55.245 --> 00:17:59.889
of them for the next state, but
it has two additional column,

NOTE Confidence: 0.85569096

3bcfaaa2-0e9a-4c05-85c3-6808ef7c9bde
00:17:59.889 --> 00:18:03.372
not two additional two
additional columns. One set of

NOTE Confidence: 0.85569096

038f1ef1-2b2d-40b7-a0bd-4cdd122d9a43
00:18:03.372 --> 00:18:08.016
column is for the inputs for
based on the number of input

NOTE Confidence: 0.85569096

ef68216b-1a5b-4bc2-ba49-70a27d0c36a4
00:18:08.016 --> 00:18:11.886
variables you have to create
columns also for the output.

NOTE Confidence: 0.86427665

2dbbe004-d67d-4a6c-b774-330a8c3c7525
00:18:12.000 --> 00:18:16.836
 you have to add more
columns. So in our example we

NOTE Confidence: 0.86427665

a28e559f-86f4-450a-bd85-cb9ca76dbeb0
00:18:16.836 --> 00:18:22.075
have one binary variable in the
input, so we have to create one

NOTE Confidence: 0.86427665

4c394fc8-c02f-4f76-9cc4-ecc6e5239203
00:18:22.075 --> 00:18:26.911
column for the X. Also we have
one binary variable in the

NOTE Confidence: 0.86427665

5cb76dce-4892-4d3d-9a26-a642703115b7
00:18:26.911 --> 00:18:32.150
output, so we have to create one
column for the output as Y.

NOTE Confidence: 0.8557407

34536f73-0ff7-4012-9360-0ed63dfeff42
00:18:32.820 --> 00:18:37.410
So if you have two output have to
add 2 columns, if you had two

NOTE Confidence: 0.8557407

99901472-c949-4c19-85a9-a08552b7ea5f
00:18:37.410 --> 00:18:39.246
inputs, you have to add 2

NOTE Confidence: 0.8577901

6069c866-0aac-4b06-a751-d72fee524eb7
00:18:39.246 --> 00:18:44.402
inputs. So basically this is the
change to this state column. We

NOTE Confidence: 0.8577901

8c356280-c585-4c3f-91e8-58cbc1d4abf5
00:18:44.402 --> 00:18:47.922
have to add additional columns
for inputs and outputs the

NOTE Confidence: 0.8577901

9930db80-f44a-4f93-beac-77813d68adb0
00:18:47.922 --> 00:18:51.794
number of rows depends on the
number of different state the

NOTE Confidence: 0.8577901

ed6e3e3f-a6c5-47a1-aa63-6c6d46ef4053
00:18:51.794 --> 00:18:56.018
whole circuit gonna have, which
we calculate in this item. So 2

NOTE Confidence: 0.8577901

59f52123-e838-4c38-86a0-d5f80aa36d0c
00:18:56.018 --> 00:19:00.242
to the power of number of flip
flops plus number of inputs.

NOTE Confidence: 0.843927

af52a13b-b768-4667-86d4-327bd8b54492
00:19:02.470 --> 00:19:07.735
So as you can see here, we have
two flip flops A & B. We have one

NOTE Confidence: 0.843927

e3381eeb-5c29-45c7-9ec4-828b7ba4694f
00:19:07.735 --> 00:19:12.649
binary inputs. So in total we're
going to have three, I mean 2 to

NOTE Confidence: 0.843927

e6a6c38a-85f6-4fa9-acb2-d48ac2c1bcf4
00:19:12.649 --> 00:19:16.159
the power of three or eight
different combinations. So we

NOTE Confidence: 0.843927

1773bd41-5d60-4f0c-a324-60c68af18f04
00:19:16.159 --> 00:19:17.563
gonna have 8 rows.

NOTE Confidence: 0.84621686

f8ac0b51-42f7-4f01-b9b1-95927a6983b5
00:19:18.510 --> 00:19:23.816
So in the left side of the state
table, the current state of the

NOTE Confidence: 0.84621686

7b6d4b9c-4990-4fd6-8b94-582d5a560978
00:19:23.816 --> 00:19:28.743
flip flops and the inputs in the
right side the current, the next

NOTE Confidence: 0.84621686

800b4123-ce02-46f6-8d05-df5b344f6cf7
00:19:28.743 --> 00:19:31.396
state of the flip flops and the

NOTE Confidence: 0.81688946

3ab4f43e-a25b-4659-87c2-2de01797baf2
00:19:31.396 --> 00:19:36.977
outputs. This is, uh, the state
table when we have inputs and

NOTE Confidence: 0.81688946

10e04f5b-80b6-4b13-99fb-495d710345ae
00:19:36.977 --> 00:19:41.621
outputs, you can see that this
state table is very similar to

NOTE Confidence: 0.851368

7b0b07be-e71b-4aa9-bec0-ecd5c35c89e6
00:19:41.621 --> 00:19:46.680
a. Truth table in the
combinational logic where we

NOTE Confidence: 0.851368

db3e17dd-81b9-4cf9-a63f-c1bb6bcd9a1c
00:19:46.680 --> 00:19:48.830
have only inputs and outputs.

NOTE Confidence: 0.8371699

85dedefa-fd93-4d69-aedf-4287d0651e53
00:19:49.390 --> 00:19:56.530
So for instance, we have two
three inputs ABX and we have

NOTE Confidence: 0.8371699

ea98acd3-d5a5-4ccd-87c9-a66a7ed976a2
00:19:56.530 --> 00:20:00.100
three outputs YAB, but here A&B.

NOTE Confidence: 0.82662416

52f71e4d-ce42-4bad-bf19-a6890641927c
00:20:00.200 --> 00:20:03.984
You have there are flip flops,
not binary variables, that we

NOTE Confidence: 0.82662416

1469ceb8-94ee-445d-a8ad-e9120b75df89
00:20:03.984 --> 00:20:07.424
have current state and next
state. That's the difference of

NOTE Confidence: 0.82662416

545d34b8-7d23-4253-b02c-ca6a20fc22f8
00:20:07.424 --> 00:20:10.864
the state table and the truth
table in combination logic.

NOTE Confidence: 0.898691

8dd80882-9109-40c5-893e-d58fbcbf2b89
00:20:12.570 --> 00:20:14.810
The next task is
to fill out this.

NOTE Confidence: 0.8558883

97703c9c-ed05-41f5-8589-6d661d49ecd0
00:20:16.540 --> 00:20:21.714
State table in the book. Or you
can see in other resources that

NOTE Confidence: 0.8558883

82801a93-dccc-4017-82cd-ae99b3a5d526
00:20:21.714 --> 00:20:26.490
there is alternative way to show
the state table when you have

NOTE Confidence: 0.8558883

c6c3dc12-2871-46b6-9408-7f97c01e84a4
00:20:26.490 --> 00:20:30.868
inputs and this is another way.
So basically they say that

NOTE Confidence: 0.8558883

33c0e0a8-e7f1-43de-9bcf-4ac37ac16fc2
00:20:30.868 --> 00:20:35.246
because based on different value
of the input, the circuit gonna

NOTE Confidence: 0.8558883

75faaea5-2c2b-4c67-9163-66976dcfb1eb
00:20:35.246 --> 00:20:36.838
go into different directions.

NOTE Confidence: 0.86163753

6bc3b1c6-3d3f-4389-86c4-573cbdeadf44
00:20:37.870 --> 00:20:43.291
We can, instead of creating a
column for the input, we can say

NOTE Confidence: 0.86163753

f30126f2-4a05-41dd-9a07-c66b11172a9b
00:20:43.291 --> 00:20:47.878
that what happens based on the
different value of the input

NOTE Confidence: 0.86163753

ef322d1e-2806-4486-ab93-e7beba2795c1
00:20:47.878 --> 00:20:52.882
variables to the next system. So
we have the columns for the

NOTE Confidence: 0.86163753

0f406747-8969-4070-b85d-04de765d8678
00:20:52.882 --> 00:20:57.469
current state of the flip flops,
A&B at the current time.

NOTE Confidence: 0.8706802

86b54499-aee2-49b7-8595-07e2cbd08b70
00:20:58.150 --> 00:21:02.362
So we say that what happens to
these flip flops in the next

NOTE Confidence: 0.8706802

95035238-d1c4-4739-90f0-493d7d9e2574
00:21:02.362 --> 00:21:06.250
state when the input we have
only one input variable. So when

NOTE Confidence: 0.8706802

648d0cf2-0b19-4490-8bb5-ef4d96fc5e69
00:21:06.250 --> 00:21:07.546
the X is 0?

NOTE Confidence: 0.8646308

4fdb942a-134c-4fb8-8d08-815c88c96a97
00:21:08.130 --> 00:21:13.650
So one set of columns for the
next state when the X is 0, or

NOTE Confidence: 0.8646308

3e971b9a-c45f-4a68-afae-0519c265b6af
00:21:13.650 --> 00:21:18.434
what happens if the input
variable is 1. So a new set of

NOTE Confidence: 0.8646308

1e9395bd-bcad-4d28-b4bc-68cb9d15c961
00:21:18.434 --> 00:21:23.586
columns for the next state for
the flip flops. When the X is 1

NOTE Confidence: 0.8646308

70f1b197-0449-4362-ac4e-5b3547c78db9
00:21:23.586 --> 00:21:28.370
and also this is the same column
for the output. So kind of

NOTE Confidence: 0.8646308

044ac28e-cf71-4854-ba35-6a3a87fb9c39
00:21:28.370 --> 00:21:32.418
distributing the input variables
to the right side of the table

NOTE Confidence: 0.8646308

80f1ccbc-91eb-48bb-b71d-75c0abcf23f3
00:21:32.418 --> 00:21:36.466
based on different values of the
input variables. What happens to

NOTE Confidence: 0.8646308

26e1ba1e-1dc1-497b-a2e9-ecebb2ec4605
00:21:36.466 --> 00:21:38.674
the next state of the flip

NOTE Confidence: 0.8535869

7409f670-52cb-4812-9099-98766b9d4aac
00:21:38.674 --> 00:21:43.130
flops? Uh, personally, I prefer
this one because it has left

NOTE Confidence: 0.8535869

e9241ce9-a7bd-46e0-b91f-95d2dcd4b967
00:21:43.130 --> 00:21:47.472
side and right side and we have
we put different value of the

NOTE Confidence: 0.87672544

e6afcf56-fe25-47a2-a0a4-37a27f82d9be
00:21:47.472 --> 00:21:51.632
input here. But this is the
way that sometimes you can

NOTE Confidence: 0.87672544

fac59577-80b5-4276-a231-bc5339f9e29b
00:21:51.632 --> 00:21:54.812
follow, and this is the way
that the book actually

NOTE Confidence: 0.87672544

97cb3adc-ec04-4a07-8a4a-b81abe3ffec4
00:21:54.812 --> 00:21:58.628
follows. So we continue with
this one, but it can. At home

NOTE Confidence: 0.87672544

7379df51-4a6d-4b21-a3c1-d8d94dc1029f
00:21:58.628 --> 00:22:01.808
you can practice this state
table as well, no big

NOTE Confidence: 0.87672544

d7e0624c-9662-422e-8da5-b501549c77a3
00:22:01.808 --> 00:22:02.126
difference.

NOTE Confidence: 0.86095876

26bf82ae-7c61-4b7f-942e-c5e633079ed2
00:22:03.640 --> 00:22:08.203
Only the difference is the way
you put the put the values in

NOTE Confidence: 0.86095876

37884a9b-6ce0-4cba-b788-abc4f60839fa
00:22:08.203 --> 00:22:10.309
the cells of the state table.

NOTE Confidence: 0.841942

bb4fe428-72bc-4977-b760-a97e31490661
00:22:12.140 --> 00:22:16.532
So let's fill out this state
table. So when you create this

NOTE Confidence: 0.841942

d28e1839-6746-49fd-bd18-901e0faaecd8
00:22:16.532 --> 00:22:19.094
table, you have to fill out this

NOTE Confidence: 0.85888296

ecd09844-1563-4cfd-840a-9fe5a6b7d465
00:22:19.094 --> 00:22:22.278
table so. The left side.

NOTE Confidence: 0.87263495

3d530793-7872-4982-b830-ceb50029395b
00:22:23.370 --> 00:22:27.750
Is a all the different
combinations for the flip flops

NOTE Confidence: 0.87263495

69436962-2033-48bf-84cd-9798c9a4b664
00:22:27.750 --> 00:22:33.006
and the input variables, so the
flip flops can have the state

NOTE Confidence: 0.89103734

fae78ac7-4b4d-45eb-a04a-a19b65de25f7
00:22:33.006 --> 00:22:36.048
00. And the input might be 0.

NOTE Confidence: 0.8690942

d95e37d1-30ff-4fe3-98dc-e4423d0e318e
00:22:37.450 --> 00:22:42.980
The flip flop can have 01, the
input is zero and it's also the

NOTE Confidence: 0.8690942

52824d82-f405-44c8-8faf-d9f301648abc
00:22:42.980 --> 00:22:48.115
input. Gonna be either zero or
one and the flip flops can have

NOTE Confidence: 0.8690942

cd812778-db29-4a57-9002-34efdb3e6eaa
00:22:48.115 --> 00:22:49.300
these different states.

NOTE Confidence: 0.8730836

60b5b157-84ef-493c-b905-c1eacbb84aff
00:22:51.000 --> 00:22:55.144
You can see that when the flip
flops are at the State 00 here.

NOTE Confidence: 0.8810265

e7883a36-b337-4f5c-b63f-ddadd265f3db
00:22:55.950 --> 00:22:58.344
The X is either zero or one.

NOTE Confidence: 0.8698734

b6def2a4-9dcc-4de6-a93b-180ec02541dd
00:22:59.410 --> 00:23:03.650
So you see that based on
different value of input

NOTE Confidence: 0.8698734

9ff55047-989d-4d36-b501-d27b3ac8fbe4
00:23:03.650 --> 00:23:07.042
variables, there are two
states for each. The

NOTE Confidence: 0.8698734

3c904ea7-c8d1-464c-b257-fec0417ba229
00:23:07.042 --> 00:23:09.162
combination of the flip
flops.

NOTE Confidence: 0.87139183

3557d253-14e6-47f4-b327-ab7870cab012
00:23:11.550 --> 00:23:14.750
So again, very similar to the
combination of logic. Imagine

NOTE Confidence: 0.87139183

969d813a-20b4-4800-a936-6b52ffe451ea
00:23:14.750 --> 00:23:17.950
you have only three binary
variables, so you're going to

NOTE Confidence: 0.87139183

5aae6ddf-f53b-469c-ae41-84ae4d9292f3
00:23:17.950 --> 00:23:20.830
have two to the power
of 3, or eight different

NOTE Confidence: 0.87139183

cf4bc420-85c4-4fcc-8d07-584a1573faeb
00:23:20.830 --> 00:23:21.790
combinations or possibilities.

NOTE Confidence: 0.8717194

4b8bb41a-9c88-4a49-8984-6ac139f03806
00:23:23.400 --> 00:23:28.132
So then when you create the fill
out that left side, you have to

NOTE Confidence: 0.8717194

ca6e6439-6d50-495a-b0a3-02ece67e6609
00:23:28.132 --> 00:23:32.188
see what happens if you are
given this state in the circuit

NOTE Confidence: 0.8717194

b99d259f-3fee-4242-acce-21d08724e49c
00:23:32.188 --> 00:23:34.554
in the next time interval in the

NOTE Confidence: 0.8834636

ade925d0-f6bd-400c-9b1a-b69948c6327d
00:23:34.554 --> 00:23:39.627
next state. So what are the
value of A&B in the next time?

NOTE Confidence: 0.8834636

91227b45-d12b-4a65-a452-eae1928677f4
00:23:39.627 --> 00:23:43.431
And also what are the value?
What is the value of the

NOTE Confidence: 0.8834636

730d8748-662e-4bf8-b5a7-d9293aef56f3
00:23:43.431 --> 00:23:47.235
output if you have two outputs
what are the value of the two

NOTE Confidence: 0.8834636

b8b91d05-36b7-4c2e-8db3-f55dd7565859
00:23:47.235 --> 00:23:51.039
outputs? So if you look at the
circuit you see that the

NOTE Confidence: 0.8834636

457588f9-175d-4094-b7ab-6dc7b738939d
00:23:51.039 --> 00:23:53.258
output is only the AND of a.

NOTE Confidence: 0.84004664

98b8ac30-e8a3-46eb-a64d-7a2ae1e661d1
00:23:55.050 --> 00:23:56.550
and B.

NOTE Confidence: 0.8561838

97f976af-e3ec-4333-b02c-a3e8d0ad260a
00:23:57.620 --> 00:24:03.682
So basically Y is equal to A&B
and you see that there is no

NOTE Confidence: 0.8561838

e09e6173-e9b7-4ad1-9d5f-a1bda3bef389
00:24:03.682 --> 00:24:05.414
direction from the input.

NOTE Confidence: 0.84815586

00d8fd29-ab28-4d43-afe1-953d36c108fb
00:24:06.910 --> 00:24:10.249
To the output, no connection to a

NOTE Confidence: 0.8519545

89acef64-3310-4b56-a9d7-336358987173
00:24:10.249 --> 00:24:16.246
from X to Y. So that's why this is
the moore model, meaning that the

NOTE Confidence: 0.8519545

7bc4b769-da26-443b-bc32-c6db030cf53f
00:24:16.246 --> 00:24:21.264
Y only depends on the value of
flip flops or the current state.

NOTE Confidence: 0.87314874

eab52498-0386-494b-bec0-d5c0014051b5
00:24:21.840 --> 00:24:26.020
It doesn't depend on the
input. That's why we call

NOTE Confidence: 0.87314874

e4667e2b-874e-47a5-acb7-ea8e702ed428
00:24:26.020 --> 00:24:27.274
this moore model.

NOTE Confidence: 0.8680049

ef84bf64-7469-4f80-aae6-da07a5aa82b0
00:24:29.000 --> 00:24:34.083
So in order to fill out the
right side, the easy column is

NOTE Confidence: 0.8680049

79535c7d-1d87-4b4f-8245-33bf400bebb3
00:24:34.083 --> 00:24:37.993
the output, because the output
only depends on the current

NOTE Confidence: 0.8680049

43df1d34-b36c-4d7b-8cb6-84f157ade925
00:24:37.993 --> 00:24:43.076
value of the flip flops. So Y
is A&B, for instance, for this

NOTE Confidence: 0.8680049

dbacf85f-3661-451d-949a-9320ea499021
00:24:43.076 --> 00:24:50.114
row A IS 0 ,B is 0, so the Y gonna
be 0 in this row is zero, A is

NOTE Confidence: 0.8680049

bb4cad12-61c3-4c8b-8541-925777659702
00:24:50.114 --> 00:24:55.979
1, the and of them gonna be 0
and etc. So basically as I said,

NOTE Confidence: 0.8680049

d59a8874-d62b-4c47-bb71-cbc93c652b70
00:24:55.979 --> 00:24:58.716
Y is based on the moore model?

NOTE Confidence: 0.8910365

cbc0d665-292d-4021-b093-1ff57c235043
00:24:58.790 --> 00:25:03.134
X is not involved, so you have
to only consider the current

NOTE Confidence: 0.8910365

1edb6265-cbd2-43e8-9da9-a4b09e5d8656
00:25:03.134 --> 00:25:07.116
value of the A&B and put the
value for the Y.

NOTE Confidence: 0.8516017

c367e31d-5f7b-49f0-8dc0-25246ae2bc61
00:25:08.150 --> 00:25:13.120
So the only time that the value
becomes one is when A&B are one

NOTE Confidence: 0.8516017

0692e410-f609-44cb-b8fe-9548b8dfa522
00:25:13.120 --> 00:25:18.090
here. So here when the A&B are
both one, the Y gonna be 1.

NOTE Confidence: 0.8366556

a877ade7-1e54-4881-b9bb-c0513de32f99
00:25:20.550 --> 00:25:24.653
So filling out the Y very
easy. Just look at the

NOTE Confidence: 0.8366556

727b1c7f-a7b9-40ed-a07b-f0cb29c12f1a
00:25:24.653 --> 00:25:28.383
current value of the flip
flops and put the value.

NOTE Confidence: 0.8504139

e3ce1c71-8e61-485e-b1a8-a495aaf9eb05
00:25:30.040 --> 00:25:35.335
See also it becomes one when the
A is 1 and B is 1 here.

NOTE Confidence: 0.91354024

7f47e9b9-1ca3-4c51-b13c-effc2d4355e0
00:25:36.140 --> 00:25:38.282
So it doesn't depend
on the value of X.

NOTE Confidence: 0.875591

bb4225c4-00c9-4be9-aeda-8ce07e0d6659
00:25:40.140 --> 00:25:44.424
And then the next step is after
filling out the Y, you have to

NOTE Confidence: 0.875591

b76a1c0b-de95-4278-b0b4-7cb64fe6c86a
00:25:44.424 --> 00:25:48.402
fill out what Is going to be
the next value of each flip

NOTE Confidence: 0.91998947

ae11be3b-a538-4697-951c-b33d84bbbe7f
00:25:48.402 --> 00:25:53.164
flop. So we already saw how we
can do that, but the only

NOTE Confidence: 0.91998947

7695ae8f-263e-4cc6-b1c4-20bc2f2101e2
00:25:53.164 --> 00:25:57.220
difference here is that not only
you have to be careful about the

NOTE Confidence: 0.91998947

d4cd31ed-cc89-46ed-b9de-af6ccc01f8db
00:25:57.220 --> 00:25:59.092
current value of the flip flop.

NOTE Confidence: 0.8952872

04a811ac-9847-4e56-8069-f3bf278f018a
00:26:00.270 --> 00:26:04.924
Also, you have to be careful
about the input of the flip flop

NOTE Confidence: 0.8952872

b64f30c5-5bca-48e4-a453-4ea65da1be26
00:26:04.924 --> 00:26:08.504
and the differences here. The
input of the flip flops.

NOTE Confidence: 0.89314556

18708b6e-00ec-47dd-a1a7-949e2d699fbc
00:26:09.660 --> 00:26:14.259
Depends on the value of the
input variable X.

NOTE Confidence: 0.80257577

69459d69-e9f6-4dde-b311-6c811c955944
00:26:15.590 --> 00:26:22.625
So you see that a for the J
input depends on the AND of B

NOTE Confidence: 0.80257577

7e65f857-7bbc-4e26-a5fc-507eb086f784
00:26:22.625 --> 00:26:25.908
and the X from the input, so.

NOTE Confidence: 0.82261795

8849c5ef-0829-4042-ab71-afcd570f46c3
00:26:26.770 --> 00:26:32.770
JA, the input for the J is X&B,
so you have to be not only

NOTE Confidence: 0.82261795

0e02c530-0146-488c-9b35-dd55aa2b9732
00:26:32.770 --> 00:26:37.970
careful about the value of B,
but also the value of the input

NOTE Confidence: 0.82261795

d661c89c-472a-4791-93b9-eef6023c21f0
00:26:37.970 --> 00:26:41.970
variables. That's the difference
when you have inputs, so a

NOTE Confidence: 0.82261795

bd74fda3-12a6-4ca2-a471-2b962919598a
00:26:41.970 --> 00:26:46.370
currently is zero. We can see
here the JA is B.

NOTE Confidence: 0.8279717

89b52cdd-f6cc-48bf-94d1-d90e8863e94b
00:26:47.240 --> 00:26:50.845
And with X. So currently B is

NOTE Confidence: 0.8499004

1fb513c7-3056-42ca-ab5a-c1307f6751a3
00:26:50.845 --> 00:26:54.840
0. X is zero, and of these two

NOTE Confidence: 0.8560866

cb57682e-13b7-457b-947d-c0aae94b6d18
00:26:54.840 --> 00:27:01.648
becomes 0. KA, another input of
a flip flop. It depends on the

NOTE Confidence: 0.8482533

61da1e94-9e36-4f84-ab49-542b9f8146d9
00:27:01.648 --> 00:27:07.792
bar. He is zero followed by not
becomes one. So 01 is the reset

NOTE Confidence: 0.8482533

1839cf23-aeac-4d26-b81f-b1da5e3d44bc
00:27:07.792 --> 00:27:11.532
action. So whatever the current
is that gonna be 0.

NOTE Confidence: 0.80011076

98b27cce-27c5-4e23-bc30-f2436b507111
00:27:12.390 --> 00:27:14.370
Next state so.

NOTE Confidence: 0.8864898

aa63492b-5248-4000-9fe8-0474d1845481
00:27:15.110 --> 00:27:16.199
It does reset.

NOTE Confidence: 0.871528

4d599e3e-9e93-4189-9ba2-b4423d7e9e21
00:27:17.070 --> 00:27:22.026
For the next state of the B,
when the current value is 0, the

NOTE Confidence: 0.871528

b94e7c89-03dc-49f0-aece-521ceb555464
00:27:22.026 --> 00:27:27.336
input for the B as you can see
here, also has an input from X.

NOTE Confidence: 0.8430853

ca815e8d-41db-4a0f-bbd5-b5a10b049965
00:27:28.370 --> 00:27:33.086
It means that the T for the B flip
flop is X and.

NOTE Confidence: 0.8616676

b0f20f3e-7863-49ae-8379-f28803200ae9
00:27:33.860 --> 00:27:37.256
What are the next input for
the AND? It comes from the

NOTE Confidence: 0.8616676

5e4a99b2-001a-4ed7-89b2-eb2f35ad8bbc
00:27:37.256 --> 00:27:38.105
A, so a.

NOTE Confidence: 0.7705327

6e606e23-7fd0-4bf7-846d-7dcd50b17d27
00:27:39.400 --> 00:27:40.550
And X.

NOTE Confidence: 0.8518949

739781d7-564a-487f-873e-35fc859699d7
00:27:42.090 --> 00:27:47.970
So currently a is zero, and X is
0 so 00 and  with zero. When we

NOTE Confidence: 0.8518949

0caed621-d37e-418b-89a7-fb5b58ab1e6f
00:27:47.970 --> 00:27:53.430
have zero in the T flip flop, it
means that the store. So

NOTE Confidence: 0.8518949

b186ec6f-edd4-47ba-b3cf-38595d9ab926
00:27:53.430 --> 00:27:58.890
currently we have 0 we store it, so
the next step for the B flip flop

NOTE Confidence: 0.8518949

13dcce47-0c8d-4655-a3a6-139dc82c033d
00:27:58.890 --> 00:28:00.150
gonna be zero.

NOTE Confidence: 0.8594444

22044b42-69f8-4f0d-b50a-22e5a4fc78dd
00:28:02.380 --> 00:28:07.480
So the same way you have to fill
out all other cells for the next

NOTE Confidence: 0.8594444

98e282b8-4067-40ce-9bf6-4d01cc9a1eb5
00:28:07.480 --> 00:28:11.900
state of A&B. As I said, the
difference is you have to pay

NOTE Confidence: 0.8594444

e3fd1058-072d-4c9e-a104-dc9dcf39d3bd
00:28:11.900 --> 00:28:16.320
attention to the value of X
because the input to the T &JK

NOTE Confidence: 0.8594444

c90a1ccf-f8e2-4dbe-a9c8-f1fcc2a44db7
00:28:16.320 --> 00:28:18.700
has inputs for the from the X.

NOTE Confidence: 0.78563464

e904dcab-5e66-4cd7-9361-58444c2fe278
00:28:21.310 --> 00:28:27.686
So. If you fill out all the
other cells, uh, I just put on a

NOTE Confidence: 0.78563464

045ad9a4-7aa4-4bc0-b528-402b88f66f01
00:28:27.686 --> 00:28:32.028
question mark here just to ask
you what's going to be the this

NOTE Confidence: 0.78563464

f7bfde96-8e61-4088-a689-dc413a327285
00:28:32.028 --> 00:28:36.036
cell. The value for the next
state of P when the current

NOTE Confidence: 0.78563464

4c1eddfe-fbca-48fd-9a0d-7b4b536a69d0
00:28:36.036 --> 00:28:39.042
state of A is 1,B is zero and X

NOTE Confidence: 0.93074226

2c89d9b0-7b47-44f4-b224-6da6524d149c
00:28:39.042 --> 00:28:41.110
is 1. So.

NOTE Confidence: 0.91691875

ec444e97-eeb4-4766-8eaa-8d1dbe34fae3
00:28:41.670 --> 00:28:45.850
Think about this right now
and give me the answer in

NOTE Confidence: 0.91691875

357051ce-cfbb-478c-be55-686e39febabf
00:28:45.850 --> 00:28:46.990
the chat box.

NOTE Confidence: 0.8851537

21af6cad-e293-46b2-ad43-7fed2b14836d
00:28:51.080 --> 00:28:54.215
So for this one you have
to see what's the current

NOTE Confidence: 0.8851537

0e32cc6a-2878-4f7f-8947-c75511046803
00:28:54.215 --> 00:28:55.925
value of B, which is 0.

NOTE Confidence: 0.83850336

03c313c0-50df-45c2-a5c9-08b5b8ab54a9
00:29:00.370 --> 00:29:01.840
Currently is 0.

NOTE Confidence: 0.80273414

bedeb3f5-f6c8-4fb7-82b2-1fd964a51deb
00:29:03.480 --> 00:29:09.538
The input to the T flip-flop comes
from a, so a is 1.

NOTE Confidence: 0.86935127

2e3d5367-7db2-460e-bcb9-4084d67482b9
00:29:10.690 --> 00:29:15.880
X. X is 1, so
one and one.

NOTE Confidence: 0.83940315

f2e0c9cc-c86c-4167-8aa2-77ab1e359e2e
00:29:16.750 --> 00:29:20.554
Becomes one, so the input
to the T flip flop is 1.

NOTE Confidence: 0.83940315

d3db4218-cab6-44cd-bebf-8fbccf7b12b0
00:29:20.554 --> 00:29:24.041
What happens when we have
one in the T flip flop?

NOTE Confidence: 0.92044014

8a3b2144-fa2b-44b1-bc4f-98cfa417f406
00:29:26.950 --> 00:29:28.888
So anybody in the chat box?

NOTE Confidence: 0.8131876

ceed5f41-ccd5-4b34-aef4-fc71769b8a1e
00:29:44.110 --> 00:29:50.311
So noniko says that it becomes one
at the Clock. Justin says that

NOTE Confidence: 0.86883867

0d259126-b520-43ed-8f96-517452f06ac7
00:29:50.311 --> 00:29:55.468
zero. So first of all, when
we have one in the T flip

NOTE Confidence: 0.86883867

10606eb1-0525-49e1-b867-3f728b19aae7
00:29:55.468 --> 00:29:58.060
flop, what happens in the
first positive edge?

NOTE Confidence: 0.49742287

d5a43eb6-0888-495f-a6ac-8772e3374db1
00:29:59.430 --> 00:30:00.510
In the T flip-flop. Ah.

NOTE Confidence: 0.81735545

d7f3ebb7-ce2b-4c8b-8e37-50044e5a287d
00:30:08.310 --> 00:30:12.310
Correct, Justin yes toggles,
so the current when we have

NOTE Confidence: 0.81735545

1af39726-f991-4c7e-85ac-56346e9b8b70
00:30:12.310 --> 00:30:16.710
won the T flip flop, meaning
it does complement on the

NOTE Confidence: 0.81735545

60bc7a4f-db0e-4fba-a08f-36c6c253160d
00:30:16.710 --> 00:30:21.110
current state or toggles. So
currently B is 0. If you

NOTE Confidence: 0.81735545

5e7617f5-0d8e-4782-a052-eced91f65652
00:30:21.110 --> 00:30:25.510
toggle that it becomes one. So
no Noniko is correct. So

NOTE Confidence: 0.81735545

f1d1e22e-82df-48c3-98c4-7455c483f0e6
00:30:25.510 --> 00:30:29.910
basically here is the result.
Currently B 0 the input to the

NOTE Confidence: 0.81735545

f5893871-4475-49c6-9fd2-a29174ee9e70
00:30:29.910 --> 00:30:31.110
T flip flop.

NOTE Confidence: 0.8409066

08d65158-333d-4586-8710-f3581c00e15a
00:30:32.250 --> 00:30:39.338
Is X and a X and A,A is 1,X is
1, so one and one becomes one

NOTE Confidence: 0.8409066

adb267d1-3ef6-4fd6-8376-155210e9654a
00:30:39.338 --> 00:30:45.097
when you have one in the T
flip flop it toggles, so zero

NOTE Confidence: 0.8409066

288339ac-0e07-491e-88d9-ee6298ce8477
00:30:45.097 --> 00:30:45.983
becomes one.

NOTE Confidence: 0.84143955

977633e0-526f-4dc4-a70a-8039b64d4c16
00:30:49.220 --> 00:30:53.504
And here is the value, so
the same is for the all other

NOTE Confidence: 0.84143955

a5f8117f-13cd-438d-be3d-57d6713c0bf3
00:30:53.504 --> 00:30:56.717
cells. You have to see
what's the current state,

NOTE Confidence: 0.84143955

df349113-eec3-4f7a-b1da-483b91f4cedd
00:30:56.717 --> 00:31:00.644
what is the input to the
flip flop based on the

NOTE Confidence: 0.84143955

668389d2-7b62-4d10-ba6b-0309ff9cc467
00:31:00.644 --> 00:31:01.715
value of X.

NOTE Confidence: 0.917381

dbed67b0-4366-45e6-ab1f-0318fb5eadbd
00:31:05.220 --> 00:31:05.990
So.

NOTE Confidence: 0.8446709

68c1d1d5-84e9-4e7d-bd37-25657d354643
00:31:07.650 --> 00:31:13.058
Here is the recap. When we have
inputs and outputs so far, so

NOTE Confidence: 0.8446709

e30e48fd-67f1-4b75-85e3-29a0e38572f1
00:31:13.058 --> 00:31:17.218
they state table. Gonna have two
additional columns for inputs

NOTE Confidence: 0.8446709

b9372de9-4f71-49ca-844b-c5e15cbf1295
00:31:17.218 --> 00:31:22.626
and outputs the in order to fill
out you have to consider the

NOTE Confidence: 0.8446709

92dad702-d827-402b-a3dd-9911e20feeba
00:31:22.626 --> 00:31:27.618
value for the outputs. Also,
when you fill out the next state

NOTE Confidence: 0.8446709

a4b43d2c-84e1-4b8c-b844-360122f30923
00:31:27.618 --> 00:31:33.026
you have to consider the value
of the input variables the X. So

NOTE Confidence: 0.8446709

45eb2bb3-26d3-4d27-9c3b-44df6b8d306b
00:31:33.026 --> 00:31:37.602
after filling out the state table we
have to form the state

NOTE Confidence: 0.8415993

519db98b-64f5-4aa0-b38a-2fc228b0b4d6
00:31:37.602 --> 00:31:41.949
transition. Diagram so before we
saw that the state transition

NOTE Confidence: 0.8415993

2a1402f6-f6be-4f87-86dd-f4597f58ec99
00:31:41.949 --> 00:31:47.001
diagram is a diagram that for
each state we haven't known and

NOTE Confidence: 0.8415993

af83a03c-0537-4ca3-9f2d-a1c82a65c55f
00:31:47.001 --> 00:31:52.053
from one state to another state
or from one node to another

NOTE Confidence: 0.8415993

06f4ce8c-2783-4b91-a3b2-cb29ef7d6d0b
00:31:52.053 --> 00:31:56.263
node. We haven't directed Edge
which says basically says that

NOTE Confidence: 0.8415993

29137af1-8d66-4873-b6a1-ef019af8a90b
00:31:56.263 --> 00:32:00.473
at the next positive edge this
states the transition between

NOTE Confidence: 0.8415993

7ad0dc00-f4bc-4319-bb25-8e74bafeac69
00:32:00.473 --> 00:32:05.525
these states. Here we have input
and outputs. So in order to

NOTE Confidence: 0.8415993

571a8005-ab2e-4394-a9d9-e106b48544f3
00:32:05.525 --> 00:32:10.577
include the value of the input
and output is a state transition

NOTE Confidence: 0.8725841

391d1c1b-3345-42ec-a827-10296ef13ab6
00:32:10.577 --> 00:32:14.697
diagram. We have to label the
edges and the nodes and we'll

NOTE Confidence: 0.8725841

450b4311-6d67-4797-ba66-9e2689351400
00:32:14.697 --> 00:32:16.479
see how we can do that.

NOTE Confidence: 0.86197966

2ed709e3-1a64-4a62-8f8a-d6f82e6739ce
00:32:18.320 --> 00:32:24.898
So for this circuit we have only
two flip flops A&B. So the

NOTE Confidence: 0.86197966

ef6fd7a5-ac83-4e06-a76b-3a6110118172
00:32:24.898 --> 00:32:30.464
number of states gonna be 4
different states based only on

NOTE Confidence: 0.86197966

cb22041b-ebd3-4377-bff7-6b7ddb2eb4a2
00:32:30.464 --> 00:32:37.042
the flip flops or the memory.
And it's either a is zero. B is 0 A

NOTE Confidence: 0.86197966

fa5d8a1a-9a5c-43bf-a360-b67c3c269452
00:32:37.042 --> 00:32:42.608
is 1,B is zero, A is 0, B is 1 and a
is 1, B is 1.

NOTE Confidence: 0.89500964

fa1ec096-a25d-46d7-b114-1fbf9437b2ba
00:32:43.240 --> 00:32:46.240
So again, this is very
similar when when we don't

NOTE Confidence: 0.89500964

f144f456-cea5-4f4b-8da8-44d20c23a5b9
00:32:46.240 --> 00:32:47.740
have any input or output.

NOTE Confidence: 0.8726893

452bfb84-c777-46e1-b8f2-2c427cdf7b42
00:32:48.890 --> 00:32:53.546
What the value of the X instead
of going inside this state?

NOTE Confidence: 0.8726893

1b29a39c-0e84-46f8-a122-566e8acad85c
00:32:53.546 --> 00:32:57.814
Because it's not memory unit,
it's a input variable goes on

NOTE Confidence: 0.8726893

21375c9e-3d1e-41b8-9aba-91f10f82ddba
00:32:57.814 --> 00:32:59.366
top of the edges.

NOTE Confidence: 0.8664066

ab008918-984b-444b-899b-63d30e4dd876
00:33:01.100 --> 00:33:05.897
So the label on edges shows the
value of the input variable or

NOTE Confidence: 0.8664066

6a6c1096-362f-4a9a-9ff1-eb0eb9247021
00:33:05.897 --> 00:33:10.694
X. Here we have only one input
variable. We have only one digit

NOTE Confidence: 0.8664066

850c847f-bdc3-4863-a32f-ce2c393f4e46
00:33:10.694 --> 00:33:15.491
on each edge is, so basically it
says that when we are correctly

NOTE Confidence: 0.8664066

99e6046f-425b-4bb8-bd91-9bbfbf3ff67b
00:33:15.491 --> 00:33:20.288
as the state 00 men, meaning
that the value of the flip flops

NOTE Confidence: 0.89878404

3d7d020d-6a41-44a5-bdb2-d45e81e7f859
00:33:20.288 --> 00:33:24.488
are 00. And the input
is zero. We continue to

NOTE Confidence: 0.89878404

8747dfb7-ec80-4231-8bc4-035a0eedbf2f
00:33:24.488 --> 00:33:26.243
go on the same state.

NOTE Confidence: 0.88531655

bbcd9a57-7f91-4750-b1f8-1d7be5441fa1
00:33:27.460 --> 00:33:31.600
If the input variable change
to one is still we stay in

NOTE Confidence: 0.88531655

0b7d183d-53be-4474-b329-23f763f2a764
00:33:31.600 --> 00:33:35.050
the 00 state, so let's back
to the state table.

NOTE Confidence: 0.8689429

9f614219-55d8-4ba5-8521-dde9686d6380
00:33:36.740 --> 00:33:42.788
So basically here is the state
table, so if X is zero and the

NOTE Confidence: 0.8689429

93216073-0687-4253-9e3b-a1d47d5bdcbb
00:33:42.788 --> 00:33:48.404
current state is 00, we end up
with 00 in the next state.

NOTE Confidence: 0.8693561

c1b5795f-aaa7-441b-abd2-442345486e30
00:33:50.050 --> 00:33:52.690
Also, if the X is 1.

NOTE Confidence: 0.89358604

6aa1707e-9fde-4041-b647-fc013a54d7c4
00:33:53.820 --> 00:33:58.407
And the current state is 00. We
end up with 00.

NOTE Confidence: 0.8784582

f634e470-9cda-4065-8ce9-5d53c2e26067
00:33:59.030 --> 00:34:03.983
So here is the state transition
diagram. As long as we are in

NOTE Confidence: 0.8784582

ca695379-6cd6-467b-a39a-51f0c9b628f2
00:34:03.983 --> 00:34:09.317
00, whether the input is zero or
one, we stay in the same state.

NOTE Confidence: 0.9176961

ddd4afb6-122a-4bab-a444-ee2278245850
00:34:09.940 --> 00:34:13.603
We don't change the value of the
flip flops or memory.

NOTE Confidence: 0.9109341

099e7ff3-21c5-4b93-8f14-05323307b3aa
00:34:14.470 --> 00:34:17.140
However, let's look at
this example.

NOTE Confidence: 0.8695589

e0324fe2-7405-4164-85aa-2b3d1780affa
00:34:19.370 --> 00:34:22.912
When we have, when we are
in the 10 state, meaning

NOTE Confidence: 0.8695589

a00adb8f-d778-45ab-879b-66baa5aada47
00:34:22.912 --> 00:34:26.132
that the current value of
the flip flops are 10.

NOTE Confidence: 0.90414035

a3f16b5f-0383-4ab8-9d3e-a48ed25b2d49
00:34:27.190 --> 00:34:31.198
If the value of input is
zero, we stay in the same

NOTE Confidence: 0.90414035

3b29f74b-2231-4760-ae89-a5cd3bbef0d5
00:34:31.198 --> 00:34:34.872
state. We don't change the
value of the memory unit .

NOTE Confidence: 0.90414035

651cdc28-dd36-4492-a2f5-74973f6344bc
00:34:34.872 --> 00:34:38.546
However, if you change the X
to one, it makes the

NOTE Confidence: 0.90414035

04bee045-abe4-4d91-ad38-d20ef6574656
00:34:38.546 --> 00:34:40.884
transition from 1 zero to 1
one.

NOTE Confidence: 0.87438864

cd18c281-e5fc-4a5c-85f0-26213bc091b3
00:34:43.310 --> 00:34:49.960
So let's back to the state
table. So if the X is 0 and

NOTE Confidence: 0.87438864

e4c1f4a3-f37f-479b-8ef0-a97bada99e2e
00:34:49.960 --> 00:34:51.860
we are at 10.

NOTE Confidence: 0.90307194

6fae6182-1dbd-426b-b0b4-82a2c272fe9c
00:34:52.590 --> 00:34:55.158
The next step is still 10.

NOTE Confidence: 0.92434067

80c0b739-8418-4a34-b38a-6b928833f676
00:34:55.990 --> 00:34:59.778
However. If you're at 10.

NOTE Confidence: 0.9050472

46868e35-17cd-495c-ad92-4d7cca71bb3d
00:35:01.270 --> 00:35:03.508
And the X changes is to one.

NOTE Confidence: 0.9225248

ff3d6bd1-8bbb-4383-b07a-ea4fe059a0e2
00:35:04.310 --> 00:35:06.330
We moved to 11.

NOTE Confidence: 0.89290667

f9dc4ac5-9499-4e54-85b0-d030a04bd9c0
00:35:07.950 --> 00:35:12.130
And this transition happens when
the first positive edge comes.

NOTE Confidence: 0.87294257

339cc077-e29d-4c43-921d-1111f2304896
00:35:12.830 --> 00:35:17.162
As long as we don't have any
positive edge, there is no

NOTE Confidence: 0.87294257

47490322-ba23-4c06-87c5-f38bf4df30ac
00:35:17.162 --> 00:35:21.855
transition. X is also one, and
the current state is 010, but as

NOTE Confidence: 0.87294257

27ec3f60-0054-4697-9dde-7f2224b2bd4a
00:35:21.855 --> 00:35:25.826
long as the first positive edge
comes, we do the transition

NOTE Confidence: 0.87294257

7481603f-6956-485c-9946-dbb23dfc5cbf
00:35:25.826 --> 00:35:29.797
because you can see that the
flip flops are synchronized with

NOTE Confidence: 0.87294257

90ad669e-d4e3-4ee8-a6a1-1255b3c12110
00:35:29.797 --> 00:35:34.129
the positive edge of the Clock.
So when the first positive edge

NOTE Confidence: 0.87294257

45919f3a-8f3e-449e-a962-e0063f6cbc35
00:35:34.129 --> 00:35:35.573
comes with Transit to 11.

NOTE Confidence: 0.8964757

ae1963d2-b4a6-4c95-80e9-8937d69a305d
00:35:36.650 --> 00:35:39.350
And here is the state
transition.

NOTE Confidence: 0.82341146

e209ec3b-10dd-4c21-af3d-5458ac0b9e44
00:35:40.880 --> 00:35:47.034
If you add 1 zero and the input
is X, the input X is equal to 1.

NOTE Confidence: 0.82341146

aacbd87a-d236-420e-b125-6845c0ef1911
00:35:47.034 --> 00:35:51.016
We wait up until the first
positive edge when the first

NOTE Confidence: 0.82341146

4052422c-7663-48e7-95d0-691a7332b54f
00:35:51.016 --> 00:35:54.274
positive edge comes we transit to
next State 11.

NOTE Confidence: 0.88439316

f2f9c817-f563-4856-ae4e-cf9049479719
00:35:56.460 --> 00:36:00.696
So the value of X goes on top of
the directed edges.

NOTE Confidence: 0.8321968

ee48d9cd-6789-4cea-be86-c0b81b95b928
00:36:01.780 --> 00:36:06.906
However, we also have outputs,
so where we can include the

NOTE Confidence: 0.8321968

1e938068-7fa8-4f2f-a4bd-27b43b9a1aa5
00:36:06.906 --> 00:36:09.236
output in the state diagram.

NOTE Confidence: 0.87581354

3be6608d-d021-413f-95e7-0c0a5fc0a97a
00:36:10.670 --> 00:36:15.080
The outputs because we are
following the moore model, which

NOTE Confidence: 0.87581354

b33affe1-ac88-4ed7-92be-29f0e94af6e7
00:36:15.080 --> 00:36:19.931
means that the output only
depends on the current state of

NOTE Confidence: 0.87581354

ba04eadf-422f-4062-9d34-54565767c8a6
00:36:19.931 --> 00:36:25.223
the flip flops, so it doesn't
depend on the value of the

NOTE Confidence: 0.885387

6074a322-81db-403c-a145-a675466438ae
00:36:25.223 --> 00:36:32.017
input. So we can put the label
on each node or on each state

NOTE Confidence: 0.885387

6b01ab1b-7f9d-4306-961e-5bbe13090cbd
00:36:32.017 --> 00:36:34.591
for the Y for the output

NOTE Confidence: 0.8512243

5417bf39-260b-498b-96ed-37cab4842b80
00:36:34.591 --> 00:36:40.088
variable. So as you can see,
let's back to be a state table.

NOTE Confidence: 0.8512243

c016a181-be64-4c95-bfd0-f80af1c6b0da
00:36:40.088 --> 00:36:45.473
As long as the current state is
00, the Y is A&B so the Y

NOTE Confidence: 0.8512243

b06fe7db-c286-4357-b5b8-610b890420bd
00:36:45.473 --> 00:36:46.550
gonna be 0.

NOTE Confidence: 0.8604995

c2bf3bfd-ed53-402b-a93c-303ee01b4525
00:36:47.300 --> 00:36:52.196
So here again, 00 Y gonna
be 0. It doesn't depend on

NOTE Confidence: 0.8604995

1e01abf0-6ab9-4afc-9d0d-0bd3b1797abc
00:36:52.196 --> 00:36:55.868
the value of X, so let's
back to the state

NOTE Confidence: 0.8604995

92657f84-04e7-4faa-812e-039084a6604d
00:36:55.868 --> 00:37:00.356
transition. As long as we
are at state 00, then Y

NOTE Confidence: 0.8604995

044ea471-2044-4960-af8b-f567a93d7186
00:37:00.356 --> 00:37:01.580
gonna be 0?

NOTE Confidence: 0.86965185

46ffc7f0-113a-470c-92b5-66d2da430b17
00:37:03.170 --> 00:37:08.642
However, if you're at State 01,
they AND gonna be a still

NOTE Confidence: 0.86965185

a215cbd6-0d88-461b-98c0-02b5485a11f3
00:37:08.642 --> 00:37:15.026
0 10 0. The only time that the
output is one is when we are at

NOTE Confidence: 0.86965185

2fc57a03-6469-4200-9f62-3b3dd22d816f
00:37:15.026 --> 00:37:16.394
the State 11.

NOTE Confidence: 0.881258

75ba3929-d1b9-455c-aa9f-2fecb45222db
00:37:18.930 --> 00:37:24.090
So here is how we include the
output to the state transition

NOTE Confidence: 0.881258

6d83a92f-3654-4ddd-942c-4d3ad835ef4a
00:37:24.090 --> 00:37:29.680
diagram, so the input value goes
on top of the edges and the

NOTE Confidence: 0.881258

9123c2c3-9f37-42e3-883e-73bee67fdf95
00:37:29.680 --> 00:37:33.550
output value goes inside the
state or inside the.

NOTE Confidence: 0.7081751

29f8fcb2-e98f-4604-a487-6681a8cc8f7c
00:37:35.110 --> 00:37:36.810
One thing is that.

NOTE Confidence: 0.88978636

5d5d8c07-a3b1-4658-ad25-3d486dfc77e7
00:37:38.120 --> 00:37:42.179
How long we can produce one in
the output for Y?

NOTE Confidence: 0.8637968

d3241b59-3dba-4ea0-b3dd-f47f55c9f238
00:37:43.010 --> 00:37:45.593
The thing is, let's back to
the state table.

NOTE Confidence: 0.9011808

68606091-f942-4a4e-801f-84f36bf1b43b
00:37:47.320 --> 00:37:49.875
You see that as long as a.

NOTE Confidence: 0.8906375

f4bf90bd-5721-40bc-aa2c-dc486fb80ac5
00:37:52.450 --> 00:37:55.794
Is 1, B is one you see that here.

NOTE Confidence: 0.86589605

84c26393-abdf-49eb-b6b0-454afa28b88b
00:37:59.380 --> 00:38:01.410
If the X becomes one.

NOTE Confidence: 0.84234136

f891c3cd-f51b-46d9-a736-8cf3c1732828
00:38:02.680 --> 00:38:07.170
We have to still the Y
depends on A&B so.

NOTE Confidence: 0.9225534

eda74f8f-d826-4c9f-b307-7a3bf7f924fc
00:38:07.790 --> 00:38:08.610
Is 1.

NOTE Confidence: 0.8948957

d9dfe554-6beb-4f17-8047-ec352c6f4258
00:38:09.980 --> 00:38:12.715
However, if the first positive

NOTE Confidence: 0.8817927

3be7c4a9-22b5-45ef-8e2c-7ceacb1576d2
00:38:12.715 --> 00:38:19.050
edge comes. The one one Transit
to 01 and then when we do the

NOTE Confidence: 0.8817927

faf202c5-5e88-4ce1-97be-c2f8ca11da19
00:38:19.050 --> 00:38:24.930
transition now the A becomes
one. And B is 0, so Y is not

NOTE Confidence: 0.8962831

82b6110e-a880-409f-b4fb-e9673e81ecd7
00:38:24.930 --> 00:38:30.070
one anymore? So let's practice
the transition. So if you are at

NOTE Confidence: 0.8962831

ec0c03eb-e2cb-42b4-af19-8869d12a0560
00:38:30.070 --> 00:38:32.718
1 one and we have one in the

NOTE Confidence: 0.88578755

a950c26a-0140-4a36-b790-48daab339f2d
00:38:32.718 --> 00:38:36.880
input. As long as there is no
positive edge, there is no

NOTE Confidence: 0.88578755

566d277f-a09b-4827-b311-2e46b8188b95
00:38:36.880 --> 00:38:39.490
transition, so we can produce
one in the output.

NOTE Confidence: 0.8361126

2b838c8d-f44a-4c1d-bbab-266f54704510
00:38:40.050 --> 00:38:43.618
However, if the first
positive edge comes we

NOTE Confidence: 0.8361126

a5179517-f76f-42a9-916d-4e705f65bbb8
00:38:43.618 --> 00:38:45.848
transit to the next state.

NOTE Confidence: 0.8451935

07c5929e-6d9b-447b-b025-ae9e305b62e6
00:38:46.860 --> 00:38:51.648
Which is here an as long when we
end up with this state. Y

NOTE Confidence: 0.8451935

0e69cfd4-b440-40ee-b934-fb01140334e7
00:38:51.648 --> 00:38:52.674
changes to 0?

NOTE Confidence: 0.87704134

45f78719-b054-4bf6-b5bf-e4dd9b2c4120
00:38:54.100 --> 00:38:57.268
So this is the way actually
shows that the Y only

NOTE Confidence: 0.87704134

5bddc7df-b3ba-4984-89bc-8d2b5a22422c
00:38:57.268 --> 00:38:58.420
depends on the state.

NOTE Confidence: 0.88227135

f110a60b-f266-4828-82cf-24489133c5bc
00:39:01.400 --> 00:39:05.384
And then optionally you can do
some more analysis in order to

NOTE Confidence: 0.88227135

58b1c918-e8aa-437f-a419-b9727709d768
00:39:05.384 --> 00:39:08.704
figure out what's the problem
with the design with the

NOTE Confidence: 0.88227135

a8af15e8-b6bd-46c0-9fcc-fbcc4405758e
00:39:08.704 --> 00:39:12.356
circuit, and in order to improve
the circuit if there's any

NOTE Confidence: 0.88227135

ed06ef3d-7fe7-4d09-8667-1b53485b733c
00:39:12.356 --> 00:39:15.344
problem. For instance, in this
design you see that.

NOTE Confidence: 0.86427224

6b68017e-8159-457b-ab96-efe1ddcc736e
00:39:15.920 --> 00:39:20.540
There's a life lock in the
circuit. If at some point this

NOTE Confidence: 0.86427224

5205db27-dd58-4083-9d10-44abc092dda8
00:39:20.540 --> 00:39:24.390
circuit goes to the state 00 in
the flip flops.

NOTE Confidence: 0.84095603

943331b7-3c6b-4812-9db6-becd1f92155d
00:39:25.240 --> 00:39:30.412
You can never get away from
that, because if even if you

NOTE Confidence: 0.84095603

e5250f3e-1da0-4dae-805d-468664622870
00:39:30.412 --> 00:39:36.446
change the input to 0 or in the
X one I iT stucks in this

NOTE Confidence: 0.84095603

ef0a9f8c-edd5-44cc-8bc8-a24967f1a616
00:39:36.446 --> 00:39:41.618
state, it never actually escape
from this state and the Y value

NOTE Confidence: 0.84095603

b06d551e-508f-42c9-a7fd-2195a395fa98
00:39:41.618 --> 00:39:42.911
is always 0.

NOTE Confidence: 0.9058354

1260eb67-5d5c-4593-9828-f51242b8e8d4
00:39:43.700 --> 00:39:45.788
So this is the problem
with the circuit and

NOTE Confidence: 0.9058354

266e1f47-eebb-40b3-a976-f3dc9cea8c1c
00:39:45.788 --> 00:39:46.948
you have to fix this.

NOTE Confidence: 0.8243917

032a8a62-339f-443a-b699-94f7784657fd
00:39:48.390 --> 00:39:52.854
It states you have to change
the circuit in order to. For

NOTE Confidence: 0.8243917

0399cb2f-cce7-404c-9337-9050ce36e5e7
00:39:52.854 --> 00:39:56.946
instance, if you change the
value of X, it transit to

NOTE Confidence: 0.8243917

b9444d84-f413-48c6-87d4-6477bd50739f
00:39:56.946 --> 00:39:57.690
another states.

NOTE Confidence: 0.16078976

64205f9c-e483-4061-8676-80818de05b02
00:40:00.530 --> 00:40:01.200
Uh.

NOTE Confidence: 0.8881108

2e8244ba-556a-464c-a4bc-e4e92ea544e3
00:40:02.460 --> 00:40:03.720
Any questions so far?

NOTE Confidence: 0.93235743

0aab6888-0295-4013-a631-fa33ffc86e4a
00:40:11.490 --> 00:40:12.410
No questions.

NOTE Confidence: 0.79334956

c8246e04-ccc3-4d8d-85ef-6a5728902201
00:40:16.320 --> 00:40:22.520
So. Now I wanna just a
little bit explain what happens

NOTE Confidence: 0.79334956

b01155b9-d52c-4239-9c48-3d23bf1b26f8
00:40:22.520 --> 00:40:27.630
if we have an output based on
the Mealy Model.

NOTE Confidence: 0.8553044

5a86ec7a-5b23-46f9-87d9-e27d7f437836
00:40:29.640 --> 00:40:34.488
So imagine we do a little bit of
change to the circuit. The only

NOTE Confidence: 0.8553044

45e73bd7-cf5b-4a0b-b393-bbd6194e452c
00:40:34.488 --> 00:40:39.740
change is this. We attach X to
the AND for the Y output.

NOTE Confidence: 0.89759856

adc710af-7d13-4bdc-bf4a-79cd0193c619
00:40:40.720 --> 00:40:45.578
So now, Y not only depends on
the state of the flip flops, but

NOTE Confidence: 0.89759856

6b826f25-ff7f-4867-9099-df637976d4b2
00:40:45.578 --> 00:40:48.007
also it depends on the value of

NOTE Confidence: 0.93743414

9b310a4a-5b92-4d39-a0ce-353636b29e59
00:40:48.007 --> 00:40:50.828
the input. So Y is

NOTE Confidence: 0.8470966

fb88a7ea-e6aa-4e3b-9562-30368faeb64e
00:40:51.890 --> 00:40:56.813
this flip flop AND with this
flip flop. A&B&X.

NOTE Confidence: 0.85080063

a1c77487-920b-411f-bf3a-2ed3bf541ac7
00:40:58.280 --> 00:41:03.880
So let's see what happens when
we do that. So the first

NOTE Confidence: 0.85080063

d5a3a639-6d0a-481f-9420-bb763edd996f
00:41:03.880 --> 00:41:08.280
thing that happens is that before
this, if you don't have this

NOTE Confidence: 0.8577063

31a823c4-1e69-404c-8600-f6f6d428f14d
00:41:08.280 --> 00:41:14.172
link, Y only depends on this
flip flop and this flip flop.

NOTE Confidence: 0.83773696

0d7b0f67-71d5-48f4-ab3c-22c4bfb8ca65
00:41:14.172 --> 00:41:19.218
A and B. And A and B only changes
when the positive edge

NOTE Confidence: 0.83773696

06b09cfb-a10c-4152-a83e-da8cad68b088
00:41:19.218 --> 00:41:22.550
comes because they are
synchronized with Clock.

NOTE Confidence: 0.8110759

c2cdac60-4e0c-4c52-a24b-bba7197e75c6
00:41:23.940 --> 00:41:30.661
So because Y was only depend
on the A&B, the value of Y

NOTE Confidence: 0.8110759

c7d43dbb-f1ca-422d-8c32-a1ca49df2e11
00:41:30.661 --> 00:41:35.831
sync was synchronized by the
Clock as well, because Y

NOTE Confidence: 0.8110759

059eaed8-2238-4345-93ce-e6f006a67742
00:41:35.831 --> 00:41:42.035
depends only on A and B, and A and B only
changes when the positive edge

NOTE Confidence: 0.8110759

8f91dff2-a01e-4291-b920-f5f9d63937d7
00:41:42.035 --> 00:41:47.722
comes, so Y was synchronized
with the Clock 2. However, now

NOTE Confidence: 0.8110759

2b06ebe4-951f-44da-8ff1-6d45cdf9007c
00:41:47.722 --> 00:41:50.307
X doesn't depend on the

NOTE Confidence: 0.8564306

010bc446-7106-4f7e-bae9-7626bc115c17
00:41:50.307 --> 00:41:54.150
Clock. X can be changed anytime

NOTE Confidence: 0.87840515

ff1d22cc-c6eb-46ac-9dc8-262f28ed78b8
00:41:54.150 --> 00:41:58.554
anyway. So X is not synchronized
with the Clock.

NOTE Confidence: 0.846771

c71a56a1-8aae-4227-9c8a-36364bbcca91
00:41:59.220 --> 00:42:05.064
When we attach X to this end,
Y is not synchronized anymore

NOTE Confidence: 0.8164441

bf3d9014-ba34-4772-bb8c-02b71b7d8821
00:42:05.700 --> 00:42:10.679
with the Clock, because Y now
depends on the X. As long as

NOTE Confidence: 0.8164441

ee7e5db1-e63c-46e3-9459-43571ce7e92c
00:42:10.679 --> 00:42:15.275
X changes, Y changes too. So
this is one problem with Mealy

NOTE Confidence: 0.8164441

452fecb7-4cc2-4961-8b03-567624b27efa
00:42:15.275 --> 00:42:19.488
Design. That's why Moore says
that "let's limit Y to be

NOTE Confidence: 0.8164441

164f5cbd-9ff2-4ba3-9835-8eb5f355f7ed
00:42:19.488 --> 00:42:21.403
dependent on

NOTE Confidence: 0.8530861

d25bc368-86f5-4daa-9d4e-f67e58d6cd12
00:42:22.080 --> 00:42:26.073
the flip flops". This way we
can synchronize Y based on

NOTE Confidence: 0.8530861

0d9a0798-28cd-4125-88fc-2c8c332fabf8
00:42:26.073 --> 00:42:30.429
the Clock, but if you attach
the input to the output based

NOTE Confidence: 0.8530861

626190ec-0091-4f52-af17-3d4a356495c6
00:42:30.429 --> 00:42:33.696
on the Mealy model, the Y
actually loses the

NOTE Confidence: 0.8530861

fc6477c0-76b8-4e58-8492-2fbee0218ce1
00:42:33.696 --> 00:42:36.600
synchronization with the
Clock and depends on the

NOTE Confidence: 0.8530861

c5b88f98-9baa-4e16-b4c9-11c2d075da71
00:42:36.600 --> 00:42:39.867
input variable. Whenever the
X changes, the Y changes. This

NOTE Confidence: 0.8530861

d074d854-bc9d-497a-bb16-b56e89d01219
00:42:39.867 --> 00:42:40.956
is one problem.

NOTE Confidence: 0.87821394

bc96a840-9891-4fde-8ed2-786148fced5a
00:42:42.660 --> 00:42:49.030
And if we consider that in the
state table, Y is A&B&X so the

NOTE Confidence: 0.87821394

a57c515f-b0a9-4bfd-a14a-103c2b659287
00:42:49.030 --> 00:42:55.400
value now changes and we have to
consider the value of X. So the

NOTE Confidence: 0.87821394

f07efdd8-176e-4947-9293-0bda8852e2ca
00:42:55.400 --> 00:43:02.225
only time now where the Y becomes one
is if A is 1, B is 1 and the

NOTE Confidence: 0.87821394

9d445277-1f0e-492b-adb4-ea9a085b2849
00:43:02.225 --> 00:43:03.590
input is 1.

NOTE Confidence: 0.84599227

5dfaad21-1721-4f9c-a51b-b63daae0b0e6
00:43:05.410 --> 00:43:10.210
That was the case when
we only have Y depends on

NOTE Confidence: 0.84599227

32a4970c-2358-4a30-ba26-b048af1941f1
00:43:10.210 --> 00:43:14.610
A and B, which was one. Now
because it depends on X, X is

NOTE Confidence: 0.84599227

86d16ec3-c3cf-48f1-802d-82e597d45c50
00:43:14.610 --> 00:43:15.810
zero, so it becomes.

NOTE Confidence: 0.8483255

59ebe3bd-366e-49ec-bf4d-f86e7f0ea1cb
00:43:17.340 --> 00:43:22.050
That's the change that based
on the Mealy Model, which happens

NOTE Confidence: 0.8483255

74849d26-1ece-4e3b-84df-6b03babb847d
00:43:22.050 --> 00:43:26.289
to the state table because
now Y is A&B&X.

NOTE Confidence: 0.8653375

101e6747-738d-46ef-b6fc-a965222774cb
00:43:28.400 --> 00:43:31.600
And there is another change to
the state transition diagram.

NOTE Confidence: 0.88609785

9076b143-0f2c-418d-94c5-410a3e9a1df8
00:43:32.310 --> 00:43:37.205
So the state transition diagram
in terms of the number of

NOTE Confidence: 0.88609785

62ddc24d-dd19-44cd-846d-cf296c151682
00:43:37.205 --> 00:43:42.100
states, this is the A&B
00 01 10 11. 1 for the A&B flip flop.

NOTE Confidence: 0.8878087

25a558fa-dec3-478e-86ab-b26dac834af7
00:43:42.870 --> 00:43:45.660
And the label for the edges.

NOTE Confidence: 0.7768808

c6c87838-18e3-4d3f-99b9-8c81f12955bd
00:43:46.290 --> 00:43:52.114
The input X, here it's 0, here it's 1
and etc. The red label

NOTE Confidence: 0.8880479

90393dfa-8267-4bcb-9b4f-c5a84cfea70e
00:43:52.760 --> 00:43:57.716
is for the X the same as the
Moore model, but here because the

NOTE Confidence: 0.8880479

6abbbe6a-a140-48d4-89b5-c79061beed21
00:43:57.716 --> 00:44:02.318
output depends on the input,
it goes on the edge because we

NOTE Confidence: 0.8880479

a56febb3-31d9-4b29-b0fd-7e10f3fad519
00:44:02.318 --> 00:44:07.274
have to consider the value of X
as well. So for instance here if

NOTE Confidence: 0.8880479

090a299f-5086-4f62-9453-af44fbeaa1c8
00:44:07.274 --> 00:44:09.398
you are at the State 10.

NOTE Confidence: 0.92225367

95336101-8d5b-4343-a3cb-deae3fec8a55
00:44:10.410 --> 00:44:12.370
And the input is 1.

NOTE Confidence: 0.91449183

8d113a10-99ad-4a45-81ac-f45b2922fb1b
00:44:13.490 --> 00:44:18.026
We produce the value
of zero in the output.

NOTE Confidence: 0.874924

ca8b00d6-a853-4435-9397-1a91aa6cd190
00:44:19.360 --> 00:44:25.276
As long as we are at 1 zero and
the input is 1, so one AND one

NOTE Confidence: 0.874924

31abab19-8bfc-4117-9f67-f522995bcc14
00:44:25.276 --> 00:44:28.756
AND zero becomes zero. However,
if the first positive edge

NOTE Confidence: 0.82504916

8ecc8e7d-19a0-40bc-a53c-cb3b0761ba68
00:44:28.756 --> 00:44:32.590
comes. We transit from this
state to this state.

NOTE Confidence: 0.9074784

35912212-185e-4b5b-90ba-73fd390c1cc2
00:44:33.250 --> 00:44:38.497
So now one one and the input is
one, so we produce

NOTE Confidence: 0.9258109

f34da49e-1a50-4ef5-8f0c-11bb3a67f825
00:44:39.380 --> 00:44:39.890
1.

NOTE Confidence: 0.84829974

e6d630a4-bee2-4f1a-b6f7-c1c6bcdac67f
00:44:41.540 --> 00:44:46.754
Up until the next positive edge.
Before the next positive edge,

NOTE Confidence: 0.84829974

8a7b8f38-9319-44b2-86ba-5cf9c07206b9
00:44:46.754 --> 00:44:51.968
we produce one. If the next
positive edge comes, we transit

NOTE Confidence: 0.84829974

293bf372-c663-40b9-8894-42127f02943c
00:44:51.968 --> 00:44:56.234
from 11 to 01 and now the output
gonna be 0.

NOTE Confidence: 0.91370934

0aa03465-56d3-43d0-a031-6fefb7d07a99
00:44:58.130 --> 00:44:59.558
The input is 1.

NOTE Confidence: 0.85994685

b32b7b07-209a-4b10-8d4f-c904a3e570a9
00:45:00.300 --> 00:45:04.836
The state is 01. The AND
of three becomes 0, so the

NOTE Confidence: 0.85994685

52dc6452-7086-47c5-863f-a4ec326a2983
00:45:04.836 --> 00:45:08.616
output value goes
on the edges because it

NOTE Confidence: 0.85994685

b579bf1b-cc8f-4709-b690-25e6d1ac6b5d
00:45:08.616 --> 00:45:10.884
depends on the value of X.

NOTE Confidence: 0.87219423

6bd8e9bc-2d06-4781-a2a2-657714dceea3
00:45:15.560 --> 00:45:20.096
So that was the analysis of a
sequential circuit when we

NOTE Confidence: 0.87219423

0d42bd0d-37f2-4da4-92d3-f5e477b110bb
00:45:20.096 --> 00:45:24.632
have the inputs and outputs, and
one thing you have to pay

NOTE Confidence: 0.87219423

181861e6-1155-4141-84de-af2a1fb17261
00:45:24.632 --> 00:45:29.546
attention is that the output is
based on the Moore model or Mealy

NOTE Confidence: 0.8707535

42422d0f-b9aa-4aba-9a8a-9e95a418e69a
00:45:29.546 --> 00:45:34.876
model. If it depends on the
Moore model, which is simply saying that

NOTE Confidence: 0.8707535

02cd7099-b456-4f8c-8ece-62eb3f96b43e
00:45:34.876 --> 00:45:38.814
the output only depends on the
memory units or the flip flops.

NOTE Confidence: 0.85122514

5afbf311-d9da-4629-865a-26bc9ee1eac9
00:45:39.490 --> 00:45:44.146
However, if it is based on the
Mealy Model, you have to

NOTE Confidence: 0.85122514

75e40e46-4f19-4c43-b09e-f861ee6227b1
00:45:44.146 --> 00:45:48.026
consider the value of input
when you calculate the value

NOTE Confidence: 0.85122514

3e9f1123-0eb3-4bf2-adcd-5bfa19a0bb4b
00:45:48.026 --> 00:45:51.518
of the output binary
variables. In this example, we

NOTE Confidence: 0.85122514

6f3dbb36-0e43-4ee5-93ec-5a6b16de0160
00:45:51.518 --> 00:45:55.010
only have one binary input and
one binary output. But

NOTE Confidence: 0.85122514

d43774cd-285d-4ab4-985d-645d54b8ec7a
00:45:55.010 --> 00:45:58.114
sometimes you might have
multiple inputs and multiple

NOTE Confidence: 0.85122514

fd61f2de-4b78-4666-bd3b-0a505a5b1ba1
00:45:58.114 --> 00:45:58.502
outputs.

NOTE Confidence: 0.8954144

4cf0ddbd-6c9c-4a0b-9d2a-29cea057f066
00:46:00.200 --> 00:46:03.480
So now I'm going to go to
the design step.

NOTE Confidence: 0.86843455

b1a24064-03c9-4d51-b9e7-fed2af1be658
00:46:04.510 --> 00:46:09.762
So we did an analysis of a
circuit when we have input and

NOTE Confidence: 0.86843455

255696e5-1384-4c20-9da6-5ee3a4043889
00:46:09.762 --> 00:46:14.610
output and memory units. Now we
want to design the circuit based

NOTE Confidence: 0.86843455

3c992c32-205f-4bed-80f2-5d059f39afd5
00:46:14.610 --> 00:46:19.054
on the inputs and outputs. So
before this new topic, if

NOTE Confidence: 0.86843455

6e8460c0-4094-4547-8de0-1a071d8cf891
00:46:19.054 --> 00:46:21.074
there are any questions, I can

NOTE Confidence: 0.872971

40d7134e-abc5-47ff-8474-a3f8831bf290
00:46:21.720 --> 00:46:25.440
answer that. This is the
time for your questions so,

NOTE Confidence: 0.9079405

7db27443-f140-4f90-a65e-c8d282a2eb83
00:46:26.040 --> 00:46:28.730
please ask questions. If there's
no question, it means that

NOTE Confidence: 0.9204788

37e2763c-c588-49b9-8a28-45fdc77adebc
00:46:29.350 --> 00:46:30.670
there might be some problem.

NOTE Confidence: 0.92388976

6d7516d7-3830-473d-9b46-a340916b1bfa
00:46:40.740 --> 00:46:41.780
No questions?

NOTE Confidence: 0.8998408

a37c7e47-be2b-46d6-9826-c75fc8e3ee8e
00:46:44.750 --> 00:46:48.266
So at least give me some
feedback so that I can make

NOTE Confidence: 0.8998408

dcdf92a7-0529-43c9-98b0-87fd97589b00
00:46:48.266 --> 00:46:50.317
sure that you're listening
to the lecture.

NOTE Confidence: 0.7397843

af79a4ef-b6b7-4617-8b9f-6b6ce734e218
00:46:57.330 --> 00:47:00.018
Thank you Zack.
Thank you Justin.

NOTE Confidence: 0.62738943

4e05dcac-5a03-4259-867d-2eb2faea4e4d
00:47:02.680 --> 00:47:04.350
Thank you, cool.

NOTE Confidence: 0.81979495

9e5fa8ed-b39a-4a10-970f-6745ba8c8f67
00:47:05.180 --> 00:47:10.712
Dennis, Gabe, Ryan. Thank you.
Thank you Marco, Josh. So far

NOTE Confidence: 0.81979495

96355ea2-7fec-4534-9b51-ddff653b3df1
00:47:10.712 --> 00:47:14.861
so good it seems, so let's continue
with the design.

NOTE Confidence: 0.83015734

80b87be6-b765-4304-a8eb-fa7dc6680444
00:47:17.880 --> 00:47:23.210
Again, by an example, I'm going
to explain how can we design a

NOTE Confidence: 0.83015734

6b0c3631-f69f-4667-80e9-71d0cc965d37
00:47:23.210 --> 00:47:26.490
circuit that has memory units,
inputs and outputs.

NOTE Confidence: 0.8737588

b0679b8e-538c-4b54-8baf-6868e760c1d8
00:47:27.440 --> 00:47:32.696
So here is our example problem.
We already designed

NOTE Confidence: 0.8737588

b9484f4b-da5b-46e6-b928-e5389b7197b7
00:47:32.696 --> 00:47:38.828
a counter which was counting
from zero to 7. Now I want to do

NOTE Confidence: 0.8737588

244afe2e-070d-4593-91a2-97f01af831d7
00:47:38.828 --> 00:47:44.084
a little bit of change to that
problem. I want to design a

NOTE Confidence: 0.8737588

47f3ce2f-2e83-4491-8ed2-395ef6eb20c4
00:47:44.084 --> 00:47:48.464
circuit that does counting up and
down. Basically two different

NOTE Confidence: 0.8363442

48eed437-3c97-4917-a7c2-79266674f7b0
00:47:48.464 --> 00:47:53.266
behaviors. And I want to
design a circuit that does these

NOTE Confidence: 0.8363442

c63de5d6-b178-4886-af9b-08a88a55adc1
00:47:53.266 --> 00:47:55.222
two behaviors in one circuit, not

NOTE Confidence: 0.91523063

12949dc0-b3f1-4057-aa6d-7dac78a589af
00:47:55.222 --> 00:48:00.984
two different circuits. So
basically I want to provide the

NOTE Confidence: 0.8662952

56864412-bb8e-447d-9b25-7aad1486d7a3
00:48:00.984 --> 00:48:06.810
behavior that, as long as I
asked the circuit to do counting

NOTE Confidence: 0.8662952

089cf0b3-de85-4924-8b06-43426505b7d7
00:48:06.810 --> 00:48:11.682
up, it does. If the current
number is I,

NOTE Confidence: 0.7855648

f7b8159c-3ff9-45af-b871-591bb557e9c4
00:48:13.200 --> 00:48:16.467
it adds one unit, so from I it goes
to I + 1.

NOTE Confidence: 0.84677726

f5b56da6-007e-4c4a-8f60-b1ad11447930
00:48:17.330 --> 00:48:23.010
From I + 1, it goes to I + 2
and etc. So basically if you are

NOTE Confidence: 0.84677726

27eadc92-4872-4832-b165-f645a45dd685
00:48:23.010 --> 00:48:27.625
going to count up from zero to
7, 0123. However, when we are for

NOTE Confidence: 0.84677726

941f07df-17d1-4db7-9777-aeb8866f3a5c
00:48:27.625 --> 00:48:31.885
instance at three, I might
change my decision and what I

NOTE Confidence: 0.84677726

7091f2ce-93d6-4f90-aef9-1d5e2f825a26
00:48:31.885 --> 00:48:35.790
want to ask the circuit to do is
to count down. For instance,

NOTE Confidence: 0.84677726

149193d4-4bb3-41ce-b8e8-eba59e7ed2ab
00:48:35.790 --> 00:48:41.115
if you are at three now, I want
to switch to count down. So we

NOTE Confidence: 0.84677726

0a42737c-766a-488c-a8a3-5be248e4abcb
00:48:41.115 --> 00:48:46.795
want to move on from 3 to 2, from
2 to 1, from 1 to 0.

NOTE Confidence: 0.8355613

44a78051-4e02-452a-ab1b-ea7587b374be
00:48:47.370 --> 00:48:52.140
So if the current number is 1,
for instance I, I want to countdown

NOTE Confidence: 0.8355613

e8dc0d0c-a6b4-421f-abed-b72b02ab4760
00:48:52.140 --> 00:48:53.412
to I - 1.

NOTE Confidence: 0.8607075

6ff5162a-6494-405c-b69e-8a45e0b131e5
00:48:54.250 --> 00:48:58.837
So basically I want to design
one single circuit that has

NOTE Confidence: 0.8607075

ae20843e-fcd7-4fd8-89a6-ecbf7b01e070
00:48:58.837 --> 00:49:02.590
two behaviors: either counting
up or counting down. Also,

NOTE Confidence: 0.8607075

34659d43-14b4-45b4-9dbf-b5ae34f201e9
00:49:02.590 --> 00:49:08.011
the problem says that I want
to output or turn on a light

NOTE Confidence: 0.8607075

43b4fd72-26f0-4636-b4b5-3ece16face48
00:49:08.011 --> 00:49:13.015
or for instance, open a door
or any indicator. I want

NOTE Confidence: 0.8607075

4972367d-822c-42de-a900-c28b3459e087
00:49:13.015 --> 00:49:17.185
to indicate if the current
number is even or not.

NOTE Confidence: 0.8619231

2549fe2d-5243-4a45-8900-2a07a7eb06e7
00:49:18.840 --> 00:49:23.784
So you see that we have a
problem. We have a

NOTE Confidence: 0.8619231

d4664a18-430c-4689-8fa7-0834100d3f32
00:49:23.784 --> 00:49:26.668
behavior problem that has
two different behaviors

NOTE Confidence: 0.8619231

6b37bbe6-18a6-4d73-b53d-24af90e8d9a6
00:49:26.668 --> 00:49:28.728
and also has one output.

NOTE Confidence: 0.87951535

c92eb75a-e89e-4630-8e9f-2f09f20bd3b8
00:49:30.980 --> 00:49:32.560
So let's design this.

NOTE Confidence: 0.86727256

845cee07-4671-4dc5-bc02-470bcd7a9f9a
00:49:33.840 --> 00:49:38.412
So the design step is very
similar to the design step when

NOTE Confidence: 0.86727256

c9038d4e-d388-4d4c-ae22-cf028f332a62
00:49:38.412 --> 00:49:42.984
we don't have any input or
output, but with a little bit of

NOTE Confidence: 0.8718808

13be0b4c-f8c0-45a8-a9a1-05076241373a
00:49:42.984 --> 00:49:47.620
changes. The first question is
that when you design a circuit,

NOTE Confidence: 0.8718808

7430db33-214b-493e-a58c-7de2848bff89
00:49:47.620 --> 00:49:52.576
you have to ask firstly, do you
need a memory unit or not?

NOTE Confidence: 0.8718808

776a1284-4285-4533-a8b2-cc62c4eeb806
00:49:52.576 --> 00:49:55.762
Are you going to design a
sequential circuit or

NOTE Confidence: 0.87094855

5a3601fd-61b6-4e1e-8491-b272a3e9fa51
00:49:55.762 --> 00:49:59.937
combinational circuit? And the
answer depends on the storage

NOTE Confidence: 0.89822775

59a5a101-4d4e-4155-82e7-e0da8408de9e
00:49:59.937 --> 00:50:03.338
unit. If you need a storage
or memory unit, it means that

NOTE Confidence: 0.89822775

bb269cf9-4e62-4627-ab7e-55a31bbd20a6
00:50:03.338 --> 00:50:05.322
you are going to design a
sequential circuit.

NOTE Confidence: 0.79700005

5dd098e3-3a2e-4d94-9ebb-03976403d76a
00:50:06.520 --> 00:50:09.960
Otherwise, if you don't need any
memory, you are designing

NOTE Confidence: 0.79700005

26a2a05a-3997-4fd3-81c6-e829109cc208
00:50:09.960 --> 00:50:13.400
a combinational circuit and
you know already how to do that

NOTE Confidence: 0.79700005

4239e581-866d-4e07-a831-f781a1e41138
00:50:13.400 --> 00:50:17.184
based on the sum of minterms or
product of maxterms and etc.

NOTE Confidence: 0.87014693

d5cdbc89-b823-432d-b7fd-60ab1e886cf2
00:50:19.000 --> 00:50:23.836
So here for counting up and
down. So for counting up, you

NOTE Confidence: 0.87014693

326e17e4-569b-40fc-a184-da1d076a3e88
00:50:23.836 --> 00:50:28.672
have to count 0123. We already
said that in order to do

NOTE Confidence: 0.87014693

10fea818-dd00-4295-a00c-9c65796d8c67
00:50:28.672 --> 00:50:32.702
counting, you have to memorize
what's the current number in

NOTE Confidence: 0.87014693

aa238a29-f754-4e26-92ee-249e98dbe6e2
00:50:32.702 --> 00:50:37.538
order to do counting. If you
do counting up, if the current

NOTE Confidence: 0.87014693

b001d791-4d2c-45b2-af47-d34d42b4e260
00:50:37.538 --> 00:50:42.777
state is 3, the next number
gonna be 4. If you do counting

NOTE Confidence: 0.87014693

128fcf52-34ec-40bc-8f06-3cf0b7ed93d9
00:50:42.777 --> 00:50:47.613
down again, you have to memorize
the current number, and if you

NOTE Confidence: 0.87014693

fd3caafa-2904-4877-a481-f997bc85424c
00:50:47.613 --> 00:50:49.225
do counting down from

NOTE Confidence: 0.86155206

2138207b-153f-42d4-8551-600d417135c8
00:50:49.290 --> 00:50:51.610
3, it goes to two. From two goes to

NOTE Confidence: 0.91602236

b721f836-123a-4484-88f7-419f00be0307
00:50:51.610 --> 00:50:55.726
one. So you need to memorize
the current number.

NOTE Confidence: 0.89528346

6aaa8a14-ca57-40ff-a726-92bd04818b1f
00:50:57.660 --> 00:51:01.272
So that's why you need 
memory. You have to design a

NOTE Confidence: 0.89528346

b65dc4a7-4720-4b0a-ba62-9b4d91f4f571
00:51:01.272 --> 00:51:04.884
circuit and the next question
is that so now that you need

NOTE Confidence: 0.89528346

2ee6c2a9-9efb-43c8-ab9b-763c11490865
00:51:04.884 --> 00:51:08.496
a storage or memory, how much
storage do you need or how many

NOTE Confidence: 0.89528346

7fee7db6-167c-4cca-a499-6dd065acfd54
00:51:08.496 --> 00:51:09.700
flip flops do you need?

NOTE Confidence: 0.9192699

9391af7b-b376-4c1e-8cd6-10da0cc3cd0c
00:51:11.280 --> 00:51:15.840
So if we are going to count up
until the maximum 7.

NOTE Confidence: 0.8530526

37d81178-a36e-47bc-a322-7f9d23c39028
00:51:16.510 --> 00:51:21.982
We know that 7 in binary
system gonna be 111. So in

NOTE Confidence: 0.8530526

9b88ba7c-abc0-4c47-93a1-c0babd7ba872
00:51:21.982 --> 00:51:27.910
total, we are gonna need 3 bits to
store a number. So 3 bits

NOTE Confidence: 0.8530526

f380a9b1-3e5e-426f-b738-eedfeb10ab25
00:51:27.910 --> 00:51:32.926
means that we need 3 flip
flops. If we are counting

NOTE Confidence: 0.8530526

5a1cb466-b1dd-4079-84b0-4b88661b2876
00:51:32.926 --> 00:51:39.310
up, 000 goes to 001 and then
goes to 010 and etc up until

NOTE Confidence: 0.8530526

536a7181-b583-491c-ac64-2676b64aad1f
00:51:39.310 --> 00:51:39.766
7.

NOTE Confidence: 0.8358669

fa46c7a8-57f9-45ab-a839-46fc038e2d51
00:51:41.430 --> 00:51:47.254
Imagine you are at 100, meaning
it is four, and we change our mind

NOTE Confidence: 0.8358669

7e967161-df2a-43de-abbd-b1d1ce061617
00:51:47.254 --> 00:51:53.078
and we wanted to do counting
down from four. We have to

NOTE Confidence: 0.8358669

50cafb55-5b58-4007-815c-99780781f189
00:51:53.078 --> 00:51:58.454
store 4 = 100. Now we change our
mind, we want to countdown. We

NOTE Confidence: 0.8358669

7cdebf53-46cb-4ecf-91b4-5d2c825c3c31
00:51:58.454 --> 00:52:05.174
move to 011 which is 3. So
you see that from one number, we

NOTE Confidence: 0.8358669

e0f6a324-6ee9-4607-be5c-03b1ddccfa7a
00:52:05.174 --> 00:52:07.862
can either count up or

NOTE Confidence: 0.8896447

62a636fd-f988-4233-b740-14a18519a330
00:52:07.862 --> 00:52:11.210
countdown. In order to do
that, we have to store the

NOTE Confidence: 0.8896447

5f876be2-e2a2-4a4b-9883-ca4bf6bc5f5f
00:52:11.210 --> 00:52:11.666
current number.

NOTE Confidence: 0.8698931

e9da0cc3-ebd2-48e4-b458-ade1f1bf16b0
00:52:13.750 --> 00:52:15.280
So we need 3 flip flops.

NOTE Confidence: 0.8647831

c0ce199f-10bc-4144-b93e-0237df57ec26
00:52:17.420 --> 00:52:21.280
But the only difference, there's one
difference between the design of

NOTE Confidence: 0.8647831

0e2a9ef0-306f-4247-a243-0adb941700f6
00:52:21.280 --> 00:52:25.912
the circuit that only has flip
flops, and this problem is that

NOTE Confidence: 0.8647831

b5d632ff-a61b-4c71-bfbc-7ba8f92346fe
00:52:25.912 --> 00:52:31.316
now you have to see whether you
need input and output or not. So

NOTE Confidence: 0.8647831

03b37267-a878-468c-a487-1c7b1e410640
00:52:31.316 --> 00:52:36.334
not only do you have to think about
how many memory units you need,

NOTE Confidence: 0.8647831

af2024d2-e9e3-499a-9945-66d341eda035
00:52:36.334 --> 00:52:41.352
you have to think about whether you
need inputs or outputs. So in

NOTE Confidence: 0.8647831

f7d5a4cb-0db4-4162-b5cc-55be1232f0e7
00:52:41.352 --> 00:52:46.370
the problem, it says that we want
to design a circuit that has

NOTE Confidence: 0.8442977

39112958-de49-4752-925a-65cf354ce2b8
00:52:46.470 --> 00:52:50.480
two distinct behaviors, either
counting up or down, so it

NOTE Confidence: 0.8442977

39f59d17-3e43-492d-a90b-1313c711f8f3
00:52:50.480 --> 00:52:54.891
implies that you need to switch
between two directions or

NOTE Confidence: 0.8442977

669c8c7c-7a6c-4c06-9b92-e0b58552ea62
00:52:54.891 --> 00:53:00.104
two behaviors. In order to ask a circuit

NOTE Confidence: 0.8442977

b664a0e9-75f0-46fb-a465-fc37dd78e338
00:53:00.104 --> 00:53:03.713
to act between two different
directions, how many variables

NOTE Confidence: 0.8442977

d444c813-9bb9-4a73-920b-92293d7fdca3
00:53:03.713 --> 00:53:07.322
do you need? One binary
variable because with one binary

NOTE Confidence: 0.8442977

03c44b47-d6de-44ff-b511-e288cdbd3286
00:53:07.322 --> 00:53:10.530
variable, you can produce either
zero or one.

NOTE Confidence: 0.85008806

1c41eeb1-25c5-4dd5-8d92-25298e5b3f14
00:53:11.450 --> 00:53:16.415
So you can say that if the input
variable is zero, we do counting

NOTE Confidence: 0.85008806

6bbc6ef9-36fa-45b2-88ff-3533328e5655
00:53:16.415 --> 00:53:21.049
up. If the X is one, we do
counting down. So by using only

NOTE Confidence: 0.85008806

7ab8a22e-e3c5-4110-8de9-acc8f62e3cf6
00:53:21.049 --> 00:53:24.359
one binary variable in the
input, we can control the

NOTE Confidence: 0.85008806

7ecccdad-f66f-4f73-a2bb-f73e007b7e60
00:53:24.359 --> 00:53:25.683
behavior of the circuit.

NOTE Confidence: 0.85023624

ce61d122-327f-4d2e-bc43-e1d7a305f555
00:53:29.010 --> 00:53:34.998
So how many binary variables are in
the output unit? So the problem

NOTE Confidence: 0.85023624

636623c0-0129-41ca-935a-0889d6f41956
00:53:34.998 --> 00:53:38.491
says that we want to output one

NOTE Confidence: 0.8670726

85c34540-e374-4881-9e8d-8f1298ca50e0
00:53:38.491 --> 00:53:43.639
if the number, the current
number is even, so basically we

NOTE Confidence: 0.8670726

53326e31-4282-46e5-80e4-9d87c8504ee1
00:53:43.639 --> 00:53:47.549
only need one binary variable in
the output, because determining

NOTE Confidence: 0.8670726

30852172-1a8e-41ac-a5c6-0ef612478eb1
00:53:47.549 --> 00:53:52.241
whether the number is even or
not even depends on

NOTE Confidence: 0.8670726

fe875601-1599-4d34-ad53-c053ac12d2ad
00:53:52.241 --> 00:53:57.324
only one binary variable. If Y
is 1, it means that the number is

NOTE Confidence: 0.8670726

b11972e8-2ba2-4a76-b29c-6e0bd592c3c4
00:53:57.324 --> 00:54:02.016
even. If Y is 0, it means that the
number is not even.

NOTE Confidence: 0.8759153

29ff3063-111a-4628-a7bc-d5401ad09fb3
00:54:03.170 --> 00:54:06.710
So the number of output variable
is going to be only one.

NOTE Confidence: 0.82606304

1743b0cf-92d4-4060-ad8e-0d041d57fc7f
00:54:07.510 --> 00:54:12.910
We can pick a name for that.
Y. So here we determine

NOTE Confidence: 0.82606304

7d1c55b5-4b6a-4b76-9d1c-550ed0c151fb
00:54:12.910 --> 00:54:16.960
the number of input binary
variables, and output binary

NOTE Confidence: 0.82606304

ea096082-7676-4074-9959-46fa8db07bac
00:54:16.960 --> 00:54:17.410
variables.

NOTE Confidence: 0.8821941

35ef3e81-c630-445c-91c0-b12ac59c1f3a
00:54:19.220 --> 00:54:22.840
So again, you have to see
how much different behaviors

NOTE Confidence: 0.8821941

9f39fca7-a43e-41b7-b80d-7014ad44b27f
00:54:22.840 --> 00:54:26.098
the problem asks you amnd based on
the different behaviors, you

NOTE Confidence: 0.8821941

4cd3baa9-5fce-42fa-a457-8332db5ee784
00:54:26.098 --> 00:54:29.718
have to figure out how many
binary variables you need

NOTE Confidence: 0.8821941

99eabaea-2235-40b8-b4cb-5a57dd6d4fd8
00:54:29.718 --> 00:54:34.062
for the input, and again you
have to look at the problem

NOTE Confidence: 0.8821941

41614072-c097-468f-9b93-cc0d06253c33
00:54:34.062 --> 00:54:38.768
and see what is going to be
the output. And based on the

NOTE Confidence: 0.8821941

bdfbe8d2-4160-4463-b09a-cb1cbee1cc5a
00:54:38.768 --> 00:54:42.026
output, you have to determine
how many binary variables

NOTE Confidence: 0.8821941

cd868836-29c5-4ea8-af9b-d83887e24f00
00:54:42.026 --> 00:54:43.836
you need for the output.

NOTE Confidence: 0.86317533

c225fd65-e486-4408-8950-103e350bf9d1
00:54:45.860 --> 00:54:49.370
And after you figure out the
number of flip flops, the

NOTE Confidence: 0.86317533

c6393bc2-e642-48ce-bb37-5277b51ff8d1
00:54:49.370 --> 00:54:53.231
number of inputs, and the
number of outputs you have to

NOTE Confidence: 0.86317533

5bbf45c0-5d8c-4662-ae4b-606a4ead8661
00:54:53.231 --> 00:54:56.039
form the state transition
diagram to analyze the

NOTE Confidence: 0.86317533

706cf38e-f074-4e40-b558-17a110b21c30
00:54:56.039 --> 00:54:56.390
behavior.

NOTE Confidence: 0.86506265

413970af-54d4-4fb2-aa72-afb46c64195a
00:54:58.310 --> 00:55:03.065
So in the problem it says that
we want to do counting up and we

NOTE Confidence: 0.86506265

73f2737e-5d9b-47d2-9d84-8a9db8087981
00:55:03.065 --> 00:55:07.186
determined that if the X is zero, we
do counting up. So here's the

NOTE Confidence: 0.85682154

9fa7df53-7951-4a8c-be04-dc40a5424aef
00:55:07.186 --> 00:55:11.679
state transition diagram. Zero.
If the input is zero, we go to

NOTE Confidence: 0.85682154

88fab72c-150a-4530-9854-593d5512a348
00:55:11.679 --> 00:55:16.644
one. If the input is zero, we go
to two, and etc, up until when

NOTE Confidence: 0.85682154

2ec48342-c9ae-45b6-aa53-55b9915b06fd
00:55:16.644 --> 00:55:17.968
you're at six.

NOTE Confidence: 0.8678688

ca3904df-1448-4f3f-a6bc-7fff9a284976
00:55:18.740 --> 00:55:23.864
And if the input is zero, we go to
7 and again, the problem

NOTE Confidence: 0.8678688

a6e6d17e-b16f-4b10-9553-5769938e77dd
00:55:23.864 --> 00:55:29.354
doesn't say that if from 7 the
input is 0, where should we go? But we

NOTE Confidence: 0.8678688

e6fae2fb-b418-4813-93d5-c65e075c11d6
00:55:29.354 --> 00:55:33.746
discussed this last lecture, so
we can either stay stuck in seven or

NOTE Confidence: 0.8678688

a4660ecc-746d-4907-8760-bf8d2b4af602
00:55:33.746 --> 00:55:38.870
we can loop to 0. This is our
design choice, so we follow this

NOTE Confidence: 0.8678688

bb877865-6974-45d3-9070-ec34d498b050
00:55:38.870 --> 00:55:44.726
design choice that if the input
is 0 and we are at 7, if you do

NOTE Confidence: 0.8678688

4aa213fa-1e76-4437-bd43-b386a7baf120
00:55:44.726 --> 00:55:47.288
counting up, we loop back to 0.

NOTE Confidence: 0.92264146

2bfb113b-f651-456e-8e9b-b58fe3b03dd2
00:55:50.010 --> 00:55:54.938
However, if the behavior is
counting down, if the input

NOTE Confidence: 0.92264146

04897099-b18e-494e-a383-d2ebd3ecfd1f
00:55:54.938 --> 00:55:56.282
gonna be 1.

NOTE Confidence: 0.8607199

adfa9a5e-f11f-4b11-b9a9-33afd959da3e
00:55:57.090 --> 00:56:00.676
We introduce X, but the problem
says that the counting down

NOTE Confidence: 0.8607199

9a9e3cc4-d4d5-4f13-8694-fd700738a359
00:56:00.676 --> 00:56:04.262
gonna be like this. Because we
introduce X to control their

NOTE Confidence: 0.8607199

0581ceab-a43e-4e9e-a85c-c158e48e2674
00:56:04.262 --> 00:56:05.892
behavior, if X is 1,

NOTE Confidence: 0.75756896

1daa1b97-e436-4c01-98a1-359a67389c52
00:56:07.040 --> 00:56:10.838
from 7, we countdown to 6.

NOTE Confidence: 0.8766139

9d0befa4-7a30-4852-a7b2-179b03a52919
00:56:11.410 --> 00:56:15.843
If the X is 1, from 6, we
countdown to 5 and up

NOTE Confidence: 0.8766139

5f1228c0-161a-4d28-8a19-7a52b3fe57d5
00:56:15.843 --> 00:56:19.253
until zero and from zero
again, this is a design

NOTE Confidence: 0.8766139

bd51c7e9-7610-4c19-abdf-ac775a8a9f28
00:56:19.253 --> 00:56:23.004
choice. Either we can stay
stuck at 0, or we can loop

NOTE Confidence: 0.8766139

b68b8912-152c-4e34-9094-f00ca2526ef6
00:56:23.004 --> 00:56:24.027
back to 7.

NOTE Confidence: 0.88572675

6db5fab7-d096-419a-b1a5-475241f4656b
00:56:25.880 --> 00:56:30.274
If you put all these two
together, as long as the input

NOTE Confidence: 0.88572675

f989a398-1cc5-4596-9e80-c47b97897e22
00:56:30.274 --> 00:56:32.302
is zero, we do counting up.

NOTE Confidence: 0.8612998

1ced01f0-8961-43a4-9650-0316a0946fd3
00:56:34.060 --> 00:56:38.545
If at some point we change the
input to one. For instance, if

NOTE Confidence: 0.8612998

9fb4f495-c74a-4498-969a-1bd7ba4b6472
00:56:38.545 --> 00:56:43.030
you are at four and we change
the input to one, we countdown.

NOTE Confidence: 0.88238895

69cc2d82-b7a5-4ea1-bf1a-d1a65aef5573
00:56:46.440 --> 00:56:50.059
So based on the value of the
input, we can control whether

NOTE Confidence: 0.88238895

a37e12d8-b57b-41ba-b0b1-01f928c8b310
00:56:50.059 --> 00:56:51.704
to count up or count down.

NOTE Confidence: 0.8583853

0c40adc3-cf2e-42cb-b86d-f167c285c54a
00:56:53.520 --> 00:56:59.388
How about the output
variables? We have to include the

NOTE Confidence: 0.8583853

4f118a6d-4686-44b2-800a-5739c2175281
00:56:59.388 --> 00:57:04.278
output variables. Here, because the
output only depends on

NOTE Confidence: 0.8811034

c1835b8e-9be8-46c8-aad9-50605317f701
00:57:04.278 --> 00:57:10.010
whether the memory units or the
current number is even or not

NOTE Confidence: 0.8811034

2ebb59f4-7438-4e6a-ac43-b826118bf4b1
00:57:10.010 --> 00:57:14.963
even, and the current number is
stored in the flip flops, we

NOTE Confidence: 0.8811034

63b742b3-6dbf-4242-89f9-7f8cb5ab8098
00:57:14.963 --> 00:57:16.868
follow the Moore model.

NOTE Confidence: 0.8698644

6555e769-2453-43bd-afd0-77586d024c8f
00:57:17.600 --> 00:57:21.552
As long as the number we are
storing is even, we output one.

NOTE Confidence: 0.8698644

40f3216d-4d5c-4efe-af4a-6751a4fcaa32
00:57:21.552 --> 00:57:26.112
If it's not even, we output 0.
So if you are at zero, it is

NOTE Confidence: 0.830008

71ed5347-3933-486b-9416-70504dde53ac
00:57:26.112 --> 00:57:31.378
even. If you are at one, it is
odd. It's not even. If you're at

NOTE Confidence: 0.830008

1c95d5c7-c28c-4a58-885a-0b6fae8016c3
00:57:31.378 --> 00:57:34.882
two, it is even, and if you're at
three, it's odd and etc.

NOTE Confidence: 0.87008864

01f17b57-4b09-4b97-b920-68ec1869b553
00:57:35.620 --> 00:57:39.620
So we include the value of
the output in this state

NOTE Confidence: 0.87008864

7ec6ac2a-a874-435b-b5ec-dcd7b4104bef
00:57:39.620 --> 00:57:40.420
transition diagram.

NOTE Confidence: 0.8456873

6658294c-662a-4315-8325-6190e7c95ce7
00:57:41.840 --> 00:57:45.035
So, we have the completed the state
transition diagram and after the

NOTE Confidence: 0.8456873

2b7a0f91-8475-46b9-bb93-f37bc0927f31
00:57:45.035 --> 00:57:47.875
completed state transition
diagram, we can form the

NOTE Confidence: 0.84858215

a689cf9f-a902-43e5-b98c-f83c017df702
00:57:48.440 --> 00:57:53.072
state table and then fill out
this table. So we already know

NOTE Confidence: 0.84858215

8b92dc5c-3349-4d9f-aacb-802df5ddf7f1
00:57:53.072 --> 00:57:59.248
from what state based on the
what value of the X where should we go to

NOTE Confidence: 0.84858215

deab626d-f715-4800-8806-84cfb29ede63
00:57:59.248 --> 00:58:04.652
the next state. So based on
what is going to be the value of

NOTE Confidence: 0.84858215

d8a37f33-cb9e-43b6-92b0-6c244315e903
00:58:04.652 --> 00:58:08.512
Y, so forming the state table
would be very easy.

NOTE Confidence: 0.885289

c6fad447-b127-4d0d-ba3a-27a47e34a6b8
00:58:10.120 --> 00:58:11.590
And here is the state table.

NOTE Confidence: 0.9214853

215e8488-9d64-4efe-941f-e29b057084f1
00:58:13.040 --> 00:58:16.700
So as long as the
value of X is 0,

NOTE Confidence: 0.82690287

ddd8d00f-a25d-4e7d-bb92-90447811634e
00:58:18.990 --> 00:58:25.918
we do counting up. So zero goes
to 1, 1 goes to 2, two goes to 3,

NOTE Confidence: 0.82690287

c4a98828-352d-45a9-bf69-c7041de09125
00:58:25.918 --> 00:58:28.949
three goes to four and up until

NOTE Confidence: 0.88303536

48740c02-1be0-4c3a-9ad4-24b8840b5634
00:58:28.949 --> 00:58:33.780
here. Six goes to 7 and
7, this is our design

NOTE Confidence: 0.88303536

9269f8c6-dc10-4802-a89a-4ea23b525345
00:58:33.780 --> 00:58:37.531
choice. We loop back to 0 if
we do counting up.

NOTE Confidence: 0.8784064

8119121d-3f07-468c-bbd3-830f60171397
00:58:38.690 --> 00:58:45.434
However, if X is one, we
countdown. From zero back

NOTE Confidence: 0.8784064

bf787986-465f-412c-a968-efa434c5d41f
00:58:45.434 --> 00:58:52.740
to 7. From one, you count down
back to 0. 2 to 1. 3 to 2. Up until 7. Seven

NOTE Confidence: 0.8784064

889d2829-2bb3-497b-9866-6a842f7b95bf
00:58:52.740 --> 00:58:54.988
counts down to six.

NOTE Confidence: 0.8773661

51b725c7-dc51-47d8-87d8-a69c53c69930
00:58:57.050 --> 00:59:02.320
And then the value of Y
depends only on the current

NOTE Confidence: 0.8773661

417c9451-8e64-440f-94dc-181c6686558a
00:59:02.320 --> 00:59:04.428
value of A&B&C.

NOTE Confidence: 0.89923793

0beb68d5-73db-44c8-b7f8-b8183668cac4
00:59:06.130 --> 00:59:07.990
So, this is based on the.

NOTE Confidence: 0.87456536

a625cbef-2591-4008-9d83-bbf5b8a86923
00:59:09.210 --> 00:59:12.810
Moore model, so zero is even.

NOTE Confidence: 0.9351689

dcd535d4-334a-45b8-927e-6a82d067b4e5
00:59:13.650 --> 00:59:15.338
One is not even.

NOTE Confidence: 0.80306613

0ac96ba2-c40b-496d-b1ab-ed04ceb4a97d
00:59:16.030 --> 00:59:20.290
Two is even up,
until the last row.

NOTE Confidence: 0.7381542

ce7bdea0-738c-422e-a073-d9a4458e8801
00:59:22.380 --> 00:59:24.924
So we fill
out the state table.

NOTE Confidence: 0.89399874

581045c1-eaf7-4aa7-966c-ff5d865b0160
00:59:26.620 --> 00:59:29.650
And here is the completed
state table for the left

NOTE Confidence: 0.89399874

a16e11a1-229d-4fcd-ae51-c5d2a9076a46
00:59:29.650 --> 00:59:31.165
side and for the right side.

NOTE Confidence: 0.92556727

5c9f8342-0230-4874-989c-0c0051287c02
00:59:33.560 --> 00:59:36.740
So what is the next step?

NOTE Confidence: 0.86643785

a5b5ab49-52d3-4f05-8742-aa6eac74d574
00:59:40.310 --> 00:59:44.072
Anybody in the chat box? So
we have the completed state

NOTE Confidence: 0.86643785

5d87f90b-1ced-49e4-86e0-ac08fe187463
00:59:44.072 --> 00:59:47.150
table. We are ready to
design the circuit. What's

NOTE Confidence: 0.86643785

e8df48c1-134f-4e62-a779-3a41524093d1
00:59:47.150 --> 00:59:49.202
going to be the next step?

NOTE Confidence: 0.5502967

1e6ae95c-420c-4a2b-9d4b-07883ff08eae
00:59:58.980 --> 01:00:00.388
Recall what we did.

NOTE Confidence: 0.872323

8017344d-2c92-46f4-aae9-e899d0eb9d7e
01:00:00.460 --> 01:00:05.192
In the last lecture, when we
have the state table, we are ready

NOTE Confidence: 0.872323

59e68fbf-efdd-4c14-ae52-54ffd6f661d8
01:00:05.192 --> 01:00:06.648
to design the circuit.

NOTE Confidence: 0.9364145

3ada91d8-043d-40d4-887b-029cde46842c
01:00:07.390 --> 01:00:09.360
So the next question is?

NOTE Confidence: 0.7563467

f891cbe4-5e50-4548-81ab-1a6df6ee2e92
01:00:13.850 --> 01:00:17.590
Marco, yes, but before the
Boolean expression, we write the

NOTE Confidence: 0.7563467

bc1fcdaa-301e-4a0d-9b1e-d538732dbe39
01:00:17.590 --> 01:00:18.950
Boolean expression for what?

NOTE Confidence: 0.8965048

af832695-aa93-4ceb-8790-888dd8ffa8db
01:00:21.610 --> 01:00:24.454
For the transition between
the flip flops, but we

NOTE Confidence: 0.8965048

390acf60-302b-4342-a187-6dc4ea6f8fc6
01:00:24.454 --> 01:00:27.298
haven't decided what type of
flip flops we need.

NOTE Confidence: 0.8700893

060386b5-1f10-45bd-ad62-c224e1fc2c88
01:00:28.520 --> 01:00:34.032
So the next question is, now that I'm
ready to design the circuit, we have

NOTE Confidence: 0.8700893

2f98c72f-57d3-48e9-a506-bd7b2c8e5617
01:00:34.032 --> 01:00:40.392
to pick up my flip flops, so the
next step is what type of flip flop

NOTE Confidence: 0.8700893

ef5adece-4740-4353-974f-c5b25857a2b7
01:00:40.392 --> 01:00:45.056
do you wanna choose in order to
store the correct number?

NOTE Confidence: 0.83010453

50ef8c60-9388-445c-b205-4197b3cf9c56
01:00:45.680 --> 01:00:50.480
So, we have four different types:
RS, D, T, JK or we can choose

NOTE Confidence: 0.83010453

64951109-d790-407b-8e1b-dd89915a856d
01:00:50.480 --> 01:00:51.680
a mixture of them.

NOTE Confidence: 0.8046318

aa400f1d-2273-4dc0-9f27-77a21a904e23
01:00:52.500 --> 01:00:58.058
So in this problem I wanna try a
mixture. So I want to choose one

NOTE Confidence: 0.8046318

3ee155b3-5611-41b8-87c5-e578ec13a3e1
01:00:58.058 --> 01:01:03.616
T flip flop, 1 D flip flop and
one JK flip flop just to see

NOTE Confidence: 0.8046318

a1bc67b1-501e-4b06-9120-a3171388e9bd
01:01:03.616 --> 01:01:07.983
if it is possible to design a
sequential logic based on a

NOTE Confidence: 0.8046318

28fde8f8-1913-41d7-ae31-5c58c06eefed
01:01:07.983 --> 01:01:09.571
mixture of flip flops.

NOTE Confidence: 0.8691665

ba6cc706-9cb4-416b-84e2-31122f8bb750
01:01:10.300 --> 01:01:14.296
In the last lecture we only used
JK because JK was the

NOTE Confidence: 0.8691665

e5d5ad6a-ca2f-4e2e-9aa2-7edb2df548e2
01:01:14.296 --> 01:01:18.625
complete flip flop. But here I
just wanted to show you that it

NOTE Confidence: 0.8691665

a5c2051e-6472-47ff-b516-ac1b6131937e
01:01:18.625 --> 01:01:22.621
is possible to memorize a bit
using any type of flip flop.

NOTE Confidence: 0.8684636

11bfdfd1-4852-4742-986e-bacc16f43f5b
01:01:23.200 --> 01:01:27.074
Even if you choose D or T.
Even if you choose RS

NOTE Confidence: 0.8684636

51c32963-b0e4-4288-ad84-5b9e9e2e5a5b
01:01:27.074 --> 01:01:27.670
flip flop.

NOTE Confidence: 0.84685814

3b8eabd8-7d71-41c3-a0d0-2c3abd4a2f82
01:01:29.440 --> 01:01:34.432
So imagine these are the
flip flops. So for the A,

NOTE Confidence: 0.81309456

64d2aa55-12c9-4f59-bb4c-e345bce96231
01:01:35.220 --> 01:01:40.610
the first bit of the number, the
JK. For the second bit of the

NOTE Confidence: 0.81309456

5d2a0b20-10a9-4555-976c-96537e0b8684
01:01:40.610 --> 01:01:46.000
number, the D flip flop, and for the
third bit of the number, the T flip

NOTE Confidence: 0.81309456

3a1b8841-96ae-42c8-a86b-224ae9f68af5
01:01:46.000 --> 01:01:50.235
flop. All are synchronized by
the Clock and all are working

NOTE Confidence: 0.81309456

082a0cd0-c0dc-457f-a85f-d6f4388be9b1
01:01:50.235 --> 01:01:52.160
based on the positive edges.

NOTE Confidence: 0.87114537

7b73290c-d35f-41a8-8840-781dd8ee157b
01:01:53.370 --> 01:01:57.070
We have one input variable
to control whether to do

NOTE Confidence: 0.87114537

cd4f88a7-0556-4ffe-8d63-2c70de09e6c3
01:01:57.070 --> 01:02:00.770
the counting up and down.
We have one output which

NOTE Confidence: 0.87114537

f885048c-79c2-4cc6-a3fa-9ec30d6d6412
01:02:00.770 --> 01:02:04.100
shows whether the current
number which we stored in

NOTE Confidence: 0.87114537

31df54ab-9cd8-49ec-8449-b32cf5d9d4f6
01:02:04.100 --> 01:02:06.320
the A B C is even or not.

NOTE Confidence: 0.86644447

95c214a0-1f9a-45c3-8135-7a04e4bcd1ee
01:02:08.080 --> 01:02:14.164
The next step is that, as Marco says, we
have to provide the input

NOTE Confidence: 0.86644447

44bcc4f3-789b-46d5-b81c-02c8975eed7a
01:02:14.164 --> 01:02:18.727
variable and input functions or the
excitation equations for each

NOTE Confidence: 0.85268605

0e184a80-99d4-4c6e-bfde-67befe7dd023
01:02:18.727 --> 01:02:24.470
flip flop. Also, we need the Boolean
function for Y.

NOTE Confidence: 0.8430639

81bd07d7-cc7d-41c0-9b30-61682a0ff53f
01:02:27.170 --> 01:02:31.350
So let's start with the input of
equations or excitation

NOTE Confidence: 0.8430639

65a34afa-cf86-480d-8392-6727dd9b1304
01:02:31.350 --> 01:02:33.440
equations for the flip flops.

NOTE Confidence: 0.8779933

9f952b91-b3c0-4c85-b64a-f907c9bd7b83
01:02:34.010 --> 01:02:36.500
And after that, minimize it.

NOTE Confidence: 0.7880474

6aa5ff7c-00fa-4cf1-a775-2bb7c1d1c23d
01:02:37.280 --> 01:02:44.065
So. Here we have 3 flip flops. A
is JK, so we have to see what

NOTE Confidence: 0.7880474

0190d10b-9ae8-4cdd-a9f9-e53d3da50157
01:02:44.065 --> 01:02:48.014
is going to be the Boolean
function for JA and KA because it's

NOTE Confidence: 0.7880474

ad71d497-c3e5-4fd8-8482-426756cd3850
01:02:48.014 --> 01:02:49.091
a JK flip flop.

NOTE Confidence: 0.79456913

68204340-699c-4026-8563-dd5168313605
01:02:50.560 --> 01:02:56.663
For the B flip flop, it's a D type,
so we have to only

NOTE Confidence: 0.79456913

3b3c4bf3-55b2-48b7-b0e2-8ac36603ff4e
01:02:56.663 --> 01:02:58.817
see what is the equation for the D

NOTE Confidence: 0.76688474

ebd9db20-e053-4da5-84b7-41ae5c4c52df
01:02:58.817 --> 01:03:03.841
input. The C is a type T flip
flop, and a T Flip Flop has only

NOTE Confidence: 0.76688474

f58e8dcf-8d32-49fc-8bc2-aedbbbf5f617
01:03:03.841 --> 01:03:07.702
one input. You have to see what
the function is for the T input.

NOTE Confidence: 0.85943544

8f22b6fe-6174-4d93-8ec4-019d2033e816
01:03:09.000 --> 01:03:11.862
But the important
thing here is that,

NOTE Confidence: 0.85702276

e61357fa-99a6-439e-ab34-69a34d03b91b
01:03:12.650 --> 01:03:16.322
because we have inputs, the
Boolean function or the

NOTE Confidence: 0.85702276

086b6cca-8529-4713-b54c-2ae51b7cca2b
01:03:16.322 --> 01:03:21.218
excitation equations for each of
the input for the flip flops not

NOTE Confidence: 0.85702276

6cfe8316-f169-401c-a7e3-f669c392cbd7
01:03:21.218 --> 01:03:23.258
only depends on the current

NOTE Confidence: 0.90304303

df190aad-c06b-4310-88e1-c9eb663ef01d
01:03:23.258 --> 01:03:28.492
value. Also, it depends on the
value of the input variables.

NOTE Confidence: 0.9231113

7ee681a6-62ac-450f-9e38-a0a6f65627cb
01:03:29.560 --> 01:03:35.059
So you see that F is the
function of A B C and the input.

NOTE Confidence: 0.7616881

a6e7bb03-965c-4bf4-94e2-265f3a8947dc
01:03:36.000 --> 01:03:40.752
Remember, it doesn't
mean that we are following the

NOTE Confidence: 0.7616881

517c9974-aebe-45df-93a9-0a5796760c74
01:03:40.752 --> 01:03:43.920
Mealy Model. Mealy and Moore is
about the output.

NOTE Confidence: 0.88071364

7b7cbd93-afa8-4902-9c41-90b8e434af34
01:03:44.640 --> 01:03:49.320
Here you are not dealing with
the output so far, so we are

NOTE Confidence: 0.88071364

fc6a65a6-093c-4049-87a4-c787e383bd80
01:03:49.320 --> 01:03:54.000
trying to figure out what the
input to the flip flops, so this

NOTE Confidence: 0.88071364

103ed53c-9d22-4f18-a6d7-dee69531b74f
01:03:54.000 --> 01:03:57.600
is not discussing about the I mean
Mealy or Moore model.

NOTE Confidence: 0.8655464

3085e6cb-3667-4bef-869a-eecb3240ab19
01:03:58.390 --> 01:04:01.171
So for the excitation
equations, for each flip flop,

NOTE Confidence: 0.8655464

6ce2e494-6096-4aad-8288-9bbb81ef365c
01:04:01.171 --> 01:04:04.570
you have to consider the
current state and the value of

NOTE Confidence: 0.8655464

09367622-fae8-41c6-b1b1-b1e49fe2ec6a
01:04:04.570 --> 01:04:07.351
the input because X controls
the transition between these

NOTE Confidence: 0.8655464

7886aae5-fa71-44f6-b8c8-9b04447798e7
01:04:07.351 --> 01:04:07.660
states.

NOTE Confidence: 0.86623114

76a6a7c3-ed29-4bc6-b5ee-1e09716b8121
01:04:09.950 --> 01:04:12.148
So let's start with the A
flip flop.

NOTE Confidence: 0.8638862

6e39cf5a-e6f4-466f-9fb3-9e5c4a91750d
01:04:13.330 --> 01:04:17.880
Back to the state table, we see
that for the A flip flop,

NOTE Confidence: 0.8826482

d4945ae8-81d1-4fba-8f61-1a5749d2eb9c
01:04:19.000 --> 01:04:22.024
Zero transits to one
at the first row.

NOTE Confidence: 0.87673193

d74cee3e-a809-4843-8fa9-ed8d203936d0
01:04:23.440 --> 01:04:27.730
So in order to apply this
transition, A is a JK. So we

NOTE Confidence: 0.87673193

e851f3bb-1eaa-4b9a-ad9a-8f9c223bde4d
01:04:27.730 --> 01:04:31.360
add some columns and these are
not formal columns of the

NOTE Confidence: 0.87673193

06ab6b57-a262-4072-b98c-e20dca59750d
01:04:31.360 --> 01:04:35.320
state table. It just helps us to
figure out what's going to be

NOTE Confidence: 0.87673193

4be5e67b-16da-4772-8884-55bd04195514
01:04:35.320 --> 01:04:37.300
the value of J&K.

NOTE Confidence: 0.764319

22a3e592-bda4-4e6b-a02f-efd87358c236
01:04:38.450 --> 01:04:40.690
So excitation for A.

NOTE Confidence: 0.81599957

aa8001ba-615b-4ad1-8eea-0f22fe6b07f2
01:04:41.330 --> 01:04:45.914
In order to transit from zero to
one, either you did set,

NOTE Confidence: 0.89943916

84b4d2a9-637e-46a9-96a6-c4be0ad46505
01:04:46.930 --> 01:04:52.030
meaning that the J is 1 and K is 0, or
you did compliment,

NOTE Confidence: 0.81264096

797545d0-285a-43da-9446-9639f9730df6
01:04:53.370 --> 01:04:55.806
meaning that both inputs are one.

NOTE Confidence: 0.8751435

2eb66c52-15c4-4fa2-b87b-89e10cb0b714
01:04:56.660 --> 01:05:01.616
So if you consider both actions,
J is always 1 and K doesn't matter.

NOTE Confidence: 0.81954366

2809ab47-2552-4cc4-be1c-fd195c1688db
01:05:03.800 --> 01:05:10.001
The 2nd row, A transits from
1 to 0. Either you did reset or you

NOTE Confidence: 0.81954366

8c3b1338-dcbd-4457-a27e-6644cfc3e654
01:05:10.001 --> 01:05:11.909
did compliment or toggle.

NOTE Confidence: 0.8547563

e90b6cdc-5110-4557-8e4c-468157fe7c4f
01:05:12.600 --> 01:05:17.318
So in both cases, K must be one.
The value of J doesn't matter.

NOTE Confidence: 0.85568553

f81a4989-e81b-4251-9155-d3196b03820d
01:05:17.980 --> 01:05:24.220
And etc. This is very similar to
the way we fill out the

NOTE Confidence: 0.77684003

6f63a991-f31c-40bc-b78c-12f8fc99fcc6
01:05:25.670 --> 01:05:30.191
excitation equations when we
didn't have any input or output.

NOTE Confidence: 0.8481764

888c8543-14af-45a1-b76b-47abbcb652c1
01:05:31.490 --> 01:05:38.600
But the thing is, you have to
continue even if the X is 1. So

NOTE Confidence: 0.8481764

346a3236-9725-43f0-9a1b-b09b19dd539d
01:05:38.600 --> 01:05:43.814
again, 0 to 1 in this row: set or
complement. 1 to 0: reset or

NOTE Confidence: 0.9213413

1b2f1a89-1f00-46d5-bd32-accbe1d21abd
01:05:43.814 --> 01:05:45.630
compliment. So.

NOTE Confidence: 0.75895715

b5c7e6b3-f665-4c45-8c89-4783b441ff2d
01:05:46.760 --> 01:05:51.632
The value of JK for the
transition A to the next state

NOTE Confidence: 0.8898364

da1c4263-8406-432d-bb39-395aff8d9634
01:05:52.440 --> 01:05:55.905
when the X is 0 or
when the X is 1.

NOTE Confidence: 0.89874566

2c08490d-ef30-4da4-9b8f-87a12f3b9c11
01:05:58.960 --> 01:06:01.970
So then you have to write out

NOTE Confidence: 0.76693517

b250bedc-1126-4531-ae13-1d4eb040a379
01:06:01.970 --> 01:06:06.241
the Boolean function or
excitation equation

NOTE Confidence: 0.76693517

418ffb75-d27e-4d67-a7ac-25c5cfc6ec37
01:06:06.241 --> 01:06:08.839
for A. So based on this.

NOTE Confidence: 0.84921706

ad46daab-6b03-4378-9729-7dc45fb97c21
01:06:11.050 --> 01:06:16.972
The minterm that makes the J = 1
is 000.

NOTE Confidence: 0.88617986

a4788585-9530-4cea-898b-db0fd16d7e5d
01:06:17.690 --> 01:06:22.656
And you have to consider the
input value here. So this is the

NOTE Confidence: 0.6505594

5866411f-f6a0-4567-8638-b829ff62f564
01:06:22.656 --> 01:06:27.470
minterm 0. Given
four variables.

NOTE Confidence: 0.8041964

a2fbff8d-394a-4977-933d-e04783888724
01:06:29.250 --> 01:06:31.800
This one is minterm 2.

NOTE Confidence: 0.785287

e1340ea1-b278-41ce-aded-7ccf9c6419fe
01:06:32.860 --> 01:06:39.160
Up until, for instance here,
this minterm: 1010,

NOTE Confidence: 0.785287

da748d41-5bee-4284-897c-c2cc54235425
01:06:39.160 --> 01:06:42.310
which is the minterm 10.

NOTE Confidence: 0.74348414

f5a3cb64-2933-4363-819d-f6da26263d1e
01:06:43.390 --> 01:06:44.678
This is the minterm

NOTE Confidence: 0.79691124

6c0fc82e-d686-4462-b4fc-55518ddd478a
01:06:46.100 --> 01:06:51.920
12. So 1100, the minterm 12 makes
it one and etc.

NOTE Confidence: 0.83489877

3419be02-2798-48e3-b2e5-05424e94ac6e
01:06:53.110 --> 01:07:00.208
And all the entries where we put
don't care, we just put it here.

NOTE Confidence: 0.83489877

eac9046a-1bbd-4276-b80a-d677da96d40d
01:07:00.208 --> 01:07:06.292
So JA is the sum of the minterms 0 2 4 6 8 10
12 14 plus the don't care

NOTE Confidence: 0.83474666

f1794885-9f3a-4290-b332-c29b48e16c88
01:07:06.292 --> 01:07:12.120
conditions. The same for
the K, so the K becomes one

NOTE Confidence: 0.83474666

3a0bdc36-552b-4b09-8a0e-5115c6c65ac9
01:07:12.120 --> 01:07:13.506
in these minterms.

NOTE Confidence: 0.7554607

d72b5d3f-0606-47ca-83d8-2bf87f68150c
01:07:15.850 --> 01:07:18.130
Up until here, for
instance, in this minterm,

NOTE Confidence: 0.7554607

1dbd553b-f6ce-4ccc-818d-b4aca671f3c8
01:07:18.130 --> 01:07:19.555
this is the minterm 15.

NOTE Confidence: 0.864109

9802e2d2-ebd6-4fbb-ada0-216624685aaf
01:07:22.670 --> 01:07:25.387
So you see that when we
write out the minterms, we

NOTE Confidence: 0.864109

5c529bc8-1503-4d18-b346-f2ad53d3f12d
01:07:25.387 --> 01:07:26.622
consider the value of X.

NOTE Confidence: 0.8331032

fead687e-9248-4c31-9aaf-81587161e546
01:07:28.940 --> 01:07:32.780
Then let's move on to the next
one. The B flip flop.

NOTE Confidence: 0.79586285

dd21129b-8700-4458-9b30-5b02d5607f01
01:07:33.710 --> 01:07:39.620
The B flip flop is of type D. For
the D flip flop, we only have

NOTE Confidence: 0.79586285

7df1ba17-5446-4a8a-a364-4a44b4e36a33
01:07:39.620 --> 01:07:44.742
one input so we have to see
what's the equation for the D

NOTE Confidence: 0.79586285

e5041082-82b4-4448-9286-eaffcc88a841
01:07:44.742 --> 01:07:45.924
flip flop.

NOTE Confidence: 0.7876017

85cda2c7-3e4a-49f6-96c0-005f7335b95a
01:07:47.500 --> 01:07:49.204
So, for the B flip flop which is of

NOTE Confidence: 0.7765863

97e46577-1be0-4c24-a705-78af88b61a66
01:07:49.204 --> 01:07:52.790
Type D. B from zero goes to

NOTE Confidence: 0.8337957

e682c99e-0f18-4c47-a1f5-c8646d91ba91
01:07:52.790 --> 01:07:58.660
0. In the D flip flop, it doesn't
have the store action or the

NOTE Confidence: 0.8337957

974a7404-94e1-438f-b64c-64fc6d46518b
01:07:58.660 --> 01:08:02.620
complement action. It only has
reset or set action. So when we

NOTE Confidence: 0.8337957

44f9387c-22df-4090-98e1-a68f4329490f
01:08:02.620 --> 01:08:06.220
move from zero to 0, it means
that we did reset.

NOTE Confidence: 0.8568343

99cec6b6-7603-4a77-91f2-f618d8b39eca
01:08:07.660 --> 01:08:11.114
In the next row, we move
from zero to 1, meaning

NOTE Confidence: 0.8568343

98381bd4-7f9e-4bca-b71b-cf0c3d9b921a
01:08:11.114 --> 01:08:12.370
that we did set.

NOTE Confidence: 0.84050864

510e6667-44b0-4588-b4fd-c09f7efdb616
01:08:13.590 --> 01:08:16.890
In the next row from one,
we move to the one, so it

NOTE Confidence: 0.84050864

3d33675d-b767-401f-9a29-24481c9d9b94
01:08:16.890 --> 01:08:18.265
means that we did set.

NOTE Confidence: 0.8676698

ecc88015-47ed-4632-a456-23756753c959
01:08:19.750 --> 01:08:21.290
Up until the last row.

NOTE Confidence: 0.86206627

7e57635a-0a07-4c69-bbab-c56edb6b5b7d
01:08:22.520 --> 01:08:28.712
So in the D flip flop, either we
do reset or set. You see that in

NOTE Confidence: 0.86206627

05b2933d-59c5-4010-9d44-ed3a176fa732
01:08:28.712 --> 01:08:33.743
the D flip flop, we never have a
don't care condition because

NOTE Confidence: 0.86206627

84bfb91e-a5db-4aa4-90d4-653f060c4c19
01:08:33.743 --> 01:08:38.774
we are only able to do 1
action, either set or reset.

NOTE Confidence: 0.8138151

de23a33d-aacf-4bf6-8430-18ca5b851e3f
01:08:39.720 --> 01:08:44.148
And then we have to write the
excitation equation for the D

NOTE Confidence: 0.8138151

74febd54-44ff-45ca-824e-9cda35146bf8
01:08:44.148 --> 01:08:47.838
based on the minterms.
For instance, here, D becomes

NOTE Confidence: 0.8138151

e827e33b-070e-4e70-9756-dcf35eafb06e
01:08:47.838 --> 01:08:50.052
one. This is the minterm 1.

NOTE Confidence: 0.8413537

34ee48af-5377-497c-960b-533b746c0fc6
01:08:50.850 --> 01:08:53.840
Or this 1, D becomes one.

NOTE Confidence: 0.8317967

fde37978-55f6-429b-9410-d5635a8f3cb3
01:08:54.440 --> 01:08:59.300
So this is the minterm. As
you can see here, this is

NOTE Confidence: 0.8317967

8900b65a-d53b-4681-999e-f1944b7b01a4
01:08:59.300 --> 01:09:00.515
the minterm 12.

NOTE Confidence: 0.85976756

bf896f2d-fd6c-41f3-a6ad-ffe9e839dfdf
01:09:03.700 --> 01:09:06.108
And the last one. This is the

NOTE Confidence: 0.8730521

c7334cbe-1645-4274-8e2e-5f42911401f6
01:09:06.108 --> 01:09:11.704
minterm 15. So you write out the
minterms for the input for the

NOTE Confidence: 0.85199577

9a84bbf8-92aa-43ab-aa7d-117007d42444
01:09:11.704 --> 01:09:15.080
D. And again, don't care
condition never happens in

NOTE Confidence: 0.85199577

b3fce223-43d8-4884-aa9b-42f7306f1a0a
01:09:15.080 --> 01:09:16.200
the D flip flop.

NOTE Confidence: 0.8689487

8e6583e6-1080-406e-a241-16eaf1f19b42
01:09:17.920 --> 01:09:23.365
So we continue to write out the
excitation equation for T.

NOTE Confidence: 0.7964771

2c2abf48-4953-4478-8ffe-812aed6e8f72
01:09:24.890 --> 01:09:30.294
So in the T flip flop, remember,
either we do a store or toggle

NOTE Confidence: 0.7964771

4b189171-078b-45ea-b572-cd210390de27
01:09:30.294 --> 01:09:35.312
or complement. So in the first
row, C is zero to zero. We did a store.

NOTE Confidence: 0.85821795

342ce988-fa53-4e4b-ad79-2c7546e7a52c
01:09:36.730 --> 01:09:38.599
So the T input gonna be 0.

NOTE Confidence: 0.8323459

330b66bd-f313-4f9f-b755-61f4c92d919f
01:09:39.510 --> 01:09:46.880
From zero to 0. 0 to 0, so store. In
this row we did from

NOTE Confidence: 0.821207

5e44ca22-fdfe-4e68-b8d3-81352344d782
01:09:46.880 --> 01:09:51.250
0 to 1. It means that we did a
complement or toggle, so in

NOTE Confidence: 0.821207

94bdffd4-3afa-44bc-b5ea-81f32ccff4a6
01:09:51.250 --> 01:09:54.176
order to do that, we have to
input T as one.

NOTE Confidence: 0.7964548

ada0597b-c7dd-4caa-8b98-8ad565ea5960
01:09:55.850 --> 01:10:00.459
So the same for all other
rows, for instance here.

NOTE Confidence: 0.8288605

f0726bcb-a2d0-4e15-9942-c7aac4b87a61
01:10:01.310 --> 01:10:05.790
From one, we moved to the zero.
It means that we did a toggle or

NOTE Confidence: 0.8288605

1eaec72f-0838-4d5d-9e61-2e0d86d75d3f
01:10:05.790 --> 01:10:10.270
compliment, so the input must be
one to the T flip flop. And then

NOTE Confidence: 0.8288605

6aa7d12b-0448-4b39-a759-37a4dba0d77f
01:10:10.270 --> 01:10:14.110
you have to write out which
minterms makes the T = 1. So this

NOTE Confidence: 0.83342355

afb6e7f3-b193-4de2-a492-8d0503b3a26c
01:10:14.110 --> 01:10:16.790
is the minterm three.

NOTE Confidence: 0.522353

d0af16f3-0e6c-49dc-b35d-850821d99ab6
01:10:17.780 --> 01:10:19.058
This is minterm

NOTE Confidence: 0.76507103

49e06285-50c8-43cf-8f53-953863256fbc
01:10:20.260 --> 01:10:25.327
7. This is the minterm 8
etc. So when you write out

NOTE Confidence: 0.76507103

459b068c-4e78-45a9-8d78-45174ac1b179
01:10:25.327 --> 01:10:27.863
the minterms, you consider
the value of X.

NOTE Confidence: 0.8524521

b8c57bd4-c848-4c03-9684-1b2e90f37104
01:10:29.710 --> 01:10:34.040
And again for a T flip
flop, you don't see they

NOTE Confidence: 0.8524521

b6746012-767e-4a54-8813-6fdb4b41105e
01:10:34.040 --> 01:10:35.339
don't care condition

NOTE Confidence: 0.8456893

f9f50df4-7d88-4a9f-a740-fb908ac64d1c
01:10:36.420 --> 01:10:40.584
because either you do a store

NOTE Confidence: 0.8456893

cd0fcfee-4c5b-432b-b343-c9c0106ec25a
01:10:40.584 --> 01:10:41.278
or compliment.

NOTE Confidence: 0.8699618

3e00b6e6-1457-487e-be60-4fdcada551a4
01:10:43.900 --> 01:10:47.473
So then you have to minimize
the excitation equation.

NOTE Confidence: 0.88441586

d652c6fb-b117-4ee7-92dd-bf1e8e758a25
01:10:48.810 --> 01:10:51.186
What's going to be the
number of variables?

NOTE Confidence: 0.8615212

9197a144-b9f7-48e4-87fd-f8eccdab4984
01:10:52.910 --> 01:10:54.890
Anybody in the chat box?

NOTE Confidence: 0.9181612

95d55243-39a1-41bf-bd28-2f347f7429af
01:10:57.570 --> 01:10:59.873
So for instance, if I want to

NOTE Confidence: 0.79572403

61063aeb-5899-4b0e-9524-32b93f084122
01:10:59.873 --> 01:11:03.745
minimize the J or K or D or

NOTE Confidence: 0.42637926

a0e85e36-9ba5-4e60-9256-e7bd5c0b82b7
01:11:03.745 --> 01:11:05.930
T.

NOTE Confidence: 0.9238982

1b91f447-21ea-4d82-a194-bf6be7be42b5
01:11:06.800 --> 01:11:07.490
How many

NOTE Confidence: 0.81643116

56d9b817-e676-4d4e-9015-ef691023f233
01:11:09.560 --> 01:11:13.746
variables do we need for the K-map?
4 yes. Marco correct. We need

NOTE Confidence: 0.81643116

e5f2425d-da9b-47b6-b644-f7941e227a54
01:11:13.746 --> 01:11:16.644
a four variable K-map to
minimize the equations.

NOTE Confidence: 0.8756331

1678f774-4925-4634-8e29-bbef852a5063
01:11:18.220 --> 01:11:23.020
So because not only do we consider
ABC, also, we consider the X

NOTE Confidence: 0.7076541

28b1e567-77ce-48b4-9379-09edb50c5d33
01:11:23.770 --> 01:11:25.360
when we write the minterms.

NOTE Confidence: 0.80566025

bc0f320b-2e6a-4e78-8463-3dd972751b95
01:11:27.170 --> 01:11:32.720
So here are the Karnaugh Maps. For
the A flip flop, this is a JK

NOTE Confidence: 0.80566025

90bb7f51-106c-402d-b972-78556fcfe255
01:11:32.720 --> 01:11:36.050
flip flop, so we have to
minimize the J&K.

NOTE Confidence: 0.87293786

9fa477bf-5710-4ec0-960a-4af7f1c5ff48
01:11:36.930 --> 01:11:41.922
So if you put the minterms,
that makes the output one and

NOTE Confidence: 0.87293786

81a8280f-6afc-4a1c-89dd-4c22a9596780
01:11:41.922 --> 01:11:46.146
see the don't care, you see that
basically, you can create one

NOTE Confidence: 0.87293786

18933efd-1e08-4c56-aef6-a721b747884b
01:11:46.146 --> 01:11:50.754
single region of all cells.
Meaning that JA must always be one.

NOTE Confidence: 0.87293786

cd8eea4a-9d76-4ed0-8316-25c5e9d19a02
01:11:50.754 --> 01:11:53.058
The KA, the same, always one.

NOTE Confidence: 0.82217264

fbf2baeb-42df-48eb-af83-8092e6539f3d
01:11:54.240 --> 01:11:58.500
For the input to the B flip
flop, if you put the minterm one

NOTE Confidence: 0.82217264

13a2ad24-c5f5-496b-8561-d045384d3742
01:11:58.500 --> 01:12:02.476
and the minterm that makes it 0,
these are the cells so that you

NOTE Confidence: 0.87731385

85829b34-082a-4617-94ec-a9195dbcebfc
01:12:02.476 --> 01:12:07.330
can minimize it. If you write
out this region, you see that

NOTE Confidence: 0.87731385

628ad6c3-7e49-4280-b6b8-16f6471ef101
01:12:07.330 --> 01:12:12.140
you will end up with the
exclusive or of the A B and X.

NOTE Confidence: 0.8525409

0199f9d8-a417-4342-b495-7c4610f8b6c1
01:12:13.230 --> 01:12:16.870
Again, whenever you see
diagonal cells,

NOTE Confidence: 0.8525409

8f7a6c27-6f80-4b59-8b1f-2e8ee2d02b17
01:12:16.870 --> 01:12:20.874
it's a hint that there are
some exclusive or's involved in

NOTE Confidence: 0.8525409

2f3bb59c-c1b1-4e42-862b-176dc1c4f8d0
01:12:20.874 --> 01:12:21.602
the equation.

NOTE Confidence: 0.83859724

60599874-e616-45c1-98e2-3f10bcbc6595
01:12:23.480 --> 01:12:28.744
And also for the T flip flop, if
you minimize it, it becomes only

NOTE Confidence: 0.83859724

1516b3aa-e6f0-4b7c-8153-1c88e9143c70
01:12:28.744 --> 01:12:31.000
two terms. This term and this term.

NOTE Confidence: 0.88291776

10d77c60-b8b2-4362-b05b-0145a8b8f467
01:12:35.930 --> 01:12:39.476
So after minimization, the
next step is, you have another

NOTE Confidence: 0.88291776

ee26d514-65e6-423a-81a9-77505fd236dd
01:12:39.476 --> 01:12:43.416
output function, so you have
to write out the Boolean

NOTE Confidence: 0.88291776

385519d3-6bc2-4208-b878-45cffddc27b3
01:12:43.416 --> 01:12:47.356
function for the output and
you have to minimize it.

NOTE Confidence: 0.84747845

aadb991d-83a0-4581-b0ac-e80b231ec951
01:12:49.260 --> 01:12:53.506
This is the different when you
have the output. So for the output,

NOTE Confidence: 0.8756739

86fd09bb-bb22-4ee1-b420-cf14ba9a43ca
01:12:54.100 --> 01:12:56.140
you are done with the next

NOTE Confidence: 0.8501525

8fd94152-a835-4e54-9f4d-c73f6b48a2b7
01:12:56.140 --> 01:13:01.250
state. You have to write a
Boolean function for the output,

NOTE Confidence: 0.8501525

2dde0b7e-25e6-40b5-9fda-ffb33b1c284b
01:13:01.250 --> 01:13:05.397
so this is very simple. You
write out the output Boolean

NOTE Confidence: 0.8501525

ecfcc4f7-e89b-49ec-89ef-6ed8ebdb435c
01:13:05.397 --> 01:13:09.167
function based on the current
value of the flip flops.

NOTE Confidence: 0.8413582

907d087f-8fab-41c4-9c9a-53b09cde8c5c
01:13:09.980 --> 01:13:12.140
So this is the minterm.

NOTE Confidence: 0.87498707

af300599-fd9f-4eef-adff-61d5df307340
01:13:12.850 --> 01:13:16.960
Again, remember you
shouldn't consider the X because

NOTE Confidence: 0.87498707

befd2be1-e720-46ed-8232-0cc082072618
01:13:16.960 --> 01:13:19.426
Y only depends on the current

NOTE Confidence: 0.8004792

752226b4-3fc2-4f16-bd6c-693fba500b1e
01:13:19.426 --> 01:13:24.497
number. So Y, this is the
minterm zero.

NOTE Confidence: 0.8343057

fe4c8a7a-aa91-4272-b736-ce2afc586de9
01:13:27.170 --> 01:13:28.780
Here is the same state.

NOTE Confidence: 0.72522795

3798d5d8-be4e-485e-bcde-e43b1066eee5
01:13:30.080 --> 01:13:34.838
So minterm 0, minterm 0. So you
just write that one minterm 0.

NOTE Confidence: 0.7584007

2c52a443-adc3-4024-a4d1-c9b018bd9be3
01:13:35.910 --> 01:13:39.510
Here is minterm one. Also here.

NOTE Confidence: 0.7563859

8d79d39d-8b12-4dcf-862d-4e9b272c2950
01:13:39.510 --> 01:13:42.978
m1. So you have duplicate

NOTE Confidence: 0.8897032

9193c06a-7832-44ec-b807-5dd78fc80df9
01:13:42.978 --> 01:13:46.740
minterms. Because you have to
only consider the A B C.

NOTE Confidence: 0.8461505

da09fc22-6bb9-420a-8e5f-03c2bd3e28e4
01:13:49.850 --> 01:13:54.905
So here is the Y. But the thing
is, even if by some mistake you

NOTE Confidence: 0.8461505

104dca79-919b-4663-bffd-f1b378f63cbf
01:13:54.905 --> 01:13:58.949
consider the X when you write
out the minterms for Y. I

NOTE Confidence: 0.8461505

81402b76-de9d-4050-9bac-3c5bdc77ca58
01:13:58.949 --> 01:14:02.656
crisscrossed out this because
this is a mistake, but even if

NOTE Confidence: 0.8461505

58fc8583-c50b-4753-ace2-c4dd090e442f
01:14:02.656 --> 01:14:06.026
you do this mistake, you see
that this mistake actually

NOTE Confidence: 0.8461505

8d38ec13-cd0a-4938-82c3-1304697742d1
01:14:06.026 --> 01:14:10.070
doesn't make it a disaster. So
imagine, put it in your in the

NOTE Confidence: 0.8461505

47d84f9c-1759-464c-8f2e-50f17c0c7c3e
01:14:10.070 --> 01:14:14.114
corner of your mind, if you do
this mistake and you consider the

NOTE Confidence: 0.8461505

ad63dd3c-d7f0-48d8-9c7a-2ef438e82326
01:14:14.114 --> 01:14:18.495
value of X. And you write out
the Boolean function for Y based

NOTE Confidence: 0.79226196

81be690e-880e-4944-9328-33035f7aae80
01:14:18.495 --> 01:14:23.499
on the minterms from eight,
10, 12 and 14. For these minterms,

NOTE Confidence: 0.79226196

50991419-8772-4fd8-ae3c-7e0e2f2248c4
01:14:23.499 --> 01:14:25.754
for instance here. This is the

NOTE Confidence: 0.7432491

5421565a-ac90-49e6-b5a5-3fb5d49da864
01:14:25.754 --> 01:14:33.153
minterm 12. Or this is the minterm
14, so even if you consider

NOTE Confidence: 0.7432491

07d3dfb0-2db9-4537-ac02-a02089a15d67
01:14:33.153 --> 01:14:34.917
the X by mistake,

NOTE Confidence: 0.8953637

80dad1ba-20c8-46c4-b653-10bc51bf3293
01:14:36.000 --> 01:14:39.492
we will see that it doesn't make a
mistake in the final design.

NOTE Confidence: 0.87611085

b3159db4-b121-45e9-8824-7d93aef335e1
01:14:40.900 --> 01:14:46.555
So in order to minimize the Y,
you need a three variable K-map.

NOTE Confidence: 0.87611085

a7df8058-76ea-44dc-9dc0-3d11faa4c522
01:14:46.555 --> 01:14:50.905
By mistake, you could use a four
variable K-map.

NOTE Confidence: 0.82331973

cdb938c1-2267-484f-800a-38cf34919826
01:14:52.680 --> 01:14:57.243
By minimizing the three variables A B C,
Y becomes A prime.

NOTE Confidence: 0.8328637

b04b8cd0-c7b8-4327-ac71-37a12356dfb2
01:14:58.320 --> 01:15:02.772
As I said, even if you
consider X and you put the

NOTE Confidence: 0.8328637

3341d723-5c83-4923-b996-707082c18be4
01:15:02.772 --> 01:15:06.482
value of the minterms given
considering the X variable and

NOTE Confidence: 0.8328637

2f281fbc-e65c-4226-b766-e019a5bb302a
01:15:06.482 --> 01:15:10.192
you minimize it with the four
variable Karnaugh map, you'll

NOTE Confidence: 0.8328637

3bc08c93-6a8e-4b02-83e0-a74199f508bc
01:15:10.192 --> 01:15:13.160
see that after the
minimization, the X gonna

NOTE Confidence: 0.8328637

4f063850-a534-403b-a44f-07f42cdcb8a6
01:15:13.160 --> 01:15:13.531
disappear.

NOTE Confidence: 0.8859627

063e8b6b-c968-4fef-9b74-5eec08ba0ba4
01:15:14.710 --> 01:15:19.299
Because Y only depends on A B C.
It never depends on X, whether it

NOTE Confidence: 0.8859627

131cd0d5-029f-4caf-8713-347f1cfa0728
01:15:19.299 --> 01:15:22.829
is zero or one. That's why in
the simplification, it

NOTE Confidence: 0.9107754

7e1ae2b4-a647-479f-9efd-1b33b9531ad8
01:15:22.829 --> 01:15:25.228
disappears. Even if you do
this mistake.

NOTE Confidence: 0.8622493

9c18f065-bb7d-4c48-8e9a-0fb8a4cb373e
01:15:27.100 --> 01:15:30.904
And finally, you have to sketch
the logic circuit and test it.

NOTE Confidence: 0.8995826

9f9f29f6-e88e-44cb-a26d-0a9bab4dcd3b
01:15:31.460 --> 01:15:35.756
So here is the input for
the A. 11.

NOTE Confidence: 0.84163076

4c3578ad-0e8f-4839-b2ef-c42a9054dd93
01:15:37.210 --> 01:15:39.009
Here is the input for the B flip

NOTE Confidence: 0.83462167

49d5dbc5-22ca-456d-830b-86bb7f9c006a
01:15:39.009 --> 01:15:44.082
flop. X exclusive or with A
exclusive or with B.

NOTE Confidence: 0.8338965

4d44f224-3185-43bb-a4c8-6c97159d669b
01:15:45.560 --> 01:15:47.695
Here is the input to the C

NOTE Confidence: 0.7632537

b01bded2-794f-431e-ad72-16c04fd73602
01:15:47.695 --> 01:15:55.189
flip flop. So A bar,
B bar, and then X. A bar, B bar

NOTE Confidence: 0.8635789

f9e96287-293e-4b61-aae6-a3a9fac22a56
01:15:55.189 --> 01:15:58.300
and then X OR

NOTE Confidence: 0.81377137

357784fe-9644-45e5-994a-d619873e453e
01:15:59.580 --> 01:16:03.068
B, A and X bar.

NOTE Confidence: 0.85916567

9fb040a1-83b6-479b-84a4-80d8ae60f8de
01:16:03.640 --> 01:16:05.500
A, B and X bar.

NOTE Confidence: 0.88928664

0bd3a302-b20f-43ac-870c-5716b82c2911
01:16:06.540 --> 01:16:10.280
And Y is only A bar.

NOTE Confidence: 0.8632832

85529dc0-4ad5-4903-be0b-154fb251e91c
01:16:13.680 --> 01:16:18.438
So here is the final circuit you
designed for this problem. You can

NOTE Confidence: 0.8632832

3ad25ee2-c57f-4117-b3d0-364b9f115652
01:16:18.438 --> 01:16:23.196
test this design at home, so you
could say that for instance, if

NOTE Confidence: 0.8632832

f66292bb-8ea9-486d-aa74-b7fbfc892426
01:16:23.196 --> 01:16:28.686
you are at 101, at the current
numbre 5, if X is zero, it should go to

NOTE Confidence: 0.8632832

299753e6-0f00-45f0-890f-941560d58c4f
01:16:28.686 --> 01:16:34.908
to six. If X is 1, it should go
back to four. So we can try this

NOTE Confidence: 0.8632832

d2cb83a0-5a20-4ec6-a183-cee126a7a6c4
01:16:34.908 --> 01:16:38.568
to check whether we
correctly designed the circuit.

NOTE Confidence: 0.8740042

472e40da-1bc9-40d3-99c8-2d7f04af6502
01:16:40.430 --> 01:16:45.920
And finally. If I change the problem a
little bit and say

NOTE Confidence: 0.8740042

2219d9ca-9ac6-4c66-8485-eab3b1ed841a
01:16:45.920 --> 01:16:49.736
that we want to design a counter
that does up and down

NOTE Confidence: 0.8504507

221e4291-4989-47e2-a4ef-265fa5062039
01:16:50.680 --> 01:16:55.113
based on the value of
input. X = 0 counts up and X = 1 counts

NOTE Confidence: 0.8504507

4c78c231-9570-410c-acb0-54a28f61aa1e
01:16:55.113 --> 01:16:57.159
down. Now the value of Y.

NOTE Confidence: 0.8536068

b41d81f4-686f-4e4c-a26e-ba7244ae1ebd
01:16:58.500 --> 01:17:03.188
If we do count up and the number
is even, we want to make it 1.

NOTE Confidence: 0.91683066

d9a64abb-4ac7-466c-8445-4678f6fb773c
01:17:04.340 --> 01:17:06.650
Otherwise, we wanna make it 0.

NOTE Confidence: 0.86462694

43681bc5-12f6-4a2c-b09c-68d2fa05fe46
01:17:08.030 --> 01:17:13.308
However, if you do count down
and the number is odd, we wanna

NOTE Confidence: 0.86462694

d4155912-b849-4dc1-9e94-6d1f4df017e8
01:17:13.308 --> 01:17:18.992
make it 1. So you see that the
value of Y in this problem

NOTE Confidence: 0.86462694

51eaaef0-532f-4212-8bb3-ce383a516447
01:17:18.992 --> 01:17:23.864
depends whether we do counting
up or down, so you have to

NOTE Confidence: 0.86462694

54ab010c-35ca-424d-8dfa-ad7708839fc5
01:17:23.864 --> 01:17:28.330
design this circuit based on the
Mealy Model because the problem

NOTE Confidence: 0.86462694

9e5f874a-04c5-42d5-9b2b-8d1bfc2157dd
01:17:28.330 --> 01:17:32.796
says that the value of the
output depends on whether you do

NOTE Confidence: 0.86462694

a30c9303-8d9f-4d93-8656-9fb9f0ad0803
01:17:32.796 --> 01:17:34.420
counting up or down.

NOTE Confidence: 0.8744807

f4df0fb5-a249-40e0-a5b9-58441cb94806
01:17:35.180 --> 01:17:38.930
So there is no other way
to design this problem

NOTE Confidence: 0.8744807

c7347f56-18f2-4a65-902a-1de0a26f518a
01:17:38.930 --> 01:17:40.805
based on the Moore model.

NOTE Confidence: 0.8153651

ca994802-e345-4b1c-8a0e-cba2f6143f07
01:17:41.840 --> 01:17:46.222
So you can try this at home and
see what happens when you design

NOTE Confidence: 0.8153651

50296d48-d83f-4183-9d94-494d85bfd075
01:17:46.222 --> 01:17:48.100
a problem based on the Mealy

NOTE Confidence: 0.63496

96f70ca3-5429-43f9-ac7e-02b26704003e
01:17:49.030 --> 01:17:49.710
Model.

NOTE Confidence: 0.7918487

b8e47183-d5e7-43d8-8221-270aea9a5a7d
01:17:51.510 --> 01:17:54.480
That's the only difference based
on the outputs, whether they do

NOTE Confidence: 0.8712356

6f6bfc1a-4497-422e-aa90-549748ace9ed
01:17:54.480 --> 01:18:00.047
Mealy or Moore. And I'm done
with today's lecture. So now we

NOTE Confidence: 0.8712356

9ad4bd0c-491e-456a-99a8-350955de8e6d
01:18:00.047 --> 01:18:04.277
can design a sequential circuit
that has input, output and

NOTE Confidence: 0.8712356

af4c006d-5d67-4ba0-b900-d3f108d1d83d
01:18:04.277 --> 01:18:08.507
memory units. This is the
complete algorithm to design a

NOTE Confidence: 0.8712356

29fbf21e-0213-4592-a2ee-cbfdd3a17143
01:18:08.507 --> 01:18:12.737
sequential circuit. You already
know how to design a combination

NOTE Confidence: 0.8722138

0e36b824-0a66-40a2-94e1-57b3b89f179c
01:18:12.737 --> 01:18:17.060
circuit. Now that you know how to
design a sequential circuit, you

NOTE Confidence: 0.8722138

a0872881-ce69-42b7-9dfb-577ff42d5a4e
01:18:17.060 --> 01:18:21.008
are ready to design a computer
system which we are gonna do next

NOTE Confidence: 0.8937074

e0a1b80d-0375-45e9-a0b4-67b8ebf8c496
01:18:21.008 --> 01:18:25.418
week. Any questions? I'm happy to
answer your questions.

NOTE Confidence: 0.81409097

37096598-26dc-4589-b0db-8082dd600bae
01:18:41.110 --> 01:18:44.095
Thank you Marco. Anybody else?

NOTE Confidence: 0.1085382

5ebf688a-e3b2-4898-98dd-44850211c301
01:18:44.095 --> 01:18:46.860
You can

NOTE Confidence: 0.8811073

24206765-8670-4925-b064-b14c990e286a
01:18:48.010 --> 01:18:52.430
raise your hand or you can put
your question in the chat box.

NOTE Confidence: 0.6094097

19ba41a5-365f-4005-999f-24b7793fe619
01:19:00.380 --> 01:19:02.126
You too, have a great day.

NOTE Confidence: 0.9142154

40d9acdd-6037-4c18-91c1-31f71bf7e431
01:19:04.790 --> 01:19:07.054
So it seems there
is no question so,

NOTE Confidence: 0.92075515

b9c643c5-cb42-47db-a93c-a4dfdb6e6f11
01:19:08.830 --> 01:19:10.934
thank you everybody
and have a great day.

NOTE Confidence: 0.869652

26537e63-99e9-496c-9cb7-47f24ae6d86a
01:19:12.480 --> 01:19:13.430
You too Justin.



